
import KratosMultiphysics as Kratos

def Factory(settings: Kratos.Parameters, Model: Kratos.Model) -> Kratos.OutputProcess:
    if(type(settings) != Kratos.Parameters):
        raise Exception("Expected input shall be a Parameters object, encapsulating a json string")
    return InterfaceOutputProcess(Model, settings["Parameters"])

class InterfaceOutputProcess(Kratos.OutputProcess):
    def __init__(self, model: Kratos.Model, settings: Kratos.Parameters):

        default_settings = Kratos.Parameters(
            """
            {
                "model_part_name": ""
            }
            """
        )

        settings.ValidateAndAssignDefaults(default_settings)
        self.model_part = model[settings["model_part_name"].GetString()]

    def IsOutputStep(self):
        return True

    def PrintOutput(self):
        model = Kratos.Model()
        mp = model.CreateModelPart("test")

        mp.CreateNewNode(1, 0.0, 0.0, 0.0)
        mp.CreateNewNode(2, 1.0, 1.0, 0.0)
        mp.CreateNewNode(3, 0.5, 0.5, 0.0)

        prop = mp.CreateNewProperties(2)
        mp.CreateNewCondition("LineCondition3D2N", 1, [1, 2], prop)
        mp.CreateNewCondition("LineCondition3D2N", 2, [2, 3], prop)

        vtu_output = Kratos.VtuOutput(mp)
        vtu_output.PrintOutput(f"test_{self.model_part.ProcessInfo[Kratos.STEP]}")
