//    |  /           |
//    ' /   __| _` | __|  _ \   __|
//    . \  |   (   | |   (   |\__ `
//   _|\_\_|  \__,_|\__|\___/ ____/
//                   Multi-Physics
//
//  License:         BSD License
//                   Kratos default license: kratos/license.txt
//
//  Main authors:    Suneth Warnakulasuriya
//
#include "rans_application_variables.h"

namespace Kratos
{
    // stabilization validation specific variables
    KRATOS_CREATE_VARIABLE( bool, CIRCULAR_CONVECTION_ROTATION_CLOCKWISE )
    KRATOS_CREATE_3D_VARIABLE_WITH_COMPONENTS( CIRCULAR_CONVECTION_ROTATION_CENTER )
    KRATOS_CREATE_VARIABLE( double, REACTION_COEFFICIENT )

    // common auxiliary variables
    KRATOS_CREATE_VARIABLE( double, RANS_AUXILIARY_VARIABLE_1 )
    KRATOS_CREATE_VARIABLE( double, RANS_AUXILIARY_VARIABLE_2 )

    // incompressible potential flow specific variables
    KRATOS_CREATE_VARIABLE_WITH_TIME_DERIVATIVE(double, VELOCITY_POTENTIAL_RATE, RANS_AUXILIARY_VARIABLE_1)
    KRATOS_CREATE_VARIABLE_WITH_TIME_DERIVATIVE(double, VELOCITY_POTENTIAL, VELOCITY_POTENTIAL_RATE)
    KRATOS_CREATE_VARIABLE( double, PRESSURE_POTENTIAL )
    KRATOS_CREATE_VARIABLE( int, RANS_IS_INLET )
    KRATOS_CREATE_VARIABLE( int, RANS_IS_OUTLET )
    KRATOS_CREATE_VARIABLE( int, RANS_IS_STRUCTURE )
    KRATOS_CREATE_VARIABLE( int, RANS_IS_STEADY )

    // residual based flux corrected stabilization variables
    KRATOS_CREATE_VARIABLE( double, RANS_STABILIZATION_DISCRETE_UPWIND_OPERATOR_COEFFICIENT )
    KRATOS_CREATE_VARIABLE( double, RANS_STABILIZATION_DIAGONAL_POSITIVITY_PRESERVING_COEFFICIENT )

    // algebraic flux corrected stabilization variables
    KRATOS_CREATE_VARIABLE( double, AFC_POSITIVE_ANTI_DIFFUSIVE_FLUX )
    KRATOS_CREATE_VARIABLE( double, AFC_NEGATIVE_ANTI_DIFFUSIVE_FLUX )
    KRATOS_CREATE_VARIABLE( double, AFC_POSITIVE_ANTI_DIFFUSIVE_FLUX_LIMIT )
    KRATOS_CREATE_VARIABLE( double, AFC_NEGATIVE_ANTI_DIFFUSIVE_FLUX_LIMIT )

    // k-epsilon-high-re turbulence modelling variables
    KRATOS_CREATE_VARIABLE_WITH_TIME_DERIVATIVE(double, TURBULENT_KINETIC_ENERGY_RATE, RANS_AUXILIARY_VARIABLE_1)
    KRATOS_CREATE_VARIABLE_WITH_TIME_DERIVATIVE(double, TURBULENT_KINETIC_ENERGY, TURBULENT_KINETIC_ENERGY_RATE)

    KRATOS_CREATE_VARIABLE_WITH_TIME_DERIVATIVE(double, TURBULENT_ENERGY_DISSIPATION_RATE_2, RANS_AUXILIARY_VARIABLE_2)
    KRATOS_CREATE_VARIABLE_WITH_TIME_DERIVATIVE(double, TURBULENT_ENERGY_DISSIPATION_RATE, TURBULENT_ENERGY_DISSIPATION_RATE_2)

    KRATOS_CREATE_VARIABLE( double, TURBULENT_KINETIC_ENERGY_SIGMA )
    KRATOS_CREATE_VARIABLE( double, TURBULENT_ENERGY_DISSIPATION_RATE_SIGMA )
    KRATOS_CREATE_VARIABLE( double, TURBULENCE_RANS_C_MU )
    KRATOS_CREATE_VARIABLE( double, TURBULENCE_RANS_C1 )
    KRATOS_CREATE_VARIABLE( double, TURBULENCE_RANS_C2 )

    // k-omega turbulence modelling specific additional variables
    KRATOS_CREATE_VARIABLE_WITH_TIME_DERIVATIVE(double, TURBULENT_SPECIFIC_ENERGY_DISSIPATION_RATE_2, RANS_AUXILIARY_VARIABLE_2)
    KRATOS_CREATE_VARIABLE_WITH_TIME_DERIVATIVE(double, TURBULENT_SPECIFIC_ENERGY_DISSIPATION_RATE, TURBULENT_SPECIFIC_ENERGY_DISSIPATION_RATE_2)

    KRATOS_CREATE_VARIABLE( double, TURBULENT_SPECIFIC_ENERGY_DISSIPATION_RATE_SIGMA )
    KRATOS_CREATE_VARIABLE( double, TURBULENCE_RANS_BETA )
    KRATOS_CREATE_VARIABLE( double, TURBULENCE_RANS_GAMMA )

    // k-omega-sst turbulence modelling specific additional variables
    KRATOS_CREATE_VARIABLE( double, TURBULENT_KINETIC_ENERGY_SIGMA_1 )
    KRATOS_CREATE_VARIABLE( double, TURBULENT_KINETIC_ENERGY_SIGMA_2 )
    KRATOS_CREATE_VARIABLE( double, TURBULENT_SPECIFIC_ENERGY_DISSIPATION_RATE_SIGMA_1 )
    KRATOS_CREATE_VARIABLE( double, TURBULENT_SPECIFIC_ENERGY_DISSIPATION_RATE_SIGMA_2 )
    KRATOS_CREATE_VARIABLE( double, TURBULENCE_RANS_A1 )
    KRATOS_CREATE_VARIABLE( double, TURBULENCE_RANS_BETA_1 )
    KRATOS_CREATE_VARIABLE( double, TURBULENCE_RANS_BETA_2 )
    KRATOS_CREATE_VARIABLE( double, VON_KARMAN )

    // wall function condition specific additional variables
    KRATOS_CREATE_VARIABLE( double, RANS_Y_PLUS )
    KRATOS_CREATE_VARIABLE( Vector, GAUSS_RANS_Y_PLUS )
    KRATOS_CREATE_VARIABLE( double, RANS_LINEAR_LOG_LAW_Y_PLUS_LIMIT )
    KRATOS_CREATE_VARIABLE( double, WALL_SMOOTHNESS_BETA )
    KRATOS_CREATE_VARIABLE( double, WALL_ROUGHNESS_HEIGHT )
    KRATOS_CREATE_VARIABLE( double, WALL_CORRECTION_FACTOR )
    KRATOS_CREATE_VARIABLE( int, RANS_IS_WALL_FUNCTION_ACTIVE )
    KRATOS_CREATE_3D_VARIABLE_WITH_COMPONENTS( FRICTION_VELOCITY )

    // formulation specific variables
    KRATOS_CREATE_VARIABLE( std::vector<std::string>, ANALYSIS_STEPS )
    KRATOS_CREATE_VARIABLE( std::string, WALL_MODEL_PART_NAME )
    KRATOS_CREATE_VARIABLE( double, NUMBER_OF_NEIGHBOUR_CONDITIONS )
    KRATOS_CREATE_VARIABLE( int, NUMBER_OF_SMOOTHING_NEIGHBOUR_NODES )

    // adjoint variables
    KRATOS_CREATE_VARIABLE(double, RANS_AUX_ADJOINT_SCALAR_1)
    KRATOS_CREATE_VARIABLE_WITH_TIME_DERIVATIVE(double, RANS_SCALAR_1_ADJOINT_3, RANS_AUX_ADJOINT_SCALAR_1);
    KRATOS_CREATE_VARIABLE_WITH_TIME_DERIVATIVE(double, RANS_SCALAR_1_ADJOINT_2, RANS_SCALAR_1_ADJOINT_3);
    KRATOS_CREATE_VARIABLE_WITH_TIME_DERIVATIVE(double, RANS_SCALAR_1_ADJOINT_1, RANS_SCALAR_1_ADJOINT_2);

    KRATOS_CREATE_VARIABLE(double, RANS_AUX_ADJOINT_SCALAR_2)
    KRATOS_CREATE_VARIABLE_WITH_TIME_DERIVATIVE(double, RANS_SCALAR_2_ADJOINT_3, RANS_AUX_ADJOINT_SCALAR_2);
    KRATOS_CREATE_VARIABLE_WITH_TIME_DERIVATIVE(double, RANS_SCALAR_2_ADJOINT_2, RANS_SCALAR_2_ADJOINT_3);
    KRATOS_CREATE_VARIABLE_WITH_TIME_DERIVATIVE(double, RANS_SCALAR_2_ADJOINT_1, RANS_SCALAR_2_ADJOINT_2);

    // primal solution location storage variables
    KRATOS_CREATE_VARIABLE(std::string, RANS_PRIMAL_SOLUTION_LOCATION_1);

    // Response function interpolation error variables for transient cases
    KRATOS_CREATE_VARIABLE(Vector, RANS_RESPONSE_FUNCTION_DOFS_INTERPOLATION_ERROR);
    KRATOS_CREATE_VARIABLE(Vector, RANS_RESPONSE_FUNCTION_DOFS_INTERPOLATION_ERROR_RATE);
    KRATOS_CREATE_VARIABLE(Vector, RESPONSE_FUNCTION_INTERPOLATION_ERROR_AUXILIARY);

    KRATOS_CREATE_3D_VARIABLE_WITH_COMPONENTS(TIME_AVERAGED_VELOCITY);
    KRATOS_CREATE_VARIABLE(double, TIME_AVERAGED_VELOCITY_POTENTIAL);
    KRATOS_CREATE_VARIABLE(double, TIME_AVERAGED_PRESSURE);
    KRATOS_CREATE_VARIABLE(double, TIME_AVERAGED_TURBULENT_KINETIC_ENERGY);
    KRATOS_CREATE_VARIABLE(double, TIME_AVERAGED_TURBULENT_ENERGY_DISSIPATION_RATE);
    KRATOS_CREATE_VARIABLE(double, TIME_AVERAGED_TURBULENT_SPECIFIC_ENERGY_DISSIPATION_RATE);
}
