#include "custom_elements/stokes_3D_weakly_compressible.h"

namespace Kratos {


void Stokes3DWeaklyCompressible::ComputeGaussPointLHSContribution(bounded_matrix<double,16,16>& lhs, const element_data<4,3>& data)
    {
        const int nnodes = 4;
        const int dim = 3;
        
        const double& bdf0 = data.bdf0;
//         const double& bdf1 = data.bdf1;
//         const double& bdf2 = data.bdf2;
        
        const auto& v = data.v;
//         const auto& vn = data.vn;
//         const auto& vnn = data.vnn;
        
//         const auto& p = data.p;
//         const auto& pn = data.pn;
//         const auto& pnn = data.pnn;
        
         const auto& r = data.r;
//         const auto& rn = data.rn;
//         const auto& rnn = data.rnn;   
        
        const double rho_gauss = inner_prod(data.N, data.r);
         
        const double k = data.k;
        
        //get constitutive matrix 
        const Matrix& C = data.C;
        
        //get shape function values
        const bounded_matrix<double,nnodes,dim>& DN = data.DN_DX;
        const array_1d<double,nnodes>& N = data.N;
        
        
        //compute an equivalent tau by Bitrans*c*Bi
        const double tau_denom =             (C(3,3) + C(4,4) + C(5,5))*(pow(DN(0,0), 2) + pow(DN(0,1), 2) + pow(DN(0,2), 2) + pow(DN(1,0), 2) + pow(DN(1,1), 2) + pow(DN(1,2), 2) + pow(DN(2,0), 2) + pow(DN(2,1), 2) + pow(DN(2,2), 2) + pow(DN(3,0), 2) + pow(DN(3,1), 2) + pow(DN(3,2), 2));

        const double tau1 = 1.0/(tau_denom*rho_gauss);
//         const double tau2 = (C(3,3) + C(4,4) + C(5,5))/(6.0*rho_gauss);
        
        const double clhs0 =             pow(N[0], 2)*bdf0;
const double clhs1 =             clhs0*r[0];
const double clhs2 =             C(0,0)*DN(0,0) + C(0,3)*DN(0,1) + C(0,5)*DN(0,2);
const double clhs3 =             C(0,3)*DN(0,0);
const double clhs4 =             C(3,3)*DN(0,1) + C(3,5)*DN(0,2) + clhs3;
const double clhs5 =             C(0,5)*DN(0,0);
const double clhs6 =             C(3,5)*DN(0,1) + C(5,5)*DN(0,2) + clhs5;
const double clhs7 =             C(0,1)*DN(0,1) + C(0,4)*DN(0,2) + clhs3;
const double clhs8 =             C(1,3)*DN(0,1);
const double clhs9 =             C(3,3)*DN(0,0) + C(3,4)*DN(0,2) + clhs8;
const double clhs10 =             C(3,5)*DN(0,0);
const double clhs11 =             C(4,5)*DN(0,2);
const double clhs12 =             C(1,5)*DN(0,1) + clhs10 + clhs11;
const double clhs13 =             C(0,2)*DN(0,2) + C(0,4)*DN(0,1) + clhs5;
const double clhs14 =             C(3,4)*DN(0,1);
const double clhs15 =             C(2,3)*DN(0,2) + clhs10 + clhs14;
const double clhs16 =             C(2,5)*DN(0,2);
const double clhs17 =             C(4,5)*DN(0,1) + C(5,5)*DN(0,0) + clhs16;
const double clhs18 =             DN(0,0)*N[0];
const double clhs19 =             N[0]*N[1]*bdf0;
const double clhs20 =             clhs19*r[1];
const double clhs21 =             C(0,0)*DN(1,0) + C(0,3)*DN(1,1) + C(0,5)*DN(1,2);
const double clhs22 =             C(0,3)*DN(1,0);
const double clhs23 =             C(3,3)*DN(1,1) + C(3,5)*DN(1,2) + clhs22;
const double clhs24 =             C(0,5)*DN(1,0);
const double clhs25 =             C(3,5)*DN(1,1) + C(5,5)*DN(1,2) + clhs24;
const double clhs26 =             C(0,1)*DN(1,1) + C(0,4)*DN(1,2) + clhs22;
const double clhs27 =             C(1,3)*DN(1,1);
const double clhs28 =             C(3,3)*DN(1,0) + C(3,4)*DN(1,2) + clhs27;
const double clhs29 =             C(3,5)*DN(1,0);
const double clhs30 =             C(4,5)*DN(1,2);
const double clhs31 =             C(1,5)*DN(1,1) + clhs29 + clhs30;
const double clhs32 =             C(0,2)*DN(1,2) + C(0,4)*DN(1,1) + clhs24;
const double clhs33 =             C(3,4)*DN(1,1);
const double clhs34 =             C(2,3)*DN(1,2) + clhs29 + clhs33;
const double clhs35 =             C(2,5)*DN(1,2);
const double clhs36 =             C(4,5)*DN(1,1) + C(5,5)*DN(1,0) + clhs35;
const double clhs37 =             DN(0,0)*N[1];
const double clhs38 =             N[0]*N[2]*bdf0;
const double clhs39 =             clhs38*r[2];
const double clhs40 =             C(0,0)*DN(2,0) + C(0,3)*DN(2,1) + C(0,5)*DN(2,2);
const double clhs41 =             C(0,3)*DN(2,0);
const double clhs42 =             C(3,3)*DN(2,1) + C(3,5)*DN(2,2) + clhs41;
const double clhs43 =             C(0,5)*DN(2,0);
const double clhs44 =             C(3,5)*DN(2,1) + C(5,5)*DN(2,2) + clhs43;
const double clhs45 =             C(0,1)*DN(2,1) + C(0,4)*DN(2,2) + clhs41;
const double clhs46 =             C(1,3)*DN(2,1);
const double clhs47 =             C(3,3)*DN(2,0) + C(3,4)*DN(2,2) + clhs46;
const double clhs48 =             C(3,5)*DN(2,0);
const double clhs49 =             C(4,5)*DN(2,2);
const double clhs50 =             C(1,5)*DN(2,1) + clhs48 + clhs49;
const double clhs51 =             C(0,2)*DN(2,2) + C(0,4)*DN(2,1) + clhs43;
const double clhs52 =             C(3,4)*DN(2,1);
const double clhs53 =             C(2,3)*DN(2,2) + clhs48 + clhs52;
const double clhs54 =             C(2,5)*DN(2,2);
const double clhs55 =             C(4,5)*DN(2,1) + C(5,5)*DN(2,0) + clhs54;
const double clhs56 =             DN(0,0)*N[2];
const double clhs57 =             N[0]*N[3]*bdf0;
const double clhs58 =             clhs57*r[3];
const double clhs59 =             C(0,0)*DN(3,0) + C(0,3)*DN(3,1) + C(0,5)*DN(3,2);
const double clhs60 =             C(0,3)*DN(3,0);
const double clhs61 =             C(3,3)*DN(3,1) + C(3,5)*DN(3,2) + clhs60;
const double clhs62 =             C(0,5)*DN(3,0);
const double clhs63 =             C(3,5)*DN(3,1) + C(5,5)*DN(3,2) + clhs62;
const double clhs64 =             C(0,1)*DN(3,1) + C(0,4)*DN(3,2) + clhs60;
const double clhs65 =             C(1,3)*DN(3,1);
const double clhs66 =             C(3,3)*DN(3,0) + C(3,4)*DN(3,2) + clhs65;
const double clhs67 =             C(3,5)*DN(3,0);
const double clhs68 =             C(4,5)*DN(3,2);
const double clhs69 =             C(1,5)*DN(3,1) + clhs67 + clhs68;
const double clhs70 =             C(0,2)*DN(3,2) + C(0,4)*DN(3,1) + clhs62;
const double clhs71 =             C(3,4)*DN(3,1);
const double clhs72 =             C(2,3)*DN(3,2) + clhs67 + clhs71;
const double clhs73 =             C(2,5)*DN(3,2);
const double clhs74 =             C(4,5)*DN(3,1) + C(5,5)*DN(3,0) + clhs73;
const double clhs75 =             DN(0,0)*N[3];
const double clhs76 =             C(0,1)*DN(0,0) + C(1,5)*DN(0,2) + clhs8;
const double clhs77 =             C(0,4)*DN(0,0) + clhs11 + clhs14;
const double clhs78 =             C(1,1)*DN(0,1) + C(1,3)*DN(0,0) + C(1,4)*DN(0,2);
const double clhs79 =             C(1,4)*DN(0,1);
const double clhs80 =             C(3,4)*DN(0,0) + C(4,4)*DN(0,2) + clhs79;
const double clhs81 =             C(1,2)*DN(0,2) + C(1,5)*DN(0,0) + clhs79;
const double clhs82 =             C(2,4)*DN(0,2);
const double clhs83 =             C(4,4)*DN(0,1) + C(4,5)*DN(0,0) + clhs82;
const double clhs84 =             DN(0,1)*N[0];
const double clhs85 =             C(0,1)*DN(1,0) + C(1,5)*DN(1,2) + clhs27;
const double clhs86 =             C(0,4)*DN(1,0) + clhs30 + clhs33;
const double clhs87 =             C(1,1)*DN(1,1) + C(1,3)*DN(1,0) + C(1,4)*DN(1,2);
const double clhs88 =             C(1,4)*DN(1,1);
const double clhs89 =             C(3,4)*DN(1,0) + C(4,4)*DN(1,2) + clhs88;
const double clhs90 =             C(1,2)*DN(1,2) + C(1,5)*DN(1,0) + clhs88;
const double clhs91 =             C(2,4)*DN(1,2);
const double clhs92 =             C(4,4)*DN(1,1) + C(4,5)*DN(1,0) + clhs91;
const double clhs93 =             DN(0,1)*N[1];
const double clhs94 =             C(0,1)*DN(2,0) + C(1,5)*DN(2,2) + clhs46;
const double clhs95 =             C(0,4)*DN(2,0) + clhs49 + clhs52;
const double clhs96 =             C(1,1)*DN(2,1) + C(1,3)*DN(2,0) + C(1,4)*DN(2,2);
const double clhs97 =             C(1,4)*DN(2,1);
const double clhs98 =             C(3,4)*DN(2,0) + C(4,4)*DN(2,2) + clhs97;
const double clhs99 =             C(1,2)*DN(2,2) + C(1,5)*DN(2,0) + clhs97;
const double clhs100 =             C(2,4)*DN(2,2);
const double clhs101 =             C(4,4)*DN(2,1) + C(4,5)*DN(2,0) + clhs100;
const double clhs102 =             DN(0,1)*N[2];
const double clhs103 =             C(0,1)*DN(3,0) + C(1,5)*DN(3,2) + clhs65;
const double clhs104 =             C(0,4)*DN(3,0) + clhs68 + clhs71;
const double clhs105 =             C(1,1)*DN(3,1) + C(1,3)*DN(3,0) + C(1,4)*DN(3,2);
const double clhs106 =             C(1,4)*DN(3,1);
const double clhs107 =             C(3,4)*DN(3,0) + C(4,4)*DN(3,2) + clhs106;
const double clhs108 =             C(1,2)*DN(3,2) + C(1,5)*DN(3,0) + clhs106;
const double clhs109 =             C(2,4)*DN(3,2);
const double clhs110 =             C(4,4)*DN(3,1) + C(4,5)*DN(3,0) + clhs109;
const double clhs111 =             DN(0,1)*N[3];
const double clhs112 =             C(0,2)*DN(0,0) + C(2,3)*DN(0,1) + clhs16;
const double clhs113 =             C(1,2)*DN(0,1) + C(2,3)*DN(0,0) + clhs82;
const double clhs114 =             C(2,2)*DN(0,2) + C(2,4)*DN(0,1) + C(2,5)*DN(0,0);
const double clhs115 =             DN(0,2)*N[0];
const double clhs116 =             C(0,2)*DN(1,0) + C(2,3)*DN(1,1) + clhs35;
const double clhs117 =             C(1,2)*DN(1,1) + C(2,3)*DN(1,0) + clhs91;
const double clhs118 =             C(2,2)*DN(1,2) + C(2,4)*DN(1,1) + C(2,5)*DN(1,0);
const double clhs119 =             DN(0,2)*N[1];
const double clhs120 =             C(0,2)*DN(2,0) + C(2,3)*DN(2,1) + clhs54;
const double clhs121 =             C(1,2)*DN(2,1) + C(2,3)*DN(2,0) + clhs100;
const double clhs122 =             C(2,2)*DN(2,2) + C(2,4)*DN(2,1) + C(2,5)*DN(2,0);
const double clhs123 =             DN(0,2)*N[2];
const double clhs124 =             C(0,2)*DN(3,0) + C(2,3)*DN(3,1) + clhs73;
const double clhs125 =             C(1,2)*DN(3,1) + C(2,3)*DN(3,0) + clhs109;
const double clhs126 =             C(2,2)*DN(3,2) + C(2,4)*DN(3,1) + C(2,5)*DN(3,0);
const double clhs127 =             DN(0,2)*N[3];
const double clhs128 =             bdf0*tau1;
const double clhs129 =             clhs128 + 1;
const double clhs130 =             clhs129*r[0];
const double clhs131 =             1.0/k;
const double clhs132 =             DN(1,0)*N[0];
const double clhs133 =             DN(1,1)*N[0];
const double clhs134 =             DN(1,2)*N[0];
const double clhs135 =             DN(0,0)*tau1;
const double clhs136 =             DN(0,1)*tau1;
const double clhs137 =             DN(0,2)*tau1;
const double clhs138 =             DN(1,0)*clhs135 + DN(1,1)*clhs136 + DN(1,2)*clhs137 + clhs131*clhs19;
const double clhs139 =             DN(2,0)*N[0];
const double clhs140 =             DN(2,1)*N[0];
const double clhs141 =             DN(2,2)*N[0];
const double clhs142 =             DN(2,0)*clhs135 + DN(2,1)*clhs136 + DN(2,2)*clhs137 + clhs131*clhs38;
const double clhs143 =             DN(3,0)*N[0];
const double clhs144 =             DN(3,1)*N[0];
const double clhs145 =             DN(3,2)*N[0];
const double clhs146 =             DN(3,0)*clhs135 + DN(3,1)*clhs136 + DN(3,2)*clhs137 + clhs131*clhs57;
const double clhs147 =             clhs19*r[0];
const double clhs148 =             pow(N[1], 2)*bdf0;
const double clhs149 =             clhs148*r[1];
const double clhs150 =             DN(1,0)*N[1];
const double clhs151 =             N[1]*N[2]*bdf0;
const double clhs152 =             clhs151*r[2];
const double clhs153 =             DN(1,0)*N[2];
const double clhs154 =             N[1]*N[3]*bdf0;
const double clhs155 =             clhs154*r[3];
const double clhs156 =             DN(1,0)*N[3];
const double clhs157 =             DN(1,1)*N[1];
const double clhs158 =             DN(1,1)*N[2];
const double clhs159 =             DN(1,1)*N[3];
const double clhs160 =             DN(1,2)*N[1];
const double clhs161 =             DN(1,2)*N[2];
const double clhs162 =             DN(1,2)*N[3];
const double clhs163 =             clhs129*r[1];
const double clhs164 =             DN(2,0)*N[1];
const double clhs165 =             DN(2,1)*N[1];
const double clhs166 =             DN(2,2)*N[1];
const double clhs167 =             DN(1,0)*tau1;
const double clhs168 =             DN(1,1)*tau1;
const double clhs169 =             DN(1,2)*tau1;
const double clhs170 =             DN(2,0)*clhs167 + DN(2,1)*clhs168 + DN(2,2)*clhs169 + clhs131*clhs151;
const double clhs171 =             DN(3,0)*N[1];
const double clhs172 =             DN(3,1)*N[1];
const double clhs173 =             DN(3,2)*N[1];
const double clhs174 =             DN(3,0)*clhs167 + DN(3,1)*clhs168 + DN(3,2)*clhs169 + clhs131*clhs154;
const double clhs175 =             clhs38*r[0];
const double clhs176 =             clhs151*r[1];
const double clhs177 =             pow(N[2], 2)*bdf0;
const double clhs178 =             clhs177*r[2];
const double clhs179 =             DN(2,0)*N[2];
const double clhs180 =             N[2]*N[3]*bdf0;
const double clhs181 =             clhs180*r[3];
const double clhs182 =             DN(2,0)*N[3];
const double clhs183 =             DN(2,1)*N[2];
const double clhs184 =             DN(2,1)*N[3];
const double clhs185 =             DN(2,2)*N[2];
const double clhs186 =             DN(2,2)*N[3];
const double clhs187 =             clhs129*r[2];
const double clhs188 =             DN(3,0)*N[2];
const double clhs189 =             DN(3,1)*N[2];
const double clhs190 =             DN(3,2)*N[2];
const double clhs191 =             DN(2,0)*DN(3,0)*tau1 + DN(2,1)*DN(3,1)*tau1 + DN(2,2)*DN(3,2)*tau1 + clhs131*clhs180;
const double clhs192 =             clhs57*r[0];
const double clhs193 =             clhs154*r[1];
const double clhs194 =             clhs180*r[2];
const double clhs195 =             pow(N[3], 2)*bdf0;
const double clhs196 =             clhs195*r[3];
const double clhs197 =             DN(3,0)*N[3];
const double clhs198 =             DN(3,1)*N[3];
const double clhs199 =             DN(3,2)*N[3];
const double clhs200 =             clhs129*r[3];
            lhs(0,0)=DN(0,0)*clhs2 + DN(0,1)*clhs4 + DN(0,2)*clhs6 + clhs1;
            lhs(0,1)=DN(0,0)*clhs7 + DN(0,1)*clhs9 + DN(0,2)*clhs12;
            lhs(0,2)=DN(0,0)*clhs13 + DN(0,1)*clhs15 + DN(0,2)*clhs17;
            lhs(0,3)=-clhs18;
            lhs(0,4)=DN(0,0)*clhs21 + DN(0,1)*clhs23 + DN(0,2)*clhs25 + clhs20;
            lhs(0,5)=DN(0,0)*clhs26 + DN(0,1)*clhs28 + DN(0,2)*clhs31;
            lhs(0,6)=DN(0,0)*clhs32 + DN(0,1)*clhs34 + DN(0,2)*clhs36;
            lhs(0,7)=-clhs37;
            lhs(0,8)=DN(0,0)*clhs40 + DN(0,1)*clhs42 + DN(0,2)*clhs44 + clhs39;
            lhs(0,9)=DN(0,0)*clhs45 + DN(0,1)*clhs47 + DN(0,2)*clhs50;
            lhs(0,10)=DN(0,0)*clhs51 + DN(0,1)*clhs53 + DN(0,2)*clhs55;
            lhs(0,11)=-clhs56;
            lhs(0,12)=DN(0,0)*clhs59 + DN(0,1)*clhs61 + DN(0,2)*clhs63 + clhs58;
            lhs(0,13)=DN(0,0)*clhs64 + DN(0,1)*clhs66 + DN(0,2)*clhs69;
            lhs(0,14)=DN(0,0)*clhs70 + DN(0,1)*clhs72 + DN(0,2)*clhs74;
            lhs(0,15)=-clhs75;
            lhs(1,0)=DN(0,0)*clhs4 + DN(0,1)*clhs76 + DN(0,2)*clhs77;
            lhs(1,1)=DN(0,0)*clhs9 + DN(0,1)*clhs78 + DN(0,2)*clhs80 + clhs1;
            lhs(1,2)=DN(0,0)*clhs15 + DN(0,1)*clhs81 + DN(0,2)*clhs83;
            lhs(1,3)=-clhs84;
            lhs(1,4)=DN(0,0)*clhs23 + DN(0,1)*clhs85 + DN(0,2)*clhs86;
            lhs(1,5)=DN(0,0)*clhs28 + DN(0,1)*clhs87 + DN(0,2)*clhs89 + clhs20;
            lhs(1,6)=DN(0,0)*clhs34 + DN(0,1)*clhs90 + DN(0,2)*clhs92;
            lhs(1,7)=-clhs93;
            lhs(1,8)=DN(0,0)*clhs42 + DN(0,1)*clhs94 + DN(0,2)*clhs95;
            lhs(1,9)=DN(0,0)*clhs47 + DN(0,1)*clhs96 + DN(0,2)*clhs98 + clhs39;
            lhs(1,10)=DN(0,0)*clhs53 + DN(0,1)*clhs99 + DN(0,2)*clhs101;
            lhs(1,11)=-clhs102;
            lhs(1,12)=DN(0,0)*clhs61 + DN(0,1)*clhs103 + DN(0,2)*clhs104;
            lhs(1,13)=DN(0,0)*clhs66 + DN(0,1)*clhs105 + DN(0,2)*clhs107 + clhs58;
            lhs(1,14)=DN(0,0)*clhs72 + DN(0,1)*clhs108 + DN(0,2)*clhs110;
            lhs(1,15)=-clhs111;
            lhs(2,0)=DN(0,0)*clhs6 + DN(0,1)*clhs77 + DN(0,2)*clhs112;
            lhs(2,1)=DN(0,0)*clhs12 + DN(0,1)*clhs80 + DN(0,2)*clhs113;
            lhs(2,2)=DN(0,0)*clhs17 + DN(0,1)*clhs83 + DN(0,2)*clhs114 + clhs1;
            lhs(2,3)=-clhs115;
            lhs(2,4)=DN(0,0)*clhs25 + DN(0,1)*clhs86 + DN(0,2)*clhs116;
            lhs(2,5)=DN(0,0)*clhs31 + DN(0,1)*clhs89 + DN(0,2)*clhs117;
            lhs(2,6)=DN(0,0)*clhs36 + DN(0,1)*clhs92 + DN(0,2)*clhs118 + clhs20;
            lhs(2,7)=-clhs119;
            lhs(2,8)=DN(0,0)*clhs44 + DN(0,1)*clhs95 + DN(0,2)*clhs120;
            lhs(2,9)=DN(0,0)*clhs50 + DN(0,1)*clhs98 + DN(0,2)*clhs121;
            lhs(2,10)=DN(0,0)*clhs55 + DN(0,1)*clhs101 + DN(0,2)*clhs122 + clhs39;
            lhs(2,11)=-clhs123;
            lhs(2,12)=DN(0,0)*clhs63 + DN(0,1)*clhs104 + DN(0,2)*clhs124;
            lhs(2,13)=DN(0,0)*clhs69 + DN(0,1)*clhs107 + DN(0,2)*clhs125;
            lhs(2,14)=DN(0,0)*clhs74 + DN(0,1)*clhs110 + DN(0,2)*clhs126 + clhs58;
            lhs(2,15)=-clhs127;
            lhs(3,0)=clhs130*clhs18;
            lhs(3,1)=clhs130*clhs84;
            lhs(3,2)=clhs115*clhs130;
            lhs(3,3)=pow(DN(0,0), 2)*tau1 + pow(DN(0,1), 2)*tau1 + pow(DN(0,2), 2)*tau1 + clhs0*clhs131;
            lhs(3,4)=r[1]*(clhs128*clhs37 + clhs132);
            lhs(3,5)=r[1]*(clhs128*clhs93 + clhs133);
            lhs(3,6)=r[1]*(clhs119*clhs128 + clhs134);
            lhs(3,7)=clhs138;
            lhs(3,8)=r[2]*(clhs128*clhs56 + clhs139);
            lhs(3,9)=r[2]*(clhs102*clhs128 + clhs140);
            lhs(3,10)=r[2]*(clhs123*clhs128 + clhs141);
            lhs(3,11)=clhs142;
            lhs(3,12)=r[3]*(clhs128*clhs75 + clhs143);
            lhs(3,13)=r[3]*(clhs111*clhs128 + clhs144);
            lhs(3,14)=r[3]*(clhs127*clhs128 + clhs145);
            lhs(3,15)=clhs146;
            lhs(4,0)=DN(1,0)*clhs2 + DN(1,1)*clhs4 + DN(1,2)*clhs6 + clhs147;
            lhs(4,1)=DN(1,0)*clhs7 + DN(1,1)*clhs9 + DN(1,2)*clhs12;
            lhs(4,2)=DN(1,0)*clhs13 + DN(1,1)*clhs15 + DN(1,2)*clhs17;
            lhs(4,3)=-clhs132;
            lhs(4,4)=DN(1,0)*clhs21 + DN(1,1)*clhs23 + DN(1,2)*clhs25 + clhs149;
            lhs(4,5)=DN(1,0)*clhs26 + DN(1,1)*clhs28 + DN(1,2)*clhs31;
            lhs(4,6)=DN(1,0)*clhs32 + DN(1,1)*clhs34 + DN(1,2)*clhs36;
            lhs(4,7)=-clhs150;
            lhs(4,8)=DN(1,0)*clhs40 + DN(1,1)*clhs42 + DN(1,2)*clhs44 + clhs152;
            lhs(4,9)=DN(1,0)*clhs45 + DN(1,1)*clhs47 + DN(1,2)*clhs50;
            lhs(4,10)=DN(1,0)*clhs51 + DN(1,1)*clhs53 + DN(1,2)*clhs55;
            lhs(4,11)=-clhs153;
            lhs(4,12)=DN(1,0)*clhs59 + DN(1,1)*clhs61 + DN(1,2)*clhs63 + clhs155;
            lhs(4,13)=DN(1,0)*clhs64 + DN(1,1)*clhs66 + DN(1,2)*clhs69;
            lhs(4,14)=DN(1,0)*clhs70 + DN(1,1)*clhs72 + DN(1,2)*clhs74;
            lhs(4,15)=-clhs156;
            lhs(5,0)=DN(1,0)*clhs4 + DN(1,1)*clhs76 + DN(1,2)*clhs77;
            lhs(5,1)=DN(1,0)*clhs9 + DN(1,1)*clhs78 + DN(1,2)*clhs80 + clhs147;
            lhs(5,2)=DN(1,0)*clhs15 + DN(1,1)*clhs81 + DN(1,2)*clhs83;
            lhs(5,3)=-clhs133;
            lhs(5,4)=DN(1,0)*clhs23 + DN(1,1)*clhs85 + DN(1,2)*clhs86;
            lhs(5,5)=DN(1,0)*clhs28 + DN(1,1)*clhs87 + DN(1,2)*clhs89 + clhs149;
            lhs(5,6)=DN(1,0)*clhs34 + DN(1,1)*clhs90 + DN(1,2)*clhs92;
            lhs(5,7)=-clhs157;
            lhs(5,8)=DN(1,0)*clhs42 + DN(1,1)*clhs94 + DN(1,2)*clhs95;
            lhs(5,9)=DN(1,0)*clhs47 + DN(1,1)*clhs96 + DN(1,2)*clhs98 + clhs152;
            lhs(5,10)=DN(1,0)*clhs53 + DN(1,1)*clhs99 + DN(1,2)*clhs101;
            lhs(5,11)=-clhs158;
            lhs(5,12)=DN(1,0)*clhs61 + DN(1,1)*clhs103 + DN(1,2)*clhs104;
            lhs(5,13)=DN(1,0)*clhs66 + DN(1,1)*clhs105 + DN(1,2)*clhs107 + clhs155;
            lhs(5,14)=DN(1,0)*clhs72 + DN(1,1)*clhs108 + DN(1,2)*clhs110;
            lhs(5,15)=-clhs159;
            lhs(6,0)=DN(1,0)*clhs6 + DN(1,1)*clhs77 + DN(1,2)*clhs112;
            lhs(6,1)=DN(1,0)*clhs12 + DN(1,1)*clhs80 + DN(1,2)*clhs113;
            lhs(6,2)=DN(1,0)*clhs17 + DN(1,1)*clhs83 + DN(1,2)*clhs114 + clhs147;
            lhs(6,3)=-clhs134;
            lhs(6,4)=DN(1,0)*clhs25 + DN(1,1)*clhs86 + DN(1,2)*clhs116;
            lhs(6,5)=DN(1,0)*clhs31 + DN(1,1)*clhs89 + DN(1,2)*clhs117;
            lhs(6,6)=DN(1,0)*clhs36 + DN(1,1)*clhs92 + DN(1,2)*clhs118 + clhs149;
            lhs(6,7)=-clhs160;
            lhs(6,8)=DN(1,0)*clhs44 + DN(1,1)*clhs95 + DN(1,2)*clhs120;
            lhs(6,9)=DN(1,0)*clhs50 + DN(1,1)*clhs98 + DN(1,2)*clhs121;
            lhs(6,10)=DN(1,0)*clhs55 + DN(1,1)*clhs101 + DN(1,2)*clhs122 + clhs152;
            lhs(6,11)=-clhs161;
            lhs(6,12)=DN(1,0)*clhs63 + DN(1,1)*clhs104 + DN(1,2)*clhs124;
            lhs(6,13)=DN(1,0)*clhs69 + DN(1,1)*clhs107 + DN(1,2)*clhs125;
            lhs(6,14)=DN(1,0)*clhs74 + DN(1,1)*clhs110 + DN(1,2)*clhs126 + clhs155;
            lhs(6,15)=-clhs162;
            lhs(7,0)=r[0]*(clhs128*clhs132 + clhs37);
            lhs(7,1)=r[0]*(clhs128*clhs133 + clhs93);
            lhs(7,2)=r[0]*(clhs119 + clhs128*clhs134);
            lhs(7,3)=clhs138;
            lhs(7,4)=clhs150*clhs163;
            lhs(7,5)=clhs157*clhs163;
            lhs(7,6)=clhs160*clhs163;
            lhs(7,7)=pow(DN(1,0), 2)*tau1 + pow(DN(1,1), 2)*tau1 + pow(DN(1,2), 2)*tau1 + clhs131*clhs148;
            lhs(7,8)=r[2]*(clhs128*clhs153 + clhs164);
            lhs(7,9)=r[2]*(clhs128*clhs158 + clhs165);
            lhs(7,10)=r[2]*(clhs128*clhs161 + clhs166);
            lhs(7,11)=clhs170;
            lhs(7,12)=r[3]*(clhs128*clhs156 + clhs171);
            lhs(7,13)=r[3]*(clhs128*clhs159 + clhs172);
            lhs(7,14)=r[3]*(clhs128*clhs162 + clhs173);
            lhs(7,15)=clhs174;
            lhs(8,0)=DN(2,0)*clhs2 + DN(2,1)*clhs4 + DN(2,2)*clhs6 + clhs175;
            lhs(8,1)=DN(2,0)*clhs7 + DN(2,1)*clhs9 + DN(2,2)*clhs12;
            lhs(8,2)=DN(2,0)*clhs13 + DN(2,1)*clhs15 + DN(2,2)*clhs17;
            lhs(8,3)=-clhs139;
            lhs(8,4)=DN(2,0)*clhs21 + DN(2,1)*clhs23 + DN(2,2)*clhs25 + clhs176;
            lhs(8,5)=DN(2,0)*clhs26 + DN(2,1)*clhs28 + DN(2,2)*clhs31;
            lhs(8,6)=DN(2,0)*clhs32 + DN(2,1)*clhs34 + DN(2,2)*clhs36;
            lhs(8,7)=-clhs164;
            lhs(8,8)=DN(2,0)*clhs40 + DN(2,1)*clhs42 + DN(2,2)*clhs44 + clhs178;
            lhs(8,9)=DN(2,0)*clhs45 + DN(2,1)*clhs47 + DN(2,2)*clhs50;
            lhs(8,10)=DN(2,0)*clhs51 + DN(2,1)*clhs53 + DN(2,2)*clhs55;
            lhs(8,11)=-clhs179;
            lhs(8,12)=DN(2,0)*clhs59 + DN(2,1)*clhs61 + DN(2,2)*clhs63 + clhs181;
            lhs(8,13)=DN(2,0)*clhs64 + DN(2,1)*clhs66 + DN(2,2)*clhs69;
            lhs(8,14)=DN(2,0)*clhs70 + DN(2,1)*clhs72 + DN(2,2)*clhs74;
            lhs(8,15)=-clhs182;
            lhs(9,0)=DN(2,0)*clhs4 + DN(2,1)*clhs76 + DN(2,2)*clhs77;
            lhs(9,1)=DN(2,0)*clhs9 + DN(2,1)*clhs78 + DN(2,2)*clhs80 + clhs175;
            lhs(9,2)=DN(2,0)*clhs15 + DN(2,1)*clhs81 + DN(2,2)*clhs83;
            lhs(9,3)=-clhs140;
            lhs(9,4)=DN(2,0)*clhs23 + DN(2,1)*clhs85 + DN(2,2)*clhs86;
            lhs(9,5)=DN(2,0)*clhs28 + DN(2,1)*clhs87 + DN(2,2)*clhs89 + clhs176;
            lhs(9,6)=DN(2,0)*clhs34 + DN(2,1)*clhs90 + DN(2,2)*clhs92;
            lhs(9,7)=-clhs165;
            lhs(9,8)=DN(2,0)*clhs42 + DN(2,1)*clhs94 + DN(2,2)*clhs95;
            lhs(9,9)=DN(2,0)*clhs47 + DN(2,1)*clhs96 + DN(2,2)*clhs98 + clhs178;
            lhs(9,10)=DN(2,0)*clhs53 + DN(2,1)*clhs99 + DN(2,2)*clhs101;
            lhs(9,11)=-clhs183;
            lhs(9,12)=DN(2,0)*clhs61 + DN(2,1)*clhs103 + DN(2,2)*clhs104;
            lhs(9,13)=DN(2,0)*clhs66 + DN(2,1)*clhs105 + DN(2,2)*clhs107 + clhs181;
            lhs(9,14)=DN(2,0)*clhs72 + DN(2,1)*clhs108 + DN(2,2)*clhs110;
            lhs(9,15)=-clhs184;
            lhs(10,0)=DN(2,0)*clhs6 + DN(2,1)*clhs77 + DN(2,2)*clhs112;
            lhs(10,1)=DN(2,0)*clhs12 + DN(2,1)*clhs80 + DN(2,2)*clhs113;
            lhs(10,2)=DN(2,0)*clhs17 + DN(2,1)*clhs83 + DN(2,2)*clhs114 + clhs175;
            lhs(10,3)=-clhs141;
            lhs(10,4)=DN(2,0)*clhs25 + DN(2,1)*clhs86 + DN(2,2)*clhs116;
            lhs(10,5)=DN(2,0)*clhs31 + DN(2,1)*clhs89 + DN(2,2)*clhs117;
            lhs(10,6)=DN(2,0)*clhs36 + DN(2,1)*clhs92 + DN(2,2)*clhs118 + clhs176;
            lhs(10,7)=-clhs166;
            lhs(10,8)=DN(2,0)*clhs44 + DN(2,1)*clhs95 + DN(2,2)*clhs120;
            lhs(10,9)=DN(2,0)*clhs50 + DN(2,1)*clhs98 + DN(2,2)*clhs121;
            lhs(10,10)=DN(2,0)*clhs55 + DN(2,1)*clhs101 + DN(2,2)*clhs122 + clhs178;
            lhs(10,11)=-clhs185;
            lhs(10,12)=DN(2,0)*clhs63 + DN(2,1)*clhs104 + DN(2,2)*clhs124;
            lhs(10,13)=DN(2,0)*clhs69 + DN(2,1)*clhs107 + DN(2,2)*clhs125;
            lhs(10,14)=DN(2,0)*clhs74 + DN(2,1)*clhs110 + DN(2,2)*clhs126 + clhs181;
            lhs(10,15)=-clhs186;
            lhs(11,0)=r[0]*(clhs128*clhs139 + clhs56);
            lhs(11,1)=r[0]*(clhs102 + clhs128*clhs140);
            lhs(11,2)=r[0]*(clhs123 + clhs128*clhs141);
            lhs(11,3)=clhs142;
            lhs(11,4)=r[1]*(clhs128*clhs164 + clhs153);
            lhs(11,5)=r[1]*(clhs128*clhs165 + clhs158);
            lhs(11,6)=r[1]*(clhs128*clhs166 + clhs161);
            lhs(11,7)=clhs170;
            lhs(11,8)=clhs179*clhs187;
            lhs(11,9)=clhs183*clhs187;
            lhs(11,10)=clhs185*clhs187;
            lhs(11,11)=pow(DN(2,0), 2)*tau1 + pow(DN(2,1), 2)*tau1 + pow(DN(2,2), 2)*tau1 + clhs131*clhs177;
            lhs(11,12)=r[3]*(clhs128*clhs182 + clhs188);
            lhs(11,13)=r[3]*(clhs128*clhs184 + clhs189);
            lhs(11,14)=r[3]*(clhs128*clhs186 + clhs190);
            lhs(11,15)=clhs191;
            lhs(12,0)=DN(3,0)*clhs2 + DN(3,1)*clhs4 + DN(3,2)*clhs6 + clhs192;
            lhs(12,1)=DN(3,0)*clhs7 + DN(3,1)*clhs9 + DN(3,2)*clhs12;
            lhs(12,2)=DN(3,0)*clhs13 + DN(3,1)*clhs15 + DN(3,2)*clhs17;
            lhs(12,3)=-clhs143;
            lhs(12,4)=DN(3,0)*clhs21 + DN(3,1)*clhs23 + DN(3,2)*clhs25 + clhs193;
            lhs(12,5)=DN(3,0)*clhs26 + DN(3,1)*clhs28 + DN(3,2)*clhs31;
            lhs(12,6)=DN(3,0)*clhs32 + DN(3,1)*clhs34 + DN(3,2)*clhs36;
            lhs(12,7)=-clhs171;
            lhs(12,8)=DN(3,0)*clhs40 + DN(3,1)*clhs42 + DN(3,2)*clhs44 + clhs194;
            lhs(12,9)=DN(3,0)*clhs45 + DN(3,1)*clhs47 + DN(3,2)*clhs50;
            lhs(12,10)=DN(3,0)*clhs51 + DN(3,1)*clhs53 + DN(3,2)*clhs55;
            lhs(12,11)=-clhs188;
            lhs(12,12)=DN(3,0)*clhs59 + DN(3,1)*clhs61 + DN(3,2)*clhs63 + clhs196;
            lhs(12,13)=DN(3,0)*clhs64 + DN(3,1)*clhs66 + DN(3,2)*clhs69;
            lhs(12,14)=DN(3,0)*clhs70 + DN(3,1)*clhs72 + DN(3,2)*clhs74;
            lhs(12,15)=-clhs197;
            lhs(13,0)=DN(3,0)*clhs4 + DN(3,1)*clhs76 + DN(3,2)*clhs77;
            lhs(13,1)=DN(3,0)*clhs9 + DN(3,1)*clhs78 + DN(3,2)*clhs80 + clhs192;
            lhs(13,2)=DN(3,0)*clhs15 + DN(3,1)*clhs81 + DN(3,2)*clhs83;
            lhs(13,3)=-clhs144;
            lhs(13,4)=DN(3,0)*clhs23 + DN(3,1)*clhs85 + DN(3,2)*clhs86;
            lhs(13,5)=DN(3,0)*clhs28 + DN(3,1)*clhs87 + DN(3,2)*clhs89 + clhs193;
            lhs(13,6)=DN(3,0)*clhs34 + DN(3,1)*clhs90 + DN(3,2)*clhs92;
            lhs(13,7)=-clhs172;
            lhs(13,8)=DN(3,0)*clhs42 + DN(3,1)*clhs94 + DN(3,2)*clhs95;
            lhs(13,9)=DN(3,0)*clhs47 + DN(3,1)*clhs96 + DN(3,2)*clhs98 + clhs194;
            lhs(13,10)=DN(3,0)*clhs53 + DN(3,1)*clhs99 + DN(3,2)*clhs101;
            lhs(13,11)=-clhs189;
            lhs(13,12)=DN(3,0)*clhs61 + DN(3,1)*clhs103 + DN(3,2)*clhs104;
            lhs(13,13)=DN(3,0)*clhs66 + DN(3,1)*clhs105 + DN(3,2)*clhs107 + clhs196;
            lhs(13,14)=DN(3,0)*clhs72 + DN(3,1)*clhs108 + DN(3,2)*clhs110;
            lhs(13,15)=-clhs198;
            lhs(14,0)=DN(3,0)*clhs6 + DN(3,1)*clhs77 + DN(3,2)*clhs112;
            lhs(14,1)=DN(3,0)*clhs12 + DN(3,1)*clhs80 + DN(3,2)*clhs113;
            lhs(14,2)=DN(3,0)*clhs17 + DN(3,1)*clhs83 + DN(3,2)*clhs114 + clhs192;
            lhs(14,3)=-clhs145;
            lhs(14,4)=DN(3,0)*clhs25 + DN(3,1)*clhs86 + DN(3,2)*clhs116;
            lhs(14,5)=DN(3,0)*clhs31 + DN(3,1)*clhs89 + DN(3,2)*clhs117;
            lhs(14,6)=DN(3,0)*clhs36 + DN(3,1)*clhs92 + DN(3,2)*clhs118 + clhs193;
            lhs(14,7)=-clhs173;
            lhs(14,8)=DN(3,0)*clhs44 + DN(3,1)*clhs95 + DN(3,2)*clhs120;
            lhs(14,9)=DN(3,0)*clhs50 + DN(3,1)*clhs98 + DN(3,2)*clhs121;
            lhs(14,10)=DN(3,0)*clhs55 + DN(3,1)*clhs101 + DN(3,2)*clhs122 + clhs194;
            lhs(14,11)=-clhs190;
            lhs(14,12)=DN(3,0)*clhs63 + DN(3,1)*clhs104 + DN(3,2)*clhs124;
            lhs(14,13)=DN(3,0)*clhs69 + DN(3,1)*clhs107 + DN(3,2)*clhs125;
            lhs(14,14)=DN(3,0)*clhs74 + DN(3,1)*clhs110 + DN(3,2)*clhs126 + clhs196;
            lhs(14,15)=-clhs199;
            lhs(15,0)=r[0]*(clhs128*clhs143 + clhs75);
            lhs(15,1)=r[0]*(clhs111 + clhs128*clhs144);
            lhs(15,2)=r[0]*(clhs127 + clhs128*clhs145);
            lhs(15,3)=clhs146;
            lhs(15,4)=r[1]*(clhs128*clhs171 + clhs156);
            lhs(15,5)=r[1]*(clhs128*clhs172 + clhs159);
            lhs(15,6)=r[1]*(clhs128*clhs173 + clhs162);
            lhs(15,7)=clhs174;
            lhs(15,8)=r[2]*(clhs128*clhs188 + clhs182);
            lhs(15,9)=r[2]*(clhs128*clhs189 + clhs184);
            lhs(15,10)=r[2]*(clhs128*clhs190 + clhs186);
            lhs(15,11)=clhs191;
            lhs(15,12)=clhs197*clhs200;
            lhs(15,13)=clhs198*clhs200;
            lhs(15,14)=clhs199*clhs200;
            lhs(15,15)=pow(DN(3,0), 2)*tau1 + pow(DN(3,1), 2)*tau1 + pow(DN(3,2), 2)*tau1 + clhs131*clhs195;


    }

void Stokes3DWeaklyCompressible::ComputeGaussPointRHSContribution(array_1d<double,16>& rhs, const element_data<4,3>& data)
    {
        const int nnodes = 4;
        const int dim = 3;
        
        
        const double& bdf0 = data.bdf0;
        const double& bdf1 = data.bdf1;
        const double& bdf2 = data.bdf2;
        
        const bounded_matrix<double,nnodes,dim>& v = data.v;
        const bounded_matrix<double,nnodes,dim>& vn = data.vn;
        const bounded_matrix<double,nnodes,dim>& vnn = data.vnn;
        const bounded_matrix<double,nnodes,dim>& f = data.f;
        const auto& p = data.p;
        const auto& pn = data.pn;
        const auto& pnn = data.pnn;
        const auto& r = data.r;
        const auto& rn = data.rn;
        const auto& rnn = data.rnn; 
        
        const double rho_gauss = inner_prod(data.N, data.r);
        
        const double k = data.k;
        
        //get constitutive matrix 
        const Matrix& C = data.C;
        const Vector& stress = data.stress;
        
        //get shape function values
        const bounded_matrix<double,nnodes,dim>& DN = data.DN_DX;
        const array_1d<double,nnodes>& N = data.N;
        
        //compute an equivalent tau by Bitrans*c*Bi
        const double tau_denom =             (C(3,3) + C(4,4) + C(5,5))*(pow(DN(0,0), 2) + pow(DN(0,1), 2) + pow(DN(0,2), 2) + pow(DN(1,0), 2) + pow(DN(1,1), 2) + pow(DN(1,2), 2) + pow(DN(2,0), 2) + pow(DN(2,1), 2) + pow(DN(2,2), 2) + pow(DN(3,0), 2) + pow(DN(3,1), 2) + pow(DN(3,2), 2));

        const double tau1 = 1.0/(tau_denom*rho_gauss);
//         const double tau2 = (C(3,3) + C(4,4) + C(5,5))/(6.0*rho_gauss);
        
        

        const double crhs0 =             N[0]*p[0] + N[1]*p[1] + N[2]*p[2] + N[3]*p[3];
const double crhs1 =             N[0]*f(0,0);
const double crhs2 =             N[1]*f(1,0);
const double crhs3 =             N[2]*f(2,0);
const double crhs4 =             N[3]*f(3,0);
const double crhs5 =             crhs1 + crhs2 + crhs3 + crhs4;
const double crhs6 =             r[0]*v(0,0);
const double crhs7 =             bdf1*rn[0];
const double crhs8 =             bdf2*rnn[0];
const double crhs9 =             r[1]*v(1,0);
const double crhs10 =             bdf1*rn[1];
const double crhs11 =             bdf2*rnn[1];
const double crhs12 =             r[2]*v(2,0);
const double crhs13 =             bdf1*rn[2];
const double crhs14 =             bdf2*rnn[2];
const double crhs15 =             r[3]*v(3,0);
const double crhs16 =             bdf1*rn[3];
const double crhs17 =             bdf2*rnn[3];
const double crhs18 =             N[0]*(bdf0*crhs6 + crhs7*vn(0,0) + crhs8*vnn(0,0)) + N[1]*(bdf0*crhs9 + crhs10*vn(1,0) + crhs11*vnn(1,0)) + N[2]*(bdf0*crhs12 + crhs13*vn(2,0) + crhs14*vnn(2,0)) + N[3]*(bdf0*crhs15 + crhs16*vn(3,0) + crhs17*vnn(3,0));
const double crhs19 =             N[0]*f(0,1);
const double crhs20 =             N[1]*f(1,1);
const double crhs21 =             N[2]*f(2,1);
const double crhs22 =             N[3]*f(3,1);
const double crhs23 =             crhs19 + crhs20 + crhs21 + crhs22;
const double crhs24 =             r[0]*v(0,1);
const double crhs25 =             r[1]*v(1,1);
const double crhs26 =             r[2]*v(2,1);
const double crhs27 =             r[3]*v(3,1);
const double crhs28 =             N[0]*(bdf0*crhs24 + crhs7*vn(0,1) + crhs8*vnn(0,1)) + N[1]*(bdf0*crhs25 + crhs10*vn(1,1) + crhs11*vnn(1,1)) + N[2]*(bdf0*crhs26 + crhs13*vn(2,1) + crhs14*vnn(2,1)) + N[3]*(bdf0*crhs27 + crhs16*vn(3,1) + crhs17*vnn(3,1));
const double crhs29 =             N[0]*f(0,2);
const double crhs30 =             N[1]*f(1,2);
const double crhs31 =             N[2]*f(2,2);
const double crhs32 =             N[3]*f(3,2);
const double crhs33 =             crhs29 + crhs30 + crhs31 + crhs32;
const double crhs34 =             r[0]*v(0,2);
const double crhs35 =             r[1]*v(1,2);
const double crhs36 =             r[2]*v(2,2);
const double crhs37 =             r[3]*v(3,2);
const double crhs38 =             N[0]*(bdf0*crhs34 + crhs7*vn(0,2) + crhs8*vnn(0,2)) + N[1]*(bdf0*crhs35 + crhs10*vn(1,2) + crhs11*vnn(1,2)) + N[2]*(bdf0*crhs36 + crhs13*vn(2,2) + crhs14*vnn(2,2)) + N[3]*(bdf0*crhs37 + crhs16*vn(3,2) + crhs17*vnn(3,2));
const double crhs39 =             DN(0,0)*crhs6 + DN(0,1)*crhs24 + DN(0,2)*crhs34 + DN(1,0)*crhs9 + DN(1,1)*crhs25 + DN(1,2)*crhs35 + DN(2,0)*crhs12 + DN(2,1)*crhs26 + DN(2,2)*crhs36 + DN(3,0)*crhs15 + DN(3,1)*crhs27 + DN(3,2)*crhs37;
const double crhs40 =             (N[0]*(bdf0*p[0] + bdf1*pn[0] + bdf2*pnn[0]) + N[1]*(bdf0*p[1] + bdf1*pn[1] + bdf2*pnn[1]) + N[2]*(bdf0*p[2] + bdf1*pn[2] + bdf2*pnn[2]) + N[3]*(bdf0*p[3] + bdf1*pn[3] + bdf2*pnn[3]))/k;
const double crhs41 =             tau1*(DN(0,0)*p[0] + DN(1,0)*p[1] + DN(2,0)*p[2] + DN(3,0)*p[3] - crhs1 + crhs18 - crhs2 - crhs3 - crhs4);
const double crhs42 =             tau1*(DN(0,1)*p[0] + DN(1,1)*p[1] + DN(2,1)*p[2] + DN(3,1)*p[3] - crhs19 - crhs20 - crhs21 - crhs22 + crhs28);
const double crhs43 =             tau1*(DN(0,2)*p[0] + DN(1,2)*p[1] + DN(2,2)*p[2] + DN(3,2)*p[3] - crhs29 - crhs30 - crhs31 - crhs32 + crhs38);
            rhs[0]=DN(0,0)*crhs0 - DN(0,0)*stress[0] - DN(0,1)*stress[3] - DN(0,2)*stress[5] - N[0]*crhs18 + N[0]*crhs5;
            rhs[1]=-DN(0,0)*stress[3] + DN(0,1)*crhs0 - DN(0,1)*stress[1] - DN(0,2)*stress[4] + N[0]*crhs23 - N[0]*crhs28;
            rhs[2]=-DN(0,0)*stress[5] - DN(0,1)*stress[4] + DN(0,2)*crhs0 - DN(0,2)*stress[2] + N[0]*crhs33 - N[0]*crhs38;
            rhs[3]=-DN(0,0)*crhs41 - DN(0,1)*crhs42 - DN(0,2)*crhs43 - N[0]*crhs39 - N[0]*crhs40;
            rhs[4]=DN(1,0)*crhs0 - DN(1,0)*stress[0] - DN(1,1)*stress[3] - DN(1,2)*stress[5] - N[1]*crhs18 + N[1]*crhs5;
            rhs[5]=-DN(1,0)*stress[3] + DN(1,1)*crhs0 - DN(1,1)*stress[1] - DN(1,2)*stress[4] + N[1]*crhs23 - N[1]*crhs28;
            rhs[6]=-DN(1,0)*stress[5] - DN(1,1)*stress[4] + DN(1,2)*crhs0 - DN(1,2)*stress[2] + N[1]*crhs33 - N[1]*crhs38;
            rhs[7]=-DN(1,0)*crhs41 - DN(1,1)*crhs42 - DN(1,2)*crhs43 - N[1]*crhs39 - N[1]*crhs40;
            rhs[8]=DN(2,0)*crhs0 - DN(2,0)*stress[0] - DN(2,1)*stress[3] - DN(2,2)*stress[5] - N[2]*crhs18 + N[2]*crhs5;
            rhs[9]=-DN(2,0)*stress[3] + DN(2,1)*crhs0 - DN(2,1)*stress[1] - DN(2,2)*stress[4] + N[2]*crhs23 - N[2]*crhs28;
            rhs[10]=-DN(2,0)*stress[5] - DN(2,1)*stress[4] + DN(2,2)*crhs0 - DN(2,2)*stress[2] + N[2]*crhs33 - N[2]*crhs38;
            rhs[11]=-DN(2,0)*crhs41 - DN(2,1)*crhs42 - DN(2,2)*crhs43 - N[2]*crhs39 - N[2]*crhs40;
            rhs[12]=DN(3,0)*crhs0 - DN(3,0)*stress[0] - DN(3,1)*stress[3] - DN(3,2)*stress[5] - N[3]*crhs18 + N[3]*crhs5;
            rhs[13]=-DN(3,0)*stress[3] + DN(3,1)*crhs0 - DN(3,1)*stress[1] - DN(3,2)*stress[4] + N[3]*crhs23 - N[3]*crhs28;
            rhs[14]=-DN(3,0)*stress[5] - DN(3,1)*stress[4] + DN(3,2)*crhs0 - DN(3,2)*stress[2] + N[3]*crhs33 - N[3]*crhs38;
            rhs[15]=-DN(3,0)*crhs41 - DN(3,1)*crhs42 - DN(3,2)*crhs43 - N[3]*crhs39 - N[3]*crhs40;

        
    }
   
}
