2006/06/25
	* tag 1.7: rel_1_7
	* examples/testpost.c: fixed a bug, AsciiZipped must has the mesh
	file in ascii format.
	
2006/05/25
	* gidpost.h: dllexport.
	
2006/05/18 
	* all: GiD_BeginMeshColor, GiD_BeginMeshGroup, GiD_EndMeshGroup,
	GiD_BeginOnMeshGroup, GiD_EndOnMeshGroup
	
2005/10/24
	* doc:
	* gidpost.h : documented GiD_ResultDescriptionDim
2005/10/21
	* gidpost* : added support to new type specification for result
	groups. The type could be Type:dim, where Type is one valid result
	type and dim is a number giving a valid dimension. Updated fortran
	interface for recently added functions.
	
2005/10/07
	* all: new version 1.60. "Result Groups" can now be written. The
	macro USE_CONST can be used to anable (if defined) or desable (if
	not defined) the use of const char* arguments.
	
2005/09/22
	* all: ha sido un error cambiar de 'char *' a 'const char *'
	
2005/09/22
	* gidpost.cpp: flag_begin_values = 0; must be set in
	GiD_BeginResultGroup. 
2005/09/21
	* gidpost.h:
	* gidpost.cpp: values_location_{min,max} not needed, CBufferValue
	* gidpostInt.cpp: now controls the types of results written within 
	* gidpostInt.h: a ResultGroup.
2005/09/16
	* gidpost.cpp: in GiD_WriteVectorModule, when writing if we are
	inside a ResultGroup block the module value is ignored.
	* gidpostInt.cpp: in CBufferValues::WriteValues, buffer overflow
	is checked after checking for change in location.
	
2005/09/15
	* gidpost.cpp:
	* gidpostInt.cpp:
	* gidpostInt.h: fixed a bug when writing results in a "Result
	Group", vectors can be 3 or 4 component long.

	* examples/testpost.c : bug when passing location id in result
	group sample code. 
2005/06/27
	* source/gidpost.{h,cpp} including Prism element
	* doc/gidpost.{html,subst} including Prism element documentation.
	* all: change to version 1.52
2005/05/09
	* all: constification, version change from 1.5 to 1.51

2005/01/04
	* source/gidpostInt.cpp: fixed a bug when writing 3D vectors.
	
2005/01/07
	* source/gidpost.cpp added const char and a filter to remove
	double quotes from names which can cause problems within gid. 

2003/07/29
	* doc/gidpost.html   : commented the GiD_ResultUnit
	* source/gidpost.h   : interface because it is not 
	* source/gidpostfor.c: supported yet inside GiD.
2003/07/28
	* doc/gidpost.html: updated documentation for release 1.5
	* binary/gidpost.lib: binary release for windows
2003/07/15
	* gidpost.h:
	* gidpost.cpp:
	* gidpostfor.c: new function 'GiD_WriteCoordinates2D' (to write
	coordinates in 2D but only in ASCII format, the function can be
	used in binary but the library provide the 'z' cordinate a zero.
	
2003/07/15
	* gidpost.h:
	* gidpost.cpp: removed 'char * UnitName' argument , new functions:
	 GiD_BeginResultHeader, GiD_ResultRange, GiD_ResultComponents,
	 GiD_ResultUnit, GiD_BeginResultGroup, GiD_ResultDescription,
	 GiD_ResultValues, GiD_FlushPostFile. Validation in debug mode.

	* gidpostInt.h:
	* gidpostInt.cpp: new member
	CPostFile::WriteValues( int id, int n, double * buffer), new class
	CBufferValues to write the values in a result group, validation in
	debug mode.


	* gidpostfor.c: updated fortran interface for the new
	functionality.

	* testpost.c:
	* testpostfor.f: added test code for the new functionality.
