This file provides a short tutorial on the application of the "Boost Build System" version V2 to the Kratos.
It is assumed that a recent version (bjam 3.1.14 or more recent) of  the Boost Build System is installed in the system and correctly configured that the system call to invoke it is simply "bjam". The version can be checked by typing 

bjam --version

##############################################################################
prior to the compilation of the kratos it is necessary to compile the auxiliary libraries, in particular

kratosR1/external_libraries/gidpost/
kratosR1/applications/PFEMapplication/custom_external_libraries/triangle  --> compile with "make trilibrary"
kratosR1/applications/PFEMapplication/custom_external_libraries/tetgen/tetgen1.4.0/  --> compile with "make tetlib"
kratosR1/applications/ULFapplication/custom_external_libraries/triangle  --> compile with "make trilibrary"
kratosR1/applications/ULFapplication/custom_external_libraries/tetgen/tetgen1.4.0/  --> compile with "make tetlib"

 

##############################################################################
The file Jamroot in the KratosRoot directory may need to be customized. For this reason the file in the cvs is called "Common_Jamroot".
before use it is necessary to copy This file to a file named Jamroot and edit it to customize the installation directories:

cp Common_Jamroot Jamroot
..
edit (somehow) Jamroot

##############################################################################
Under this hipothesis the simple commands to control the build process are:

INSTALL
bjam install

BUILD KRATOS_PYTHON
bjam /kratos-prj/kratos   (the libkratos.a is compiled automathically if needed)

BUILD AN APPLICATION
bjam /kratos-prj/PFEMapplication   (the libkratos.a is compiled automathically if needed)
..
bjam /kratos-prj/structural_application   (the libkratos.a is compiled automathically if needed)

CLEAN ... SOMETHING
bjam /kratos-prj/PFEMapplication clean

the option "-d2" added at the end of the call will show the flags given to the compiler
for example:

bjam /kratos-prj/structural_application -d2

will compile the structural_application showing the compiler flags

##############################################################################
the bjam provides far more flexibility for example in changing the compiler or the release/debug... please see online documentation for 
further details






