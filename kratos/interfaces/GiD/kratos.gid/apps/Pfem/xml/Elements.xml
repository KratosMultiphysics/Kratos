<?xml version="1.0" encoding="UTF-8"?>
<ElementList>

  <!--fluid elements-->
  <!--updated lagrangian-->
  <ElementItem n="TwoStepUpdatedLagrangianVPFluidElement2D" pn="Fluid Updated Lagrangian" ImplementedInFile="none.cpp"
	       ImplementedInApplication="PfemFluidDynamicsApplication" MinimumKratosVersion="9000" ProductionReady="Developer"
	       WorkingSpaceDimension="2D" LocalSpaceDimension="2" RequiresLocalAxes="False" LargeDeformation="False,True"
	       help="To be written by..."
	       ElementType="Fluid">

    <!--here we could add a list of all of the possible geometries-->
    <TopologyFeatures>
      <item GeometryType="Triangle" nodes="3" KratosName="TwoStepUpdatedLagrangianVPFluidElement2D"/>
    </TopologyFeatures>
    <!-- here we add the block of features which we require from the constitutive law-->
    <ConstitutiveLaw_FilterFeatures>
	  <filter field="ImplementedInApplication" value="FluidDynamicsApplication"/>
    </ConstitutiveLaw_FilterFeatures>
    <!--define list of NodalConditions-->
    <NodalConditions>     
    </NodalConditions>
    <inputs>
    </inputs>
    <outputs>
    </outputs>
  </ElementItem>


   <ElementItem n="TwoStepUpdatedLagrangianVPFluidElement3D" pn="Fluid Updated Lagrangian" ImplementedInFile="none.cpp"
	       ImplementedInApplication="PfemFluidDynamicsApplication" MinimumKratosVersion="9000" ProductionReady="Developer"
	       WorkingSpaceDimension="3D" LocalSpaceDimension="3" RequiresLocalAxes="False" LargeDeformation="False,True"
	       help="To be written by..."
	       ElementType="Fluid">

    <!--here we could add a list of all of the possible geometries-->
    <TopologyFeatures>
      <item GeometryType="Tetrahedra" nodes="4" KratosName="TwoStepUpdatedLagrangianVPFluidElement3D"/>
    </TopologyFeatures>
    <!-- here we add the block of features which we require from the constitutive law-->
    <ConstitutiveLaw_FilterFeatures>
	  <filter field="ImplementedInApplication" value="FluidDynamicsApplication"/>
    </ConstitutiveLaw_FilterFeatures>
    <!--define list of NodalConditions-->
    <NodalConditions>     
    </NodalConditions>
    <inputs>
    </inputs>
    <outputs>
    </outputs>
  </ElementItem>


  <!--rigid elements-->
  <!--updated lagrangian-->
  <ElementItem n="RigidLagrangianElement2D2N" pn="Rigid Wall" ImplementedInFile="none.cpp"
	       ImplementedInApplication="PfemSolidMechanicsApplication" MinimumKratosVersion="9000" ProductionReady="Developer"
	       WorkingSpaceDimension="2D" LocalSpaceDimension="1" RequiresLocalAxes="False" LargeDeformation="False,True"
	       help="To be written by..."
	       ElementType="Rigid_Body">
    <!--here we could add a list of all of the possible geometries-->
    <TopologyFeatures>
      <item GeometryType="Line" nodes="2" KratosName="Element2D2N"/>
    </TopologyFeatures>
    <!-- here we add the block of features which we require from the constitutive law-->
    <ConstitutiveLaw_FilterFeatures>
	  <filter field="n" value="None"/>
    </ConstitutiveLaw_FilterFeatures>
    <!--define list of NodalConditions-->
    <NodalConditions>     
    </NodalConditions>
    <inputs>
    </inputs>
    <outputs>
    </outputs>
  </ElementItem>
  <ElementItem n="RigidLagrangianElement2D3N" pn="Rigid Body" ImplementedInFile="none.cpp"
	       ImplementedInApplication="PfemSolidMechanicsApplication" MinimumKratosVersion="9000" ProductionReady="Developer"
	       WorkingSpaceDimension="2D" LocalSpaceDimension="2" RequiresLocalAxes="False" LargeDeformation="False,True"
	       help="To be written by..."
	       ElementType="Rigid_Body">
    <!--here we could add a list of all of the possible geometries-->
    <TopologyFeatures>
      <item GeometryType="Triangle" nodes="3" KratosName="Element2D3N"/>
    </TopologyFeatures>
    <!-- here we add the block of features which we require from the constitutive law-->
    <ConstitutiveLaw_FilterFeatures>
	  <filter field="n" value="None"/>
    </ConstitutiveLaw_FilterFeatures>
    <!--define list of NodalConditions-->
    <NodalConditions>     
    </NodalConditions>
    <inputs>
    </inputs>
    <outputs>
    </outputs>
  </ElementItem>  
  <ElementItem n="SurfaceRigidLagrangianElement3D3N" pn="Rigid Wall" ImplementedInFile="none.cpp"
	       ImplementedInApplication="PfemSolidMechanicsApplication" MinimumKratosVersion="9000" ProductionReady="Developer"
	       WorkingSpaceDimension="3D" LocalSpaceDimension="2" RequiresLocalAxes="False" LargeDeformation="False,True"
	       help="To be written by..."
	       ElementType="Rigid_Body">
    <!--here we could add a list of all of the possible geometries-->
    <TopologyFeatures>
      <item GeometryType="Triangle" nodes="3" KratosName="Element3D3N"/>
    </TopologyFeatures>
    <!-- here we add the block of features which we require from the constitutive law-->
    <ConstitutiveLaw_FilterFeatures>
	  <filter field="n" value="None"/>
    </ConstitutiveLaw_FilterFeatures>
    <!--define list of NodalConditions-->
    <NodalConditions>     
    </NodalConditions>
    <inputs>
    </inputs>
    <outputs>
    </outputs>
  </ElementItem>
  <ElementItem n="RigidLagrangianElement3D3N" pn="Rigid Body" ImplementedInFile="none.cpp"
	       ImplementedInApplication="PfemSolidMechanicsApplication" MinimumKratosVersion="9000" ProductionReady="Developer"
	       WorkingSpaceDimension="3D" LocalSpaceDimension="3" RequiresLocalAxes="False" LargeDeformation="False,True"
	       help="To be written by..."
	       ElementType="Rigid_Body">
    <!--here we could add a list of all of the possible geometries-->
    <TopologyFeatures>
      <item GeometryType="Tetrahedra" nodes="3" KratosName="Element3D4N"/>
    </TopologyFeatures>
    <!-- here we add the block of features which we require from the constitutive law-->
    <ConstitutiveLaw_FilterFeatures>
	  <filter field="n" value="None"/>
    </ConstitutiveLaw_FilterFeatures>
    <!--define list of NodalConditions-->
    <NodalConditions>     
    </NodalConditions>
    <inputs>
    </inputs>
    <outputs>
    </outputs>
  </ElementItem>

  <!--solid elements-->
  <!--updated lagrangian-->
  <ElementItem n="UpdatedLagrangianElement2D" pn="Solid Updated Lagrangian" ImplementedInFile="updated_lagrangian_element.cpp"
	       ImplementedInApplication="SolidMechanicsApplication" MinimumKratosVersion="9000" ProductionReady="ProductionReady"
	       WorkingSpaceDimension="2D" LocalSpaceDimension="2" RequiresLocalAxes="False" LargeDeformation="False,True"
	       help="This element it implements a Updated Lagrangian approach to large deformation kinematics"
	       ElementType="Deformable_Body">
    <!--here we could add a list of all of the possible geometries-->
    <TopologyFeatures>
      <item GeometryType="Triangle" nodes="3" KratosName="UpdatedLagrangianElement2D3N"/>
    </TopologyFeatures>
    <!-- here we add the block of features which we require from the constitutive law-->
    <ConstitutiveLaw_FilterFeatures>
	  <filter field="ImplementedInApplication" value="SolidMechanicsApplication"/>
      <filter field="Type" value="PlaneStress,PlaneStrain"/>
      <filter field="Dimension" value="2D"/>
      <filter field="StrainSize" value="3"/>
      <filter field="HybridType" value="False"/>
    </ConstitutiveLaw_FilterFeatures>
    <!--define list of NodalConditions-->
    <NodalConditions>
      <NodalCondition n="DISPLACEMENT"/>
      <NodalCondition n="VELOCITY"/>
      <NodalCondition n="ACCELERATION"/>  
    </NodalConditions>
    <inputs>
    </inputs>
    <outputs>
      <parameter n="GREEN_LAGRANGE_STRAIN_TENSOR" pn="Green-Lagrange strain tensor" v="true" />      
      <parameter n="CAUCHY_STRESS_TENSOR" pn="Cauchy stress tensor" v="true" />
      <parameter n="VON_MISES_STRESS" pn="Von Mises stress value" v="true" />
      <parameter n="ALMANSI_STRAIN_TENSOR" pn="Almansi Strain Tensor" v="false" state="hidden" />
      <parameter n="PK2_STRESS_TENSOR" pn="PK2 Stress Tensor" v="false" state="hidden"/>
    </outputs>
  </ElementItem>
  <ElementItem n="UpdatedLagrangianElementAxisym" pn="Solid Updated Lagrangian" ImplementedInFile="axisym_updated_lagrangian_U_P_element.cpp"
	       ImplementedInApplication="SolidMechanicsApplication" MinimumKratosVersion="9000" ProductionReady="ProductionReady"
	       WorkingSpaceDimension="2Da" LocalSpaceDimension="2" RequiresLocalAxes="False" LargeDeformation="False,True"
	       help="This element it implements a Updated Lagrangian approach to large deformation kinematics"
	       ElementType="Deformable_Body">
    <!--here we could add a list of all of the possible geometries-->
    <TopologyFeatures>
      <item GeometryType="Triangle" nodes="3" KratosName="AxisymUpdatedLagrangianElement2D3N"/>
    </TopologyFeatures>
    <!-- here we add the block of features which we require from the constitutive law-->
    <ConstitutiveLaw_FilterFeatures>
	  <filter field="ImplementedInApplication" value="SolidMechanicsApplication"/>
      <filter field="Type" value="Axisymmetric"/>
      <filter field="Dimension" value="2D"/>
      <filter field="StrainSize" value="4"/>
      <filter field="HybridType" value="False"/>
    </ConstitutiveLaw_FilterFeatures>
    <!--define list of NodalConditions-->
    <NodalConditions>
      <NodalCondition n="DISPLACEMENT"/>
      <NodalCondition n="VELOCITY"/>
      <NodalCondition n="ACCELERATION"/>  
    </NodalConditions>
    <inputs>
    </inputs>
    <outputs>
      <parameter n="GREEN_LAGRANGE_STRAIN_TENSOR" pn="Green-Lagrange strain tensor" v="true" />      
      <parameter n="CAUCHY_STRESS_TENSOR" pn="Cauchy stress tensor" v="true" />
      <parameter n="VON_MISES_STRESS" pn="Von Mises stress value" v="true" />
      <parameter n="ALMANSI_STRAIN_TENSOR" pn="Almansi Strain Tensor" v="false" state="hidden" />
      <parameter n="PK2_STRESS_TENSOR" pn="PK2 Stress Tensor" v="false" state="hidden"/>
    </outputs>
  </ElementItem>
  <ElementItem n="UpdatedLagrangianElement3D" pn="Solid Updated Lagrangian" ImplementedInFile="updated_lagrangian_element.cpp"
	       ImplementedInApplication="SolidMechanicsApplication" MinimumKratosVersion="9000" ProductionReady="ProductionReady"
	       WorkingSpaceDimension="3D" LocalSpaceDimension="3" RequiresLocalAxes="False" LargeDeformation="False,True"
	       help="This element it implements a Updated Lagrangian approach to large deformation kinematics"
	       ElementType="Deformable_Body">
    <!--here we could add a list of all of the possible geometries-->
    <TopologyFeatures>
      <item GeometryType="Tetrahedra" nodes="4" KratosName="UpdatedLagrangianElement3D4N"/>
    </TopologyFeatures>
    <!-- here we add the block of features which we require from the constitutive law-->
    <ConstitutiveLaw_FilterFeatures>
	  <filter field="ImplementedInApplication" value="SolidMechanicsApplication"/>
      <filter field="Type" value="3D"/>
      <filter field="Dimension" value="3D"/>
      <filter field="StrainSize" value="6"/>
      <filter field="HybridType" value="False"/>
    </ConstitutiveLaw_FilterFeatures>
    <!--define list of NodalConditions-->
    <NodalConditions>
      <NodalCondition n="DISPLACEMENT"/>
      <NodalCondition n="VELOCITY"/>
      <NodalCondition n="ACCELERATION"/>  
    </NodalConditions>
    <inputs>
    </inputs>
    <outputs>
      <parameter n="GREEN_LAGRANGE_STRAIN_TENSOR" pn="Green-Lagrange strain tensor" v="true" />      
      <parameter n="CAUCHY_STRESS_TENSOR" pn="Cauchy stress tensor" v="true" />
      <parameter n="VON_MISES_STRESS" pn="Von Mises stress value" v="true" />
      <parameter n="ALMANSI_STRAIN_TENSOR" pn="Almansi Strain Tensor" v="false" state="hidden" />
      <parameter n="PK2_STRESS_TENSOR" pn="PK2 Stress Tensor" v="false" state="hidden"/>
    </outputs>
  </ElementItem>
  <ElementItem n="TotalUpdatedLagrangianElement2D" pn="Solid Total Lagrangian" ImplementedInFile="none.cpp"
	       ImplementedInApplication="PfemSolidMechanicsApplication" MinimumKratosVersion="9000" ProductionReady="Developer"
	       WorkingSpaceDimension="2D" LocalSpaceDimension="2" RequiresLocalAxes="False" LargeDeformation="False,True"
	       help="To be written by..."
	       ElementType="Deformable_Body">
    <!--here we could add a list of all of the possible geometries-->
    <TopologyFeatures>
      <item GeometryType="Triangle" nodes="3" KratosName="TotalUpdatedLagrangianElement2D3N"/>
    </TopologyFeatures>
    <!-- here we add the block of features which we require from the constitutive law-->
    <ConstitutiveLaw_FilterFeatures>
	  <filter field="ImplementedInApplication" value="SolidMechanicsApplication"/>
      <filter field="Type" value="PlaneStress,PlaneStrain"/>
      <filter field="Dimension" value="2D"/>
      <filter field="StrainSize" value="3"/>
      <filter field="HybridType" value="False"/>
    </ConstitutiveLaw_FilterFeatures>
    <!--define list of NodalConditions-->
    <NodalConditions>
      <NodalCondition n="DISPLACEMENT"/>
      <NodalCondition n="VELOCITY"/>
      <NodalCondition n="ACCELERATION"/>     
    </NodalConditions>
    <inputs>
    </inputs>
    <outputs>
      <parameter n="GREEN_LAGRANGE_STRAIN_TENSOR" pn="Green-Lagrange strain tensor" v="true" />      
      <parameter n="CAUCHY_STRESS_TENSOR" pn="Cauchy stress tensor" v="true" />
      <parameter n="VON_MISES_STRESS" pn="Von Mises stress value" v="true" />
      <parameter n="ALMANSI_STRAIN_TENSOR" pn="Almansi Strain Tensor" v="false" state="hidden" />
      <parameter n="PK2_STRESS_TENSOR" pn="PK2 Stress Tensor" v="false" state="hidden"/>
    </outputs>
  </ElementItem>
  <ElementItem n="TotalUpdatedLagrangianElement3D" pn="Solid Total Lagrangian" ImplementedInFile="none.cpp"
	       ImplementedInApplication="PfemSolidMechanicsApplication" MinimumKratosVersion="9000" ProductionReady="Developer"
	       WorkingSpaceDimension="3D" LocalSpaceDimension="3" RequiresLocalAxes="False" LargeDeformation="False,True"
	       help="To be written by..."
	       ElementType="Deformable_Body" >
    <!--here we could add a list of all of the possible geometries-->
    <TopologyFeatures>
      <item GeometryType="Tetrahedra" nodes="4" KratosName="TotalUpdatedLagrangianElement3D4N"/>
    </TopologyFeatures>
    <!-- here we add the block of features which we require from the constitutive law-->
    <ConstitutiveLaw_FilterFeatures>
	  <filter field="ImplementedInApplication" value="SolidMechanicsApplication"/>
      <filter field="Type" value="3D"/>
      <filter field="Dimension" value="3D"/>
      <filter field="StrainSize" value="6"/>
      <filter field="HybridType" value="False"/>
    </ConstitutiveLaw_FilterFeatures>
    <!--define list of NodalConditions-->
    <NodalConditions>
      <NodalCondition n="DISPLACEMENT"/>
      <NodalCondition n="VELOCITY"/>
      <NodalCondition n="ACCELERATION"/>          
    </NodalConditions>
    <inputs>
    </inputs>
    <outputs>
      <parameter n="GREEN_LAGRANGE_STRAIN_TENSOR" pn="Green-Lagrange strain tensor" v="true" />      
      <parameter n="CAUCHY_STRESS_TENSOR" pn="Cauchy stress tensor" v="true" />
      <parameter n="VON_MISES_STRESS" pn="Von Mises stress value" v="true" />
      <parameter n="ALMANSI_STRAIN_TENSOR" pn="Almansi Strain Tensor" v="false" state="hidden" />
      <parameter n="PK2_STRESS_TENSOR" pn="PK2 Stress Tensor" v="false" state="hidden"/>
    </outputs>
  </ElementItem>

  <!--hybrid elements-->
  <!--hybrid updated lagrangian-->
  <ElementItem n="UpdatedLagrangianElementUP2D" pn="Solid Updated Lagrangian U-P" ImplementedInFile="updated_lagrangian_U_P_element.cpp"
	       ImplementedInApplication="SolidMechanicsApplication" MinimumKratosVersion="9000" ProductionReady="ProductionReady"
	       WorkingSpaceDimension="2D" LocalSpaceDimension="2" RequiresLocalAxes="False" LargeDeformation="False,True"
	       help="This element implements a Hybrid Displacement-Pressure Updated Lagrangian approach to large deformation kinematics"
	       ElementType="Deformable_Body">
    <!--here we could add a list of all of the possible geometries-->
    <TopologyFeatures>
      <item GeometryType="Triangle" nodes="3" KratosName="UpdatedLagrangianUPElement2D3N"/>
    </TopologyFeatures>
    <!-- here we add the block of features which we require from the constitutive law-->
    <ConstitutiveLaw_FilterFeatures>
	  <filter field="ImplementedInApplication" value="SolidMechanicsApplication"/>
      <filter field="Type" value="PlaneStress,PlaneStrain"/>
      <filter field="Dimension" value="2D"/>
      <filter field="StrainSize" value="3"/>
      <filter field="HybridType" value="U-P"/>
    </ConstitutiveLaw_FilterFeatures>
    <!--define list of NodalConditions-->
    <NodalConditions>
      <NodalCondition n="DISPLACEMENT"/>
      <NodalCondition n="VELOCITY"/>
      <NodalCondition n="ACCELERATION"/>
      <NodalCondition n="PRESSURE"/>
    </NodalConditions>
    <inputs>     
    </inputs>
    <outputs>
      <parameter n="GREEN_LAGRANGE_STRAIN_TENSOR" pn="Green-Lagrange strain tensor" v="true" />
      <parameter n="CAUCHY_STRESS_TENSOR" pn="Cauchy stress tensor" v="true" />
      <parameter n="VON_MISES_STRESS" pn="Von Mises stress value" v="true" />
      <parameter n="ALMANSI_STRAIN_TENSOR" pn="Almansi Strain Tensor" v="false" state="hidden" />
      <parameter n="PK2_STRESS_TENSOR" pn="PK2 Stress Tensor" v="false" state="hidden"/>
    </outputs>
  </ElementItem>
  <ElementItem n="UpdatedLagrangianElementUPAxisym" pn="Solid Updated Lagrangian U-P" ImplementedInFile="axisym_updated_lagrangian_U_P_element.cpp"
	       ImplementedInApplication="SolidMechanicsApplication" MinimumKratosVersion="9000" ProductionReady="ProductionReady"
	       WorkingSpaceDimension="2Da" LocalSpaceDimension="2" RequiresLocalAxes="False" LargeDeformation="False,True"
	       help="This element it implements a Hybrid Displacement-Pressure Updated Lagrangian approach to large deformation kinematics"
	       ElementType="Deformable_Body" >
    <!--here we could add a list of all of the possible geometries-->
    <TopologyFeatures>
      <item GeometryType="Triangle" nodes="3" KratosName="AxisymUpdatedLagrangianUPElement2D3N"/>
    </TopologyFeatures>
    <!-- here we add the block of features which we require from the constitutive law-->
    <ConstitutiveLaw_FilterFeatures>
	  <filter field="ImplementedInApplication" value="SolidMechanicsApplication"/>
      <filter field="Type" value="Axisymmetric"/>
      <filter field="Dimension" value="2D"/>
      <filter field="StrainSize" value="4"/>
      <filter field="HybridType" value="U-P"/>
    </ConstitutiveLaw_FilterFeatures>
    <!--define list of NodalConditions-->
    <NodalConditions>
      <NodalCondition n="DISPLACEMENT"/>
      <NodalCondition n="VELOCITY"/>
      <NodalCondition n="ACCELERATION"/>
      <NodalCondition n="PRESSURE"/>
    </NodalConditions>
    <inputs>
    </inputs>
    <outputs>
      <parameter n="GREEN_LAGRANGE_STRAIN_TENSOR" pn="Green-Lagrange strain tensor" v="true" />      
      <parameter n="CAUCHY_STRESS_TENSOR" pn="Cauchy stress tensor" v="true" />      
      <parameter n="VON_MISES_STRESS" pn="Von Mises stress value" v="true" />
      <parameter n="ALMANSI_STRAIN_TENSOR" pn="Almansi Strain Tensor" v="false" state="hidden" />
      <parameter n="PK2_STRESS_TENSOR" pn="PK2 Stress Tensor" v="false" state="hidden"/>
    </outputs>
  </ElementItem>
</ElementList>
