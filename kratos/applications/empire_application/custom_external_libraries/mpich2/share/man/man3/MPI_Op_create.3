.TH MPI_Op_create 3 "7/3/2012" " " "MPI"
.SH NAME
MPI_Op_create \-  Creates a user-defined combination function handle 
.SH SYNOPSIS
.nf
int MPI_Op_create(MPI_User_function *function, int commute, MPI_Op *op)
.fi
.SH INPUT PARAMETERS
.PD 0
.TP
.B function 
- user defined function (function) 
.PD 1
.PD 0
.TP
.B commute 
- true if commutative;  false otherwise. (logical)
.PD 1

.SH OUTPUT PARAMETER
.PD 0
.TP
.B op 
- operation (handle) 
.PD 1

.SH NOTES ON THE USER FUNCTION
The calling list for the user function type is
.nf
typedef void (MPI_User_function) ( void * a, 
void * b, int * len, MPI_Datatype * ); 
.fi

where the operation is 
.I b[i] = a[i] op b[i]
, for 
.I i=0,...,len-1
\&.
A pointer
to the datatype given to the MPI collective computation routine (i.e.,
.I MPI_Reduce
, 
.I MPI_Allreduce
, 
.I MPI_Scan
, or 
.I MPI_Reduce_scatter
) is also
passed to the user-specified routine.

.SH THREAD AND INTERRUPT SAFETY

This routine is thread-safe.  This means that this routine may be
safely used by multiple threads without the need for any user-provided
thread locks.  However, the routine is not interrupt safe.  Typically,
this is due to the use of memory allocation routines such as 
.I malloc
or other non-MPICH runtime routines that are themselves not interrupt-safe.

.SH NOTES FOR FORTRAN
All MPI routines in Fortran (except for 
.I MPI_WTIME
and 
.I MPI_WTICK
) have
an additional argument 
.I ierr
at the end of the argument list.  
.I ierr
is an integer and has the same meaning as the return value of the routine
in C.  In Fortran, MPI routines are subroutines, and are invoked with the
.I call
statement.

All MPI objects (e.g., 
.I MPI_Datatype
, 
.I MPI_Comm
) are of type 
.I INTEGER
in Fortran.

.SH NOTES ON COLLECTIVE OPERATIONS

The reduction functions (
.I MPI_Op
) do not return an error value.  As a result,
if the functions detect an error, all they can do is either call 
.I MPI_Abort
or silently skip the problem.  Thus, if you change the error handler from
.I MPI_ERRORS_ARE_FATAL
to something else, for example, 
.I MPI_ERRORS_RETURN
,
then no error may be indicated.

The reason for this is the performance problems in ensuring that
all collective routines return the same error value.

.SH ERRORS

All MPI routines (except 
.I MPI_Wtime
and 
.I MPI_Wtick
) return an error value;
C routines as the value of the function and Fortran routines in the last
argument.  Before the value is returned, the current MPI error handler is
called.  By default, this error handler aborts the MPI job.  The error handler
may be changed with 
.I MPI_Comm_set_errhandler
(for communicators),
.I MPI_File_set_errhandler
(for files), and 
.I MPI_Win_set_errhandler
(for
RMA windows).  The MPI-1 routine 
.I MPI_Errhandler_set
may be used but
its use is deprecated.  The predefined error handler
.I MPI_ERRORS_RETURN
may be used to cause error values to be returned.
Note that MPI does 
.B not
guarentee that an MPI program can continue past
an error; however, MPI implementations will attempt to continue whenever
possible.

.PD 0
.TP
.B MPI_SUCCESS 
- No error; MPI routine completed successfully.
.PD 1

.SH SEE ALSO
MPI_Op_free
.br
.SH LOCATION
src/mpi/coll/op_create.c
