.TH MPI_Open_port 3 "9/20/2012" " " "MPI"
.SH NAME
MPI_Open_port \-  Establish an address that can be used to establish  connections between groups of MPI processes 
.SH SYNOPSIS
.nf
int MPI_Open_port(MPI_Info info, char *port_name)
.fi
.SH INPUT PARAMETER
.PD 0
.TP
.B info 
- implementation-specific information on how to establish a 
port for 
.I MPI_Comm_accept
(handle) 
.PD 1

.SH OUTPUT PARAMETER
.PD 0
.TP
.B port_name 
- newly established port (string) 
.PD 1

.SH NOTES
MPI copies a system-supplied port name into 
.I port_name
\&.
.I port_name
identifies
the newly opened port and can be used by a client to contact the server.
The maximum size string that may be supplied by the system is
.I MPI_MAX_PORT_NAME
\&.


.SH RESERVED INFO KEY VALUES
.PD 0
.TP
.B ip_port 
- Value contains IP port number at which to establish a port. 
.PD 1
.PD 0
.TP
.B ip_address 
- Value contains IP address at which to establish a port.
If the address is not a valid IP address of the host on which the
.I MPI_OPEN_PORT
call is made, the results are undefined. 
.PD 1

.SH THREAD AND INTERRUPT SAFETY

This routine is thread-safe.  This means that this routine may be
safely used by multiple threads without the need for any user-provided
thread locks.  However, the routine is not interrupt safe.  Typically,
this is due to the use of memory allocation routines such as 
.I malloc
or other non-MPICH runtime routines that are themselves not interrupt-safe.

.SH NOTES FOR FORTRAN
All MPI routines in Fortran (except for 
.I MPI_WTIME
and 
.I MPI_WTICK
) have
an additional argument 
.I ierr
at the end of the argument list.  
.I ierr
is an integer and has the same meaning as the return value of the routine
in C.  In Fortran, MPI routines are subroutines, and are invoked with the
.I call
statement.

All MPI objects (e.g., 
.I MPI_Datatype
, 
.I MPI_Comm
) are of type 
.I INTEGER
in Fortran.

.SH ERRORS

All MPI routines (except 
.I MPI_Wtime
and 
.I MPI_Wtick
) return an error value;
C routines as the value of the function and Fortran routines in the last
argument.  Before the value is returned, the current MPI error handler is
called.  By default, this error handler aborts the MPI job.  The error handler
may be changed with 
.I MPI_Comm_set_errhandler
(for communicators),
.I MPI_File_set_errhandler
(for files), and 
.I MPI_Win_set_errhandler
(for
RMA windows).  The MPI-1 routine 
.I MPI_Errhandler_set
may be used but
its use is deprecated.  The predefined error handler
.I MPI_ERRORS_RETURN
may be used to cause error values to be returned.
Note that MPI does 
.B not
guarentee that an MPI program can continue past
an error; however, MPI implementations will attempt to continue whenever
possible.

.PD 0
.TP
.B MPI_SUCCESS 
- No error; MPI routine completed successfully.
.PD 1
.SH LOCATION
src/mpi/spawn/open_port.c
