.TH MPI_Request_free 3 "9/20/2012" " " "MPI"
.SH NAME
MPI_Request_free \-  Frees a communication request object 
.SH SYNOPSIS
.nf
int MPI_Request_free(MPI_Request *request)
.fi
.SH INPUT PARAMETER
.PD 0
.TP
.B request 
- communication request (handle) 
.PD 1

.SH NOTES

This routine is normally used to free inactive persistent requests created with
either 
.I MPI_Recv_init
or 
.I MPI_Send_init
and friends.  It 
.B is
also
permissible to free an active request.  However, once freed, the request can no
longer be used in a wait or test routine (e.g., 
.I MPI_Wait
) to determine
completion.

This routine may also be used to free a non-persistent requests such as those
created with 
.I MPI_Irecv
or 
.I MPI_Isend
and friends.  Like active persistent
requests, once freed, the request can no longer be used with test/wait routines
to determine completion.

.SH THREAD AND INTERRUPT SAFETY

This routine is thread-safe.  This means that this routine may be
safely used by multiple threads without the need for any user-provided
thread locks.  However, the routine is not interrupt safe.  Typically,
this is due to the use of memory allocation routines such as 
.I malloc
or other non-MPICH runtime routines that are themselves not interrupt-safe.

.SH NOTES FOR FORTRAN
All MPI routines in Fortran (except for 
.I MPI_WTIME
and 
.I MPI_WTICK
) have
an additional argument 
.I ierr
at the end of the argument list.  
.I ierr
is an integer and has the same meaning as the return value of the routine
in C.  In Fortran, MPI routines are subroutines, and are invoked with the
.I call
statement.

All MPI objects (e.g., 
.I MPI_Datatype
, 
.I MPI_Comm
) are of type 
.I INTEGER
in Fortran.

.SH ERRORS

All MPI routines (except 
.I MPI_Wtime
and 
.I MPI_Wtick
) return an error value;
C routines as the value of the function and Fortran routines in the last
argument.  Before the value is returned, the current MPI error handler is
called.  By default, this error handler aborts the MPI job.  The error handler
may be changed with 
.I MPI_Comm_set_errhandler
(for communicators),
.I MPI_File_set_errhandler
(for files), and 
.I MPI_Win_set_errhandler
(for
RMA windows).  The MPI-1 routine 
.I MPI_Errhandler_set
may be used but
its use is deprecated.  The predefined error handler
.I MPI_ERRORS_RETURN
may be used to cause error values to be returned.
Note that MPI does 
.B not
guarentee that an MPI program can continue past
an error; however, MPI implementations will attempt to continue whenever
possible.

.PD 0
.TP
.B MPI_SUCCESS 
- No error; MPI routine completed successfully.
.PD 1
.PD 0
.TP
.B MPI_ERR_REQUEST 
- Invalid 
.I MPI_Request
\&.
Either null or, in the case of a
.I MPI_Start
or 
.I MPI_Startall
, not a persistent request.
.PD 1
.PD 0
.TP
.B MPI_ERR_ARG 
- Invalid argument.  Some argument is invalid and is not
identified by a specific error class (e.g., 
.I MPI_ERR_RANK
).
.PD 1

.SH SEE ALSO
also: MPI_Isend, MPI_Irecv, MPI_Issend, MPI_Ibsend, MPI_Irsend,
.br
MPI_Recv_init, MPI_Send_init, MPI_Ssend_init, MPI_Rsend_init, MPI_Wait,
MPI_Test, MPI_Waitall, MPI_Waitany, MPI_Waitsome, MPI_Testall, MPI_Testany,
MPI_Testsome
.SH LOCATION
src/mpi/pt2pt/request_free.c
