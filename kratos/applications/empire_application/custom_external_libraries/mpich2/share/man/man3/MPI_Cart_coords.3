.TH MPI_Cart_coords 3 "9/20/2012" " " "MPI"
.SH NAME
MPI_Cart_coords \-  Determines process coords in cartesian topology given rank in group 
.SH SYNOPSIS
.nf
int MPI_Cart_coords(MPI_Comm comm, int rank, int maxdims, int *coords)
.fi
.SH INPUT PARAMETERS
.PD 0
.TP
.B comm 
- communicator with cartesian structure (handle) 
.PD 1
.PD 0
.TP
.B rank 
- rank of a process within group of 
.I comm
(integer) 
.PD 1
.PD 0
.TP
.B maxdims 
- length of vector 
.I coords
in the calling program (integer) 
.PD 1

.SH OUTPUT PARAMETER
.PD 0
.TP
.B coords 
- integer array (of size 
.I ndims
) containing the Cartesian 
coordinates of specified process (integer) 
.PD 1

.SH THREAD AND INTERRUPT SAFETY

This routine is both thread- and interrupt-safe.
This means that this routine may safely be used by multiple threads and
from within a signal handler.

.SH NOTES FOR FORTRAN
All MPI routines in Fortran (except for 
.I MPI_WTIME
and 
.I MPI_WTICK
) have
an additional argument 
.I ierr
at the end of the argument list.  
.I ierr
is an integer and has the same meaning as the return value of the routine
in C.  In Fortran, MPI routines are subroutines, and are invoked with the
.I call
statement.

All MPI objects (e.g., 
.I MPI_Datatype
, 
.I MPI_Comm
) are of type 
.I INTEGER
in Fortran.

.SH ERRORS

All MPI routines (except 
.I MPI_Wtime
and 
.I MPI_Wtick
) return an error value;
C routines as the value of the function and Fortran routines in the last
argument.  Before the value is returned, the current MPI error handler is
called.  By default, this error handler aborts the MPI job.  The error handler
may be changed with 
.I MPI_Comm_set_errhandler
(for communicators),
.I MPI_File_set_errhandler
(for files), and 
.I MPI_Win_set_errhandler
(for
RMA windows).  The MPI-1 routine 
.I MPI_Errhandler_set
may be used but
its use is deprecated.  The predefined error handler
.I MPI_ERRORS_RETURN
may be used to cause error values to be returned.
Note that MPI does 
.B not
guarentee that an MPI program can continue past
an error; however, MPI implementations will attempt to continue whenever
possible.

.PD 0
.TP
.B MPI_SUCCESS 
- No error; MPI routine completed successfully.
.PD 1
.PD 0
.TP
.B MPI_ERR_TOPOLOGY 
- Invalid topology.  Either there is no topology 
associated with this communicator, or it is not the correct type (e.g.,
.I MPI_CART
when expecting 
.I MPI_GRAPH
).
.PD 1
.PD 0
.TP
.B MPI_ERR_RANK 
- Invalid source or destination rank.  Ranks must be between
zero and the size of the communicator minus one; ranks in a receive
(
.I MPI_Recv
, 
.I MPI_Irecv
, 
.I MPI_Sendrecv
, etc.) may also be 
.I MPI_ANY_SOURCE
\&.

.PD 1
.PD 0
.TP
.B MPI_ERR_DIMS 
- Invalid dimension argument.  A dimension argument
is null or its length is less than or equal to zero.
.PD 1
.PD 0
.TP
.B MPI_ERR_ARG 
- Invalid argument.  Some argument is invalid and is not
identified by a specific error class (e.g., 
.I MPI_ERR_RANK
).
.PD 1
.SH LOCATION
src/mpi/topo/cart_coords.c
