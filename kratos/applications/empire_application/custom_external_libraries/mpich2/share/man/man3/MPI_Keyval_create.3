.TH MPI_Keyval_create 3 "9/20/2012" " " "MPI"
.SH NAME
MPI_Keyval_create \-  Greates a new attribute key 
.SH SYNOPSIS
.nf
int MPI_Keyval_create(MPI_Copy_function *copy_fn, 
                     MPI_Delete_function *delete_fn, 
                     int *keyval, void *extra_state)
.fi
.SH INPUT PARAMETERS
.PD 0
.TP
.B copy_fn 
- Copy callback function for 
.I keyval

.PD 1
.PD 0
.TP
.B delete_fn 
- Delete callback function for 
.I keyval

.PD 1
.PD 0
.TP
.B extra_state 
- Extra state for callback functions 
.PD 1

.SH OUTPUT PARAMETER
.PD 0
.TP
.B keyval 
- key value for future access (integer) 
.PD 1

.SH NOTES
Key values are global (available for any and all communicators).

There are subtle differences between C and Fortran that require that the
copy_fn be written in the same language that 
.I MPI_Keyval_create
is called from.
This should not be a problem for most users; only programers using both
Fortran and C in the same program need to be sure that they follow this rule.

.SH THREAD AND INTERRUPT SAFETY

This routine is thread-safe.  This means that this routine may be
safely used by multiple threads without the need for any user-provided
thread locks.  However, the routine is not interrupt safe.  Typically,
this is due to the use of memory allocation routines such as 
.I malloc
or other non-MPICH runtime routines that are themselves not interrupt-safe.

.SH DEPRECATED FUNCTION
The MPI-2 standard deprecated a number of routines because MPI-2 provides
better versions.  This routine is one of those that was deprecated.  The
routine may continue to be used, but new code should use the replacement
routine.
The replacement for this routine is 
.I MPI_Comm_create_keyval
\&.


.SH NOTES FOR FORTRAN
All MPI routines in Fortran (except for 
.I MPI_WTIME
and 
.I MPI_WTICK
) have
an additional argument 
.I ierr
at the end of the argument list.  
.I ierr
is an integer and has the same meaning as the return value of the routine
in C.  In Fortran, MPI routines are subroutines, and are invoked with the
.I call
statement.

All MPI objects (e.g., 
.I MPI_Datatype
, 
.I MPI_Comm
) are of type 
.I INTEGER
in Fortran.

.SH ERRORS

All MPI routines (except 
.I MPI_Wtime
and 
.I MPI_Wtick
) return an error value;
C routines as the value of the function and Fortran routines in the last
argument.  Before the value is returned, the current MPI error handler is
called.  By default, this error handler aborts the MPI job.  The error handler
may be changed with 
.I MPI_Comm_set_errhandler
(for communicators),
.I MPI_File_set_errhandler
(for files), and 
.I MPI_Win_set_errhandler
(for
RMA windows).  The MPI-1 routine 
.I MPI_Errhandler_set
may be used but
its use is deprecated.  The predefined error handler
.I MPI_ERRORS_RETURN
may be used to cause error values to be returned.
Note that MPI does 
.B not
guarentee that an MPI program can continue past
an error; however, MPI implementations will attempt to continue whenever
possible.

.PD 0
.TP
.B MPI_SUCCESS 
- No error; MPI routine completed successfully.
.PD 1
.PD 0
.TP
.B MPI_ERR_INTERN 
- This error is returned when some part of the MPICH 
implementation is unable to acquire memory.  
.PD 1
.PD 0
.TP
.B MPI_ERR_ARG 
- Invalid argument.  Some argument is invalid and is not
identified by a specific error class (e.g., 
.I MPI_ERR_RANK
).
.PD 1

.SH SEE ALSO
MPI_Keyval_free, MPI_Comm_create_keyval
.br
.SH LOCATION
src/mpi/attr/keyval_create.c
