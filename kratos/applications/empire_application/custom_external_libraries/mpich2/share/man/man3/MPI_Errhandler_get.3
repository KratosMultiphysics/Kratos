.TH MPI_Errhandler_get 3 "9/20/2012" " " "MPI"
.SH NAME
MPI_Errhandler_get \-  Gets the error handler for a communicator 
.SH SYNOPSIS
.nf
int MPI_Errhandler_get(MPI_Comm comm, MPI_Errhandler *errhandler)
.fi
.SH INPUT PARAMETER
.PD 0
.TP
.B comm 
- communicator to get the error handler from (handle) 
.PD 1

.SH OUTPUT PARAMETER
.PD 0
.TP
.B errhandler 
- MPI error handler currently associated with communicator
(handle) 
.PD 1

.SH THREAD AND INTERRUPT SAFETY

This routine is thread-safe.  This means that this routine may be
safely used by multiple threads without the need for any user-provided
thread locks.  However, the routine is not interrupt safe.  Typically,
this is due to the use of memory allocation routines such as 
.I malloc
or other non-MPICH runtime routines that are themselves not interrupt-safe.

.SH NOTES FOR FORTRAN
All MPI routines in Fortran (except for 
.I MPI_WTIME
and 
.I MPI_WTICK
) have
an additional argument 
.I ierr
at the end of the argument list.  
.I ierr
is an integer and has the same meaning as the return value of the routine
in C.  In Fortran, MPI routines are subroutines, and are invoked with the
.I call
statement.

All MPI objects (e.g., 
.I MPI_Datatype
, 
.I MPI_Comm
) are of type 
.I INTEGER
in Fortran.

.SH NOTE ON IMPLEMENTATION

The MPI Standard was unclear on whether this routine required the user to call
.I MPI_Errhandler_free
once for each call made to this routine in order to
free the error handler.  After some debate, the MPI Forum added an explicit
statement that users are required to call 
.I MPI_Errhandler_free
when the
return value from this routine is no longer needed.  This behavior is similar
to the other MPI routines for getting objects; for example, 
.I MPI_Comm_group
requires that the user call 
.I MPI_Group_free
when the group returned
by 
.I MPI_Comm_group
is no longer needed.

.SH ERRORS

All MPI routines (except 
.I MPI_Wtime
and 
.I MPI_Wtick
) return an error value;
C routines as the value of the function and Fortran routines in the last
argument.  Before the value is returned, the current MPI error handler is
called.  By default, this error handler aborts the MPI job.  The error handler
may be changed with 
.I MPI_Comm_set_errhandler
(for communicators),
.I MPI_File_set_errhandler
(for files), and 
.I MPI_Win_set_errhandler
(for
RMA windows).  The MPI-1 routine 
.I MPI_Errhandler_set
may be used but
its use is deprecated.  The predefined error handler
.I MPI_ERRORS_RETURN
may be used to cause error values to be returned.
Note that MPI does 
.B not
guarentee that an MPI program can continue past
an error; however, MPI implementations will attempt to continue whenever
possible.

.PD 0
.TP
.B MPI_SUCCESS 
- No error; MPI routine completed successfully.
.PD 1
.PD 0
.TP
.B MPI_ERR_COMM 
- Invalid communicator.  A common error is to use a null
communicator in a call (not even allowed in 
.I MPI_Comm_rank
).
.PD 1
.PD 0
.TP
.B MPI_ERR_ARG 
- Invalid argument.  Some argument is invalid and is not
identified by a specific error class (e.g., 
.I MPI_ERR_RANK
).
.PD 1
.SH LOCATION
src/mpi/errhan/errhandler_get.c
