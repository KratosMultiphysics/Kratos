//    |  /           |
//    ' /   __| _` | __|  _ \   __|
//    . \  |   (   | |   (   |\__ `
//   _|\_\_|  \__,_|\__|\___/ ____/
//                   Multi-Physics
//
//  License:		 BSD License
//					 Kratos default license: kratos/license.txt
//
//  Main authors:    Ruben Zorrilla
//

#include "custom_elements/navier_stokes.h"

namespace Kratos {

template<>
void NavierStokes<3>::EquationIdVector(EquationIdVectorType& rResult, ProcessInfo& rCurrentProcessInfo)
    {
        KRATOS_TRY

        unsigned int Dim = 3;
        unsigned int NumNodes = 4;
        unsigned int DofSize  = NumNodes*(Dim+1);

        if (rResult.size() != DofSize)
            rResult.resize(DofSize, false);

        for(unsigned int i=0; i<NumNodes; i++)
        {
            rResult[i*(Dim+1)  ]  =  this->GetGeometry()[i].GetDof(VELOCITY_X).EquationId();
            rResult[i*(Dim+1)+1]  =  this->GetGeometry()[i].GetDof(VELOCITY_Y).EquationId();
            rResult[i*(Dim+1)+2]  =  this->GetGeometry()[i].GetDof(VELOCITY_Z).EquationId();
            rResult[i*(Dim+1)+3]  =  this->GetGeometry()[i].GetDof(PRESSURE).EquationId();
        }

        KRATOS_CATCH("")
    }


template<>
void NavierStokes<2>::EquationIdVector(EquationIdVectorType& rResult, ProcessInfo& rCurrentProcessInfo)
    {
        KRATOS_TRY

        unsigned int Dim = 2;
        unsigned int NumNodes = 3;
        unsigned int DofSize  = NumNodes*(Dim+1);

        if (rResult.size() != DofSize)
            rResult.resize(DofSize, false);

        for(unsigned int i=0; i<NumNodes; i++)
        {
            rResult[i*(Dim+1)  ]  =  this->GetGeometry()[i].GetDof(VELOCITY_X).EquationId();
            rResult[i*(Dim+1)+1]  =  this->GetGeometry()[i].GetDof(VELOCITY_Y).EquationId();
            rResult[i*(Dim+1)+2]  =  this->GetGeometry()[i].GetDof(PRESSURE).EquationId();
        }

        KRATOS_CATCH("")
    }


template<>
void NavierStokes<3>::GetDofList(DofsVectorType& ElementalDofList, ProcessInfo& rCurrentProcessInfo)
    {
        KRATOS_TRY

        unsigned int Dim = 3;
        unsigned int NumNodes = 4;
        unsigned int DofSize  = NumNodes*(Dim+1);

        if (ElementalDofList.size() != DofSize)
            ElementalDofList.resize(DofSize);

        for(unsigned int i=0; i<NumNodes; i++)
        {
            ElementalDofList[i*(Dim+1)  ]  =  this->GetGeometry()[i].pGetDof(VELOCITY_X);
            ElementalDofList[i*(Dim+1)+1]  =  this->GetGeometry()[i].pGetDof(VELOCITY_Y);
            ElementalDofList[i*(Dim+1)+2]  =  this->GetGeometry()[i].pGetDof(VELOCITY_Z);
            ElementalDofList[i*(Dim+1)+3]  =  this->GetGeometry()[i].pGetDof(PRESSURE);
        }

        KRATOS_CATCH("");
    }


template<>
void NavierStokes<2>::GetDofList(DofsVectorType& ElementalDofList, ProcessInfo& rCurrentProcessInfo)
    {
        KRATOS_TRY

        unsigned int Dim = 2;
        unsigned int NumNodes = 3;
        unsigned int DofSize  = NumNodes*(Dim+1);

        if (ElementalDofList.size() != DofSize)
            ElementalDofList.resize(DofSize);

        for(unsigned int i=0; i<NumNodes; i++)
        {
            ElementalDofList[i*(Dim+1)  ]  =  this->GetGeometry()[i].pGetDof(VELOCITY_X);
            ElementalDofList[i*(Dim+1)+1]  =  this->GetGeometry()[i].pGetDof(VELOCITY_Y);
            ElementalDofList[i*(Dim+1)+2]  =  this->GetGeometry()[i].pGetDof(PRESSURE);
        }

        KRATOS_CATCH("");
    }


template<>
void NavierStokes<3>::ComputeGaussPointLHSContribution(bounded_matrix<double,16,16>& lhs, const element_data& data)
    {
        const int nnodes = 4;
        const int dim = 3;
        //~ const int strain_size = 6;

        const double rho = inner_prod(data.N, data.rho);        // Density
        const double mu = inner_prod(data.N, data.mu);          // Dynamic viscosity
        const double h = data.h;                                // Characteristic element size
        const double c = data.c;                                // Wave velocity

        const double& bdf0 = data.bdf0;
        const double& bdf1 = data.bdf1;
        const double& bdf2 = data.bdf2;
        const double& delta_t = data.delta_t;
        const double& dyn_tau_coeff = data.dyn_tau_coeff;

        const bounded_matrix<double,nnodes,dim>& v = data.v;
        const bounded_matrix<double,nnodes,dim>& vn = data.vn;
        const bounded_matrix<double,nnodes,dim>& vnn = data.vnn;
        const bounded_matrix<double,nnodes,dim>& vmesh = data.vmesh;
        const bounded_matrix<double,nnodes,dim>& vconv = v - vmesh;
        const bounded_matrix<double,nnodes,dim>& f = data.f;
        const array_1d<double,nnodes>& p = data.p;
        const array_1d<double,nnodes>& pn = data.pn;
        const array_1d<double,nnodes>& pnn = data.pnn;
        //~ const array_1d<double,strain_size>& stress = data.stress;

        // Get constitutive matrix
        //~ const Matrix& C = data.C;

        // Get shape function values
        const array_1d<double,nnodes>& N = data.N;
        const bounded_matrix<double,nnodes,dim>& DN = data.DN_DX;

        const array_1d<double,dim> vconv_gauss = prod(trans(vconv), N);

        const double vconv_norm = norm_2(vconv_gauss);

        // Stabilization parameters
        const double tau1 = 1.0/((rho*dyn_tau_coeff)/delta_t + (2*rho*vconv_norm)/h + (4*mu)/(h*h));
        const double tau2 = mu + 0.5*h*vconv_norm;

        const double clhs0 =             pow(DN(0,0), 2)*rho;
        const double clhs1 =             N[0]*rho;
        const double clhs2 =             DN(0,0)*v(0,0) + DN(1,0)*v(1,0) + DN(2,0)*v(2,0) + DN(3,0)*v(3,0);
        const double clhs3 =             N[0]*v(0,0) + N[1]*v(1,0) + N[2]*v(2,0) + N[3]*v(3,0);
        const double clhs4 =             -N[0]*vmesh(0,0) - N[1]*vmesh(1,0) - N[2]*vmesh(2,0) - N[3]*vmesh(3,0) + clhs3;
        const double clhs5 =             N[0]*v(0,1) + N[1]*v(1,1) + N[2]*v(2,1) + N[3]*v(3,1);
        const double clhs6 =             -N[0]*vmesh(0,1) - N[1]*vmesh(1,1) - N[2]*vmesh(2,1) - N[3]*vmesh(3,1) + clhs5;
        const double clhs7 =             N[0]*v(0,2) + N[1]*v(1,2) + N[2]*v(2,2) + N[3]*v(3,2);
        const double clhs8 =             -N[0]*vmesh(0,2) - N[1]*vmesh(1,2) - N[2]*vmesh(2,2) - N[3]*vmesh(3,2) + clhs7;
        const double clhs9 =             DN(0,0)*clhs4 + DN(0,1)*clhs6 + DN(0,2)*clhs8;
        const double clhs10 =             N[0]*clhs2 + clhs9;
        const double clhs11 =             pow(c, -2);
        const double clhs12 =             N[0]*(bdf0*p[0] + bdf1*pn[0] + bdf2*pnn[0]) + N[1]*(bdf0*p[1] + bdf1*pn[1] + bdf2*pnn[1]) + N[2]*(bdf0*p[2] + bdf1*pn[2] + bdf2*pnn[2]) + N[3]*(bdf0*p[3] + bdf1*pn[3] + bdf2*pnn[3]);
        const double clhs13 =             N[0]*clhs11*clhs12*tau1;
        const double clhs14 =             clhs11*clhs12;
        const double clhs15 =             N[0]*clhs14;
        const double clhs16 =             N[0]*bdf0;
        const double clhs17 =             clhs15 + rho*(clhs10 + clhs16);
        const double clhs18 =             clhs4*rho*tau1;
        const double clhs19 =             DN(0,1)*N[0]*rho;
        const double clhs20 =             DN(0,0)*v(0,1) + DN(1,0)*v(1,1) + DN(2,0)*v(2,1) + DN(3,0)*v(3,1);
        const double clhs21 =             clhs19*clhs20;
        const double clhs22 =             DN(0,2)*N[0]*rho;
        const double clhs23 =             DN(0,0)*v(0,2) + DN(1,0)*v(1,2) + DN(2,0)*v(2,2) + DN(3,0)*v(3,2);
        const double clhs24 =             clhs22*clhs23;
        const double clhs25 =             DN(0,0)*clhs17;
        const double clhs26 =             clhs21 + clhs24 + clhs25;
        const double clhs27 =             pow(N[0], 2);
        const double clhs28 =             bdf0*rho;
        const double clhs29 =             N[0]*rho*tau1;
        const double clhs30 =             DN(0,1)*v(0,0) + DN(1,1)*v(1,0) + DN(2,1)*v(2,0) + DN(3,1)*v(3,0);
        const double clhs31 =             DN(0,2)*v(0,0) + DN(1,2)*v(1,0) + DN(2,2)*v(2,0) + DN(3,2)*v(3,0);
        const double clhs32 =             DN(0,0)*p[0] + DN(1,0)*p[1] + DN(2,0)*p[2] + DN(3,0)*p[3] + clhs14*clhs3 - rho*(N[0]*f(0,0) + N[1]*f(1,0) + N[2]*f(2,0) + N[3]*f(3,0)) + rho*(N[0]*(bdf0*v(0,0) + bdf1*vn(0,0) + bdf2*vnn(0,0)) + N[1]*(bdf0*v(1,0) + bdf1*vn(1,0) + bdf2*vnn(1,0)) + N[2]*(bdf0*v(2,0) + bdf1*vn(2,0) + bdf2*vnn(2,0)) + N[3]*(bdf0*v(3,0) + bdf1*vn(3,0) + bdf2*vnn(3,0)) + clhs2*clhs4 + clhs30*clhs6 + clhs31*clhs8);
        const double clhs33 =             DN(0,1)*v(0,1) + DN(1,1)*v(1,1) + DN(2,1)*v(2,1) + DN(3,1)*v(3,1);
        const double clhs34 =             DN(0,2)*v(0,1) + DN(1,2)*v(1,1) + DN(2,2)*v(2,1) + DN(3,2)*v(3,1);
        const double clhs35 =             DN(0,1)*p[0] + DN(1,1)*p[1] + DN(2,1)*p[2] + DN(3,1)*p[3] + clhs14*clhs5 - rho*(N[0]*f(0,1) + N[1]*f(1,1) + N[2]*f(2,1) + N[3]*f(3,1)) + rho*(N[0]*(bdf0*v(0,1) + bdf1*vn(0,1) + bdf2*vnn(0,1)) + N[1]*(bdf0*v(1,1) + bdf1*vn(1,1) + bdf2*vnn(1,1)) + N[2]*(bdf0*v(2,1) + bdf1*vn(2,1) + bdf2*vnn(2,1)) + N[3]*(bdf0*v(3,1) + bdf1*vn(3,1) + bdf2*vnn(3,1)) + clhs20*clhs4 + clhs33*clhs6 + clhs34*clhs8);
        const double clhs36 =             DN(0,1)*v(0,2) + DN(1,1)*v(1,2) + DN(2,1)*v(2,2) + DN(3,1)*v(3,2);
        const double clhs37 =             DN(0,2)*v(0,2) + DN(1,2)*v(1,2) + DN(2,2)*v(2,2) + DN(3,2)*v(3,2);
        const double clhs38 =             DN(0,2)*p[0] + DN(1,2)*p[1] + DN(2,2)*p[2] + DN(3,2)*p[3] + clhs14*clhs7 - rho*(N[0]*f(0,2) + N[1]*f(1,2) + N[2]*f(2,2) + N[3]*f(3,2)) + rho*(N[0]*(bdf0*v(0,2) + bdf1*vn(0,2) + bdf2*vnn(0,2)) + N[1]*(bdf0*v(1,2) + bdf1*vn(1,2) + bdf2*vnn(1,2)) + N[2]*(bdf0*v(2,2) + bdf1*vn(2,2) + bdf2*vnn(2,2)) + N[3]*(bdf0*v(3,2) + bdf1*vn(3,2) + bdf2*vnn(3,2)) + clhs23*clhs4 + clhs36*clhs6 + clhs37*clhs8);
        const double clhs39 =             DN(0,0)*clhs32 + DN(0,1)*clhs35 + DN(0,2)*clhs38;
        const double clhs40 =             clhs14*clhs27 + clhs27*clhs28 + clhs29*clhs39;
        const double clhs41 =             DN(0,0)*DN(0,1);
        const double clhs42 =             -clhs41*tau2 + clhs41;
        const double clhs43 =             clhs27*clhs30;
        const double clhs44 =             clhs11*clhs12*tau1;
        const double clhs45 =             DN(0,0)*N[0]*rho;
        const double clhs46 =             clhs30*clhs45;
        const double clhs47 =             clhs22*clhs36;
        const double clhs48 =             N[0]*clhs33 + clhs9;
        const double clhs49 =             clhs15 + rho*(clhs16 + clhs48);
        const double clhs50 =             DN(0,1)*clhs49;
        const double clhs51 =             clhs46 + clhs47 + clhs50;
        const double clhs52 =             clhs51*tau1;
        const double clhs53 =             DN(0,0)*DN(0,2);
        const double clhs54 =             -clhs53*tau2 + clhs53;
        const double clhs55 =             clhs27*clhs31;
        const double clhs56 =             clhs31*clhs45;
        const double clhs57 =             clhs19*clhs34;
        const double clhs58 =             N[0]*clhs37 + clhs9;
        const double clhs59 =             clhs15 + rho*(clhs16 + clhs58);
        const double clhs60 =             DN(0,2)*clhs59;
        const double clhs61 =             clhs56 + clhs57 + clhs60;
        const double clhs62 =             clhs61*tau1;
        const double clhs63 =             DN(0,0)*N[0];
        const double clhs64 =             bdf0*clhs11*tau2;
        const double clhs65 =             bdf0*clhs11;
        const double clhs66 =             clhs27*clhs65;
        const double clhs67 =             N[0]*bdf0*clhs11;
        const double clhs68 =             DN(0,0) + clhs3*clhs67;
        const double clhs69 =             DN(0,1) + clhs5*clhs67;
        const double clhs70 =             DN(0,2) + clhs67*clhs7;
        const double clhs71 =             rho*tau1*(DN(0,0)*clhs68 + DN(0,1)*clhs69 + DN(0,2)*clhs70);
        const double clhs72 =             bdf0*clhs11*clhs27*tau1;
        const double clhs73 =             DN(0,0)*rho;
        const double clhs74 =             DN(1,0)*clhs73;
        const double clhs75 =             N[0]*bdf0*rho;
        const double clhs76 =             N[1]*clhs75;
        const double clhs77 =             N[0]*N[1];
        const double clhs78 =             clhs14*clhs77;
        const double clhs79 =             -clhs74*tau2 + clhs74 + clhs76 + clhs78;
        const double clhs80 =             DN(1,0)*clhs4 + DN(1,1)*clhs6 + DN(1,2)*clhs8;
        const double clhs81 =             N[1]*clhs2 + clhs80;
        const double clhs82 =             N[1]*clhs14;
        const double clhs83 =             N[1]*bdf0;
        const double clhs84 =             clhs82 + rho*(clhs81 + clhs83);
        const double clhs85 =             DN(0,1)*N[1]*rho;
        const double clhs86 =             clhs20*clhs85;
        const double clhs87 =             DN(0,2)*N[1]*rho;
        const double clhs88 =             clhs23*clhs87;
        const double clhs89 =             DN(0,0)*clhs84;
        const double clhs90 =             clhs86 + clhs88 + clhs89;
        const double clhs91 =             N[1]*rho*tau1;
        const double clhs92 =             clhs39*clhs91;
        const double clhs93 =             clhs30*clhs77;
        const double clhs94 =             -clhs44*clhs93;
        const double clhs95 =             DN(0,0)*DN(1,1);
        const double clhs96 =             -clhs95*tau2;
        const double clhs97 =             DN(0,0)*N[1]*rho;
        const double clhs98 =             clhs30*clhs97;
        const double clhs99 =             clhs36*clhs87;
        const double clhs100 =             N[1]*clhs33 + clhs80;
        const double clhs101 =             clhs82 + rho*(clhs100 + clhs83);
        const double clhs102 =             DN(0,1)*clhs101;
        const double clhs103 =             clhs102 + clhs98 + clhs99;
        const double clhs104 =             clhs103*tau1;
        const double clhs105 =             clhs31*clhs77;
        const double clhs106 =             -clhs105*clhs44;
        const double clhs107 =             DN(0,0)*DN(1,2);
        const double clhs108 =             -clhs107*tau2;
        const double clhs109 =             clhs31*clhs97;
        const double clhs110 =             clhs34*clhs85;
        const double clhs111 =             N[1]*clhs37 + clhs80;
        const double clhs112 =             clhs82 + rho*(clhs111 + clhs83);
        const double clhs113 =             DN(0,2)*clhs112;
        const double clhs114 =             clhs109 + clhs110 + clhs113;
        const double clhs115 =             clhs114*tau1;
        const double clhs116 =             DN(0,0)*N[1];
        const double clhs117 =             N[1]*bdf0*clhs11;
        const double clhs118 =             DN(1,0) + clhs117*clhs3;
        const double clhs119 =             DN(1,1) + clhs117*clhs5;
        const double clhs120 =             DN(1,2) + clhs117*clhs7;
        const double clhs121 =             rho*tau1*(DN(0,0)*clhs118 + DN(0,1)*clhs119 + DN(0,2)*clhs120);
        const double clhs122 =             N[1]*clhs67;
        const double clhs123 =             N[0]*N[1]*bdf0*clhs11*tau1;
        const double clhs124 =             clhs122*clhs3 - clhs123*clhs32;
        const double clhs125 =             DN(2,0)*clhs73;
        const double clhs126 =             N[2]*clhs75;
        const double clhs127 =             N[0]*N[2];
        const double clhs128 =             clhs127*clhs14;
        const double clhs129 =             -clhs125*tau2 + clhs125 + clhs126 + clhs128;
        const double clhs130 =             DN(2,0)*clhs4 + DN(2,1)*clhs6 + DN(2,2)*clhs8;
        const double clhs131 =             N[2]*clhs2 + clhs130;
        const double clhs132 =             N[2]*clhs14;
        const double clhs133 =             N[2]*bdf0;
        const double clhs134 =             clhs132 + rho*(clhs131 + clhs133);
        const double clhs135 =             DN(0,1)*N[2]*rho;
        const double clhs136 =             clhs135*clhs20;
        const double clhs137 =             DN(0,2)*N[2]*rho;
        const double clhs138 =             clhs137*clhs23;
        const double clhs139 =             DN(0,0)*clhs134;
        const double clhs140 =             clhs136 + clhs138 + clhs139;
        const double clhs141 =             N[2]*rho*tau1;
        const double clhs142 =             clhs141*clhs39;
        const double clhs143 =             clhs127*clhs30;
        const double clhs144 =             -clhs143*clhs44;
        const double clhs145 =             DN(0,0)*DN(2,1);
        const double clhs146 =             -clhs145*tau2;
        const double clhs147 =             DN(0,0)*N[2]*rho;
        const double clhs148 =             clhs147*clhs30;
        const double clhs149 =             clhs137*clhs36;
        const double clhs150 =             N[2]*clhs33 + clhs130;
        const double clhs151 =             clhs132 + rho*(clhs133 + clhs150);
        const double clhs152 =             DN(0,1)*clhs151;
        const double clhs153 =             clhs148 + clhs149 + clhs152;
        const double clhs154 =             clhs153*tau1;
        const double clhs155 =             clhs127*clhs31;
        const double clhs156 =             -clhs155*clhs44;
        const double clhs157 =             DN(0,0)*DN(2,2);
        const double clhs158 =             -clhs157*tau2;
        const double clhs159 =             clhs147*clhs31;
        const double clhs160 =             clhs135*clhs34;
        const double clhs161 =             N[2]*clhs37 + clhs130;
        const double clhs162 =             clhs132 + rho*(clhs133 + clhs161);
        const double clhs163 =             DN(0,2)*clhs162;
        const double clhs164 =             clhs159 + clhs160 + clhs163;
        const double clhs165 =             clhs164*tau1;
        const double clhs166 =             DN(0,0)*N[2];
        const double clhs167 =             N[2]*bdf0*clhs11;
        const double clhs168 =             DN(2,0) + clhs167*clhs3;
        const double clhs169 =             DN(2,1) + clhs167*clhs5;
        const double clhs170 =             DN(2,2) + clhs167*clhs7;
        const double clhs171 =             rho*tau1*(DN(0,0)*clhs168 + DN(0,1)*clhs169 + DN(0,2)*clhs170);
        const double clhs172 =             N[2]*clhs67;
        const double clhs173 =             N[0]*N[2]*bdf0*clhs11*tau1;
        const double clhs174 =             clhs172*clhs3 - clhs173*clhs32;
        const double clhs175 =             DN(3,0)*clhs73;
        const double clhs176 =             N[3]*clhs75;
        const double clhs177 =             N[0]*N[3];
        const double clhs178 =             clhs14*clhs177;
        const double clhs179 =             -clhs175*tau2 + clhs175 + clhs176 + clhs178;
        const double clhs180 =             DN(3,0)*clhs4 + DN(3,1)*clhs6 + DN(3,2)*clhs8;
        const double clhs181 =             N[3]*clhs2 + clhs180;
        const double clhs182 =             N[3]*clhs14;
        const double clhs183 =             N[3]*bdf0;
        const double clhs184 =             clhs182 + rho*(clhs181 + clhs183);
        const double clhs185 =             DN(0,1)*N[3]*rho;
        const double clhs186 =             clhs185*clhs20;
        const double clhs187 =             DN(0,2)*N[3]*rho;
        const double clhs188 =             clhs187*clhs23;
        const double clhs189 =             DN(0,0)*clhs184;
        const double clhs190 =             clhs186 + clhs188 + clhs189;
        const double clhs191 =             N[3]*rho*tau1;
        const double clhs192 =             clhs191*clhs39;
        const double clhs193 =             clhs177*clhs30;
        const double clhs194 =             -clhs193*clhs44;
        const double clhs195 =             DN(0,0)*DN(3,1);
        const double clhs196 =             -clhs195*tau2;
        const double clhs197 =             DN(0,0)*N[3]*rho;
        const double clhs198 =             clhs197*clhs30;
        const double clhs199 =             clhs187*clhs36;
        const double clhs200 =             N[3]*clhs33 + clhs180;
        const double clhs201 =             clhs182 + rho*(clhs183 + clhs200);
        const double clhs202 =             DN(0,1)*clhs201;
        const double clhs203 =             clhs198 + clhs199 + clhs202;
        const double clhs204 =             clhs203*tau1;
        const double clhs205 =             clhs177*clhs31;
        const double clhs206 =             -clhs205*clhs44;
        const double clhs207 =             DN(0,0)*DN(3,2);
        const double clhs208 =             -clhs207*tau2;
        const double clhs209 =             clhs197*clhs31;
        const double clhs210 =             clhs185*clhs34;
        const double clhs211 =             N[3]*clhs37 + clhs180;
        const double clhs212 =             clhs182 + rho*(clhs183 + clhs211);
        const double clhs213 =             DN(0,2)*clhs212;
        const double clhs214 =             clhs209 + clhs210 + clhs213;
        const double clhs215 =             clhs214*tau1;
        const double clhs216 =             DN(0,0)*N[3];
        const double clhs217 =             N[3]*bdf0*clhs11;
        const double clhs218 =             DN(3,0) + clhs217*clhs3;
        const double clhs219 =             DN(3,1) + clhs217*clhs5;
        const double clhs220 =             DN(3,2) + clhs217*clhs7;
        const double clhs221 =             rho*tau1*(DN(0,0)*clhs218 + DN(0,1)*clhs219 + DN(0,2)*clhs220);
        const double clhs222 =             N[3]*clhs67;
        const double clhs223 =             N[0]*N[3]*bdf0*clhs11*tau1;
        const double clhs224 =             clhs222*clhs3 - clhs223*clhs32;
        const double clhs225 =             clhs20*clhs27;
        const double clhs226 =             clhs26*tau1;
        const double clhs227 =             pow(DN(0,1), 2)*rho;
        const double clhs228 =             clhs6*rho*tau1;
        const double clhs229 =             DN(0,1)*DN(0,2);
        const double clhs230 =             -clhs229*tau2 + clhs229;
        const double clhs231 =             clhs27*clhs34;
        const double clhs232 =             DN(0,1)*N[0];
        const double clhs233 =             DN(0,1)*DN(1,0);
        const double clhs234 =             -clhs233*tau2 + clhs233;
        const double clhs235 =             clhs20*clhs77;
        const double clhs236 =             -clhs235*clhs44;
        const double clhs237 =             clhs90*tau1;
        const double clhs238 =             DN(0,1)*rho;
        const double clhs239 =             DN(1,1)*clhs238;
        const double clhs240 =             -clhs239*tau2 + clhs239 + clhs76 + clhs78;
        const double clhs241 =             clhs34*clhs77;
        const double clhs242 =             -clhs241*clhs44;
        const double clhs243 =             DN(0,1)*DN(1,2);
        const double clhs244 =             -clhs243*tau2;
        const double clhs245 =             DN(0,1)*N[1];
        const double clhs246 =             clhs122*clhs5 - clhs123*clhs35;
        const double clhs247 =             DN(0,1)*DN(2,0);
        const double clhs248 =             -clhs247*tau2 + clhs247;
        const double clhs249 =             clhs127*clhs20;
        const double clhs250 =             -clhs249*clhs44;
        const double clhs251 =             clhs140*tau1;
        const double clhs252 =             DN(2,1)*clhs238;
        const double clhs253 =             clhs126 + clhs128 - clhs252*tau2 + clhs252;
        const double clhs254 =             clhs127*clhs34;
        const double clhs255 =             -clhs254*clhs44;
        const double clhs256 =             DN(0,1)*DN(2,2);
        const double clhs257 =             -clhs256*tau2;
        const double clhs258 =             DN(0,1)*N[2];
        const double clhs259 =             clhs172*clhs5 - clhs173*clhs35;
        const double clhs260 =             DN(0,1)*DN(3,0);
        const double clhs261 =             -clhs260*tau2 + clhs260;
        const double clhs262 =             clhs177*clhs20;
        const double clhs263 =             -clhs262*clhs44;
        const double clhs264 =             clhs190*tau1;
        const double clhs265 =             DN(3,1)*clhs238;
        const double clhs266 =             clhs176 + clhs178 - clhs265*tau2 + clhs265;
        const double clhs267 =             clhs177*clhs34;
        const double clhs268 =             -clhs267*clhs44;
        const double clhs269 =             DN(0,1)*DN(3,2);
        const double clhs270 =             -clhs269*tau2;
        const double clhs271 =             DN(0,1)*N[3];
        const double clhs272 =             clhs222*clhs5 - clhs223*clhs35;
        const double clhs273 =             clhs23*clhs27;
        const double clhs274 =             clhs27*clhs36;
        const double clhs275 =             pow(DN(0,2), 2)*rho;
        const double clhs276 =             clhs8*rho*tau1;
        const double clhs277 =             DN(0,2)*N[0];
        const double clhs278 =             DN(0,2)*DN(1,0);
        const double clhs279 =             -clhs278*tau2 + clhs278;
        const double clhs280 =             clhs23*clhs77;
        const double clhs281 =             -clhs280*clhs44;
        const double clhs282 =             DN(0,2)*DN(1,1);
        const double clhs283 =             -clhs282*tau2 + clhs282;
        const double clhs284 =             clhs36*clhs77;
        const double clhs285 =             -clhs284*clhs44;
        const double clhs286 =             DN(0,2)*rho;
        const double clhs287 =             DN(1,2)*clhs286;
        const double clhs288 =             -clhs287*tau2 + clhs287 + clhs76 + clhs78;
        const double clhs289 =             DN(0,2)*N[1];
        const double clhs290 =             clhs122*clhs7 - clhs123*clhs38;
        const double clhs291 =             DN(0,2)*DN(2,0);
        const double clhs292 =             -clhs291*tau2 + clhs291;
        const double clhs293 =             clhs127*clhs23;
        const double clhs294 =             -clhs293*clhs44;
        const double clhs295 =             DN(0,2)*DN(2,1);
        const double clhs296 =             -clhs295*tau2 + clhs295;
        const double clhs297 =             clhs127*clhs36;
        const double clhs298 =             -clhs297*clhs44;
        const double clhs299 =             DN(2,2)*clhs286;
        const double clhs300 =             clhs126 + clhs128 - clhs299*tau2 + clhs299;
        const double clhs301 =             DN(0,2)*N[2];
        const double clhs302 =             clhs172*clhs7 - clhs173*clhs38;
        const double clhs303 =             DN(0,2)*DN(3,0);
        const double clhs304 =             -clhs303*tau2 + clhs303;
        const double clhs305 =             clhs177*clhs23;
        const double clhs306 =             -clhs305*clhs44;
        const double clhs307 =             DN(0,2)*DN(3,1);
        const double clhs308 =             -clhs307*tau2 + clhs307;
        const double clhs309 =             clhs177*clhs36;
        const double clhs310 =             -clhs309*clhs44;
        const double clhs311 =             DN(3,2)*clhs286;
        const double clhs312 =             clhs176 + clhs178 - clhs311*tau2 + clhs311;
        const double clhs313 =             DN(0,2)*N[3];
        const double clhs314 =             clhs222*clhs7 - clhs223*clhs38;
        const double clhs315 =             DN(0,0)*rho*tau1;
        const double clhs316 =             DN(0,1)*rho*tau1;
        const double clhs317 =             DN(0,2)*rho*tau1;
        const double clhs318 =             DN(1,0)*N[0];
        const double clhs319 =             DN(1,1)*N[0];
        const double clhs320 =             DN(1,2)*N[0];
        const double clhs321 =             DN(2,0)*N[0];
        const double clhs322 =             DN(2,1)*N[0];
        const double clhs323 =             DN(2,2)*N[0];
        const double clhs324 =             DN(3,0)*N[0];
        const double clhs325 =             DN(3,1)*N[0];
        const double clhs326 =             DN(3,2)*N[0];
        const double clhs327 =             N[1]*rho;
        const double clhs328 =             N[1]*clhs11*clhs12*tau1;
        const double clhs329 =             DN(1,1)*N[0]*rho;
        const double clhs330 =             clhs20*clhs329;
        const double clhs331 =             DN(1,2)*N[0]*rho;
        const double clhs332 =             clhs23*clhs331;
        const double clhs333 =             DN(1,0)*clhs17;
        const double clhs334 =             clhs330 + clhs332 + clhs333;
        const double clhs335 =             DN(1,0)*clhs32 + DN(1,1)*clhs35 + DN(1,2)*clhs38;
        const double clhs336 =             clhs29*clhs335;
        const double clhs337 =             DN(1,0)*N[0]*rho;
        const double clhs338 =             clhs30*clhs337;
        const double clhs339 =             clhs331*clhs36;
        const double clhs340 =             DN(1,1)*clhs49;
        const double clhs341 =             clhs338 + clhs339 + clhs340;
        const double clhs342 =             clhs341*tau1;
        const double clhs343 =             clhs31*clhs337;
        const double clhs344 =             clhs329*clhs34;
        const double clhs345 =             DN(1,2)*clhs59;
        const double clhs346 =             clhs343 + clhs344 + clhs345;
        const double clhs347 =             clhs346*tau1;
        const double clhs348 =             rho*tau1*(DN(1,0)*clhs68 + DN(1,1)*clhs69 + DN(1,2)*clhs70);
        const double clhs349 =             pow(DN(1,0), 2)*rho;
        const double clhs350 =             DN(1,1)*N[1]*rho;
        const double clhs351 =             clhs20*clhs350;
        const double clhs352 =             DN(1,2)*N[1]*rho;
        const double clhs353 =             clhs23*clhs352;
        const double clhs354 =             DN(1,0)*clhs84;
        const double clhs355 =             clhs351 + clhs353 + clhs354;
        const double clhs356 =             pow(N[1], 2);
        const double clhs357 =             clhs14*clhs356 + clhs28*clhs356 + clhs335*clhs91;
        const double clhs358 =             DN(1,0)*DN(1,1);
        const double clhs359 =             -clhs358*tau2 + clhs358;
        const double clhs360 =             clhs30*clhs356;
        const double clhs361 =             DN(1,0)*N[1]*rho;
        const double clhs362 =             clhs30*clhs361;
        const double clhs363 =             clhs352*clhs36;
        const double clhs364 =             DN(1,1)*clhs101;
        const double clhs365 =             clhs362 + clhs363 + clhs364;
        const double clhs366 =             clhs365*tau1;
        const double clhs367 =             DN(1,0)*DN(1,2);
        const double clhs368 =             -clhs367*tau2 + clhs367;
        const double clhs369 =             clhs31*clhs356;
        const double clhs370 =             clhs31*clhs361;
        const double clhs371 =             clhs34*clhs350;
        const double clhs372 =             DN(1,2)*clhs112;
        const double clhs373 =             clhs370 + clhs371 + clhs372;
        const double clhs374 =             clhs373*tau1;
        const double clhs375 =             DN(1,0)*N[1];
        const double clhs376 =             clhs356*clhs65;
        const double clhs377 =             rho*tau1*(DN(1,0)*clhs118 + DN(1,1)*clhs119 + DN(1,2)*clhs120);
        const double clhs378 =             bdf0*clhs11*clhs356*tau1;
        const double clhs379 =             DN(1,0)*rho;
        const double clhs380 =             DN(2,0)*clhs379;
        const double clhs381 =             N[1]*bdf0*rho;
        const double clhs382 =             N[2]*clhs381;
        const double clhs383 =             N[1]*N[2];
        const double clhs384 =             clhs14*clhs383;
        const double clhs385 =             -clhs380*tau2 + clhs380 + clhs382 + clhs384;
        const double clhs386 =             DN(1,1)*N[2]*rho;
        const double clhs387 =             clhs20*clhs386;
        const double clhs388 =             DN(1,2)*N[2]*rho;
        const double clhs389 =             clhs23*clhs388;
        const double clhs390 =             DN(1,0)*clhs134;
        const double clhs391 =             clhs387 + clhs389 + clhs390;
        const double clhs392 =             clhs141*clhs335;
        const double clhs393 =             clhs30*clhs383;
        const double clhs394 =             -clhs393*clhs44;
        const double clhs395 =             DN(1,0)*DN(2,1);
        const double clhs396 =             -clhs395*tau2;
        const double clhs397 =             DN(1,0)*N[2]*rho;
        const double clhs398 =             clhs30*clhs397;
        const double clhs399 =             clhs36*clhs388;
        const double clhs400 =             DN(1,1)*clhs151;
        const double clhs401 =             clhs398 + clhs399 + clhs400;
        const double clhs402 =             clhs401*tau1;
        const double clhs403 =             clhs31*clhs383;
        const double clhs404 =             -clhs403*clhs44;
        const double clhs405 =             DN(1,0)*DN(2,2);
        const double clhs406 =             -clhs405*tau2;
        const double clhs407 =             clhs31*clhs397;
        const double clhs408 =             clhs34*clhs386;
        const double clhs409 =             DN(1,2)*clhs162;
        const double clhs410 =             clhs407 + clhs408 + clhs409;
        const double clhs411 =             clhs410*tau1;
        const double clhs412 =             DN(1,0)*N[2];
        const double clhs413 =             rho*tau1*(DN(1,0)*clhs168 + DN(1,1)*clhs169 + DN(1,2)*clhs170);
        const double clhs414 =             N[2]*clhs117;
        const double clhs415 =             N[1]*N[2]*bdf0*clhs11*tau1;
        const double clhs416 =             clhs3*clhs414 - clhs32*clhs415;
        const double clhs417 =             DN(3,0)*clhs379;
        const double clhs418 =             N[3]*clhs381;
        const double clhs419 =             N[1]*N[3];
        const double clhs420 =             clhs14*clhs419;
        const double clhs421 =             -clhs417*tau2 + clhs417 + clhs418 + clhs420;
        const double clhs422 =             DN(1,1)*N[3]*rho;
        const double clhs423 =             clhs20*clhs422;
        const double clhs424 =             DN(1,2)*N[3]*rho;
        const double clhs425 =             clhs23*clhs424;
        const double clhs426 =             DN(1,0)*clhs184;
        const double clhs427 =             clhs423 + clhs425 + clhs426;
        const double clhs428 =             clhs191*clhs335;
        const double clhs429 =             clhs30*clhs419;
        const double clhs430 =             -clhs429*clhs44;
        const double clhs431 =             DN(1,0)*DN(3,1);
        const double clhs432 =             -clhs431*tau2;
        const double clhs433 =             DN(1,0)*N[3]*rho;
        const double clhs434 =             clhs30*clhs433;
        const double clhs435 =             clhs36*clhs424;
        const double clhs436 =             DN(1,1)*clhs201;
        const double clhs437 =             clhs434 + clhs435 + clhs436;
        const double clhs438 =             clhs437*tau1;
        const double clhs439 =             clhs31*clhs419;
        const double clhs440 =             -clhs439*clhs44;
        const double clhs441 =             DN(1,0)*DN(3,2);
        const double clhs442 =             -clhs441*tau2;
        const double clhs443 =             clhs31*clhs433;
        const double clhs444 =             clhs34*clhs422;
        const double clhs445 =             DN(1,2)*clhs212;
        const double clhs446 =             clhs443 + clhs444 + clhs445;
        const double clhs447 =             clhs446*tau1;
        const double clhs448 =             DN(1,0)*N[3];
        const double clhs449 =             rho*tau1*(DN(1,0)*clhs218 + DN(1,1)*clhs219 + DN(1,2)*clhs220);
        const double clhs450 =             N[3]*clhs117;
        const double clhs451 =             N[1]*N[3]*bdf0*clhs11*tau1;
        const double clhs452 =             clhs3*clhs450 - clhs32*clhs451;
        const double clhs453 =             clhs334*tau1;
        const double clhs454 =             clhs20*clhs356;
        const double clhs455 =             clhs355*tau1;
        const double clhs456 =             pow(DN(1,1), 2)*rho;
        const double clhs457 =             DN(1,1)*DN(1,2);
        const double clhs458 =             -clhs457*tau2 + clhs457;
        const double clhs459 =             clhs34*clhs356;
        const double clhs460 =             DN(1,1)*N[1];
        const double clhs461 =             DN(1,1)*DN(2,0);
        const double clhs462 =             -clhs461*tau2 + clhs461;
        const double clhs463 =             clhs20*clhs383;
        const double clhs464 =             -clhs44*clhs463;
        const double clhs465 =             clhs391*tau1;
        const double clhs466 =             DN(1,1)*rho;
        const double clhs467 =             DN(2,1)*clhs466;
        const double clhs468 =             clhs382 + clhs384 - clhs467*tau2 + clhs467;
        const double clhs469 =             clhs34*clhs383;
        const double clhs470 =             -clhs44*clhs469;
        const double clhs471 =             DN(1,1)*DN(2,2);
        const double clhs472 =             -clhs471*tau2;
        const double clhs473 =             DN(1,1)*N[2];
        const double clhs474 =             -clhs35*clhs415 + clhs414*clhs5;
        const double clhs475 =             DN(1,1)*DN(3,0);
        const double clhs476 =             -clhs475*tau2 + clhs475;
        const double clhs477 =             clhs20*clhs419;
        const double clhs478 =             -clhs44*clhs477;
        const double clhs479 =             clhs427*tau1;
        const double clhs480 =             DN(3,1)*clhs466;
        const double clhs481 =             clhs418 + clhs420 - clhs480*tau2 + clhs480;
        const double clhs482 =             clhs34*clhs419;
        const double clhs483 =             -clhs44*clhs482;
        const double clhs484 =             DN(1,1)*DN(3,2);
        const double clhs485 =             -clhs484*tau2;
        const double clhs486 =             DN(1,1)*N[3];
        const double clhs487 =             -clhs35*clhs451 + clhs450*clhs5;
        const double clhs488 =             clhs23*clhs356;
        const double clhs489 =             clhs356*clhs36;
        const double clhs490 =             pow(DN(1,2), 2)*rho;
        const double clhs491 =             DN(1,2)*N[1];
        const double clhs492 =             DN(1,2)*DN(2,0);
        const double clhs493 =             -clhs492*tau2 + clhs492;
        const double clhs494 =             clhs23*clhs383;
        const double clhs495 =             -clhs44*clhs494;
        const double clhs496 =             DN(1,2)*DN(2,1);
        const double clhs497 =             -clhs496*tau2 + clhs496;
        const double clhs498 =             clhs36*clhs383;
        const double clhs499 =             -clhs44*clhs498;
        const double clhs500 =             DN(1,2)*rho;
        const double clhs501 =             DN(2,2)*clhs500;
        const double clhs502 =             clhs382 + clhs384 - clhs501*tau2 + clhs501;
        const double clhs503 =             DN(1,2)*N[2];
        const double clhs504 =             -clhs38*clhs415 + clhs414*clhs7;
        const double clhs505 =             DN(1,2)*DN(3,0);
        const double clhs506 =             -clhs505*tau2 + clhs505;
        const double clhs507 =             clhs23*clhs419;
        const double clhs508 =             -clhs44*clhs507;
        const double clhs509 =             DN(1,2)*DN(3,1);
        const double clhs510 =             -clhs509*tau2 + clhs509;
        const double clhs511 =             clhs36*clhs419;
        const double clhs512 =             -clhs44*clhs511;
        const double clhs513 =             DN(3,2)*clhs500;
        const double clhs514 =             clhs418 + clhs420 - clhs513*tau2 + clhs513;
        const double clhs515 =             DN(1,2)*N[3];
        const double clhs516 =             -clhs38*clhs451 + clhs450*clhs7;
        const double clhs517 =             DN(1,0)*rho*tau1;
        const double clhs518 =             DN(1,1)*rho*tau1;
        const double clhs519 =             DN(1,2)*rho*tau1;
        const double clhs520 =             DN(2,0)*N[1];
        const double clhs521 =             DN(2,1)*N[1];
        const double clhs522 =             DN(2,2)*N[1];
        const double clhs523 =             DN(3,0)*N[1];
        const double clhs524 =             DN(3,1)*N[1];
        const double clhs525 =             DN(3,2)*N[1];
        const double clhs526 =             N[2]*rho;
        const double clhs527 =             N[2]*clhs11*clhs12*tau1;
        const double clhs528 =             DN(2,1)*N[0]*rho;
        const double clhs529 =             clhs20*clhs528;
        const double clhs530 =             DN(2,2)*N[0]*rho;
        const double clhs531 =             clhs23*clhs530;
        const double clhs532 =             DN(2,0)*clhs17;
        const double clhs533 =             clhs529 + clhs531 + clhs532;
        const double clhs534 =             DN(2,0)*clhs32 + DN(2,1)*clhs35 + DN(2,2)*clhs38;
        const double clhs535 =             clhs29*clhs534;
        const double clhs536 =             DN(2,0)*N[0]*rho;
        const double clhs537 =             clhs30*clhs536;
        const double clhs538 =             clhs36*clhs530;
        const double clhs539 =             DN(2,1)*clhs49;
        const double clhs540 =             clhs537 + clhs538 + clhs539;
        const double clhs541 =             clhs540*tau1;
        const double clhs542 =             clhs31*clhs536;
        const double clhs543 =             clhs34*clhs528;
        const double clhs544 =             DN(2,2)*clhs59;
        const double clhs545 =             clhs542 + clhs543 + clhs544;
        const double clhs546 =             clhs545*tau1;
        const double clhs547 =             DN(2,0)*clhs68;
        const double clhs548 =             DN(2,1)*clhs69;
        const double clhs549 =             DN(2,2)*clhs70;
        const double clhs550 =             rho*tau1*(clhs547 + clhs548 + clhs549);
        const double clhs551 =             DN(2,1)*N[1]*rho;
        const double clhs552 =             clhs20*clhs551;
        const double clhs553 =             DN(2,2)*N[1]*rho;
        const double clhs554 =             clhs23*clhs553;
        const double clhs555 =             DN(2,0)*clhs84;
        const double clhs556 =             clhs552 + clhs554 + clhs555;
        const double clhs557 =             clhs534*clhs91;
        const double clhs558 =             DN(2,0)*N[1]*rho;
        const double clhs559 =             clhs30*clhs558;
        const double clhs560 =             clhs36*clhs553;
        const double clhs561 =             DN(2,1)*clhs101;
        const double clhs562 =             clhs559 + clhs560 + clhs561;
        const double clhs563 =             clhs562*tau1;
        const double clhs564 =             clhs31*clhs558;
        const double clhs565 =             clhs34*clhs551;
        const double clhs566 =             DN(2,2)*clhs112;
        const double clhs567 =             clhs564 + clhs565 + clhs566;
        const double clhs568 =             clhs567*tau1;
        const double clhs569 =             DN(2,0)*clhs118;
        const double clhs570 =             DN(2,1)*clhs119;
        const double clhs571 =             DN(2,2)*clhs120;
        const double clhs572 =             rho*tau1*(clhs569 + clhs570 + clhs571);
        const double clhs573 =             pow(DN(2,0), 2)*rho;
        const double clhs574 =             DN(2,1)*N[2]*rho;
        const double clhs575 =             clhs20*clhs574;
        const double clhs576 =             DN(2,2)*N[2]*rho;
        const double clhs577 =             clhs23*clhs576;
        const double clhs578 =             DN(2,0)*clhs134;
        const double clhs579 =             clhs575 + clhs577 + clhs578;
        const double clhs580 =             pow(N[2], 2);
        const double clhs581 =             clhs14*clhs580 + clhs141*clhs534 + clhs28*clhs580;
        const double clhs582 =             DN(2,0)*DN(2,1);
        const double clhs583 =             -clhs582*tau2 + clhs582;
        const double clhs584 =             clhs30*clhs580;
        const double clhs585 =             DN(2,0)*N[2]*rho;
        const double clhs586 =             clhs30*clhs585;
        const double clhs587 =             clhs36*clhs576;
        const double clhs588 =             DN(2,1)*clhs151;
        const double clhs589 =             clhs586 + clhs587 + clhs588;
        const double clhs590 =             clhs589*tau1;
        const double clhs591 =             DN(2,0)*DN(2,2);
        const double clhs592 =             -clhs591*tau2 + clhs591;
        const double clhs593 =             clhs31*clhs580;
        const double clhs594 =             clhs31*clhs585;
        const double clhs595 =             clhs34*clhs574;
        const double clhs596 =             DN(2,2)*clhs162;
        const double clhs597 =             clhs594 + clhs595 + clhs596;
        const double clhs598 =             clhs597*tau1;
        const double clhs599 =             DN(2,0)*N[2];
        const double clhs600 =             clhs580*clhs65;
        const double clhs601 =             DN(2,0)*clhs168;
        const double clhs602 =             DN(2,1)*clhs169;
        const double clhs603 =             DN(2,2)*clhs170;
        const double clhs604 =             rho*tau1*(clhs601 + clhs602 + clhs603);
        const double clhs605 =             bdf0*clhs11*clhs580*tau1;
        const double clhs606 =             DN(2,0)*DN(3,0)*rho;
        const double clhs607 =             N[2]*N[3]*bdf0;
        const double clhs608 =             clhs607*rho;
        const double clhs609 =             N[2]*N[3];
        const double clhs610 =             clhs14*clhs609;
        const double clhs611 =             -clhs606*tau2 + clhs606 + clhs608 + clhs610;
        const double clhs612 =             DN(2,1)*N[3]*rho;
        const double clhs613 =             clhs20*clhs612;
        const double clhs614 =             DN(2,2)*N[3]*rho;
        const double clhs615 =             clhs23*clhs614;
        const double clhs616 =             DN(2,0)*clhs184;
        const double clhs617 =             clhs613 + clhs615 + clhs616;
        const double clhs618 =             clhs191*clhs534;
        const double clhs619 =             clhs30*clhs609;
        const double clhs620 =             -clhs44*clhs619;
        const double clhs621 =             DN(2,0)*DN(3,1);
        const double clhs622 =             -clhs621*tau2;
        const double clhs623 =             DN(2,0)*N[3]*rho;
        const double clhs624 =             clhs30*clhs623;
        const double clhs625 =             clhs36*clhs614;
        const double clhs626 =             DN(2,1)*clhs201;
        const double clhs627 =             clhs624 + clhs625 + clhs626;
        const double clhs628 =             clhs627*tau1;
        const double clhs629 =             clhs31*clhs609;
        const double clhs630 =             -clhs44*clhs629;
        const double clhs631 =             DN(2,0)*DN(3,2);
        const double clhs632 =             -clhs631*tau2;
        const double clhs633 =             clhs31*clhs623;
        const double clhs634 =             clhs34*clhs612;
        const double clhs635 =             DN(2,2)*clhs212;
        const double clhs636 =             clhs633 + clhs634 + clhs635;
        const double clhs637 =             clhs636*tau1;
        const double clhs638 =             DN(2,0)*N[3];
        const double clhs639 =             DN(2,0)*clhs218;
        const double clhs640 =             DN(2,1)*clhs219;
        const double clhs641 =             DN(2,2)*clhs220;
        const double clhs642 =             rho*tau1*(clhs639 + clhs640 + clhs641);
        const double clhs643 =             clhs11*clhs607;
        const double clhs644 =             N[2]*N[3]*bdf0*clhs11*tau1;
        const double clhs645 =             clhs3*clhs643 - clhs32*clhs644;
        const double clhs646 =             clhs533*tau1;
        const double clhs647 =             clhs556*tau1;
        const double clhs648 =             clhs20*clhs580;
        const double clhs649 =             clhs579*tau1;
        const double clhs650 =             pow(DN(2,1), 2)*rho;
        const double clhs651 =             DN(2,1)*DN(2,2);
        const double clhs652 =             -clhs651*tau2 + clhs651;
        const double clhs653 =             clhs34*clhs580;
        const double clhs654 =             DN(2,1)*N[2];
        const double clhs655 =             DN(2,1)*DN(3,0);
        const double clhs656 =             -clhs655*tau2 + clhs655;
        const double clhs657 =             clhs20*clhs609;
        const double clhs658 =             -clhs44*clhs657;
        const double clhs659 =             clhs617*tau1;
        const double clhs660 =             DN(2,1)*DN(3,1)*rho;
        const double clhs661 =             clhs608 + clhs610 - clhs660*tau2 + clhs660;
        const double clhs662 =             clhs34*clhs609;
        const double clhs663 =             -clhs44*clhs662;
        const double clhs664 =             DN(2,1)*DN(3,2);
        const double clhs665 =             -clhs664*tau2;
        const double clhs666 =             DN(2,1)*N[3];
        const double clhs667 =             -clhs35*clhs644 + clhs5*clhs643;
        const double clhs668 =             clhs23*clhs580;
        const double clhs669 =             clhs36*clhs580;
        const double clhs670 =             pow(DN(2,2), 2)*rho;
        const double clhs671 =             DN(2,2)*N[2];
        const double clhs672 =             DN(2,2)*DN(3,0);
        const double clhs673 =             -clhs672*tau2 + clhs672;
        const double clhs674 =             clhs23*clhs609;
        const double clhs675 =             -clhs44*clhs674;
        const double clhs676 =             DN(2,2)*DN(3,1);
        const double clhs677 =             -clhs676*tau2 + clhs676;
        const double clhs678 =             clhs36*clhs609;
        const double clhs679 =             -clhs44*clhs678;
        const double clhs680 =             DN(2,2)*DN(3,2)*rho;
        const double clhs681 =             clhs608 + clhs610 - clhs680*tau2 + clhs680;
        const double clhs682 =             DN(2,2)*N[3];
        const double clhs683 =             -clhs38*clhs644 + clhs643*clhs7;
        const double clhs684 =             rho*tau1;
        const double clhs685 =             DN(3,0)*N[2];
        const double clhs686 =             DN(3,1)*N[2];
        const double clhs687 =             DN(3,2)*N[2];
        const double clhs688 =             N[3]*rho;
        const double clhs689 =             N[3]*clhs11*clhs12*tau1;
        const double clhs690 =             DN(3,1)*N[0]*rho;
        const double clhs691 =             clhs20*clhs690;
        const double clhs692 =             DN(3,2)*N[0]*rho;
        const double clhs693 =             clhs23*clhs692;
        const double clhs694 =             DN(3,0)*clhs17;
        const double clhs695 =             clhs691 + clhs693 + clhs694;
        const double clhs696 =             DN(3,0)*clhs32 + DN(3,1)*clhs35 + DN(3,2)*clhs38;
        const double clhs697 =             clhs29*clhs696;
        const double clhs698 =             DN(3,0)*N[0]*rho;
        const double clhs699 =             clhs30*clhs698;
        const double clhs700 =             clhs36*clhs692;
        const double clhs701 =             DN(3,1)*clhs49;
        const double clhs702 =             clhs699 + clhs700 + clhs701;
        const double clhs703 =             clhs702*tau1;
        const double clhs704 =             clhs31*clhs698;
        const double clhs705 =             clhs34*clhs690;
        const double clhs706 =             DN(3,2)*clhs59;
        const double clhs707 =             clhs704 + clhs705 + clhs706;
        const double clhs708 =             clhs707*tau1;
        const double clhs709 =             DN(3,0)*clhs68;
        const double clhs710 =             DN(3,1)*clhs69;
        const double clhs711 =             DN(3,2)*clhs70;
        const double clhs712 =             rho*tau1*(clhs709 + clhs710 + clhs711);
        const double clhs713 =             DN(3,1)*N[1]*rho;
        const double clhs714 =             clhs20*clhs713;
        const double clhs715 =             DN(3,2)*N[1]*rho;
        const double clhs716 =             clhs23*clhs715;
        const double clhs717 =             DN(3,0)*clhs84;
        const double clhs718 =             clhs714 + clhs716 + clhs717;
        const double clhs719 =             clhs696*clhs91;
        const double clhs720 =             DN(3,0)*N[1]*rho;
        const double clhs721 =             clhs30*clhs720;
        const double clhs722 =             clhs36*clhs715;
        const double clhs723 =             DN(3,1)*clhs101;
        const double clhs724 =             clhs721 + clhs722 + clhs723;
        const double clhs725 =             clhs724*tau1;
        const double clhs726 =             clhs31*clhs720;
        const double clhs727 =             clhs34*clhs713;
        const double clhs728 =             DN(3,2)*clhs112;
        const double clhs729 =             clhs726 + clhs727 + clhs728;
        const double clhs730 =             clhs729*tau1;
        const double clhs731 =             DN(3,0)*clhs118;
        const double clhs732 =             DN(3,1)*clhs119;
        const double clhs733 =             DN(3,2)*clhs120;
        const double clhs734 =             rho*tau1*(clhs731 + clhs732 + clhs733);
        const double clhs735 =             DN(3,1)*N[2]*rho;
        const double clhs736 =             clhs20*clhs735;
        const double clhs737 =             DN(3,2)*N[2]*rho;
        const double clhs738 =             clhs23*clhs737;
        const double clhs739 =             DN(3,0)*clhs134;
        const double clhs740 =             clhs736 + clhs738 + clhs739;
        const double clhs741 =             clhs141*clhs696;
        const double clhs742 =             DN(3,0)*N[2]*rho;
        const double clhs743 =             clhs30*clhs742;
        const double clhs744 =             clhs36*clhs737;
        const double clhs745 =             DN(3,1)*clhs151;
        const double clhs746 =             clhs743 + clhs744 + clhs745;
        const double clhs747 =             clhs746*tau1;
        const double clhs748 =             clhs31*clhs742;
        const double clhs749 =             clhs34*clhs735;
        const double clhs750 =             DN(3,2)*clhs162;
        const double clhs751 =             clhs748 + clhs749 + clhs750;
        const double clhs752 =             clhs751*tau1;
        const double clhs753 =             DN(3,0)*clhs168;
        const double clhs754 =             DN(3,1)*clhs169;
        const double clhs755 =             DN(3,2)*clhs170;
        const double clhs756 =             rho*tau1*(clhs753 + clhs754 + clhs755);
        const double clhs757 =             pow(DN(3,0), 2)*rho;
        const double clhs758 =             DN(3,1)*N[3]*rho;
        const double clhs759 =             clhs20*clhs758;
        const double clhs760 =             DN(3,2)*N[3]*rho;
        const double clhs761 =             clhs23*clhs760;
        const double clhs762 =             DN(3,0)*clhs184;
        const double clhs763 =             clhs759 + clhs761 + clhs762;
        const double clhs764 =             pow(N[3], 2);
        const double clhs765 =             clhs14*clhs764 + clhs191*clhs696 + clhs28*clhs764;
        const double clhs766 =             DN(3,0)*DN(3,1);
        const double clhs767 =             -clhs766*tau2 + clhs766;
        const double clhs768 =             clhs30*clhs764;
        const double clhs769 =             DN(3,0)*N[3]*rho;
        const double clhs770 =             clhs30*clhs769;
        const double clhs771 =             clhs36*clhs760;
        const double clhs772 =             DN(3,1)*clhs201;
        const double clhs773 =             clhs770 + clhs771 + clhs772;
        const double clhs774 =             clhs773*tau1;
        const double clhs775 =             DN(3,0)*DN(3,2);
        const double clhs776 =             -clhs775*tau2 + clhs775;
        const double clhs777 =             clhs31*clhs764;
        const double clhs778 =             clhs31*clhs769;
        const double clhs779 =             clhs34*clhs758;
        const double clhs780 =             DN(3,2)*clhs212;
        const double clhs781 =             clhs778 + clhs779 + clhs780;
        const double clhs782 =             clhs781*tau1;
        const double clhs783 =             DN(3,0)*N[3];
        const double clhs784 =             clhs65*clhs764;
        const double clhs785 =             DN(3,0)*clhs218;
        const double clhs786 =             DN(3,1)*clhs219;
        const double clhs787 =             DN(3,2)*clhs220;
        const double clhs788 =             rho*tau1*(clhs785 + clhs786 + clhs787);
        const double clhs789 =             bdf0*clhs11*clhs764*tau1;
        const double clhs790 =             clhs695*tau1;
        const double clhs791 =             clhs718*tau1;
        const double clhs792 =             clhs740*tau1;
        const double clhs793 =             clhs20*clhs764;
        const double clhs794 =             clhs763*tau1;
        const double clhs795 =             pow(DN(3,1), 2)*rho;
        const double clhs796 =             DN(3,1)*DN(3,2);
        const double clhs797 =             -clhs796*tau2 + clhs796;
        const double clhs798 =             clhs34*clhs764;
        const double clhs799 =             DN(3,1)*N[3];
        const double clhs800 =             clhs23*clhs764;
        const double clhs801 =             clhs36*clhs764;
        const double clhs802 =             pow(DN(3,2), 2)*rho;
        const double clhs803 =             DN(3,2)*N[3];

        lhs(0,0)=-clhs0*tau2 + clhs0 + clhs1*clhs10 - clhs13*clhs17 + clhs18*clhs26 + clhs40;
        lhs(0,1)=rho*(clhs4*clhs52 + clhs42 - clhs43*clhs44 + clhs43);
        lhs(0,2)=rho*(clhs4*clhs62 - clhs44*clhs55 + clhs54 + clhs55);
        lhs(0,3)=-clhs13*clhs68 + clhs3*clhs66 - clhs32*clhs72 + clhs4*clhs71 - clhs63*clhs64 - clhs63;
        lhs(0,4)=clhs1*clhs81 - clhs13*clhs84 + clhs18*clhs90 + clhs79 + clhs92;
        lhs(0,5)=rho*(clhs104*clhs4 + clhs93 + clhs94 + clhs95 + clhs96);
        lhs(0,6)=rho*(clhs105 + clhs106 + clhs107 + clhs108 + clhs115*clhs4);
        lhs(0,7)=-clhs116*clhs64 - clhs116 - clhs118*clhs13 + clhs121*clhs4 + clhs124;
        lhs(0,8)=clhs1*clhs131 + clhs129 - clhs13*clhs134 + clhs140*clhs18 + clhs142;
        lhs(0,9)=rho*(clhs143 + clhs144 + clhs145 + clhs146 + clhs154*clhs4);
        lhs(0,10)=rho*(clhs155 + clhs156 + clhs157 + clhs158 + clhs165*clhs4);
        lhs(0,11)=-clhs13*clhs168 - clhs166*clhs64 - clhs166 + clhs171*clhs4 + clhs174;
        lhs(0,12)=clhs1*clhs181 - clhs13*clhs184 + clhs179 + clhs18*clhs190 + clhs192;
        lhs(0,13)=rho*(clhs193 + clhs194 + clhs195 + clhs196 + clhs204*clhs4);
        lhs(0,14)=rho*(clhs205 + clhs206 + clhs207 + clhs208 + clhs215*clhs4);
        lhs(0,15)=-clhs13*clhs218 - clhs216*clhs64 - clhs216 + clhs221*clhs4 + clhs224;
        lhs(1,0)=rho*(-clhs225*clhs44 + clhs225 + clhs226*clhs6 + clhs42);
        lhs(1,1)=clhs1*clhs48 - clhs13*clhs49 - clhs227*tau2 + clhs227 + clhs228*clhs51 + clhs40;
        lhs(1,2)=rho*(clhs230 - clhs231*clhs44 + clhs231 + clhs6*clhs62);
        lhs(1,3)=-clhs13*clhs69 - clhs232*clhs64 - clhs232 - clhs35*clhs72 + clhs5*clhs66 + clhs6*clhs71;
        lhs(1,4)=rho*(clhs234 + clhs235 + clhs236 + clhs237*clhs6);
        lhs(1,5)=clhs1*clhs100 - clhs101*clhs13 + clhs103*clhs228 + clhs240 + clhs92;
        lhs(1,6)=rho*(clhs115*clhs6 + clhs241 + clhs242 + clhs243 + clhs244);
        lhs(1,7)=-clhs119*clhs13 + clhs121*clhs6 - clhs245*clhs64 - clhs245 + clhs246;
        lhs(1,8)=rho*(clhs248 + clhs249 + clhs250 + clhs251*clhs6);
        lhs(1,9)=clhs1*clhs150 - clhs13*clhs151 + clhs142 + clhs153*clhs228 + clhs253;
        lhs(1,10)=rho*(clhs165*clhs6 + clhs254 + clhs255 + clhs256 + clhs257);
        lhs(1,11)=-clhs13*clhs169 + clhs171*clhs6 - clhs258*clhs64 - clhs258 + clhs259;
        lhs(1,12)=rho*(clhs261 + clhs262 + clhs263 + clhs264*clhs6);
        lhs(1,13)=clhs1*clhs200 - clhs13*clhs201 + clhs192 + clhs203*clhs228 + clhs266;
        lhs(1,14)=rho*(clhs215*clhs6 + clhs267 + clhs268 + clhs269 + clhs270);
        lhs(1,15)=-clhs13*clhs219 + clhs221*clhs6 - clhs271*clhs64 - clhs271 + clhs272;
        lhs(2,0)=rho*(clhs226*clhs8 - clhs273*clhs44 + clhs273 + clhs54);
        lhs(2,1)=rho*(clhs230 - clhs274*clhs44 + clhs274 + clhs52*clhs8);
        lhs(2,2)=clhs1*clhs58 - clhs13*clhs59 - clhs275*tau2 + clhs275 + clhs276*clhs61 + clhs40;
        lhs(2,3)=-clhs13*clhs70 - clhs277*clhs64 - clhs277 - clhs38*clhs72 + clhs66*clhs7 + clhs71*clhs8;
        lhs(2,4)=rho*(clhs237*clhs8 + clhs279 + clhs280 + clhs281);
        lhs(2,5)=rho*(clhs104*clhs8 + clhs283 + clhs284 + clhs285);
        lhs(2,6)=clhs1*clhs111 - clhs112*clhs13 + clhs114*clhs276 + clhs288 + clhs92;
        lhs(2,7)=-clhs120*clhs13 + clhs121*clhs8 - clhs289*clhs64 - clhs289 + clhs290;
        lhs(2,8)=rho*(clhs251*clhs8 + clhs292 + clhs293 + clhs294);
        lhs(2,9)=rho*(clhs154*clhs8 + clhs296 + clhs297 + clhs298);
        lhs(2,10)=clhs1*clhs161 - clhs13*clhs162 + clhs142 + clhs164*clhs276 + clhs300;
        lhs(2,11)=-clhs13*clhs170 + clhs171*clhs8 - clhs301*clhs64 - clhs301 + clhs302;
        lhs(2,12)=rho*(clhs264*clhs8 + clhs304 + clhs305 + clhs306);
        lhs(2,13)=rho*(clhs204*clhs8 + clhs308 + clhs309 + clhs310);
        lhs(2,14)=clhs1*clhs211 - clhs13*clhs212 + clhs192 + clhs214*clhs276 + clhs312;
        lhs(2,15)=-clhs13*clhs220 + clhs221*clhs8 - clhs313*clhs64 - clhs313 + clhs314;
        lhs(3,0)=rho*(clhs21*tau1 + clhs24*tau1 + clhs25*tau1 + 2*clhs63);
        lhs(3,1)=rho*(2*clhs232 + clhs46*tau1 + clhs47*tau1 + clhs50*tau1);
        lhs(3,2)=rho*(2*clhs277 + clhs56*tau1 + clhs57*tau1 + clhs60*tau1);
        lhs(3,3)=clhs315*clhs68 + clhs316*clhs69 + clhs317*clhs70 + clhs66;
        lhs(3,4)=rho*(2*clhs318 + clhs86*tau1 + clhs88*tau1 + clhs89*tau1);
        lhs(3,5)=rho*(clhs102*tau1 + 2*clhs319 + clhs98*tau1 + clhs99*tau1);
        lhs(3,6)=rho*(clhs109*tau1 + clhs110*tau1 + clhs113*tau1 + 2*clhs320);
        lhs(3,7)=clhs118*clhs315 + clhs119*clhs316 + clhs120*clhs317 + clhs122;
        lhs(3,8)=rho*(clhs136*tau1 + clhs138*tau1 + clhs139*tau1 + 2*clhs321);
        lhs(3,9)=rho*(clhs148*tau1 + clhs149*tau1 + clhs152*tau1 + 2*clhs322);
        lhs(3,10)=rho*(clhs159*tau1 + clhs160*tau1 + clhs163*tau1 + 2*clhs323);
        lhs(3,11)=clhs168*clhs315 + clhs169*clhs316 + clhs170*clhs317 + clhs172;
        lhs(3,12)=rho*(clhs186*tau1 + clhs188*tau1 + clhs189*tau1 + 2*clhs324);
        lhs(3,13)=rho*(clhs198*tau1 + clhs199*tau1 + clhs202*tau1 + 2*clhs325);
        lhs(3,14)=rho*(clhs209*tau1 + clhs210*tau1 + clhs213*tau1 + 2*clhs326);
        lhs(3,15)=clhs218*clhs315 + clhs219*clhs316 + clhs220*clhs317 + clhs222;
        lhs(4,0)=clhs10*clhs327 - clhs17*clhs328 + clhs18*clhs334 + clhs336 + clhs79;
        lhs(4,1)=rho*(clhs234 + clhs342*clhs4 + clhs93 + clhs94);
        lhs(4,2)=rho*(clhs105 + clhs106 + clhs279 + clhs347*clhs4);
        lhs(4,3)=clhs124 - clhs318*clhs64 - clhs318 - clhs328*clhs68 + clhs348*clhs4;
        lhs(4,4)=clhs18*clhs355 + clhs327*clhs81 - clhs328*clhs84 - clhs349*tau2 + clhs349 + clhs357;
        lhs(4,5)=rho*(clhs359 - clhs360*clhs44 + clhs360 + clhs366*clhs4);
        lhs(4,6)=rho*(clhs368 - clhs369*clhs44 + clhs369 + clhs374*clhs4);
        lhs(4,7)=-clhs118*clhs328 + clhs3*clhs376 - clhs32*clhs378 - clhs375*clhs64 - clhs375 + clhs377*clhs4;
        lhs(4,8)=clhs131*clhs327 - clhs134*clhs328 + clhs18*clhs391 + clhs385 + clhs392;
        lhs(4,9)=rho*(clhs393 + clhs394 + clhs395 + clhs396 + clhs4*clhs402);
        lhs(4,10)=rho*(clhs4*clhs411 + clhs403 + clhs404 + clhs405 + clhs406);
        lhs(4,11)=-clhs168*clhs328 + clhs4*clhs413 - clhs412*clhs64 - clhs412 + clhs416;
        lhs(4,12)=clhs18*clhs427 + clhs181*clhs327 - clhs184*clhs328 + clhs421 + clhs428;
        lhs(4,13)=rho*(clhs4*clhs438 + clhs429 + clhs430 + clhs431 + clhs432);
        lhs(4,14)=rho*(clhs4*clhs447 + clhs439 + clhs440 + clhs441 + clhs442);
        lhs(4,15)=-clhs218*clhs328 + clhs4*clhs449 - clhs448*clhs64 - clhs448 + clhs452;
        lhs(5,0)=rho*(clhs235 + clhs236 + clhs453*clhs6 + clhs95 + clhs96);
        lhs(5,1)=clhs228*clhs341 + clhs240 + clhs327*clhs48 - clhs328*clhs49 + clhs336;
        lhs(5,2)=rho*(clhs241 + clhs242 + clhs283 + clhs347*clhs6);
        lhs(5,3)=clhs246 - clhs319*clhs64 - clhs319 - clhs328*clhs69 + clhs348*clhs6;
        lhs(5,4)=rho*(clhs359 - clhs44*clhs454 + clhs454 + clhs455*clhs6);
        lhs(5,5)=clhs100*clhs327 - clhs101*clhs328 + clhs228*clhs365 + clhs357 - clhs456*tau2 + clhs456;
        lhs(5,6)=rho*(clhs374*clhs6 - clhs44*clhs459 + clhs458 + clhs459);
        lhs(5,7)=-clhs119*clhs328 - clhs35*clhs378 + clhs376*clhs5 + clhs377*clhs6 - clhs460*clhs64 - clhs460;
        lhs(5,8)=rho*(clhs462 + clhs463 + clhs464 + clhs465*clhs6);
        lhs(5,9)=clhs150*clhs327 - clhs151*clhs328 + clhs228*clhs401 + clhs392 + clhs468;
        lhs(5,10)=rho*(clhs411*clhs6 + clhs469 + clhs470 + clhs471 + clhs472);
        lhs(5,11)=-clhs169*clhs328 + clhs413*clhs6 - clhs473*clhs64 - clhs473 + clhs474;
        lhs(5,12)=rho*(clhs476 + clhs477 + clhs478 + clhs479*clhs6);
        lhs(5,13)=clhs200*clhs327 - clhs201*clhs328 + clhs228*clhs437 + clhs428 + clhs481;
        lhs(5,14)=rho*(clhs447*clhs6 + clhs482 + clhs483 + clhs484 + clhs485);
        lhs(5,15)=-clhs219*clhs328 + clhs449*clhs6 - clhs486*clhs64 - clhs486 + clhs487;
        lhs(6,0)=rho*(clhs107 + clhs108 + clhs280 + clhs281 + clhs453*clhs8);
        lhs(6,1)=rho*(clhs243 + clhs244 + clhs284 + clhs285 + clhs342*clhs8);
        lhs(6,2)=clhs276*clhs346 + clhs288 + clhs327*clhs58 - clhs328*clhs59 + clhs336;
        lhs(6,3)=clhs290 - clhs320*clhs64 - clhs320 - clhs328*clhs70 + clhs348*clhs8;
        lhs(6,4)=rho*(clhs368 - clhs44*clhs488 + clhs455*clhs8 + clhs488);
        lhs(6,5)=rho*(clhs366*clhs8 - clhs44*clhs489 + clhs458 + clhs489);
        lhs(6,6)=clhs111*clhs327 - clhs112*clhs328 + clhs276*clhs373 + clhs357 - clhs490*tau2 + clhs490;
        lhs(6,7)=-clhs120*clhs328 + clhs376*clhs7 + clhs377*clhs8 - clhs378*clhs38 - clhs491*clhs64 - clhs491;
        lhs(6,8)=rho*(clhs465*clhs8 + clhs493 + clhs494 + clhs495);
        lhs(6,9)=rho*(clhs402*clhs8 + clhs497 + clhs498 + clhs499);
        lhs(6,10)=clhs161*clhs327 - clhs162*clhs328 + clhs276*clhs410 + clhs392 + clhs502;
        lhs(6,11)=-clhs170*clhs328 + clhs413*clhs8 - clhs503*clhs64 - clhs503 + clhs504;
        lhs(6,12)=rho*(clhs479*clhs8 + clhs506 + clhs507 + clhs508);
        lhs(6,13)=rho*(clhs438*clhs8 + clhs510 + clhs511 + clhs512);
        lhs(6,14)=clhs211*clhs327 - clhs212*clhs328 + clhs276*clhs446 + clhs428 + clhs514;
        lhs(6,15)=-clhs220*clhs328 + clhs449*clhs8 - clhs515*clhs64 - clhs515 + clhs516;
        lhs(7,0)=rho*(2*clhs116 + clhs330*tau1 + clhs332*tau1 + clhs333*tau1);
        lhs(7,1)=rho*(2*clhs245 + clhs338*tau1 + clhs339*tau1 + clhs340*tau1);
        lhs(7,2)=rho*(2*clhs289 + clhs343*tau1 + clhs344*tau1 + clhs345*tau1);
        lhs(7,3)=clhs122 + clhs517*clhs68 + clhs518*clhs69 + clhs519*clhs70;
        lhs(7,4)=rho*(clhs351*tau1 + clhs353*tau1 + clhs354*tau1 + 2*clhs375);
        lhs(7,5)=rho*(clhs362*tau1 + clhs363*tau1 + clhs364*tau1 + 2*clhs460);
        lhs(7,6)=rho*(clhs370*tau1 + clhs371*tau1 + clhs372*tau1 + 2*clhs491);
        lhs(7,7)=clhs118*clhs517 + clhs119*clhs518 + clhs120*clhs519 + clhs376;
        lhs(7,8)=rho*(clhs387*tau1 + clhs389*tau1 + clhs390*tau1 + 2*clhs520);
        lhs(7,9)=rho*(clhs398*tau1 + clhs399*tau1 + clhs400*tau1 + 2*clhs521);
        lhs(7,10)=rho*(clhs407*tau1 + clhs408*tau1 + clhs409*tau1 + 2*clhs522);
        lhs(7,11)=clhs168*clhs517 + clhs169*clhs518 + clhs170*clhs519 + clhs414;
        lhs(7,12)=rho*(clhs423*tau1 + clhs425*tau1 + clhs426*tau1 + 2*clhs523);
        lhs(7,13)=rho*(clhs434*tau1 + clhs435*tau1 + clhs436*tau1 + 2*clhs524);
        lhs(7,14)=rho*(clhs443*tau1 + clhs444*tau1 + clhs445*tau1 + 2*clhs525);
        lhs(7,15)=clhs218*clhs517 + clhs219*clhs518 + clhs220*clhs519 + clhs450;
        lhs(8,0)=clhs10*clhs526 + clhs129 - clhs17*clhs527 + clhs18*clhs533 + clhs535;
        lhs(8,1)=rho*(clhs143 + clhs144 + clhs248 + clhs4*clhs541);
        lhs(8,2)=rho*(clhs155 + clhs156 + clhs292 + clhs4*clhs546);
        lhs(8,3)=clhs174 - clhs321*clhs64 - clhs321 + clhs4*clhs550 - clhs527*clhs68;
        lhs(8,4)=clhs18*clhs556 + clhs385 + clhs526*clhs81 - clhs527*clhs84 + clhs557;
        lhs(8,5)=rho*(clhs393 + clhs394 + clhs4*clhs563 + clhs462);
        lhs(8,6)=rho*(clhs4*clhs568 + clhs403 + clhs404 + clhs493);
        lhs(8,7)=-clhs118*clhs527 + clhs4*clhs572 + clhs416 - clhs520*clhs64 - clhs520;
        lhs(8,8)=clhs131*clhs526 - clhs134*clhs527 + clhs18*clhs579 - clhs573*tau2 + clhs573 + clhs581;
        lhs(8,9)=rho*(clhs4*clhs590 - clhs44*clhs584 + clhs583 + clhs584);
        lhs(8,10)=rho*(clhs4*clhs598 - clhs44*clhs593 + clhs592 + clhs593);
        lhs(8,11)=-clhs168*clhs527 + clhs3*clhs600 - clhs32*clhs605 + clhs4*clhs604 - clhs599*clhs64 - clhs599;
        lhs(8,12)=clhs18*clhs617 + clhs181*clhs526 - clhs184*clhs527 + clhs611 + clhs618;
        lhs(8,13)=rho*(clhs4*clhs628 + clhs619 + clhs620 + clhs621 + clhs622);
        lhs(8,14)=rho*(clhs4*clhs637 + clhs629 + clhs630 + clhs631 + clhs632);
        lhs(8,15)=-clhs218*clhs527 + clhs4*clhs642 - clhs638*clhs64 - clhs638 + clhs645;
        lhs(9,0)=rho*(clhs145 + clhs146 + clhs249 + clhs250 + clhs6*clhs646);
        lhs(9,1)=clhs228*clhs540 + clhs253 + clhs48*clhs526 - clhs49*clhs527 + clhs535;
        lhs(9,2)=rho*(clhs254 + clhs255 + clhs296 + clhs546*clhs6);
        lhs(9,3)=clhs259 - clhs322*clhs64 - clhs322 - clhs527*clhs69 + clhs550*clhs6;
        lhs(9,4)=rho*(clhs395 + clhs396 + clhs463 + clhs464 + clhs6*clhs647);
        lhs(9,5)=clhs100*clhs526 - clhs101*clhs527 + clhs228*clhs562 + clhs468 + clhs557;
        lhs(9,6)=rho*(clhs469 + clhs470 + clhs497 + clhs568*clhs6);
        lhs(9,7)=-clhs119*clhs527 + clhs474 - clhs521*clhs64 - clhs521 + clhs572*clhs6;
        lhs(9,8)=rho*(-clhs44*clhs648 + clhs583 + clhs6*clhs649 + clhs648);
        lhs(9,9)=clhs150*clhs526 - clhs151*clhs527 + clhs228*clhs589 + clhs581 - clhs650*tau2 + clhs650;
        lhs(9,10)=rho*(-clhs44*clhs653 + clhs598*clhs6 + clhs652 + clhs653);
        lhs(9,11)=-clhs169*clhs527 - clhs35*clhs605 + clhs5*clhs600 + clhs6*clhs604 - clhs64*clhs654 - clhs654;
        lhs(9,12)=rho*(clhs6*clhs659 + clhs656 + clhs657 + clhs658);
        lhs(9,13)=clhs200*clhs526 - clhs201*clhs527 + clhs228*clhs627 + clhs618 + clhs661;
        lhs(9,14)=rho*(clhs6*clhs637 + clhs662 + clhs663 + clhs664 + clhs665);
        lhs(9,15)=-clhs219*clhs527 + clhs6*clhs642 - clhs64*clhs666 - clhs666 + clhs667;
        lhs(10,0)=rho*(clhs157 + clhs158 + clhs293 + clhs294 + clhs646*clhs8);
        lhs(10,1)=rho*(clhs256 + clhs257 + clhs297 + clhs298 + clhs541*clhs8);
        lhs(10,2)=clhs276*clhs545 + clhs300 + clhs526*clhs58 - clhs527*clhs59 + clhs535;
        lhs(10,3)=clhs302 - clhs323*clhs64 - clhs323 - clhs527*clhs70 + clhs550*clhs8;
        lhs(10,4)=rho*(clhs405 + clhs406 + clhs494 + clhs495 + clhs647*clhs8);
        lhs(10,5)=rho*(clhs471 + clhs472 + clhs498 + clhs499 + clhs563*clhs8);
        lhs(10,6)=clhs111*clhs526 - clhs112*clhs527 + clhs276*clhs567 + clhs502 + clhs557;
        lhs(10,7)=-clhs120*clhs527 + clhs504 - clhs522*clhs64 - clhs522 + clhs572*clhs8;
        lhs(10,8)=rho*(-clhs44*clhs668 + clhs592 + clhs649*clhs8 + clhs668);
        lhs(10,9)=rho*(-clhs44*clhs669 + clhs590*clhs8 + clhs652 + clhs669);
        lhs(10,10)=clhs161*clhs526 - clhs162*clhs527 + clhs276*clhs597 + clhs581 - clhs670*tau2 + clhs670;
        lhs(10,11)=-clhs170*clhs527 - clhs38*clhs605 + clhs600*clhs7 + clhs604*clhs8 - clhs64*clhs671 - clhs671;
        lhs(10,12)=rho*(clhs659*clhs8 + clhs673 + clhs674 + clhs675);
        lhs(10,13)=rho*(clhs628*clhs8 + clhs677 + clhs678 + clhs679);
        lhs(10,14)=clhs211*clhs526 - clhs212*clhs527 + clhs276*clhs636 + clhs618 + clhs681;
        lhs(10,15)=-clhs220*clhs527 - clhs64*clhs682 + clhs642*clhs8 - clhs682 + clhs683;
        lhs(11,0)=rho*(2*clhs166 + clhs529*tau1 + clhs531*tau1 + clhs532*tau1);
        lhs(11,1)=rho*(2*clhs258 + clhs537*tau1 + clhs538*tau1 + clhs539*tau1);
        lhs(11,2)=rho*(2*clhs301 + clhs542*tau1 + clhs543*tau1 + clhs544*tau1);
        lhs(11,3)=clhs172 + clhs547*clhs684 + clhs548*clhs684 + clhs549*clhs684;
        lhs(11,4)=rho*(2*clhs412 + clhs552*tau1 + clhs554*tau1 + clhs555*tau1);
        lhs(11,5)=rho*(2*clhs473 + clhs559*tau1 + clhs560*tau1 + clhs561*tau1);
        lhs(11,6)=rho*(2*clhs503 + clhs564*tau1 + clhs565*tau1 + clhs566*tau1);
        lhs(11,7)=clhs414 + clhs569*clhs684 + clhs570*clhs684 + clhs571*clhs684;
        lhs(11,8)=rho*(clhs575*tau1 + clhs577*tau1 + clhs578*tau1 + 2*clhs599);
        lhs(11,9)=rho*(clhs586*tau1 + clhs587*tau1 + clhs588*tau1 + 2*clhs654);
        lhs(11,10)=rho*(clhs594*tau1 + clhs595*tau1 + clhs596*tau1 + 2*clhs671);
        lhs(11,11)=clhs600 + clhs601*clhs684 + clhs602*clhs684 + clhs603*clhs684;
        lhs(11,12)=rho*(clhs613*tau1 + clhs615*tau1 + clhs616*tau1 + 2*clhs685);
        lhs(11,13)=rho*(clhs624*tau1 + clhs625*tau1 + clhs626*tau1 + 2*clhs686);
        lhs(11,14)=rho*(clhs633*tau1 + clhs634*tau1 + clhs635*tau1 + 2*clhs687);
        lhs(11,15)=clhs639*clhs684 + clhs640*clhs684 + clhs641*clhs684 + clhs643;
        lhs(12,0)=clhs10*clhs688 - clhs17*clhs689 + clhs179 + clhs18*clhs695 + clhs697;
        lhs(12,1)=rho*(clhs193 + clhs194 + clhs261 + clhs4*clhs703);
        lhs(12,2)=rho*(clhs205 + clhs206 + clhs304 + clhs4*clhs708);
        lhs(12,3)=clhs224 - clhs324*clhs64 - clhs324 + clhs4*clhs712 - clhs68*clhs689;
        lhs(12,4)=clhs18*clhs718 + clhs421 + clhs688*clhs81 - clhs689*clhs84 + clhs719;
        lhs(12,5)=rho*(clhs4*clhs725 + clhs429 + clhs430 + clhs476);
        lhs(12,6)=rho*(clhs4*clhs730 + clhs439 + clhs440 + clhs506);
        lhs(12,7)=-clhs118*clhs689 + clhs4*clhs734 + clhs452 - clhs523*clhs64 - clhs523;
        lhs(12,8)=clhs131*clhs688 - clhs134*clhs689 + clhs18*clhs740 + clhs611 + clhs741;
        lhs(12,9)=rho*(clhs4*clhs747 + clhs619 + clhs620 + clhs656);
        lhs(12,10)=rho*(clhs4*clhs752 + clhs629 + clhs630 + clhs673);
        lhs(12,11)=-clhs168*clhs689 + clhs4*clhs756 - clhs64*clhs685 + clhs645 - clhs685;
        lhs(12,12)=clhs18*clhs763 + clhs181*clhs688 - clhs184*clhs689 - clhs757*tau2 + clhs757 + clhs765;
        lhs(12,13)=rho*(clhs4*clhs774 - clhs44*clhs768 + clhs767 + clhs768);
        lhs(12,14)=rho*(clhs4*clhs782 - clhs44*clhs777 + clhs776 + clhs777);
        lhs(12,15)=-clhs218*clhs689 + clhs3*clhs784 - clhs32*clhs789 + clhs4*clhs788 - clhs64*clhs783 - clhs783;
        lhs(13,0)=rho*(clhs195 + clhs196 + clhs262 + clhs263 + clhs6*clhs790);
        lhs(13,1)=clhs228*clhs702 + clhs266 + clhs48*clhs688 - clhs49*clhs689 + clhs697;
        lhs(13,2)=rho*(clhs267 + clhs268 + clhs308 + clhs6*clhs708);
        lhs(13,3)=clhs272 - clhs325*clhs64 - clhs325 + clhs6*clhs712 - clhs689*clhs69;
        lhs(13,4)=rho*(clhs431 + clhs432 + clhs477 + clhs478 + clhs6*clhs791);
        lhs(13,5)=clhs100*clhs688 - clhs101*clhs689 + clhs228*clhs724 + clhs481 + clhs719;
        lhs(13,6)=rho*(clhs482 + clhs483 + clhs510 + clhs6*clhs730);
        lhs(13,7)=-clhs119*clhs689 + clhs487 - clhs524*clhs64 - clhs524 + clhs6*clhs734;
        lhs(13,8)=rho*(clhs6*clhs792 + clhs621 + clhs622 + clhs657 + clhs658);
        lhs(13,9)=clhs150*clhs688 - clhs151*clhs689 + clhs228*clhs746 + clhs661 + clhs741;
        lhs(13,10)=rho*(clhs6*clhs752 + clhs662 + clhs663 + clhs677);
        lhs(13,11)=-clhs169*clhs689 + clhs6*clhs756 - clhs64*clhs686 + clhs667 - clhs686;
        lhs(13,12)=rho*(-clhs44*clhs793 + clhs6*clhs794 + clhs767 + clhs793);
        lhs(13,13)=clhs200*clhs688 - clhs201*clhs689 + clhs228*clhs773 + clhs765 - clhs795*tau2 + clhs795;
        lhs(13,14)=rho*(-clhs44*clhs798 + clhs6*clhs782 + clhs797 + clhs798);
        lhs(13,15)=-clhs219*clhs689 - clhs35*clhs789 + clhs5*clhs784 + clhs6*clhs788 - clhs64*clhs799 - clhs799;
        lhs(14,0)=rho*(clhs207 + clhs208 + clhs305 + clhs306 + clhs790*clhs8);
        lhs(14,1)=rho*(clhs269 + clhs270 + clhs309 + clhs310 + clhs703*clhs8);
        lhs(14,2)=clhs276*clhs707 + clhs312 + clhs58*clhs688 - clhs59*clhs689 + clhs697;
        lhs(14,3)=clhs314 - clhs326*clhs64 - clhs326 - clhs689*clhs70 + clhs712*clhs8;
        lhs(14,4)=rho*(clhs441 + clhs442 + clhs507 + clhs508 + clhs791*clhs8);
        lhs(14,5)=rho*(clhs484 + clhs485 + clhs511 + clhs512 + clhs725*clhs8);
        lhs(14,6)=clhs111*clhs688 - clhs112*clhs689 + clhs276*clhs729 + clhs514 + clhs719;
        lhs(14,7)=-clhs120*clhs689 + clhs516 - clhs525*clhs64 - clhs525 + clhs734*clhs8;
        lhs(14,8)=rho*(clhs631 + clhs632 + clhs674 + clhs675 + clhs792*clhs8);
        lhs(14,9)=rho*(clhs664 + clhs665 + clhs678 + clhs679 + clhs747*clhs8);
        lhs(14,10)=clhs161*clhs688 - clhs162*clhs689 + clhs276*clhs751 + clhs681 + clhs741;
        lhs(14,11)=-clhs170*clhs689 - clhs64*clhs687 + clhs683 - clhs687 + clhs756*clhs8;
        lhs(14,12)=rho*(-clhs44*clhs800 + clhs776 + clhs794*clhs8 + clhs800);
        lhs(14,13)=rho*(-clhs44*clhs801 + clhs774*clhs8 + clhs797 + clhs801);
        lhs(14,14)=clhs211*clhs688 - clhs212*clhs689 + clhs276*clhs781 + clhs765 - clhs802*tau2 + clhs802;
        lhs(14,15)=-clhs220*clhs689 - clhs38*clhs789 - clhs64*clhs803 + clhs7*clhs784 + clhs788*clhs8 - clhs803;
        lhs(15,0)=rho*(2*clhs216 + clhs691*tau1 + clhs693*tau1 + clhs694*tau1);
        lhs(15,1)=rho*(2*clhs271 + clhs699*tau1 + clhs700*tau1 + clhs701*tau1);
        lhs(15,2)=rho*(2*clhs313 + clhs704*tau1 + clhs705*tau1 + clhs706*tau1);
        lhs(15,3)=clhs222 + clhs684*clhs709 + clhs684*clhs710 + clhs684*clhs711;
        lhs(15,4)=rho*(2*clhs448 + clhs714*tau1 + clhs716*tau1 + clhs717*tau1);
        lhs(15,5)=rho*(2*clhs486 + clhs721*tau1 + clhs722*tau1 + clhs723*tau1);
        lhs(15,6)=rho*(2*clhs515 + clhs726*tau1 + clhs727*tau1 + clhs728*tau1);
        lhs(15,7)=clhs450 + clhs684*clhs731 + clhs684*clhs732 + clhs684*clhs733;
        lhs(15,8)=rho*(2*clhs638 + clhs736*tau1 + clhs738*tau1 + clhs739*tau1);
        lhs(15,9)=rho*(2*clhs666 + clhs743*tau1 + clhs744*tau1 + clhs745*tau1);
        lhs(15,10)=rho*(2*clhs682 + clhs748*tau1 + clhs749*tau1 + clhs750*tau1);
        lhs(15,11)=clhs643 + clhs684*clhs753 + clhs684*clhs754 + clhs684*clhs755;
        lhs(15,12)=rho*(clhs759*tau1 + clhs761*tau1 + clhs762*tau1 + 2*clhs783);
        lhs(15,13)=rho*(clhs770*tau1 + clhs771*tau1 + clhs772*tau1 + 2*clhs799);
        lhs(15,14)=rho*(clhs778*tau1 + clhs779*tau1 + clhs780*tau1 + 2*clhs803);
        lhs(15,15)=clhs684*clhs785 + clhs684*clhs786 + clhs684*clhs787 + clhs784;

    }


template<>
void NavierStokes<2>::ComputeGaussPointLHSContribution(bounded_matrix<double,9,9>& lhs, const element_data& data)
    {
        const int nnodes = 3;
        const int dim = 2;
        //~ const int strain_size = 3;

        const double rho = inner_prod(data.N, data.rho);        // Density
        const double mu = inner_prod(data.N, data.mu);          // Dynamic viscosity
        const double h = data.h;                                // Characteristic element size
        const double c = data.c;                                // Wave velocity

        const double& bdf0 = data.bdf0;
        const double& bdf1 = data.bdf1;
        const double& bdf2 = data.bdf2;
        const double& delta_t = data.delta_t;
        const double& dyn_tau_coeff = data.dyn_tau_coeff;

        const bounded_matrix<double,nnodes,dim>& v = data.v;
        const bounded_matrix<double,nnodes,dim>& vn = data.vn;
        const bounded_matrix<double,nnodes,dim>& vnn = data.vnn;
        const bounded_matrix<double,nnodes,dim>& vmesh = data.vmesh;
        const bounded_matrix<double,nnodes,dim>& vconv = v - vmesh;
        const bounded_matrix<double,nnodes,dim>& f = data.f;
        const array_1d<double,nnodes>& p = data.p;
        const array_1d<double,nnodes>& pn = data.pn;
        const array_1d<double,nnodes>& pnn = data.pnn;
        //~ const array_1d<double,strain_size>& stress = data.stress;

        // Get constitutive matrix
        //~ const Matrix& C = data.C;

        // Get shape function values
        const array_1d<double,nnodes>& N = data.N;
        const bounded_matrix<double,nnodes,dim>& DN = data.DN_DX;

        const array_1d<double,dim> vconv_gauss = prod(trans(vconv), N);

        const double vconv_norm = norm_2(vconv_gauss);

        // Stabilization parameters
        const double tau1 = 1.0/((rho*dyn_tau_coeff)/delta_t + (2*rho*vconv_norm)/h + (4*mu)/(h*h));
        const double tau2 = mu + 0.5*h*vconv_norm;

        const double clhs0 =             pow(DN(0,0), 2)*rho;
        const double clhs1 =             N[0]*rho;
        const double clhs2 =             DN(0,0)*v(0,0) + DN(1,0)*v(1,0) + DN(2,0)*v(2,0);
        const double clhs3 =             N[0]*v(0,0) + N[1]*v(1,0) + N[2]*v(2,0);
        const double clhs4 =             -N[0]*vmesh(0,0) - N[1]*vmesh(1,0) - N[2]*vmesh(2,0) + clhs3;
        const double clhs5 =             N[0]*v(0,1) + N[1]*v(1,1) + N[2]*v(2,1);
        const double clhs6 =             -N[0]*vmesh(0,1) - N[1]*vmesh(1,1) - N[2]*vmesh(2,1) + clhs5;
        const double clhs7 =             DN(0,0)*clhs4 + DN(0,1)*clhs6;
        const double clhs8 =             N[0]*clhs2 + clhs7;
        const double clhs9 =             clhs4*rho*tau1;
        const double clhs10 =             DN(0,1)*N[0];
        const double clhs11 =             DN(0,0)*v(0,1) + DN(1,0)*v(1,1) + DN(2,0)*v(2,1);
        const double clhs12 =             clhs11*rho;
        const double clhs13 =             clhs10*clhs12;
        const double clhs14 =             pow(c, -2);
        const double clhs15 =             N[0]*(bdf0*p[0] + bdf1*pn[0] + bdf2*pnn[0]) + N[1]*(bdf0*p[1] + bdf1*pn[1] + bdf2*pnn[1]) + N[2]*(bdf0*p[2] + bdf1*pn[2] + bdf2*pnn[2]);
        const double clhs16 =             clhs14*clhs15;
        const double clhs17 =             N[0]*clhs16;
        const double clhs18 =             N[0]*bdf0;
        const double clhs19 =             clhs17 + rho*(clhs18 + clhs8);
        const double clhs20 =             DN(0,0)*clhs19;
        const double clhs21 =             clhs13 + clhs20;
        const double clhs22 =             N[0]*clhs14*clhs15*tau1;
        const double clhs23 =             pow(N[0], 2);
        const double clhs24 =             bdf0*rho;
        const double clhs25 =             N[0]*rho*tau1;
        const double clhs26 =             DN(0,1)*v(0,0) + DN(1,1)*v(1,0) + DN(2,1)*v(2,0);
        const double clhs27 =             DN(0,0)*p[0] + DN(1,0)*p[1] + DN(2,0)*p[2] + clhs16*clhs3 - rho*(N[0]*f(0,0) + N[1]*f(1,0) + N[2]*f(2,0)) + rho*(N[0]*(bdf0*v(0,0) + bdf1*vn(0,0) + bdf2*vnn(0,0)) + N[1]*(bdf0*v(1,0) + bdf1*vn(1,0) + bdf2*vnn(1,0)) + N[2]*(bdf0*v(2,0) + bdf1*vn(2,0) + bdf2*vnn(2,0)) + clhs2*clhs4 + clhs26*clhs6);
        const double clhs28 =             DN(0,1)*v(0,1) + DN(1,1)*v(1,1) + DN(2,1)*v(2,1);
        const double clhs29 =             DN(0,1)*p[0] + DN(1,1)*p[1] + DN(2,1)*p[2] + clhs16*clhs5 - rho*(N[0]*f(0,1) + N[1]*f(1,1) + N[2]*f(2,1)) + rho*(N[0]*(bdf0*v(0,1) + bdf1*vn(0,1) + bdf2*vnn(0,1)) + N[1]*(bdf0*v(1,1) + bdf1*vn(1,1) + bdf2*vnn(1,1)) + N[2]*(bdf0*v(2,1) + bdf1*vn(2,1) + bdf2*vnn(2,1)) + clhs11*clhs4 + clhs28*clhs6);
        const double clhs30 =             DN(0,0)*clhs27 + DN(0,1)*clhs29;
        const double clhs31 =             clhs16*clhs23 + clhs23*clhs24 + clhs25*clhs30;
        const double clhs32 =             DN(0,0)*DN(0,1);
        const double clhs33 =             -clhs32*tau2 + clhs32;
        const double clhs34 =             clhs23*clhs26;
        const double clhs35 =             clhs14*clhs15*tau1;
        const double clhs36 =             clhs4*tau1;
        const double clhs37 =             DN(0,0)*N[0];
        const double clhs38 =             clhs26*rho;
        const double clhs39 =             clhs37*clhs38;
        const double clhs40 =             N[0]*clhs28 + clhs7;
        const double clhs41 =             clhs17 + rho*(clhs18 + clhs40);
        const double clhs42 =             DN(0,1)*clhs41;
        const double clhs43 =             clhs39 + clhs42;
        const double clhs44 =             bdf0*clhs14*tau2;
        const double clhs45 =             bdf0*clhs14;
        const double clhs46 =             clhs23*clhs45;
        const double clhs47 =             N[0]*bdf0*clhs14;
        const double clhs48 =             DN(0,0) + clhs3*clhs47;
        const double clhs49 =             DN(0,1) + clhs47*clhs5;
        const double clhs50 =             rho*tau1*(DN(0,0)*clhs48 + DN(0,1)*clhs49);
        const double clhs51 =             bdf0*clhs14*clhs23*tau1;
        const double clhs52 =             DN(0,0)*rho;
        const double clhs53 =             DN(1,0)*clhs52;
        const double clhs54 =             N[0]*bdf0*rho;
        const double clhs55 =             N[1]*clhs54;
        const double clhs56 =             N[0]*N[1];
        const double clhs57 =             clhs16*clhs56;
        const double clhs58 =             -clhs53*tau2 + clhs53 + clhs55 + clhs57;
        const double clhs59 =             DN(1,0)*clhs4 + DN(1,1)*clhs6;
        const double clhs60 =             N[1]*clhs2 + clhs59;
        const double clhs61 =             DN(0,1)*N[1];
        const double clhs62 =             clhs12*clhs61;
        const double clhs63 =             N[1]*clhs16;
        const double clhs64 =             N[1]*bdf0;
        const double clhs65 =             clhs63 + rho*(clhs60 + clhs64);
        const double clhs66 =             DN(0,0)*clhs65;
        const double clhs67 =             clhs62 + clhs66;
        const double clhs68 =             N[1]*rho*tau1;
        const double clhs69 =             clhs30*clhs68;
        const double clhs70 =             clhs26*clhs56;
        const double clhs71 =             -clhs35*clhs70;
        const double clhs72 =             DN(0,0)*DN(1,1);
        const double clhs73 =             -clhs72*tau2;
        const double clhs74 =             DN(0,0)*N[1];
        const double clhs75 =             clhs38*clhs74;
        const double clhs76 =             N[1]*clhs28 + clhs59;
        const double clhs77 =             clhs63 + rho*(clhs64 + clhs76);
        const double clhs78 =             DN(0,1)*clhs77;
        const double clhs79 =             clhs75 + clhs78;
        const double clhs80 =             N[1]*bdf0*clhs14;
        const double clhs81 =             DN(1,0) + clhs3*clhs80;
        const double clhs82 =             DN(1,1) + clhs5*clhs80;
        const double clhs83 =             rho*tau1*(DN(0,0)*clhs81 + DN(0,1)*clhs82);
        const double clhs84 =             N[1]*clhs47;
        const double clhs85 =             N[0]*N[1]*bdf0*clhs14*tau1;
        const double clhs86 =             -clhs27*clhs85 + clhs3*clhs84;
        const double clhs87 =             DN(2,0)*clhs52;
        const double clhs88 =             N[2]*clhs54;
        const double clhs89 =             N[0]*N[2];
        const double clhs90 =             clhs16*clhs89;
        const double clhs91 =             -clhs87*tau2 + clhs87 + clhs88 + clhs90;
        const double clhs92 =             DN(2,0)*clhs4 + DN(2,1)*clhs6;
        const double clhs93 =             N[2]*clhs2 + clhs92;
        const double clhs94 =             DN(0,1)*N[2];
        const double clhs95 =             clhs12*clhs94;
        const double clhs96 =             N[2]*clhs16;
        const double clhs97 =             N[2]*bdf0;
        const double clhs98 =             clhs96 + rho*(clhs93 + clhs97);
        const double clhs99 =             DN(0,0)*clhs98;
        const double clhs100 =             clhs95 + clhs99;
        const double clhs101 =             N[2]*rho*tau1;
        const double clhs102 =             clhs101*clhs30;
        const double clhs103 =             clhs26*clhs89;
        const double clhs104 =             -clhs103*clhs35;
        const double clhs105 =             DN(0,0)*DN(2,1);
        const double clhs106 =             -clhs105*tau2;
        const double clhs107 =             DN(0,0)*N[2];
        const double clhs108 =             clhs107*clhs38;
        const double clhs109 =             N[2]*clhs28 + clhs92;
        const double clhs110 =             clhs96 + rho*(clhs109 + clhs97);
        const double clhs111 =             DN(0,1)*clhs110;
        const double clhs112 =             clhs108 + clhs111;
        const double clhs113 =             N[2]*bdf0*clhs14;
        const double clhs114 =             DN(2,0) + clhs113*clhs3;
        const double clhs115 =             DN(2,1) + clhs113*clhs5;
        const double clhs116 =             rho*tau1*(DN(0,0)*clhs114 + DN(0,1)*clhs115);
        const double clhs117 =             N[2]*clhs47;
        const double clhs118 =             N[0]*N[2]*bdf0*clhs14*tau1;
        const double clhs119 =             clhs117*clhs3 - clhs118*clhs27;
        const double clhs120 =             clhs11*clhs23;
        const double clhs121 =             clhs6*tau1;
        const double clhs122 =             pow(DN(0,1), 2)*rho;
        const double clhs123 =             clhs6*rho*tau1;
        const double clhs124 =             DN(0,1)*DN(1,0);
        const double clhs125 =             -clhs124*tau2 + clhs124;
        const double clhs126 =             clhs11*clhs56;
        const double clhs127 =             -clhs126*clhs35;
        const double clhs128 =             DN(0,1)*rho;
        const double clhs129 =             DN(1,1)*clhs128;
        const double clhs130 =             -clhs129*tau2 + clhs129 + clhs55 + clhs57;
        const double clhs131 =             -clhs29*clhs85 + clhs5*clhs84;
        const double clhs132 =             DN(0,1)*DN(2,0);
        const double clhs133 =             -clhs132*tau2 + clhs132;
        const double clhs134 =             clhs11*clhs89;
        const double clhs135 =             -clhs134*clhs35;
        const double clhs136 =             DN(2,1)*clhs128;
        const double clhs137 =             -clhs136*tau2 + clhs136 + clhs88 + clhs90;
        const double clhs138 =             clhs117*clhs5 - clhs118*clhs29;
        const double clhs139 =             DN(0,0)*rho*tau1;
        const double clhs140 =             DN(0,1)*rho*tau1;
        const double clhs141 =             DN(1,0)*N[0];
        const double clhs142 =             DN(1,1)*N[0];
        const double clhs143 =             DN(2,0)*N[0];
        const double clhs144 =             DN(2,1)*N[0];
        const double clhs145 =             N[1]*rho;
        const double clhs146 =             clhs12*clhs142;
        const double clhs147 =             DN(1,0)*clhs19;
        const double clhs148 =             clhs146 + clhs147;
        const double clhs149 =             N[1]*clhs14*clhs15*tau1;
        const double clhs150 =             DN(1,0)*clhs27 + DN(1,1)*clhs29;
        const double clhs151 =             clhs150*clhs25;
        const double clhs152 =             clhs141*clhs38;
        const double clhs153 =             DN(1,1)*clhs41;
        const double clhs154 =             clhs152 + clhs153;
        const double clhs155 =             DN(1,0)*clhs48;
        const double clhs156 =             DN(1,1)*clhs49;
        const double clhs157 =             rho*tau1*(clhs155 + clhs156);
        const double clhs158 =             pow(DN(1,0), 2)*rho;
        const double clhs159 =             DN(1,1)*N[1];
        const double clhs160 =             clhs12*clhs159;
        const double clhs161 =             DN(1,0)*clhs65;
        const double clhs162 =             clhs160 + clhs161;
        const double clhs163 =             pow(N[1], 2);
        const double clhs164 =             clhs150*clhs68 + clhs16*clhs163 + clhs163*clhs24;
        const double clhs165 =             DN(1,0)*DN(1,1);
        const double clhs166 =             -clhs165*tau2 + clhs165;
        const double clhs167 =             clhs163*clhs26;
        const double clhs168 =             DN(1,0)*N[1];
        const double clhs169 =             clhs168*clhs38;
        const double clhs170 =             DN(1,1)*clhs77;
        const double clhs171 =             clhs169 + clhs170;
        const double clhs172 =             clhs163*clhs45;
        const double clhs173 =             DN(1,0)*clhs81;
        const double clhs174 =             DN(1,1)*clhs82;
        const double clhs175 =             rho*tau1*(clhs173 + clhs174);
        const double clhs176 =             bdf0*clhs14*clhs163*tau1;
        const double clhs177 =             DN(1,0)*DN(2,0)*rho;
        const double clhs178 =             N[1]*N[2]*bdf0;
        const double clhs179 =             clhs178*rho;
        const double clhs180 =             N[1]*N[2];
        const double clhs181 =             clhs16*clhs180;
        const double clhs182 =             -clhs177*tau2 + clhs177 + clhs179 + clhs181;
        const double clhs183 =             DN(1,1)*N[2];
        const double clhs184 =             clhs12*clhs183;
        const double clhs185 =             DN(1,0)*clhs98;
        const double clhs186 =             clhs184 + clhs185;
        const double clhs187 =             clhs101*clhs150;
        const double clhs188 =             clhs180*clhs26;
        const double clhs189 =             -clhs188*clhs35;
        const double clhs190 =             DN(1,0)*DN(2,1);
        const double clhs191 =             -clhs190*tau2;
        const double clhs192 =             DN(1,0)*N[2];
        const double clhs193 =             clhs192*clhs38;
        const double clhs194 =             DN(1,1)*clhs110;
        const double clhs195 =             clhs193 + clhs194;
        const double clhs196 =             DN(1,0)*clhs114;
        const double clhs197 =             DN(1,1)*clhs115;
        const double clhs198 =             rho*tau1*(clhs196 + clhs197);
        const double clhs199 =             clhs14*clhs178;
        const double clhs200 =             N[1]*N[2]*bdf0*clhs14*tau1;
        const double clhs201 =             clhs199*clhs3 - clhs200*clhs27;
        const double clhs202 =             clhs11*clhs163;
        const double clhs203 =             pow(DN(1,1), 2)*rho;
        const double clhs204 =             DN(1,1)*DN(2,0);
        const double clhs205 =             -clhs204*tau2 + clhs204;
        const double clhs206 =             clhs11*clhs180;
        const double clhs207 =             -clhs206*clhs35;
        const double clhs208 =             DN(1,1)*DN(2,1)*rho;
        const double clhs209 =             clhs179 + clhs181 - clhs208*tau2 + clhs208;
        const double clhs210 =             clhs199*clhs5 - clhs200*clhs29;
        const double clhs211 =             rho*tau1;
        const double clhs212 =             DN(2,0)*N[1];
        const double clhs213 =             DN(2,1)*N[1];
        const double clhs214 =             N[2]*rho;
        const double clhs215 =             clhs12*clhs144;
        const double clhs216 =             DN(2,0)*clhs19;
        const double clhs217 =             clhs215 + clhs216;
        const double clhs218 =             N[2]*clhs14*clhs15*tau1;
        const double clhs219 =             DN(2,0)*clhs27 + DN(2,1)*clhs29;
        const double clhs220 =             clhs219*clhs25;
        const double clhs221 =             clhs143*clhs38;
        const double clhs222 =             DN(2,1)*clhs41;
        const double clhs223 =             clhs221 + clhs222;
        const double clhs224 =             DN(2,0)*clhs48;
        const double clhs225 =             DN(2,1)*clhs49;
        const double clhs226 =             rho*tau1*(clhs224 + clhs225);
        const double clhs227 =             clhs12*clhs213;
        const double clhs228 =             DN(2,0)*clhs65;
        const double clhs229 =             clhs227 + clhs228;
        const double clhs230 =             clhs219*clhs68;
        const double clhs231 =             clhs212*clhs38;
        const double clhs232 =             DN(2,1)*clhs77;
        const double clhs233 =             clhs231 + clhs232;
        const double clhs234 =             DN(2,0)*clhs81;
        const double clhs235 =             DN(2,1)*clhs82;
        const double clhs236 =             rho*tau1*(clhs234 + clhs235);
        const double clhs237 =             pow(DN(2,0), 2)*rho;
        const double clhs238 =             DN(2,1)*N[2];
        const double clhs239 =             clhs12*clhs238;
        const double clhs240 =             DN(2,0)*clhs98;
        const double clhs241 =             clhs239 + clhs240;
        const double clhs242 =             pow(N[2], 2);
        const double clhs243 =             clhs101*clhs219 + clhs16*clhs242 + clhs24*clhs242;
        const double clhs244 =             DN(2,0)*DN(2,1);
        const double clhs245 =             -clhs244*tau2 + clhs244;
        const double clhs246 =             clhs242*clhs26;
        const double clhs247 =             DN(2,0)*N[2];
        const double clhs248 =             clhs247*clhs38;
        const double clhs249 =             DN(2,1)*clhs110;
        const double clhs250 =             clhs248 + clhs249;
        const double clhs251 =             clhs242*clhs45;
        const double clhs252 =             DN(2,0)*clhs114;
        const double clhs253 =             DN(2,1)*clhs115;
        const double clhs254 =             rho*tau1*(clhs252 + clhs253);
        const double clhs255 =             bdf0*clhs14*clhs242*tau1;
        const double clhs256 =             clhs11*clhs242;
        const double clhs257 =             pow(DN(2,1), 2)*rho;

        lhs(0,0)=-clhs0*tau2 + clhs0 + clhs1*clhs8 - clhs19*clhs22 + clhs21*clhs9 + clhs31;
        lhs(0,1)=rho*(clhs33 - clhs34*clhs35 + clhs34 + clhs36*clhs43);
        lhs(0,2)=-clhs22*clhs48 - clhs27*clhs51 + clhs3*clhs46 - clhs37*clhs44 - clhs37 + clhs4*clhs50;
        lhs(0,3)=clhs1*clhs60 - clhs22*clhs65 + clhs58 + clhs67*clhs9 + clhs69;
        lhs(0,4)=rho*(clhs36*clhs79 + clhs70 + clhs71 + clhs72 + clhs73);
        lhs(0,5)=-clhs22*clhs81 + clhs4*clhs83 - clhs44*clhs74 - clhs74 + clhs86;
        lhs(0,6)=clhs1*clhs93 + clhs100*clhs9 + clhs102 - clhs22*clhs98 + clhs91;
        lhs(0,7)=rho*(clhs103 + clhs104 + clhs105 + clhs106 + clhs112*clhs36);
        lhs(0,8)=-clhs107*clhs44 - clhs107 - clhs114*clhs22 + clhs116*clhs4 + clhs119;
        lhs(1,0)=rho*(-clhs120*clhs35 + clhs120 + clhs121*clhs21 + clhs33);
        lhs(1,1)=clhs1*clhs40 - clhs122*tau2 + clhs122 + clhs123*clhs43 - clhs22*clhs41 + clhs31;
        lhs(1,2)=-clhs10*clhs44 - clhs10 - clhs22*clhs49 - clhs29*clhs51 + clhs46*clhs5 + clhs50*clhs6;
        lhs(1,3)=rho*(clhs121*clhs67 + clhs125 + clhs126 + clhs127);
        lhs(1,4)=clhs1*clhs76 + clhs123*clhs79 + clhs130 - clhs22*clhs77 + clhs69;
        lhs(1,5)=clhs131 - clhs22*clhs82 - clhs44*clhs61 + clhs6*clhs83 - clhs61;
        lhs(1,6)=rho*(clhs100*clhs121 + clhs133 + clhs134 + clhs135);
        lhs(1,7)=clhs1*clhs109 + clhs102 - clhs110*clhs22 + clhs112*clhs123 + clhs137;
        lhs(1,8)=-clhs115*clhs22 + clhs116*clhs6 + clhs138 - clhs44*clhs94 - clhs94;
        lhs(2,0)=rho*(clhs13*tau1 + clhs20*tau1 + 2*clhs37);
        lhs(2,1)=rho*(2*clhs10 + clhs39*tau1 + clhs42*tau1);
        lhs(2,2)=clhs139*clhs48 + clhs140*clhs49 + clhs46;
        lhs(2,3)=rho*(2*clhs141 + clhs62*tau1 + clhs66*tau1);
        lhs(2,4)=rho*(2*clhs142 + clhs75*tau1 + clhs78*tau1);
        lhs(2,5)=clhs139*clhs81 + clhs140*clhs82 + clhs84;
        lhs(2,6)=rho*(2*clhs143 + clhs95*tau1 + clhs99*tau1);
        lhs(2,7)=rho*(clhs108*tau1 + clhs111*tau1 + 2*clhs144);
        lhs(2,8)=clhs114*clhs139 + clhs115*clhs140 + clhs117;
        lhs(3,0)=clhs145*clhs8 + clhs148*clhs9 - clhs149*clhs19 + clhs151 + clhs58;
        lhs(3,1)=rho*(clhs125 + clhs154*clhs36 + clhs70 + clhs71);
        lhs(3,2)=-clhs141*clhs44 - clhs141 - clhs149*clhs48 + clhs157*clhs4 + clhs86;
        lhs(3,3)=clhs145*clhs60 - clhs149*clhs65 - clhs158*tau2 + clhs158 + clhs162*clhs9 + clhs164;
        lhs(3,4)=rho*(clhs166 - clhs167*clhs35 + clhs167 + clhs171*clhs36);
        lhs(3,5)=-clhs149*clhs81 - clhs168*clhs44 - clhs168 + clhs172*clhs3 + clhs175*clhs4 - clhs176*clhs27;
        lhs(3,6)=clhs145*clhs93 - clhs149*clhs98 + clhs182 + clhs186*clhs9 + clhs187;
        lhs(3,7)=rho*(clhs188 + clhs189 + clhs190 + clhs191 + clhs195*clhs36);
        lhs(3,8)=-clhs114*clhs149 - clhs192*clhs44 - clhs192 + clhs198*clhs4 + clhs201;
        lhs(4,0)=rho*(clhs121*clhs148 + clhs126 + clhs127 + clhs72 + clhs73);
        lhs(4,1)=clhs123*clhs154 + clhs130 + clhs145*clhs40 - clhs149*clhs41 + clhs151;
        lhs(4,2)=clhs131 - clhs142*clhs44 - clhs142 - clhs149*clhs49 + clhs157*clhs6;
        lhs(4,3)=rho*(clhs121*clhs162 + clhs166 - clhs202*clhs35 + clhs202);
        lhs(4,4)=clhs123*clhs171 + clhs145*clhs76 - clhs149*clhs77 + clhs164 - clhs203*tau2 + clhs203;
        lhs(4,5)=-clhs149*clhs82 - clhs159*clhs44 - clhs159 + clhs172*clhs5 + clhs175*clhs6 - clhs176*clhs29;
        lhs(4,6)=rho*(clhs121*clhs186 + clhs205 + clhs206 + clhs207);
        lhs(4,7)=clhs109*clhs145 - clhs110*clhs149 + clhs123*clhs195 + clhs187 + clhs209;
        lhs(4,8)=-clhs115*clhs149 - clhs183*clhs44 - clhs183 + clhs198*clhs6 + clhs210;
        lhs(5,0)=rho*(clhs146*tau1 + clhs147*tau1 + 2*clhs74);
        lhs(5,1)=rho*(clhs152*tau1 + clhs153*tau1 + 2*clhs61);
        lhs(5,2)=clhs155*clhs211 + clhs156*clhs211 + clhs84;
        lhs(5,3)=rho*(clhs160*tau1 + clhs161*tau1 + 2*clhs168);
        lhs(5,4)=rho*(2*clhs159 + clhs169*tau1 + clhs170*tau1);
        lhs(5,5)=clhs172 + clhs173*clhs211 + clhs174*clhs211;
        lhs(5,6)=rho*(clhs184*tau1 + clhs185*tau1 + 2*clhs212);
        lhs(5,7)=rho*(clhs193*tau1 + clhs194*tau1 + 2*clhs213);
        lhs(5,8)=clhs196*clhs211 + clhs197*clhs211 + clhs199;
        lhs(6,0)=-clhs19*clhs218 + clhs214*clhs8 + clhs217*clhs9 + clhs220 + clhs91;
        lhs(6,1)=rho*(clhs103 + clhs104 + clhs133 + clhs223*clhs36);
        lhs(6,2)=clhs119 - clhs143*clhs44 - clhs143 - clhs218*clhs48 + clhs226*clhs4;
        lhs(6,3)=clhs182 + clhs214*clhs60 - clhs218*clhs65 + clhs229*clhs9 + clhs230;
        lhs(6,4)=rho*(clhs188 + clhs189 + clhs205 + clhs233*clhs36);
        lhs(6,5)=clhs201 - clhs212*clhs44 - clhs212 - clhs218*clhs81 + clhs236*clhs4;
        lhs(6,6)=clhs214*clhs93 - clhs218*clhs98 - clhs237*tau2 + clhs237 + clhs241*clhs9 + clhs243;
        lhs(6,7)=rho*(clhs245 - clhs246*clhs35 + clhs246 + clhs250*clhs36);
        lhs(6,8)=-clhs114*clhs218 - clhs247*clhs44 - clhs247 + clhs251*clhs3 + clhs254*clhs4 - clhs255*clhs27;
        lhs(7,0)=rho*(clhs105 + clhs106 + clhs121*clhs217 + clhs134 + clhs135);
        lhs(7,1)=clhs123*clhs223 + clhs137 + clhs214*clhs40 - clhs218*clhs41 + clhs220;
        lhs(7,2)=clhs138 - clhs144*clhs44 - clhs144 - clhs218*clhs49 + clhs226*clhs6;
        lhs(7,3)=rho*(clhs121*clhs229 + clhs190 + clhs191 + clhs206 + clhs207);
        lhs(7,4)=clhs123*clhs233 + clhs209 + clhs214*clhs76 - clhs218*clhs77 + clhs230;
        lhs(7,5)=clhs210 - clhs213*clhs44 - clhs213 - clhs218*clhs82 + clhs236*clhs6;
        lhs(7,6)=rho*(clhs121*clhs241 + clhs245 - clhs256*clhs35 + clhs256);
        lhs(7,7)=clhs109*clhs214 - clhs110*clhs218 + clhs123*clhs250 + clhs243 - clhs257*tau2 + clhs257;
        lhs(7,8)=-clhs115*clhs218 - clhs238*clhs44 - clhs238 + clhs251*clhs5 + clhs254*clhs6 - clhs255*clhs29;
        lhs(8,0)=rho*(2*clhs107 + clhs215*tau1 + clhs216*tau1);
        lhs(8,1)=rho*(clhs221*tau1 + clhs222*tau1 + 2*clhs94);
        lhs(8,2)=clhs117 + clhs211*clhs224 + clhs211*clhs225;
        lhs(8,3)=rho*(2*clhs192 + clhs227*tau1 + clhs228*tau1);
        lhs(8,4)=rho*(2*clhs183 + clhs231*tau1 + clhs232*tau1);
        lhs(8,5)=clhs199 + clhs211*clhs234 + clhs211*clhs235;
        lhs(8,6)=rho*(clhs239*tau1 + clhs240*tau1 + 2*clhs247);
        lhs(8,7)=rho*(2*clhs238 + clhs248*tau1 + clhs249*tau1);
        lhs(8,8)=clhs211*clhs252 + clhs211*clhs253 + clhs251;

    }


template<>
void NavierStokes<3>::ComputeGaussPointRHSContribution(array_1d<double,16>& rhs, const element_data& data)
    {
        const int nnodes = 4;
        const int dim = 3;
        const int strain_size = 6;

        const double rho = inner_prod(data.N, data.rho);        // Density
        const double mu = inner_prod(data.N, data.mu);          // Dynamic viscosity
        const double h = data.h;                                // Characteristic element size
        const double c = data.c;                                // Wave velocity

        const double& bdf0 = data.bdf0;
        const double& bdf1 = data.bdf1;
        const double& bdf2 = data.bdf2;
        const double& delta_t = data.delta_t;
        const double& dyn_tau_coeff = data.dyn_tau_coeff;

        const bounded_matrix<double,nnodes,dim>& v = data.v;
        const bounded_matrix<double,nnodes,dim>& vn = data.vn;
        const bounded_matrix<double,nnodes,dim>& vnn = data.vnn;
        const bounded_matrix<double,nnodes,dim>& vmesh = data.vmesh;
        const bounded_matrix<double,nnodes,dim>& vconv = v - vmesh;
        const bounded_matrix<double,nnodes,dim>& f = data.f;
        const array_1d<double,nnodes>& p = data.p;
        const array_1d<double,nnodes>& pn = data.pn;
        const array_1d<double,nnodes>& pnn = data.pnn;
        const array_1d<double,strain_size>& stress = data.stress;

        // Get constitutive matrix
        //~ const Matrix& C = data.C;

        // Get shape function values
        const array_1d<double,nnodes>& N = data.N;
        const bounded_matrix<double,nnodes,dim>& DN = data.DN_DX;

        const array_1d<double,dim> vconv_gauss = prod(trans(vconv), N);

        const double vconv_norm = norm_2(vconv_gauss);

        // Stabilization parameters
        const double tau1 = 1.0/((rho*dyn_tau_coeff)/delta_t + (2*rho*vconv_norm)/h + (4*mu)/(h*h));
        const double tau2 = mu + 0.5*h*vconv_norm;

        // Auxiliary variables used in the calculation of the RHS
        const array_1d<double,dim> f_gauss = prod(trans(f), N);
        const array_1d<double,dim> grad_p = prod(trans(DN), p);
        //~ const double p_gauss = inner_prod(N,p);

        //~ array_1d<double,dim> accel_gauss = bdf0*v_gauss;
        //~ noalias(accel_gauss) += bdf1*prod(trans(vn), N);
        //~ noalias(accel_gauss) += bdf2*prod(trans(vnn), N);

        const double crhs0 =             N[0]*p[0] + N[1]*p[1] + N[2]*p[2] + N[3]*p[3];
        const double crhs1 =             rho*(N[0]*f(0,0) + N[1]*f(1,0) + N[2]*f(2,0) + N[3]*f(3,0));
        const double crhs2 =             DN(0,2)*v(0,2) + DN(1,2)*v(1,2) + DN(2,2)*v(2,2) + DN(3,2)*v(3,2);
        const double crhs3 =             DN(0,0)*v(0,0);
        const double crhs4 =             DN(0,1)*v(0,1);
        const double crhs5 =             DN(1,0)*v(1,0);
        const double crhs6 =             DN(1,1)*v(1,1);
        const double crhs7 =             DN(2,0)*v(2,0);
        const double crhs8 =             DN(2,1)*v(2,1);
        const double crhs9 =             DN(3,0)*v(3,0);
        const double crhs10 =             DN(3,1)*v(3,1);
        const double crhs11 =             crhs10 + crhs2 + crhs3 + crhs4 + crhs5 + crhs6 + crhs7 + crhs8 + crhs9;
        const double crhs12 =             crhs11*rho;
        const double crhs13 =             N[0]*rho;
        const double crhs14 =             N[0]*(bdf0*v(0,0) + bdf1*vn(0,0) + bdf2*vnn(0,0)) + N[1]*(bdf0*v(1,0) + bdf1*vn(1,0) + bdf2*vnn(1,0)) + N[2]*(bdf0*v(2,0) + bdf1*vn(2,0) + bdf2*vnn(2,0)) + N[3]*(bdf0*v(3,0) + bdf1*vn(3,0) + bdf2*vnn(3,0));
        const double crhs15 =             N[0]*v(0,0) + N[1]*v(1,0) + N[2]*v(2,0) + N[3]*v(3,0);
        const double crhs16 =             pow(c, -2);
        const double crhs17 =             N[0]*(bdf0*p[0] + bdf1*pn[0] + bdf2*pnn[0]) + N[1]*(bdf0*p[1] + bdf1*pn[1] + bdf2*pnn[1]) + N[2]*(bdf0*p[2] + bdf1*pn[2] + bdf2*pnn[2]) + N[3]*(bdf0*p[3] + bdf1*pn[3] + bdf2*pnn[3]);
        const double crhs18 =             crhs16*crhs17;
        const double crhs19 =             N[0]*crhs18;
        const double crhs20 =             tau2*(crhs12 + crhs18);
        const double crhs21 =             -N[0]*vmesh(0,0) - N[1]*vmesh(1,0) - N[2]*vmesh(2,0) - N[3]*vmesh(3,0) + crhs15;
        const double crhs22 =             N[0]*v(0,1) + N[1]*v(1,1) + N[2]*v(2,1) + N[3]*v(3,1);
        const double crhs23 =             -N[0]*vmesh(0,1) - N[1]*vmesh(1,1) - N[2]*vmesh(2,1) - N[3]*vmesh(3,1) + crhs22;
        const double crhs24 =             N[0]*v(0,2) + N[1]*v(1,2) + N[2]*v(2,2) + N[3]*v(3,2);
        const double crhs25 =             -N[0]*vmesh(0,2) - N[1]*vmesh(1,2) - N[2]*vmesh(2,2) - N[3]*vmesh(3,2) + crhs24;
        const double crhs26 =             crhs21*(crhs3 + crhs5 + crhs7 + crhs9) + crhs23*(DN(0,1)*v(0,0) + DN(1,1)*v(1,0) + DN(2,1)*v(2,0) + DN(3,1)*v(3,0)) + crhs25*(DN(0,2)*v(0,0) + DN(1,2)*v(1,0) + DN(2,2)*v(2,0) + DN(3,2)*v(3,0));
        const double crhs27 =             N[0]*crhs16*crhs17*tau1;
        const double crhs28 =             DN(0,0)*p[0] + DN(1,0)*p[1] + DN(2,0)*p[2] + DN(3,0)*p[3] - crhs1 + crhs15*crhs18 + rho*(crhs14 + crhs26);
        const double crhs29 =             DN(0,0)*crhs28;
        const double crhs30 =             rho*(N[0]*f(0,1) + N[1]*f(1,1) + N[2]*f(2,1) + N[3]*f(3,1));
        const double crhs31 =             N[0]*(bdf0*v(0,1) + bdf1*vn(0,1) + bdf2*vnn(0,1)) + N[1]*(bdf0*v(1,1) + bdf1*vn(1,1) + bdf2*vnn(1,1)) + N[2]*(bdf0*v(2,1) + bdf1*vn(2,1) + bdf2*vnn(2,1)) + N[3]*(bdf0*v(3,1) + bdf1*vn(3,1) + bdf2*vnn(3,1));
        const double crhs32 =             crhs21*(DN(0,0)*v(0,1) + DN(1,0)*v(1,1) + DN(2,0)*v(2,1) + DN(3,0)*v(3,1)) + crhs23*(crhs10 + crhs4 + crhs6 + crhs8) + crhs25*(DN(0,2)*v(0,1) + DN(1,2)*v(1,1) + DN(2,2)*v(2,1) + DN(3,2)*v(3,1));
        const double crhs33 =             DN(0,1)*p[0] + DN(1,1)*p[1] + DN(2,1)*p[2] + DN(3,1)*p[3] + crhs18*crhs22 - crhs30 + rho*(crhs31 + crhs32);
        const double crhs34 =             DN(0,1)*crhs33;
        const double crhs35 =             rho*(N[0]*f(0,2) + N[1]*f(1,2) + N[2]*f(2,2) + N[3]*f(3,2));
        const double crhs36 =             N[0]*(bdf0*v(0,2) + bdf1*vn(0,2) + bdf2*vnn(0,2)) + N[1]*(bdf0*v(1,2) + bdf1*vn(1,2) + bdf2*vnn(1,2)) + N[2]*(bdf0*v(2,2) + bdf1*vn(2,2) + bdf2*vnn(2,2)) + N[3]*(bdf0*v(3,2) + bdf1*vn(3,2) + bdf2*vnn(3,2));
        const double crhs37 =             crhs2*crhs25 + crhs21*(DN(0,0)*v(0,2) + DN(1,0)*v(1,2) + DN(2,0)*v(2,2) + DN(3,0)*v(3,2)) + crhs23*(DN(0,1)*v(0,2) + DN(1,1)*v(1,2) + DN(2,1)*v(2,2) + DN(3,1)*v(3,2));
        const double crhs38 =             DN(0,2)*p[0] + DN(1,2)*p[1] + DN(2,2)*p[2] + DN(3,2)*p[3] + crhs18*crhs24 - crhs35 + rho*(crhs36 + crhs37);
        const double crhs39 =             DN(0,2)*crhs38;
        const double crhs40 =             rho*tau1*(crhs29 + crhs34 + crhs39);
        const double crhs41 =             2*crhs11*rho;
        const double crhs42 =             rho*tau1;
        const double crhs43 =             N[1]*rho;
        const double crhs44 =             N[1]*crhs18;
        const double crhs45 =             N[1]*crhs16*crhs17*tau1;
        const double crhs46 =             DN(1,0)*crhs28;
        const double crhs47 =             DN(1,1)*crhs33;
        const double crhs48 =             DN(1,2)*crhs38;
        const double crhs49 =             rho*tau1*(crhs46 + crhs47 + crhs48);
        const double crhs50 =             N[2]*rho;
        const double crhs51 =             N[2]*crhs18;
        const double crhs52 =             N[2]*crhs16*crhs17*tau1;
        const double crhs53 =             DN(2,0)*crhs28;
        const double crhs54 =             DN(2,1)*crhs33;
        const double crhs55 =             DN(2,2)*crhs38;
        const double crhs56 =             rho*tau1*(crhs53 + crhs54 + crhs55);
        const double crhs57 =             N[3]*rho;
        const double crhs58 =             N[3]*crhs18;
        const double crhs59 =             N[3]*crhs16*crhs17*tau1;
        const double crhs60 =             DN(3,0)*crhs28;
        const double crhs61 =             DN(3,1)*crhs33;
        const double crhs62 =             DN(3,2)*crhs38;
        const double crhs63 =             rho*tau1*(crhs60 + crhs61 + crhs62);

        rhs[0]=DN(0,0)*crhs0 - DN(0,0)*crhs12 + DN(0,0)*crhs20 - DN(0,0)*stress[0] - DN(0,1)*stress[3] - DN(0,2)*stress[5] + N[0]*crhs1 - crhs13*crhs14 - crhs13*crhs26 - crhs15*crhs19 - crhs21*crhs40 + crhs27*crhs28;
        rhs[1]=-DN(0,0)*stress[3] + DN(0,1)*crhs0 - DN(0,1)*crhs12 + DN(0,1)*crhs20 - DN(0,1)*stress[1] - DN(0,2)*stress[4] + N[0]*crhs30 - crhs13*crhs31 - crhs13*crhs32 - crhs19*crhs22 - crhs23*crhs40 + crhs27*crhs33;
        rhs[2]=-DN(0,0)*stress[5] - DN(0,1)*stress[4] + DN(0,2)*crhs0 - DN(0,2)*crhs12 + DN(0,2)*crhs20 - DN(0,2)*stress[2] + N[0]*crhs35 - crhs13*crhs36 - crhs13*crhs37 - crhs19*crhs24 - crhs25*crhs40 + crhs27*crhs38;
        rhs[3]=-N[0]*crhs41 - crhs19 - crhs29*crhs42 - crhs34*crhs42 - crhs39*crhs42;
        rhs[4]=DN(1,0)*crhs0 - DN(1,0)*crhs12 + DN(1,0)*crhs20 - DN(1,0)*stress[0] - DN(1,1)*stress[3] - DN(1,2)*stress[5] + N[1]*crhs1 - crhs14*crhs43 - crhs15*crhs44 - crhs21*crhs49 - crhs26*crhs43 + crhs28*crhs45;
        rhs[5]=-DN(1,0)*stress[3] + DN(1,1)*crhs0 - DN(1,1)*crhs12 + DN(1,1)*crhs20 - DN(1,1)*stress[1] - DN(1,2)*stress[4] + N[1]*crhs30 - crhs22*crhs44 - crhs23*crhs49 - crhs31*crhs43 - crhs32*crhs43 + crhs33*crhs45;
        rhs[6]=-DN(1,0)*stress[5] - DN(1,1)*stress[4] + DN(1,2)*crhs0 - DN(1,2)*crhs12 + DN(1,2)*crhs20 - DN(1,2)*stress[2] + N[1]*crhs35 - crhs24*crhs44 - crhs25*crhs49 - crhs36*crhs43 - crhs37*crhs43 + crhs38*crhs45;
        rhs[7]=-N[1]*crhs41 - crhs42*crhs46 - crhs42*crhs47 - crhs42*crhs48 - crhs44;
        rhs[8]=DN(2,0)*crhs0 - DN(2,0)*crhs12 + DN(2,0)*crhs20 - DN(2,0)*stress[0] - DN(2,1)*stress[3] - DN(2,2)*stress[5] + N[2]*crhs1 - crhs14*crhs50 - crhs15*crhs51 - crhs21*crhs56 - crhs26*crhs50 + crhs28*crhs52;
        rhs[9]=-DN(2,0)*stress[3] + DN(2,1)*crhs0 - DN(2,1)*crhs12 + DN(2,1)*crhs20 - DN(2,1)*stress[1] - DN(2,2)*stress[4] + N[2]*crhs30 - crhs22*crhs51 - crhs23*crhs56 - crhs31*crhs50 - crhs32*crhs50 + crhs33*crhs52;
        rhs[10]=-DN(2,0)*stress[5] - DN(2,1)*stress[4] + DN(2,2)*crhs0 - DN(2,2)*crhs12 + DN(2,2)*crhs20 - DN(2,2)*stress[2] + N[2]*crhs35 - crhs24*crhs51 - crhs25*crhs56 - crhs36*crhs50 - crhs37*crhs50 + crhs38*crhs52;
        rhs[11]=-N[2]*crhs41 - crhs42*crhs53 - crhs42*crhs54 - crhs42*crhs55 - crhs51;
        rhs[12]=DN(3,0)*crhs0 - DN(3,0)*crhs12 + DN(3,0)*crhs20 - DN(3,0)*stress[0] - DN(3,1)*stress[3] - DN(3,2)*stress[5] + N[3]*crhs1 - crhs14*crhs57 - crhs15*crhs58 - crhs21*crhs63 - crhs26*crhs57 + crhs28*crhs59;
        rhs[13]=-DN(3,0)*stress[3] + DN(3,1)*crhs0 - DN(3,1)*crhs12 + DN(3,1)*crhs20 - DN(3,1)*stress[1] - DN(3,2)*stress[4] + N[3]*crhs30 - crhs22*crhs58 - crhs23*crhs63 - crhs31*crhs57 - crhs32*crhs57 + crhs33*crhs59;
        rhs[14]=-DN(3,0)*stress[5] - DN(3,1)*stress[4] + DN(3,2)*crhs0 - DN(3,2)*crhs12 + DN(3,2)*crhs20 - DN(3,2)*stress[2] + N[3]*crhs35 - crhs24*crhs58 - crhs25*crhs63 - crhs36*crhs57 - crhs37*crhs57 + crhs38*crhs59;
        rhs[15]=-N[3]*crhs41 - crhs42*crhs60 - crhs42*crhs61 - crhs42*crhs62 - crhs58;

    }


template<>
void NavierStokes<2>::ComputeGaussPointRHSContribution(array_1d<double,9>& rhs, const element_data& data)
    {
        const int nnodes = 3;
        const int dim = 2;
        const int strain_size = 3;

        const double rho = inner_prod(data.N, data.rho);        // Density
        const double mu = inner_prod(data.N, data.mu);          // Dynamic viscosity
        const double h = data.h;                                // Characteristic element size
        const double c = data.c;                                // Wave velocity

        const double& bdf0 = data.bdf0;
        const double& bdf1 = data.bdf1;
        const double& bdf2 = data.bdf2;
        const double& delta_t = data.delta_t;
        const double& dyn_tau_coeff = data.dyn_tau_coeff;

        const bounded_matrix<double,nnodes,dim>& v = data.v;
        const bounded_matrix<double,nnodes,dim>& vn = data.vn;
        const bounded_matrix<double,nnodes,dim>& vnn = data.vnn;
        const bounded_matrix<double,nnodes,dim>& vmesh = data.vmesh;
        const bounded_matrix<double,nnodes,dim>& vconv = v - vmesh;
        const bounded_matrix<double,nnodes,dim>& f = data.f;
        const array_1d<double,nnodes>& p = data.p;
        const array_1d<double,nnodes>& pn = data.pn;
        const array_1d<double,nnodes>& pnn = data.pnn;
        const array_1d<double,strain_size>& stress = data.stress;

        // Get constitutive matrix
        //~ const Matrix& C = data.C;

        // Get shape function values
        const array_1d<double,nnodes>& N = data.N;
        const bounded_matrix<double,nnodes,dim>& DN = data.DN_DX;

        const array_1d<double,dim> vconv_gauss = prod(trans(vconv), N);

        const double vconv_norm = norm_2(vconv_gauss);

        // Stabilization parameters
        const double tau1 = 1.0/((rho*dyn_tau_coeff)/delta_t + (2*rho*vconv_norm)/h + (4*mu)/(h*h));
        const double tau2 = mu + 0.5*h*vconv_norm;

        // Auxiliary variables used in the calculation of the RHS
        const array_1d<double,dim> f_gauss = prod(trans(f), N);
        const array_1d<double,dim> grad_p = prod(trans(DN), p);
        //~ const double p_gauss = inner_prod(N,p);

        //~ array_1d<double,dim> accel_gauss = bdf0*v_gauss;
        //~ noalias(accel_gauss) += bdf1*prod(trans(vn), N);
        //~ noalias(accel_gauss) += bdf2*prod(trans(vnn), N);

        const double crhs0 =             N[0]*p[0] + N[1]*p[1] + N[2]*p[2];
        const double crhs1 =             rho*(N[0]*f(0,0) + N[1]*f(1,0) + N[2]*f(2,0));
        const double crhs2 =             DN(0,0)*v(0,0) + DN(1,0)*v(1,0) + DN(2,0)*v(2,0);
        const double crhs3 =             DN(0,1)*v(0,1) + DN(1,1)*v(1,1) + DN(2,1)*v(2,1);
        const double crhs4 =             crhs2 + crhs3;
        const double crhs5 =             crhs4*rho;
        const double crhs6 =             N[0]*rho;
        const double crhs7 =             N[0]*(bdf0*v(0,0) + bdf1*vn(0,0) + bdf2*vnn(0,0)) + N[1]*(bdf0*v(1,0) + bdf1*vn(1,0) + bdf2*vnn(1,0)) + N[2]*(bdf0*v(2,0) + bdf1*vn(2,0) + bdf2*vnn(2,0));
        const double crhs8 =             N[0]*v(0,0) + N[1]*v(1,0) + N[2]*v(2,0);
        const double crhs9 =             pow(c, -2);
        const double crhs10 =             N[0]*(bdf0*p[0] + bdf1*pn[0] + bdf2*pnn[0]) + N[1]*(bdf0*p[1] + bdf1*pn[1] + bdf2*pnn[1]) + N[2]*(bdf0*p[2] + bdf1*pn[2] + bdf2*pnn[2]);
        const double crhs11 =             crhs10*crhs9;
        const double crhs12 =             N[0]*crhs11;
        const double crhs13 =             tau2*(crhs11 + crhs5);
        const double crhs14 =             -N[0]*vmesh(0,0) - N[1]*vmesh(1,0) - N[2]*vmesh(2,0) + crhs8;
        const double crhs15 =             N[0]*v(0,1) + N[1]*v(1,1) + N[2]*v(2,1);
        const double crhs16 =             -N[0]*vmesh(0,1) - N[1]*vmesh(1,1) - N[2]*vmesh(2,1) + crhs15;
        const double crhs17 =             crhs14*crhs2 + crhs16*(DN(0,1)*v(0,0) + DN(1,1)*v(1,0) + DN(2,1)*v(2,0));
        const double crhs18 =             N[0]*crhs10*crhs9*tau1;
        const double crhs19 =             DN(0,0)*p[0] + DN(1,0)*p[1] + DN(2,0)*p[2] - crhs1 + crhs11*crhs8 + rho*(crhs17 + crhs7);
        const double crhs20 =             DN(0,0)*crhs19;
        const double crhs21 =             rho*(N[0]*f(0,1) + N[1]*f(1,1) + N[2]*f(2,1));
        const double crhs22 =             N[0]*(bdf0*v(0,1) + bdf1*vn(0,1) + bdf2*vnn(0,1)) + N[1]*(bdf0*v(1,1) + bdf1*vn(1,1) + bdf2*vnn(1,1)) + N[2]*(bdf0*v(2,1) + bdf1*vn(2,1) + bdf2*vnn(2,1));
        const double crhs23 =             crhs14*(DN(0,0)*v(0,1) + DN(1,0)*v(1,1) + DN(2,0)*v(2,1)) + crhs16*crhs3;
        const double crhs24 =             DN(0,1)*p[0] + DN(1,1)*p[1] + DN(2,1)*p[2] + crhs11*crhs15 - crhs21 + rho*(crhs22 + crhs23);
        const double crhs25 =             DN(0,1)*crhs24;
        const double crhs26 =             rho*tau1*(crhs20 + crhs25);
        const double crhs27 =             2*crhs4*rho;
        const double crhs28 =             rho*tau1;
        const double crhs29 =             N[1]*rho;
        const double crhs30 =             N[1]*crhs11;
        const double crhs31 =             N[1]*crhs10*crhs9*tau1;
        const double crhs32 =             DN(1,0)*crhs19;
        const double crhs33 =             DN(1,1)*crhs24;
        const double crhs34 =             rho*tau1*(crhs32 + crhs33);
        const double crhs35 =             N[2]*rho;
        const double crhs36 =             N[2]*crhs11;
        const double crhs37 =             N[2]*crhs10*crhs9*tau1;
        const double crhs38 =             DN(2,0)*crhs19;
        const double crhs39 =             DN(2,1)*crhs24;
        const double crhs40 =             rho*tau1*(crhs38 + crhs39);

        rhs[0]=DN(0,0)*crhs0 + DN(0,0)*crhs13 - DN(0,0)*crhs5 - DN(0,0)*stress[0] - DN(0,1)*stress[2] + N[0]*crhs1 - crhs12*crhs8 - crhs14*crhs26 - crhs17*crhs6 + crhs18*crhs19 - crhs6*crhs7;
        rhs[1]=-DN(0,0)*stress[2] + DN(0,1)*crhs0 + DN(0,1)*crhs13 - DN(0,1)*crhs5 - DN(0,1)*stress[1] + N[0]*crhs21 - crhs12*crhs15 - crhs16*crhs26 + crhs18*crhs24 - crhs22*crhs6 - crhs23*crhs6;
        rhs[2]=-N[0]*crhs27 - crhs12 - crhs20*crhs28 - crhs25*crhs28;
        rhs[3]=DN(1,0)*crhs0 + DN(1,0)*crhs13 - DN(1,0)*crhs5 - DN(1,0)*stress[0] - DN(1,1)*stress[2] + N[1]*crhs1 - crhs14*crhs34 - crhs17*crhs29 + crhs19*crhs31 - crhs29*crhs7 - crhs30*crhs8;
        rhs[4]=-DN(1,0)*stress[2] + DN(1,1)*crhs0 + DN(1,1)*crhs13 - DN(1,1)*crhs5 - DN(1,1)*stress[1] + N[1]*crhs21 - crhs15*crhs30 - crhs16*crhs34 - crhs22*crhs29 - crhs23*crhs29 + crhs24*crhs31;
        rhs[5]=-N[1]*crhs27 - crhs28*crhs32 - crhs28*crhs33 - crhs30;
        rhs[6]=DN(2,0)*crhs0 + DN(2,0)*crhs13 - DN(2,0)*crhs5 - DN(2,0)*stress[0] - DN(2,1)*stress[2] + N[2]*crhs1 - crhs14*crhs40 - crhs17*crhs35 + crhs19*crhs37 - crhs35*crhs7 - crhs36*crhs8;
        rhs[7]=-DN(2,0)*stress[2] + DN(2,1)*crhs0 + DN(2,1)*crhs13 - DN(2,1)*crhs5 - DN(2,1)*stress[1] + N[2]*crhs21 - crhs15*crhs36 - crhs16*crhs40 - crhs22*crhs35 - crhs23*crhs35 + crhs24*crhs37;
        rhs[8]=-N[2]*crhs27 - crhs28*crhs38 - crhs28*crhs39 - crhs36;

    }

}
