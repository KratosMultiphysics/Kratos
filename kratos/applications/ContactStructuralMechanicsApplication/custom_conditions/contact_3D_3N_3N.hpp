// KRATOS  ___|  |       |       |
//       \___ \  __|  __| |   |  __| __| |   |  __| _` | |
//           | |   |    |   | (    |   |   | |   (   | |
//       _____/ \__|_|   \__,_|\___|\__|\__,_|_|  \__,_|_| MECHANICS
//
//  License: BSD License
//   license: structural_mechanics_application/license.txt
//
//  Main authors:    Vicente Mataix Ferr√°ndiz
//

#if !defined(KRATOS_CONTACT3D3N3N)
#define KRATOS_CONTACT3D3N3N

// System includes

// External includes

// Project includes
#include "custom_conditions/mortar_contact_condition.h"
#include "custom_utilities/contact_utilities.h"
#include "structural_mechanics_application.h"
#include "structural_mechanics_application_variables.h"
#include <boost/math/special_functions/sign.hpp>

namespace Kratos 
{
    ///@name Kratos Globals
    ///@{

    ///@}
    ///@name Type Definitions
    ///@{
        
    typedef Point<3>                                  PointType;
    typedef Node<3>                                    NodeType;
    typedef Geometry<NodeType>                     GeometryType;
        
    ///@}
    ///@name  Enum's
    ///@{

    ///@}
    ///@name  Functions
    ///@{

    ///@}
    ///@name Kratos Classes
    ///@{
        
class Contact3D3N3N
{
public:
    
    static inline bounded_matrix<double,27,27> ComputeGaussPointActiveLHS(
        const array_1d<double,3> N1, 
        const array_1d<double,3> N2, 
        const array_1d<double,3> Phi, 
        const double detJ, 
        const ContactData<3,3>& rContactData,
        const double& augmented_normal_lm,
        const double& augmented_tangent_lm,
        const double& integration_point_gap,
        const double& integration_point_slip
        )
{
    bounded_matrix<double,27,27> lhs;
    
    const bounded_matrix<double, 3,3> normalslave    = rContactData.Normal_s;
    const bounded_matrix<double, 3,3> tan1slave      = rContactData.Tangent_xi_s;
    const bounded_matrix<double, 3,3> tan2slave      = rContactData.Tangent_eta_s;
    const bounded_matrix<double, 3,3> lm             = rContactData.LagrangeMultipliers;
//     const double Dt             = rContactData.Dt;
//     const double epsilon_normal = rContactData.epsilon_normal;
    
    const array_1d<double,3> GPnormal     = prod(trans(normalslave), N1);
    const array_1d<double,3> GPtangent1   = prod(trans(tan1slave), N1);
    const array_1d<double,3> GPtangent2   = prod(trans(tan2slave), N1);
    
    const bounded_matrix<double, 3,3> v1 = rContactData.v1;
    const bounded_matrix<double, 3,3> v2 = rContactData.v2;
    
    const std::vector<double> DeltaJs          = rContactData.DeltaJ_s;
    const std::vector<double> DeltaGap         = rContactData.DeltaGap;
    const std::vector<array_1d<double,3>> DeltaPhi         = rContactData.DeltaPhi;
    const std::vector<array_1d<double,3>> DeltaN2          = rContactData.DeltaN2;
    const std::vector<bounded_matrix<double, 3, 3>> DeltaNormals     = rContactData.Delta_Normal_s;

    const double clhs0 =     N2[0]; // N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
    const double clhs1 =     DeltaN2[9][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
    const double clhs2 =     detJ; // DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs3 =     Phi[0]; // PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs4 =     Phi[1]; // PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs5 =     Phi[2]; // PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs6 =     clhs3*lm(0,0) + clhs4*lm(1,0) + clhs5*lm(2,0);
    const double clhs7 =     clhs2*clhs6;
    const double clhs8 =     DeltaN2[10][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
    const double clhs9 =     DeltaN2[11][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
    const double clhs10 =     DeltaN2[12][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
    const double clhs11 =     DeltaN2[13][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
    const double clhs12 =     DeltaN2[14][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
    const double clhs13 =     DeltaN2[15][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
    const double clhs14 =     DeltaN2[16][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
    const double clhs15 =     DeltaN2[17][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
    const double clhs16 =     DeltaJs[0]; // DERIVATIVE(DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs17 =     clhs16*clhs6;
    const double clhs18 =     DeltaN2[0][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
    const double clhs19 =     clhs0*clhs2;
    const double clhs20 =     DeltaPhi[0][0]; // DERIVATIVE(PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs21 =     DeltaPhi[0][1]; // DERIVATIVE(PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs22 =     DeltaPhi[0][2]; // DERIVATIVE(PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs23 =     clhs20*lm(0,0) + clhs21*lm(1,0) + clhs22*lm(2,0);
    const double clhs24 =     DeltaJs[1]; // DERIVATIVE(DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs25 =     clhs24*clhs6;
    const double clhs26 =     DeltaN2[1][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
    const double clhs27 =     DeltaPhi[1][0]; // DERIVATIVE(PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs28 =     DeltaPhi[1][1]; // DERIVATIVE(PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs29 =     DeltaPhi[1][2]; // DERIVATIVE(PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs30 =     clhs27*lm(0,0) + clhs28*lm(1,0) + clhs29*lm(2,0);
    const double clhs31 =     DeltaJs[2]; // DERIVATIVE(DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs32 =     clhs31*clhs6;
    const double clhs33 =     DeltaN2[2][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
    const double clhs34 =     DeltaPhi[2][0]; // DERIVATIVE(PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs35 =     DeltaPhi[2][1]; // DERIVATIVE(PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs36 =     DeltaPhi[2][2]; // DERIVATIVE(PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs37 =     clhs34*lm(0,0) + clhs35*lm(1,0) + clhs36*lm(2,0);
    const double clhs38 =     DeltaJs[3]; // DERIVATIVE(DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs39 =     clhs38*clhs6;
    const double clhs40 =     DeltaN2[3][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
    const double clhs41 =     DeltaPhi[3][0]; // DERIVATIVE(PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs42 =     DeltaPhi[3][1]; // DERIVATIVE(PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs43 =     DeltaPhi[3][2]; // DERIVATIVE(PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs44 =     clhs41*lm(0,0) + clhs42*lm(1,0) + clhs43*lm(2,0);
    const double clhs45 =     DeltaJs[4]; // DERIVATIVE(DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs46 =     clhs45*clhs6;
    const double clhs47 =     DeltaN2[4][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
    const double clhs48 =     DeltaPhi[4][0]; // DERIVATIVE(PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs49 =     DeltaPhi[4][1]; // DERIVATIVE(PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs50 =     DeltaPhi[4][2]; // DERIVATIVE(PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs51 =     clhs48*lm(0,0) + clhs49*lm(1,0) + clhs50*lm(2,0);
    const double clhs52 =     DeltaJs[5]; // DERIVATIVE(DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs53 =     clhs52*clhs6;
    const double clhs54 =     DeltaN2[5][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
    const double clhs55 =     DeltaPhi[5][0]; // DERIVATIVE(PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs56 =     DeltaPhi[5][1]; // DERIVATIVE(PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs57 =     DeltaPhi[5][2]; // DERIVATIVE(PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs58 =     clhs55*lm(0,0) + clhs56*lm(1,0) + clhs57*lm(2,0);
    const double clhs59 =     DeltaJs[6]; // DERIVATIVE(DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs60 =     clhs59*clhs6;
    const double clhs61 =     DeltaN2[6][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
    const double clhs62 =     DeltaPhi[6][0]; // DERIVATIVE(PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs63 =     DeltaPhi[6][1]; // DERIVATIVE(PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs64 =     DeltaPhi[6][2]; // DERIVATIVE(PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs65 =     clhs62*lm(0,0) + clhs63*lm(1,0) + clhs64*lm(2,0);
    const double clhs66 =     DeltaJs[7]; // DERIVATIVE(DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs67 =     clhs6*clhs66;
    const double clhs68 =     DeltaN2[7][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
    const double clhs69 =     DeltaPhi[7][0]; // DERIVATIVE(PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs70 =     DeltaPhi[7][1]; // DERIVATIVE(PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs71 =     DeltaPhi[7][2]; // DERIVATIVE(PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs72 =     clhs69*lm(0,0) + clhs70*lm(1,0) + clhs71*lm(2,0);
    const double clhs73 =     DeltaJs[8]; // DERIVATIVE(DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs74 =     clhs6*clhs73;
    const double clhs75 =     DeltaN2[8][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
    const double clhs76 =     DeltaPhi[8][0]; // DERIVATIVE(PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs77 =     DeltaPhi[8][1]; // DERIVATIVE(PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs78 =     DeltaPhi[8][2]; // DERIVATIVE(PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs79 =     clhs76*lm(0,0) + clhs77*lm(1,0) + clhs78*lm(2,0);
    const double clhs80 =     clhs19*clhs3;
    const double clhs81 =     clhs19*clhs4;
    const double clhs82 =     clhs19*clhs5;
    const double clhs83 =     clhs3*lm(0,1) + clhs4*lm(1,1) + clhs5*lm(2,1);
    const double clhs84 =     clhs2*clhs83;
    const double clhs85 =     clhs16*clhs83;
    const double clhs86 =     clhs20*lm(0,1) + clhs21*lm(1,1) + clhs22*lm(2,1);
    const double clhs87 =     clhs24*clhs83;
    const double clhs88 =     clhs27*lm(0,1) + clhs28*lm(1,1) + clhs29*lm(2,1);
    const double clhs89 =     clhs31*clhs83;
    const double clhs90 =     clhs34*lm(0,1) + clhs35*lm(1,1) + clhs36*lm(2,1);
    const double clhs91 =     clhs38*clhs83;
    const double clhs92 =     clhs41*lm(0,1) + clhs42*lm(1,1) + clhs43*lm(2,1);
    const double clhs93 =     clhs45*clhs83;
    const double clhs94 =     clhs48*lm(0,1) + clhs49*lm(1,1) + clhs50*lm(2,1);
    const double clhs95 =     clhs52*clhs83;
    const double clhs96 =     clhs55*lm(0,1) + clhs56*lm(1,1) + clhs57*lm(2,1);
    const double clhs97 =     clhs59*clhs83;
    const double clhs98 =     clhs62*lm(0,1) + clhs63*lm(1,1) + clhs64*lm(2,1);
    const double clhs99 =     clhs66*clhs83;
    const double clhs100 =     clhs69*lm(0,1) + clhs70*lm(1,1) + clhs71*lm(2,1);
    const double clhs101 =     clhs73*clhs83;
    const double clhs102 =     clhs76*lm(0,1) + clhs77*lm(1,1) + clhs78*lm(2,1);
    const double clhs103 =     clhs3*lm(0,2) + clhs4*lm(1,2) + clhs5*lm(2,2);
    const double clhs104 =     clhs103*clhs2;
    const double clhs105 =     clhs103*clhs16;
    const double clhs106 =     clhs20*lm(0,2) + clhs21*lm(1,2) + clhs22*lm(2,2);
    const double clhs107 =     clhs103*clhs24;
    const double clhs108 =     clhs27*lm(0,2) + clhs28*lm(1,2) + clhs29*lm(2,2);
    const double clhs109 =     clhs103*clhs31;
    const double clhs110 =     clhs34*lm(0,2) + clhs35*lm(1,2) + clhs36*lm(2,2);
    const double clhs111 =     clhs103*clhs38;
    const double clhs112 =     clhs41*lm(0,2) + clhs42*lm(1,2) + clhs43*lm(2,2);
    const double clhs113 =     clhs103*clhs45;
    const double clhs114 =     clhs48*lm(0,2) + clhs49*lm(1,2) + clhs50*lm(2,2);
    const double clhs115 =     clhs103*clhs52;
    const double clhs116 =     clhs55*lm(0,2) + clhs56*lm(1,2) + clhs57*lm(2,2);
    const double clhs117 =     clhs103*clhs59;
    const double clhs118 =     clhs62*lm(0,2) + clhs63*lm(1,2) + clhs64*lm(2,2);
    const double clhs119 =     clhs103*clhs66;
    const double clhs120 =     clhs69*lm(0,2) + clhs70*lm(1,2) + clhs71*lm(2,2);
    const double clhs121 =     clhs103*clhs73;
    const double clhs122 =     clhs76*lm(0,2) + clhs77*lm(1,2) + clhs78*lm(2,2);
    const double clhs123 =     N2[1]; // N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
    const double clhs124 =     DeltaN2[9][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
    const double clhs125 =     DeltaN2[10][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
    const double clhs126 =     DeltaN2[11][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
    const double clhs127 =     DeltaN2[12][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
    const double clhs128 =     DeltaN2[13][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
    const double clhs129 =     DeltaN2[14][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
    const double clhs130 =     DeltaN2[15][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
    const double clhs131 =     DeltaN2[16][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
    const double clhs132 =     DeltaN2[17][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
    const double clhs133 =     DeltaN2[0][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
    const double clhs134 =     clhs123*clhs2;
    const double clhs135 =     DeltaN2[1][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
    const double clhs136 =     DeltaN2[2][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
    const double clhs137 =     DeltaN2[3][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
    const double clhs138 =     DeltaN2[4][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
    const double clhs139 =     DeltaN2[5][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
    const double clhs140 =     DeltaN2[6][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
    const double clhs141 =     DeltaN2[7][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
    const double clhs142 =     DeltaN2[8][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
    const double clhs143 =     clhs134*clhs3;
    const double clhs144 =     clhs134*clhs4;
    const double clhs145 =     clhs134*clhs5;
    const double clhs146 =     N2[2]; // N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
    const double clhs147 =     DeltaN2[9][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
    const double clhs148 =     DeltaN2[10][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
    const double clhs149 =     DeltaN2[11][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
    const double clhs150 =     DeltaN2[12][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
    const double clhs151 =     DeltaN2[13][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
    const double clhs152 =     DeltaN2[14][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
    const double clhs153 =     DeltaN2[15][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
    const double clhs154 =     DeltaN2[16][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
    const double clhs155 =     DeltaN2[17][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
    const double clhs156 =     DeltaN2[0][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
    const double clhs157 =     clhs146*clhs2;
    const double clhs158 =     DeltaN2[1][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
    const double clhs159 =     DeltaN2[2][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
    const double clhs160 =     DeltaN2[3][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
    const double clhs161 =     DeltaN2[4][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
    const double clhs162 =     DeltaN2[5][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
    const double clhs163 =     DeltaN2[6][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
    const double clhs164 =     DeltaN2[7][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
    const double clhs165 =     DeltaN2[8][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
    const double clhs166 =     clhs157*clhs3;
    const double clhs167 =     clhs157*clhs4;
    const double clhs168 =     clhs157*clhs5;
    const double clhs169 =     clhs17 + clhs2*clhs23;
    const double clhs170 =     clhs2*clhs30 + clhs25;
    const double clhs171 =     clhs2*clhs37 + clhs32;
    const double clhs172 =     clhs2*clhs44 + clhs39;
    const double clhs173 =     clhs2*clhs51 + clhs46;
    const double clhs174 =     clhs2*clhs58 + clhs53;
    const double clhs175 =     clhs2*clhs65 + clhs60;
    const double clhs176 =     clhs2*clhs72 + clhs67;
    const double clhs177 =     clhs2*clhs79 + clhs74;
    const double clhs178 =     N1[0]*clhs2;
    const double clhs179 =     -clhs178*clhs3;
    const double clhs180 =     -clhs178*clhs4;
    const double clhs181 =     -clhs178*clhs5;
    const double clhs182 =     clhs2*clhs86 + clhs85;
    const double clhs183 =     clhs2*clhs88 + clhs87;
    const double clhs184 =     clhs2*clhs90 + clhs89;
    const double clhs185 =     clhs2*clhs92 + clhs91;
    const double clhs186 =     clhs2*clhs94 + clhs93;
    const double clhs187 =     clhs2*clhs96 + clhs95;
    const double clhs188 =     clhs2*clhs98 + clhs97;
    const double clhs189 =     clhs100*clhs2 + clhs99;
    const double clhs190 =     clhs101 + clhs102*clhs2;
    const double clhs191 =     clhs105 + clhs106*clhs2;
    const double clhs192 =     clhs107 + clhs108*clhs2;
    const double clhs193 =     clhs109 + clhs110*clhs2;
    const double clhs194 =     clhs111 + clhs112*clhs2;
    const double clhs195 =     clhs113 + clhs114*clhs2;
    const double clhs196 =     clhs115 + clhs116*clhs2;
    const double clhs197 =     clhs117 + clhs118*clhs2;
    const double clhs198 =     clhs119 + clhs120*clhs2;
    const double clhs199 =     clhs121 + clhs122*clhs2;
    const double clhs200 =     N1[1]*clhs2;
    const double clhs201 =     -clhs200*clhs3;
    const double clhs202 =     -clhs200*clhs4;
    const double clhs203 =     -clhs200*clhs5;
    const double clhs204 =     N1[2]*clhs2;
    const double clhs205 =     -clhs204*clhs3;
    const double clhs206 =     -clhs204*clhs4;
    const double clhs207 =     -clhs204*clhs5;
    const double clhs208 =     integration_point_gap; // GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
    const double clhs209 =     DeltaGap[9]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
    const double clhs210 =     normalslave(0,0); // NORMALSLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs211 =     normalslave(0,1); // NORMALSLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs212 =     normalslave(0,2); // NORMALSLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs213 =     clhs2*clhs3*(GPnormal[0]*clhs210 + GPnormal[1]*clhs211 + GPnormal[2]*clhs212);
    const double clhs214 =     DeltaGap[10]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
    const double clhs215 =     DeltaGap[11]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
    const double clhs216 =     DeltaGap[12]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
    const double clhs217 =     DeltaGap[13]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
    const double clhs218 =     DeltaGap[14]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
    const double clhs219 =     DeltaGap[15]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
    const double clhs220 =     DeltaGap[16]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
    const double clhs221 =     DeltaGap[17]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
    const double clhs222 =     clhs2*clhs208*clhs3;
    const double clhs223 =     DeltaGap[0]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
    const double clhs224 =     clhs2*clhs210*clhs3;
    const double clhs225 =     clhs208*clhs210*clhs3;
    const double clhs226 =     clhs2*clhs208*clhs210;
    const double clhs227 =     clhs16*clhs225 + clhs20*clhs226 + clhs222*DeltaNormals[0](0,0) + clhs223*clhs224; // CLHS16*CLHS225 + CLHS20*CLHS226 + CLHS222*DERIVATIVE(NORMALSLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0)) + CLHS223*CLHS224
    const double clhs228 =     clhs2*clhs211*clhs3;
    const double clhs229 =     clhs208*clhs211*clhs3;
    const double clhs230 =     clhs2*clhs208*clhs211;
    const double clhs231 =     clhs16*clhs229 + clhs20*clhs230 + clhs222*DeltaNormals[0](0,1) + clhs223*clhs228; // CLHS16*CLHS229 + CLHS20*CLHS230 + CLHS222*DERIVATIVE(NORMALSLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0)) + CLHS223*CLHS228
    const double clhs232 =     clhs2*clhs212*clhs3;
    const double clhs233 =     clhs208*clhs212*clhs3;
    const double clhs234 =     clhs2*clhs208*clhs212;
    const double clhs235 =     clhs16*clhs233 + clhs20*clhs234 + clhs222*DeltaNormals[0](0,2) + clhs223*clhs232; // CLHS16*CLHS233 + CLHS20*CLHS234 + CLHS222*DERIVATIVE(NORMALSLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0)) + CLHS223*CLHS232
    const double clhs236 =     DeltaGap[1]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
    const double clhs237 =     clhs222*DeltaNormals[1](0,0) + clhs224*clhs236 + clhs225*clhs24 + clhs226*clhs27; // CLHS222*DERIVATIVE(NORMALSLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1)) + CLHS224*CLHS236 + CLHS225*CLHS24 + CLHS226*CLHS27
    const double clhs238 =     clhs222*DeltaNormals[1](0,1) + clhs228*clhs236 + clhs229*clhs24 + clhs230*clhs27; // CLHS222*DERIVATIVE(NORMALSLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1)) + CLHS228*CLHS236 + CLHS229*CLHS24 + CLHS230*CLHS27
    const double clhs239 =     clhs222*DeltaNormals[1](0,2) + clhs232*clhs236 + clhs233*clhs24 + clhs234*clhs27; // CLHS222*DERIVATIVE(NORMALSLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1)) + CLHS232*CLHS236 + CLHS233*CLHS24 + CLHS234*CLHS27
    const double clhs240 =     DeltaGap[2]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
    const double clhs241 =     clhs222*DeltaNormals[2](0,0) + clhs224*clhs240 + clhs225*clhs31 + clhs226*clhs34; // CLHS222*DERIVATIVE(NORMALSLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2)) + CLHS224*CLHS240 + CLHS225*CLHS31 + CLHS226*CLHS34
    const double clhs242 =     clhs222*DeltaNormals[2](0,1) + clhs228*clhs240 + clhs229*clhs31 + clhs230*clhs34; // CLHS222*DERIVATIVE(NORMALSLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2)) + CLHS228*CLHS240 + CLHS229*CLHS31 + CLHS230*CLHS34
    const double clhs243 =     clhs222*DeltaNormals[2](0,2) + clhs232*clhs240 + clhs233*clhs31 + clhs234*clhs34; // CLHS222*DERIVATIVE(NORMALSLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2)) + CLHS232*CLHS240 + CLHS233*CLHS31 + CLHS234*CLHS34
    const double clhs244 =     DeltaGap[3]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
    const double clhs245 =     clhs222*DeltaNormals[3](0,0) + clhs224*clhs244 + clhs225*clhs38 + clhs226*clhs41; // CLHS222*DERIVATIVE(NORMALSLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0)) + CLHS224*CLHS244 + CLHS225*CLHS38 + CLHS226*CLHS41
    const double clhs246 =     clhs222*DeltaNormals[3](0,1) + clhs228*clhs244 + clhs229*clhs38 + clhs230*clhs41; // CLHS222*DERIVATIVE(NORMALSLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0)) + CLHS228*CLHS244 + CLHS229*CLHS38 + CLHS230*CLHS41
    const double clhs247 =     clhs222*DeltaNormals[3](0,2) + clhs232*clhs244 + clhs233*clhs38 + clhs234*clhs41; // CLHS222*DERIVATIVE(NORMALSLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0)) + CLHS232*CLHS244 + CLHS233*CLHS38 + CLHS234*CLHS41
    const double clhs248 =     DeltaGap[4]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
    const double clhs249 =     clhs222*DeltaNormals[4](0,0) + clhs224*clhs248 + clhs225*clhs45 + clhs226*clhs48; // CLHS222*DERIVATIVE(NORMALSLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1)) + CLHS224*CLHS248 + CLHS225*CLHS45 + CLHS226*CLHS48
    const double clhs250 =     clhs222*DeltaNormals[4](0,1) + clhs228*clhs248 + clhs229*clhs45 + clhs230*clhs48; // CLHS222*DERIVATIVE(NORMALSLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1)) + CLHS228*CLHS248 + CLHS229*CLHS45 + CLHS230*CLHS48
    const double clhs251 =     clhs222*DeltaNormals[4](0,2) + clhs232*clhs248 + clhs233*clhs45 + clhs234*clhs48; // CLHS222*DERIVATIVE(NORMALSLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1)) + CLHS232*CLHS248 + CLHS233*CLHS45 + CLHS234*CLHS48
    const double clhs252 =     DeltaGap[5]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
    const double clhs253 =     clhs222*DeltaNormals[5](0,0) + clhs224*clhs252 + clhs225*clhs52 + clhs226*clhs55; // CLHS222*DERIVATIVE(NORMALSLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2)) + CLHS224*CLHS252 + CLHS225*CLHS52 + CLHS226*CLHS55
    const double clhs254 =     clhs222*DeltaNormals[5](0,1) + clhs228*clhs252 + clhs229*clhs52 + clhs230*clhs55; // CLHS222*DERIVATIVE(NORMALSLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2)) + CLHS228*CLHS252 + CLHS229*CLHS52 + CLHS230*CLHS55
    const double clhs255 =     clhs222*DeltaNormals[5](0,2) + clhs232*clhs252 + clhs233*clhs52 + clhs234*clhs55; // CLHS222*DERIVATIVE(NORMALSLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2)) + CLHS232*CLHS252 + CLHS233*CLHS52 + CLHS234*CLHS55
    const double clhs256 =     DeltaGap[6]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
    const double clhs257 =     clhs222*DeltaNormals[6](0,0) + clhs224*clhs256 + clhs225*clhs59 + clhs226*clhs62; // CLHS222*DERIVATIVE(NORMALSLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0)) + CLHS224*CLHS256 + CLHS225*CLHS59 + CLHS226*CLHS62
    const double clhs258 =     clhs222*DeltaNormals[6](0,1) + clhs228*clhs256 + clhs229*clhs59 + clhs230*clhs62; // CLHS222*DERIVATIVE(NORMALSLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0)) + CLHS228*CLHS256 + CLHS229*CLHS59 + CLHS230*CLHS62
    const double clhs259 =     clhs222*DeltaNormals[6](0,2) + clhs232*clhs256 + clhs233*clhs59 + clhs234*clhs62; // CLHS222*DERIVATIVE(NORMALSLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0)) + CLHS232*CLHS256 + CLHS233*CLHS59 + CLHS234*CLHS62
    const double clhs260 =     DeltaGap[7]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
    const double clhs261 =     clhs222*DeltaNormals[7](0,0) + clhs224*clhs260 + clhs225*clhs66 + clhs226*clhs69; // CLHS222*DERIVATIVE(NORMALSLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1)) + CLHS224*CLHS260 + CLHS225*CLHS66 + CLHS226*CLHS69
    const double clhs262 =     clhs222*DeltaNormals[7](0,1) + clhs228*clhs260 + clhs229*clhs66 + clhs230*clhs69; // CLHS222*DERIVATIVE(NORMALSLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1)) + CLHS228*CLHS260 + CLHS229*CLHS66 + CLHS230*CLHS69
    const double clhs263 =     clhs222*DeltaNormals[7](0,2) + clhs232*clhs260 + clhs233*clhs66 + clhs234*clhs69; // CLHS222*DERIVATIVE(NORMALSLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1)) + CLHS232*CLHS260 + CLHS233*CLHS66 + CLHS234*CLHS69
    const double clhs264 =     DeltaGap[8]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
    const double clhs265 =     clhs222*DeltaNormals[8](0,0) + clhs224*clhs264 + clhs225*clhs73 + clhs226*clhs76; // CLHS222*DERIVATIVE(NORMALSLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2)) + CLHS224*CLHS264 + CLHS225*CLHS73 + CLHS226*CLHS76
    const double clhs266 =     clhs222*DeltaNormals[8](0,1) + clhs228*clhs264 + clhs229*clhs73 + clhs230*clhs76; // CLHS222*DERIVATIVE(NORMALSLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2)) + CLHS228*CLHS264 + CLHS229*CLHS73 + CLHS230*CLHS76
    const double clhs267 =     clhs222*DeltaNormals[8](0,2) + clhs232*clhs264 + clhs233*clhs73 + clhs234*clhs76; // CLHS222*DERIVATIVE(NORMALSLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2)) + CLHS232*CLHS264 + CLHS233*CLHS73 + CLHS234*CLHS76
    const double clhs268 =     clhs2*clhs3*(GPtangent1[0]*clhs210 + GPtangent1[1]*clhs211 + GPtangent1[2]*clhs212);
    const double clhs269 =     clhs2*clhs3*(GPtangent2[0]*clhs210 + GPtangent2[1]*clhs211 + GPtangent2[2]*clhs212);
    const double clhs270 =     normalslave(1,0); // NORMALSLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs271 =     normalslave(1,1); // NORMALSLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs272 =     normalslave(1,2); // NORMALSLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs273 =     clhs2*clhs4*(GPnormal[0]*clhs270 + GPnormal[1]*clhs271 + GPnormal[2]*clhs272);
    const double clhs274 =     clhs2*clhs208*clhs4;
    const double clhs275 =     clhs2*clhs270*clhs4;
    const double clhs276 =     clhs208*clhs270*clhs4;
    const double clhs277 =     clhs2*clhs208*clhs270;
    const double clhs278 =     clhs16*clhs276 + clhs21*clhs277 + clhs223*clhs275 + clhs274*DeltaNormals[0](1,0); // CLHS16*CLHS276 + CLHS21*CLHS277 + CLHS223*CLHS275 + CLHS274*DERIVATIVE(NORMALSLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs279 =     clhs2*clhs271*clhs4;
    const double clhs280 =     clhs208*clhs271*clhs4;
    const double clhs281 =     clhs2*clhs208*clhs271;
    const double clhs282 =     clhs16*clhs280 + clhs21*clhs281 + clhs223*clhs279 + clhs274*DeltaNormals[0](1,1); // CLHS16*CLHS280 + CLHS21*CLHS281 + CLHS223*CLHS279 + CLHS274*DERIVATIVE(NORMALSLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs283 =     clhs2*clhs272*clhs4;
    const double clhs284 =     clhs208*clhs272*clhs4;
    const double clhs285 =     clhs2*clhs208*clhs272;
    const double clhs286 =     clhs16*clhs284 + clhs21*clhs285 + clhs223*clhs283 + clhs274*DeltaNormals[0](1,2); // CLHS16*CLHS284 + CLHS21*CLHS285 + CLHS223*CLHS283 + CLHS274*DERIVATIVE(NORMALSLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs287 =     clhs236*clhs275 + clhs24*clhs276 + clhs274*DeltaNormals[1](1,0) + clhs277*clhs28; // CLHS236*CLHS275 + CLHS24*CLHS276 + CLHS274*DERIVATIVE(NORMALSLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1)) + CLHS277*CLHS28
    const double clhs288 =     clhs236*clhs279 + clhs24*clhs280 + clhs274*DeltaNormals[1](1,1) + clhs28*clhs281; // CLHS236*CLHS279 + CLHS24*CLHS280 + CLHS274*DERIVATIVE(NORMALSLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1)) + CLHS28*CLHS281
    const double clhs289 =     clhs236*clhs283 + clhs24*clhs284 + clhs274*DeltaNormals[1](1,2) + clhs28*clhs285; // CLHS236*CLHS283 + CLHS24*CLHS284 + CLHS274*DERIVATIVE(NORMALSLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1)) + CLHS28*CLHS285
    const double clhs290 =     clhs240*clhs275 + clhs274*DeltaNormals[2](1,0) + clhs276*clhs31 + clhs277*clhs35; // CLHS240*CLHS275 + CLHS274*DERIVATIVE(NORMALSLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2)) + CLHS276*CLHS31 + CLHS277*CLHS35
    const double clhs291 =     clhs240*clhs279 + clhs274*DeltaNormals[2](1,1) + clhs280*clhs31 + clhs281*clhs35; // CLHS240*CLHS279 + CLHS274*DERIVATIVE(NORMALSLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2)) + CLHS280*CLHS31 + CLHS281*CLHS35
    const double clhs292 =     clhs240*clhs283 + clhs274*DeltaNormals[2](1,2) + clhs284*clhs31 + clhs285*clhs35; // CLHS240*CLHS283 + CLHS274*DERIVATIVE(NORMALSLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2)) + CLHS284*CLHS31 + CLHS285*CLHS35
    const double clhs293 =     clhs244*clhs275 + clhs274*DeltaNormals[3](1,0) + clhs276*clhs38 + clhs277*clhs42; // CLHS244*CLHS275 + CLHS274*DERIVATIVE(NORMALSLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0)) + CLHS276*CLHS38 + CLHS277*CLHS42
    const double clhs294 =     clhs244*clhs279 + clhs274*DeltaNormals[3](1,1) + clhs280*clhs38 + clhs281*clhs42; // CLHS244*CLHS279 + CLHS274*DERIVATIVE(NORMALSLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0)) + CLHS280*CLHS38 + CLHS281*CLHS42
    const double clhs295 =     clhs244*clhs283 + clhs274*DeltaNormals[3](1,2) + clhs284*clhs38 + clhs285*clhs42; // CLHS244*CLHS283 + CLHS274*DERIVATIVE(NORMALSLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0)) + CLHS284*CLHS38 + CLHS285*CLHS42
    const double clhs296 =     clhs248*clhs275 + clhs274*DeltaNormals[4](1,0) + clhs276*clhs45 + clhs277*clhs49; // CLHS248*CLHS275 + CLHS274*DERIVATIVE(NORMALSLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1)) + CLHS276*CLHS45 + CLHS277*CLHS49
    const double clhs297 =     clhs248*clhs279 + clhs274*DeltaNormals[4](1,1) + clhs280*clhs45 + clhs281*clhs49; // CLHS248*CLHS279 + CLHS274*DERIVATIVE(NORMALSLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1)) + CLHS280*CLHS45 + CLHS281*CLHS49
    const double clhs298 =     clhs248*clhs283 + clhs274*DeltaNormals[4](1,2) + clhs284*clhs45 + clhs285*clhs49; // CLHS248*CLHS283 + CLHS274*DERIVATIVE(NORMALSLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1)) + CLHS284*CLHS45 + CLHS285*CLHS49
    const double clhs299 =     clhs252*clhs275 + clhs274*DeltaNormals[5](1,0) + clhs276*clhs52 + clhs277*clhs56; // CLHS252*CLHS275 + CLHS274*DERIVATIVE(NORMALSLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2)) + CLHS276*CLHS52 + CLHS277*CLHS56
    const double clhs300 =     clhs252*clhs279 + clhs274*DeltaNormals[5](1,1) + clhs280*clhs52 + clhs281*clhs56; // CLHS252*CLHS279 + CLHS274*DERIVATIVE(NORMALSLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2)) + CLHS280*CLHS52 + CLHS281*CLHS56
    const double clhs301 =     clhs252*clhs283 + clhs274*DeltaNormals[5](1,2) + clhs284*clhs52 + clhs285*clhs56; // CLHS252*CLHS283 + CLHS274*DERIVATIVE(NORMALSLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2)) + CLHS284*CLHS52 + CLHS285*CLHS56
    const double clhs302 =     clhs256*clhs275 + clhs274*DeltaNormals[6](1,0) + clhs276*clhs59 + clhs277*clhs63; // CLHS256*CLHS275 + CLHS274*DERIVATIVE(NORMALSLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0)) + CLHS276*CLHS59 + CLHS277*CLHS63
    const double clhs303 =     clhs256*clhs279 + clhs274*DeltaNormals[6](1,1) + clhs280*clhs59 + clhs281*clhs63; // CLHS256*CLHS279 + CLHS274*DERIVATIVE(NORMALSLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0)) + CLHS280*CLHS59 + CLHS281*CLHS63
    const double clhs304 =     clhs256*clhs283 + clhs274*DeltaNormals[6](1,2) + clhs284*clhs59 + clhs285*clhs63; // CLHS256*CLHS283 + CLHS274*DERIVATIVE(NORMALSLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0)) + CLHS284*CLHS59 + CLHS285*CLHS63
    const double clhs305 =     clhs260*clhs275 + clhs274*DeltaNormals[7](1,0) + clhs276*clhs66 + clhs277*clhs70; // CLHS260*CLHS275 + CLHS274*DERIVATIVE(NORMALSLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1)) + CLHS276*CLHS66 + CLHS277*CLHS70
    const double clhs306 =     clhs260*clhs279 + clhs274*DeltaNormals[7](1,1) + clhs280*clhs66 + clhs281*clhs70; // CLHS260*CLHS279 + CLHS274*DERIVATIVE(NORMALSLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1)) + CLHS280*CLHS66 + CLHS281*CLHS70
    const double clhs307 =     clhs260*clhs283 + clhs274*DeltaNormals[7](1,2) + clhs284*clhs66 + clhs285*clhs70; // CLHS260*CLHS283 + CLHS274*DERIVATIVE(NORMALSLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1)) + CLHS284*CLHS66 + CLHS285*CLHS70
    const double clhs308 =     clhs264*clhs275 + clhs274*DeltaNormals[8](1,0) + clhs276*clhs73 + clhs277*clhs77; // CLHS264*CLHS275 + CLHS274*DERIVATIVE(NORMALSLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2)) + CLHS276*CLHS73 + CLHS277*CLHS77
    const double clhs309 =     clhs264*clhs279 + clhs274*DeltaNormals[8](1,1) + clhs280*clhs73 + clhs281*clhs77; // CLHS264*CLHS279 + CLHS274*DERIVATIVE(NORMALSLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2)) + CLHS280*CLHS73 + CLHS281*CLHS77
    const double clhs310 =     clhs264*clhs283 + clhs274*DeltaNormals[8](1,2) + clhs284*clhs73 + clhs285*clhs77; // CLHS264*CLHS283 + CLHS274*DERIVATIVE(NORMALSLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2)) + CLHS284*CLHS73 + CLHS285*CLHS77
    const double clhs311 =     clhs2*clhs4*(GPtangent1[0]*clhs270 + GPtangent1[1]*clhs271 + GPtangent1[2]*clhs272);
    const double clhs312 =     clhs2*clhs4*(GPtangent2[0]*clhs270 + GPtangent2[1]*clhs271 + GPtangent2[2]*clhs272);
    const double clhs313 =     normalslave(2,0); // NORMALSLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs314 =     normalslave(2,1); // NORMALSLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs315 =     normalslave(2,2); // NORMALSLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs316 =     clhs2*clhs5*(GPnormal[0]*clhs313 + GPnormal[1]*clhs314 + GPnormal[2]*clhs315);
    const double clhs317 =     clhs2*clhs208*clhs5;
    const double clhs318 =     clhs2*clhs313*clhs5;
    const double clhs319 =     clhs208*clhs313*clhs5;
    const double clhs320 =     clhs2*clhs208*clhs313;
    const double clhs321 =     clhs16*clhs319 + clhs22*clhs320 + clhs223*clhs318 + clhs317*DeltaNormals[0](2,0); // CLHS16*CLHS319 + CLHS22*CLHS320 + CLHS223*CLHS318 + CLHS317*DERIVATIVE(NORMALSLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs322 =     clhs2*clhs314*clhs5;
    const double clhs323 =     clhs208*clhs314*clhs5;
    const double clhs324 =     clhs2*clhs208*clhs314;
    const double clhs325 =     clhs16*clhs323 + clhs22*clhs324 + clhs223*clhs322 + clhs317*DeltaNormals[0](2,1); // CLHS16*CLHS323 + CLHS22*CLHS324 + CLHS223*CLHS322 + CLHS317*DERIVATIVE(NORMALSLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs326 =     clhs2*clhs315*clhs5;
    const double clhs327 =     clhs208*clhs315*clhs5;
    const double clhs328 =     clhs2*clhs208*clhs315;
    const double clhs329 =     clhs16*clhs327 + clhs22*clhs328 + clhs223*clhs326 + clhs317*DeltaNormals[0](2,2); // CLHS16*CLHS327 + CLHS22*CLHS328 + CLHS223*CLHS326 + CLHS317*DERIVATIVE(NORMALSLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs330 =     clhs236*clhs318 + clhs24*clhs319 + clhs29*clhs320 + clhs317*DeltaNormals[1](2,0); // CLHS236*CLHS318 + CLHS24*CLHS319 + CLHS29*CLHS320 + CLHS317*DERIVATIVE(NORMALSLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs331 =     clhs236*clhs322 + clhs24*clhs323 + clhs29*clhs324 + clhs317*DeltaNormals[1](2,1); // CLHS236*CLHS322 + CLHS24*CLHS323 + CLHS29*CLHS324 + CLHS317*DERIVATIVE(NORMALSLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs332 =     clhs236*clhs326 + clhs24*clhs327 + clhs29*clhs328 + clhs317*DeltaNormals[1](2,2); // CLHS236*CLHS326 + CLHS24*CLHS327 + CLHS29*CLHS328 + CLHS317*DERIVATIVE(NORMALSLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs333 =     clhs240*clhs318 + clhs31*clhs319 + clhs317*DeltaNormals[2](2,0) + clhs320*clhs36; // CLHS240*CLHS318 + CLHS31*CLHS319 + CLHS317*DERIVATIVE(NORMALSLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2)) + CLHS320*CLHS36
    const double clhs334 =     clhs240*clhs322 + clhs31*clhs323 + clhs317*DeltaNormals[2](2,1) + clhs324*clhs36; // CLHS240*CLHS322 + CLHS31*CLHS323 + CLHS317*DERIVATIVE(NORMALSLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2)) + CLHS324*CLHS36
    const double clhs335 =     clhs240*clhs326 + clhs31*clhs327 + clhs317*DeltaNormals[2](2,2) + clhs328*clhs36; // CLHS240*CLHS326 + CLHS31*CLHS327 + CLHS317*DERIVATIVE(NORMALSLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2)) + CLHS328*CLHS36
    const double clhs336 =     clhs244*clhs318 + clhs317*DeltaNormals[3](2,0) + clhs319*clhs38 + clhs320*clhs43; // CLHS244*CLHS318 + CLHS317*DERIVATIVE(NORMALSLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0)) + CLHS319*CLHS38 + CLHS320*CLHS43
    const double clhs337 =     clhs244*clhs322 + clhs317*DeltaNormals[3](2,1) + clhs323*clhs38 + clhs324*clhs43; // CLHS244*CLHS322 + CLHS317*DERIVATIVE(NORMALSLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0)) + CLHS323*CLHS38 + CLHS324*CLHS43
    const double clhs338 =     clhs244*clhs326 + clhs317*DeltaNormals[3](2,2) + clhs327*clhs38 + clhs328*clhs43; // CLHS244*CLHS326 + CLHS317*DERIVATIVE(NORMALSLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0)) + CLHS327*CLHS38 + CLHS328*CLHS43
    const double clhs339 =     clhs248*clhs318 + clhs317*DeltaNormals[4](2,0) + clhs319*clhs45 + clhs320*clhs50; // CLHS248*CLHS318 + CLHS317*DERIVATIVE(NORMALSLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1)) + CLHS319*CLHS45 + CLHS320*CLHS50
    const double clhs340 =     clhs248*clhs322 + clhs317*DeltaNormals[4](2,1) + clhs323*clhs45 + clhs324*clhs50; // CLHS248*CLHS322 + CLHS317*DERIVATIVE(NORMALSLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1)) + CLHS323*CLHS45 + CLHS324*CLHS50
    const double clhs341 =     clhs248*clhs326 + clhs317*DeltaNormals[4](2,2) + clhs327*clhs45 + clhs328*clhs50; // CLHS248*CLHS326 + CLHS317*DERIVATIVE(NORMALSLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1)) + CLHS327*CLHS45 + CLHS328*CLHS50
    const double clhs342 =     clhs252*clhs318 + clhs317*DeltaNormals[5](2,0) + clhs319*clhs52 + clhs320*clhs57; // CLHS252*CLHS318 + CLHS317*DERIVATIVE(NORMALSLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2)) + CLHS319*CLHS52 + CLHS320*CLHS57
    const double clhs343 =     clhs252*clhs322 + clhs317*DeltaNormals[5](2,1) + clhs323*clhs52 + clhs324*clhs57; // CLHS252*CLHS322 + CLHS317*DERIVATIVE(NORMALSLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2)) + CLHS323*CLHS52 + CLHS324*CLHS57
    const double clhs344 =     clhs252*clhs326 + clhs317*DeltaNormals[5](2,2) + clhs327*clhs52 + clhs328*clhs57; // CLHS252*CLHS326 + CLHS317*DERIVATIVE(NORMALSLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2)) + CLHS327*CLHS52 + CLHS328*CLHS57
    const double clhs345 =     clhs256*clhs318 + clhs317*DeltaNormals[6](2,0) + clhs319*clhs59 + clhs320*clhs64; // CLHS256*CLHS318 + CLHS317*DERIVATIVE(NORMALSLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0)) + CLHS319*CLHS59 + CLHS320*CLHS64
    const double clhs346 =     clhs256*clhs322 + clhs317*DeltaNormals[6](2,1) + clhs323*clhs59 + clhs324*clhs64; // CLHS256*CLHS322 + CLHS317*DERIVATIVE(NORMALSLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0)) + CLHS323*CLHS59 + CLHS324*CLHS64
    const double clhs347 =     clhs256*clhs326 + clhs317*DeltaNormals[6](2,2) + clhs327*clhs59 + clhs328*clhs64; // CLHS256*CLHS326 + CLHS317*DERIVATIVE(NORMALSLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0)) + CLHS327*CLHS59 + CLHS328*CLHS64
    const double clhs348 =     clhs260*clhs318 + clhs317*DeltaNormals[7](2,0) + clhs319*clhs66 + clhs320*clhs71; // CLHS260*CLHS318 + CLHS317*DERIVATIVE(NORMALSLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1)) + CLHS319*CLHS66 + CLHS320*CLHS71
    const double clhs349 =     clhs260*clhs322 + clhs317*DeltaNormals[7](2,1) + clhs323*clhs66 + clhs324*clhs71; // CLHS260*CLHS322 + CLHS317*DERIVATIVE(NORMALSLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1)) + CLHS323*CLHS66 + CLHS324*CLHS71
    const double clhs350 =     clhs260*clhs326 + clhs317*DeltaNormals[7](2,2) + clhs327*clhs66 + clhs328*clhs71; // CLHS260*CLHS326 + CLHS317*DERIVATIVE(NORMALSLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1)) + CLHS327*CLHS66 + CLHS328*CLHS71
    const double clhs351 =     clhs264*clhs318 + clhs317*DeltaNormals[8](2,0) + clhs319*clhs73 + clhs320*clhs78; // CLHS264*CLHS318 + CLHS317*DERIVATIVE(NORMALSLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2)) + CLHS319*CLHS73 + CLHS320*CLHS78
    const double clhs352 =     clhs264*clhs322 + clhs317*DeltaNormals[8](2,1) + clhs323*clhs73 + clhs324*clhs78; // CLHS264*CLHS322 + CLHS317*DERIVATIVE(NORMALSLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2)) + CLHS323*CLHS73 + CLHS324*CLHS78
    const double clhs353 =     clhs264*clhs326 + clhs317*DeltaNormals[8](2,2) + clhs327*clhs73 + clhs328*clhs78; // CLHS264*CLHS326 + CLHS317*DERIVATIVE(NORMALSLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2)) + CLHS327*CLHS73 + CLHS328*CLHS78
    const double clhs354 =     clhs2*clhs5*(GPtangent1[0]*clhs313 + GPtangent1[1]*clhs314 + GPtangent1[2]*clhs315);
    const double clhs355 =     clhs2*clhs5*(GPtangent2[0]*clhs313 + GPtangent2[1]*clhs314 + GPtangent2[2]*clhs315);

    lhs(0,0)=clhs1*clhs7;
    lhs(0,1)=clhs7*clhs8;
    lhs(0,2)=clhs7*clhs9;
    lhs(0,3)=clhs10*clhs7;
    lhs(0,4)=clhs11*clhs7;
    lhs(0,5)=clhs12*clhs7;
    lhs(0,6)=clhs13*clhs7;
    lhs(0,7)=clhs14*clhs7;
    lhs(0,8)=clhs15*clhs7;
    lhs(0,9)=clhs0*clhs17 + clhs18*clhs7 + clhs19*clhs23;
    lhs(0,10)=clhs0*clhs25 + clhs19*clhs30 + clhs26*clhs7;
    lhs(0,11)=clhs0*clhs32 + clhs19*clhs37 + clhs33*clhs7;
    lhs(0,12)=clhs0*clhs39 + clhs19*clhs44 + clhs40*clhs7;
    lhs(0,13)=clhs0*clhs46 + clhs19*clhs51 + clhs47*clhs7;
    lhs(0,14)=clhs0*clhs53 + clhs19*clhs58 + clhs54*clhs7;
    lhs(0,15)=clhs0*clhs60 + clhs19*clhs65 + clhs61*clhs7;
    lhs(0,16)=clhs0*clhs67 + clhs19*clhs72 + clhs68*clhs7;
    lhs(0,17)=clhs0*clhs74 + clhs19*clhs79 + clhs7*clhs75;
    lhs(0,18)=clhs80;
    lhs(0,19)=0;
    lhs(0,20)=0;
    lhs(0,21)=clhs81;
    lhs(0,22)=0;
    lhs(0,23)=0;
    lhs(0,24)=clhs82;
    lhs(0,25)=0;
    lhs(0,26)=0;
    lhs(1,0)=clhs1*clhs84;
    lhs(1,1)=clhs8*clhs84;
    lhs(1,2)=clhs84*clhs9;
    lhs(1,3)=clhs10*clhs84;
    lhs(1,4)=clhs11*clhs84;
    lhs(1,5)=clhs12*clhs84;
    lhs(1,6)=clhs13*clhs84;
    lhs(1,7)=clhs14*clhs84;
    lhs(1,8)=clhs15*clhs84;
    lhs(1,9)=clhs0*clhs85 + clhs18*clhs84 + clhs19*clhs86;
    lhs(1,10)=clhs0*clhs87 + clhs19*clhs88 + clhs26*clhs84;
    lhs(1,11)=clhs0*clhs89 + clhs19*clhs90 + clhs33*clhs84;
    lhs(1,12)=clhs0*clhs91 + clhs19*clhs92 + clhs40*clhs84;
    lhs(1,13)=clhs0*clhs93 + clhs19*clhs94 + clhs47*clhs84;
    lhs(1,14)=clhs0*clhs95 + clhs19*clhs96 + clhs54*clhs84;
    lhs(1,15)=clhs0*clhs97 + clhs19*clhs98 + clhs61*clhs84;
    lhs(1,16)=clhs0*clhs99 + clhs100*clhs19 + clhs68*clhs84;
    lhs(1,17)=clhs0*clhs101 + clhs102*clhs19 + clhs75*clhs84;
    lhs(1,18)=0;
    lhs(1,19)=clhs80;
    lhs(1,20)=0;
    lhs(1,21)=0;
    lhs(1,22)=clhs81;
    lhs(1,23)=0;
    lhs(1,24)=0;
    lhs(1,25)=clhs82;
    lhs(1,26)=0;
    lhs(2,0)=clhs1*clhs104;
    lhs(2,1)=clhs104*clhs8;
    lhs(2,2)=clhs104*clhs9;
    lhs(2,3)=clhs10*clhs104;
    lhs(2,4)=clhs104*clhs11;
    lhs(2,5)=clhs104*clhs12;
    lhs(2,6)=clhs104*clhs13;
    lhs(2,7)=clhs104*clhs14;
    lhs(2,8)=clhs104*clhs15;
    lhs(2,9)=clhs0*clhs105 + clhs104*clhs18 + clhs106*clhs19;
    lhs(2,10)=clhs0*clhs107 + clhs104*clhs26 + clhs108*clhs19;
    lhs(2,11)=clhs0*clhs109 + clhs104*clhs33 + clhs110*clhs19;
    lhs(2,12)=clhs0*clhs111 + clhs104*clhs40 + clhs112*clhs19;
    lhs(2,13)=clhs0*clhs113 + clhs104*clhs47 + clhs114*clhs19;
    lhs(2,14)=clhs0*clhs115 + clhs104*clhs54 + clhs116*clhs19;
    lhs(2,15)=clhs0*clhs117 + clhs104*clhs61 + clhs118*clhs19;
    lhs(2,16)=clhs0*clhs119 + clhs104*clhs68 + clhs120*clhs19;
    lhs(2,17)=clhs0*clhs121 + clhs104*clhs75 + clhs122*clhs19;
    lhs(2,18)=0;
    lhs(2,19)=0;
    lhs(2,20)=clhs80;
    lhs(2,21)=0;
    lhs(2,22)=0;
    lhs(2,23)=clhs81;
    lhs(2,24)=0;
    lhs(2,25)=0;
    lhs(2,26)=clhs82;
    lhs(3,0)=clhs124*clhs7;
    lhs(3,1)=clhs125*clhs7;
    lhs(3,2)=clhs126*clhs7;
    lhs(3,3)=clhs127*clhs7;
    lhs(3,4)=clhs128*clhs7;
    lhs(3,5)=clhs129*clhs7;
    lhs(3,6)=clhs130*clhs7;
    lhs(3,7)=clhs131*clhs7;
    lhs(3,8)=clhs132*clhs7;
    lhs(3,9)=clhs123*clhs17 + clhs133*clhs7 + clhs134*clhs23;
    lhs(3,10)=clhs123*clhs25 + clhs134*clhs30 + clhs135*clhs7;
    lhs(3,11)=clhs123*clhs32 + clhs134*clhs37 + clhs136*clhs7;
    lhs(3,12)=clhs123*clhs39 + clhs134*clhs44 + clhs137*clhs7;
    lhs(3,13)=clhs123*clhs46 + clhs134*clhs51 + clhs138*clhs7;
    lhs(3,14)=clhs123*clhs53 + clhs134*clhs58 + clhs139*clhs7;
    lhs(3,15)=clhs123*clhs60 + clhs134*clhs65 + clhs140*clhs7;
    lhs(3,16)=clhs123*clhs67 + clhs134*clhs72 + clhs141*clhs7;
    lhs(3,17)=clhs123*clhs74 + clhs134*clhs79 + clhs142*clhs7;
    lhs(3,18)=clhs143;
    lhs(3,19)=0;
    lhs(3,20)=0;
    lhs(3,21)=clhs144;
    lhs(3,22)=0;
    lhs(3,23)=0;
    lhs(3,24)=clhs145;
    lhs(3,25)=0;
    lhs(3,26)=0;
    lhs(4,0)=clhs124*clhs84;
    lhs(4,1)=clhs125*clhs84;
    lhs(4,2)=clhs126*clhs84;
    lhs(4,3)=clhs127*clhs84;
    lhs(4,4)=clhs128*clhs84;
    lhs(4,5)=clhs129*clhs84;
    lhs(4,6)=clhs130*clhs84;
    lhs(4,7)=clhs131*clhs84;
    lhs(4,8)=clhs132*clhs84;
    lhs(4,9)=clhs123*clhs85 + clhs133*clhs84 + clhs134*clhs86;
    lhs(4,10)=clhs123*clhs87 + clhs134*clhs88 + clhs135*clhs84;
    lhs(4,11)=clhs123*clhs89 + clhs134*clhs90 + clhs136*clhs84;
    lhs(4,12)=clhs123*clhs91 + clhs134*clhs92 + clhs137*clhs84;
    lhs(4,13)=clhs123*clhs93 + clhs134*clhs94 + clhs138*clhs84;
    lhs(4,14)=clhs123*clhs95 + clhs134*clhs96 + clhs139*clhs84;
    lhs(4,15)=clhs123*clhs97 + clhs134*clhs98 + clhs140*clhs84;
    lhs(4,16)=clhs100*clhs134 + clhs123*clhs99 + clhs141*clhs84;
    lhs(4,17)=clhs101*clhs123 + clhs102*clhs134 + clhs142*clhs84;
    lhs(4,18)=0;
    lhs(4,19)=clhs143;
    lhs(4,20)=0;
    lhs(4,21)=0;
    lhs(4,22)=clhs144;
    lhs(4,23)=0;
    lhs(4,24)=0;
    lhs(4,25)=clhs145;
    lhs(4,26)=0;
    lhs(5,0)=clhs104*clhs124;
    lhs(5,1)=clhs104*clhs125;
    lhs(5,2)=clhs104*clhs126;
    lhs(5,3)=clhs104*clhs127;
    lhs(5,4)=clhs104*clhs128;
    lhs(5,5)=clhs104*clhs129;
    lhs(5,6)=clhs104*clhs130;
    lhs(5,7)=clhs104*clhs131;
    lhs(5,8)=clhs104*clhs132;
    lhs(5,9)=clhs104*clhs133 + clhs105*clhs123 + clhs106*clhs134;
    lhs(5,10)=clhs104*clhs135 + clhs107*clhs123 + clhs108*clhs134;
    lhs(5,11)=clhs104*clhs136 + clhs109*clhs123 + clhs110*clhs134;
    lhs(5,12)=clhs104*clhs137 + clhs111*clhs123 + clhs112*clhs134;
    lhs(5,13)=clhs104*clhs138 + clhs113*clhs123 + clhs114*clhs134;
    lhs(5,14)=clhs104*clhs139 + clhs115*clhs123 + clhs116*clhs134;
    lhs(5,15)=clhs104*clhs140 + clhs117*clhs123 + clhs118*clhs134;
    lhs(5,16)=clhs104*clhs141 + clhs119*clhs123 + clhs120*clhs134;
    lhs(5,17)=clhs104*clhs142 + clhs121*clhs123 + clhs122*clhs134;
    lhs(5,18)=0;
    lhs(5,19)=0;
    lhs(5,20)=clhs143;
    lhs(5,21)=0;
    lhs(5,22)=0;
    lhs(5,23)=clhs144;
    lhs(5,24)=0;
    lhs(5,25)=0;
    lhs(5,26)=clhs145;
    lhs(6,0)=clhs147*clhs7;
    lhs(6,1)=clhs148*clhs7;
    lhs(6,2)=clhs149*clhs7;
    lhs(6,3)=clhs150*clhs7;
    lhs(6,4)=clhs151*clhs7;
    lhs(6,5)=clhs152*clhs7;
    lhs(6,6)=clhs153*clhs7;
    lhs(6,7)=clhs154*clhs7;
    lhs(6,8)=clhs155*clhs7;
    lhs(6,9)=clhs146*clhs17 + clhs156*clhs7 + clhs157*clhs23;
    lhs(6,10)=clhs146*clhs25 + clhs157*clhs30 + clhs158*clhs7;
    lhs(6,11)=clhs146*clhs32 + clhs157*clhs37 + clhs159*clhs7;
    lhs(6,12)=clhs146*clhs39 + clhs157*clhs44 + clhs160*clhs7;
    lhs(6,13)=clhs146*clhs46 + clhs157*clhs51 + clhs161*clhs7;
    lhs(6,14)=clhs146*clhs53 + clhs157*clhs58 + clhs162*clhs7;
    lhs(6,15)=clhs146*clhs60 + clhs157*clhs65 + clhs163*clhs7;
    lhs(6,16)=clhs146*clhs67 + clhs157*clhs72 + clhs164*clhs7;
    lhs(6,17)=clhs146*clhs74 + clhs157*clhs79 + clhs165*clhs7;
    lhs(6,18)=clhs166;
    lhs(6,19)=0;
    lhs(6,20)=0;
    lhs(6,21)=clhs167;
    lhs(6,22)=0;
    lhs(6,23)=0;
    lhs(6,24)=clhs168;
    lhs(6,25)=0;
    lhs(6,26)=0;
    lhs(7,0)=clhs147*clhs84;
    lhs(7,1)=clhs148*clhs84;
    lhs(7,2)=clhs149*clhs84;
    lhs(7,3)=clhs150*clhs84;
    lhs(7,4)=clhs151*clhs84;
    lhs(7,5)=clhs152*clhs84;
    lhs(7,6)=clhs153*clhs84;
    lhs(7,7)=clhs154*clhs84;
    lhs(7,8)=clhs155*clhs84;
    lhs(7,9)=clhs146*clhs85 + clhs156*clhs84 + clhs157*clhs86;
    lhs(7,10)=clhs146*clhs87 + clhs157*clhs88 + clhs158*clhs84;
    lhs(7,11)=clhs146*clhs89 + clhs157*clhs90 + clhs159*clhs84;
    lhs(7,12)=clhs146*clhs91 + clhs157*clhs92 + clhs160*clhs84;
    lhs(7,13)=clhs146*clhs93 + clhs157*clhs94 + clhs161*clhs84;
    lhs(7,14)=clhs146*clhs95 + clhs157*clhs96 + clhs162*clhs84;
    lhs(7,15)=clhs146*clhs97 + clhs157*clhs98 + clhs163*clhs84;
    lhs(7,16)=clhs100*clhs157 + clhs146*clhs99 + clhs164*clhs84;
    lhs(7,17)=clhs101*clhs146 + clhs102*clhs157 + clhs165*clhs84;
    lhs(7,18)=0;
    lhs(7,19)=clhs166;
    lhs(7,20)=0;
    lhs(7,21)=0;
    lhs(7,22)=clhs167;
    lhs(7,23)=0;
    lhs(7,24)=0;
    lhs(7,25)=clhs168;
    lhs(7,26)=0;
    lhs(8,0)=clhs104*clhs147;
    lhs(8,1)=clhs104*clhs148;
    lhs(8,2)=clhs104*clhs149;
    lhs(8,3)=clhs104*clhs150;
    lhs(8,4)=clhs104*clhs151;
    lhs(8,5)=clhs104*clhs152;
    lhs(8,6)=clhs104*clhs153;
    lhs(8,7)=clhs104*clhs154;
    lhs(8,8)=clhs104*clhs155;
    lhs(8,9)=clhs104*clhs156 + clhs105*clhs146 + clhs106*clhs157;
    lhs(8,10)=clhs104*clhs158 + clhs107*clhs146 + clhs108*clhs157;
    lhs(8,11)=clhs104*clhs159 + clhs109*clhs146 + clhs110*clhs157;
    lhs(8,12)=clhs104*clhs160 + clhs111*clhs146 + clhs112*clhs157;
    lhs(8,13)=clhs104*clhs161 + clhs113*clhs146 + clhs114*clhs157;
    lhs(8,14)=clhs104*clhs162 + clhs115*clhs146 + clhs116*clhs157;
    lhs(8,15)=clhs104*clhs163 + clhs117*clhs146 + clhs118*clhs157;
    lhs(8,16)=clhs104*clhs164 + clhs119*clhs146 + clhs120*clhs157;
    lhs(8,17)=clhs104*clhs165 + clhs121*clhs146 + clhs122*clhs157;
    lhs(8,18)=0;
    lhs(8,19)=0;
    lhs(8,20)=clhs166;
    lhs(8,21)=0;
    lhs(8,22)=0;
    lhs(8,23)=clhs167;
    lhs(8,24)=0;
    lhs(8,25)=0;
    lhs(8,26)=clhs168;
    lhs(9,0)=0;
    lhs(9,1)=0;
    lhs(9,2)=0;
    lhs(9,3)=0;
    lhs(9,4)=0;
    lhs(9,5)=0;
    lhs(9,6)=0;
    lhs(9,7)=0;
    lhs(9,8)=0;
    lhs(9,9)=-N1[0]*clhs169;
    lhs(9,10)=-N1[0]*clhs170;
    lhs(9,11)=-N1[0]*clhs171;
    lhs(9,12)=-N1[0]*clhs172;
    lhs(9,13)=-N1[0]*clhs173;
    lhs(9,14)=-N1[0]*clhs174;
    lhs(9,15)=-N1[0]*clhs175;
    lhs(9,16)=-N1[0]*clhs176;
    lhs(9,17)=-N1[0]*clhs177;
    lhs(9,18)=clhs179;
    lhs(9,19)=0;
    lhs(9,20)=0;
    lhs(9,21)=clhs180;
    lhs(9,22)=0;
    lhs(9,23)=0;
    lhs(9,24)=clhs181;
    lhs(9,25)=0;
    lhs(9,26)=0;
    lhs(10,0)=0;
    lhs(10,1)=0;
    lhs(10,2)=0;
    lhs(10,3)=0;
    lhs(10,4)=0;
    lhs(10,5)=0;
    lhs(10,6)=0;
    lhs(10,7)=0;
    lhs(10,8)=0;
    lhs(10,9)=-N1[0]*clhs182;
    lhs(10,10)=-N1[0]*clhs183;
    lhs(10,11)=-N1[0]*clhs184;
    lhs(10,12)=-N1[0]*clhs185;
    lhs(10,13)=-N1[0]*clhs186;
    lhs(10,14)=-N1[0]*clhs187;
    lhs(10,15)=-N1[0]*clhs188;
    lhs(10,16)=-N1[0]*clhs189;
    lhs(10,17)=-N1[0]*clhs190;
    lhs(10,18)=0;
    lhs(10,19)=clhs179;
    lhs(10,20)=0;
    lhs(10,21)=0;
    lhs(10,22)=clhs180;
    lhs(10,23)=0;
    lhs(10,24)=0;
    lhs(10,25)=clhs181;
    lhs(10,26)=0;
    lhs(11,0)=0;
    lhs(11,1)=0;
    lhs(11,2)=0;
    lhs(11,3)=0;
    lhs(11,4)=0;
    lhs(11,5)=0;
    lhs(11,6)=0;
    lhs(11,7)=0;
    lhs(11,8)=0;
    lhs(11,9)=-N1[0]*clhs191;
    lhs(11,10)=-N1[0]*clhs192;
    lhs(11,11)=-N1[0]*clhs193;
    lhs(11,12)=-N1[0]*clhs194;
    lhs(11,13)=-N1[0]*clhs195;
    lhs(11,14)=-N1[0]*clhs196;
    lhs(11,15)=-N1[0]*clhs197;
    lhs(11,16)=-N1[0]*clhs198;
    lhs(11,17)=-N1[0]*clhs199;
    lhs(11,18)=0;
    lhs(11,19)=0;
    lhs(11,20)=clhs179;
    lhs(11,21)=0;
    lhs(11,22)=0;
    lhs(11,23)=clhs180;
    lhs(11,24)=0;
    lhs(11,25)=0;
    lhs(11,26)=clhs181;
    lhs(12,0)=0;
    lhs(12,1)=0;
    lhs(12,2)=0;
    lhs(12,3)=0;
    lhs(12,4)=0;
    lhs(12,5)=0;
    lhs(12,6)=0;
    lhs(12,7)=0;
    lhs(12,8)=0;
    lhs(12,9)=-N1[1]*clhs169;
    lhs(12,10)=-N1[1]*clhs170;
    lhs(12,11)=-N1[1]*clhs171;
    lhs(12,12)=-N1[1]*clhs172;
    lhs(12,13)=-N1[1]*clhs173;
    lhs(12,14)=-N1[1]*clhs174;
    lhs(12,15)=-N1[1]*clhs175;
    lhs(12,16)=-N1[1]*clhs176;
    lhs(12,17)=-N1[1]*clhs177;
    lhs(12,18)=clhs201;
    lhs(12,19)=0;
    lhs(12,20)=0;
    lhs(12,21)=clhs202;
    lhs(12,22)=0;
    lhs(12,23)=0;
    lhs(12,24)=clhs203;
    lhs(12,25)=0;
    lhs(12,26)=0;
    lhs(13,0)=0;
    lhs(13,1)=0;
    lhs(13,2)=0;
    lhs(13,3)=0;
    lhs(13,4)=0;
    lhs(13,5)=0;
    lhs(13,6)=0;
    lhs(13,7)=0;
    lhs(13,8)=0;
    lhs(13,9)=-N1[1]*clhs182;
    lhs(13,10)=-N1[1]*clhs183;
    lhs(13,11)=-N1[1]*clhs184;
    lhs(13,12)=-N1[1]*clhs185;
    lhs(13,13)=-N1[1]*clhs186;
    lhs(13,14)=-N1[1]*clhs187;
    lhs(13,15)=-N1[1]*clhs188;
    lhs(13,16)=-N1[1]*clhs189;
    lhs(13,17)=-N1[1]*clhs190;
    lhs(13,18)=0;
    lhs(13,19)=clhs201;
    lhs(13,20)=0;
    lhs(13,21)=0;
    lhs(13,22)=clhs202;
    lhs(13,23)=0;
    lhs(13,24)=0;
    lhs(13,25)=clhs203;
    lhs(13,26)=0;
    lhs(14,0)=0;
    lhs(14,1)=0;
    lhs(14,2)=0;
    lhs(14,3)=0;
    lhs(14,4)=0;
    lhs(14,5)=0;
    lhs(14,6)=0;
    lhs(14,7)=0;
    lhs(14,8)=0;
    lhs(14,9)=-N1[1]*clhs191;
    lhs(14,10)=-N1[1]*clhs192;
    lhs(14,11)=-N1[1]*clhs193;
    lhs(14,12)=-N1[1]*clhs194;
    lhs(14,13)=-N1[1]*clhs195;
    lhs(14,14)=-N1[1]*clhs196;
    lhs(14,15)=-N1[1]*clhs197;
    lhs(14,16)=-N1[1]*clhs198;
    lhs(14,17)=-N1[1]*clhs199;
    lhs(14,18)=0;
    lhs(14,19)=0;
    lhs(14,20)=clhs201;
    lhs(14,21)=0;
    lhs(14,22)=0;
    lhs(14,23)=clhs202;
    lhs(14,24)=0;
    lhs(14,25)=0;
    lhs(14,26)=clhs203;
    lhs(15,0)=0;
    lhs(15,1)=0;
    lhs(15,2)=0;
    lhs(15,3)=0;
    lhs(15,4)=0;
    lhs(15,5)=0;
    lhs(15,6)=0;
    lhs(15,7)=0;
    lhs(15,8)=0;
    lhs(15,9)=-N1[2]*clhs169;
    lhs(15,10)=-N1[2]*clhs170;
    lhs(15,11)=-N1[2]*clhs171;
    lhs(15,12)=-N1[2]*clhs172;
    lhs(15,13)=-N1[2]*clhs173;
    lhs(15,14)=-N1[2]*clhs174;
    lhs(15,15)=-N1[2]*clhs175;
    lhs(15,16)=-N1[2]*clhs176;
    lhs(15,17)=-N1[2]*clhs177;
    lhs(15,18)=clhs205;
    lhs(15,19)=0;
    lhs(15,20)=0;
    lhs(15,21)=clhs206;
    lhs(15,22)=0;
    lhs(15,23)=0;
    lhs(15,24)=clhs207;
    lhs(15,25)=0;
    lhs(15,26)=0;
    lhs(16,0)=0;
    lhs(16,1)=0;
    lhs(16,2)=0;
    lhs(16,3)=0;
    lhs(16,4)=0;
    lhs(16,5)=0;
    lhs(16,6)=0;
    lhs(16,7)=0;
    lhs(16,8)=0;
    lhs(16,9)=-N1[2]*clhs182;
    lhs(16,10)=-N1[2]*clhs183;
    lhs(16,11)=-N1[2]*clhs184;
    lhs(16,12)=-N1[2]*clhs185;
    lhs(16,13)=-N1[2]*clhs186;
    lhs(16,14)=-N1[2]*clhs187;
    lhs(16,15)=-N1[2]*clhs188;
    lhs(16,16)=-N1[2]*clhs189;
    lhs(16,17)=-N1[2]*clhs190;
    lhs(16,18)=0;
    lhs(16,19)=clhs205;
    lhs(16,20)=0;
    lhs(16,21)=0;
    lhs(16,22)=clhs206;
    lhs(16,23)=0;
    lhs(16,24)=0;
    lhs(16,25)=clhs207;
    lhs(16,26)=0;
    lhs(17,0)=0;
    lhs(17,1)=0;
    lhs(17,2)=0;
    lhs(17,3)=0;
    lhs(17,4)=0;
    lhs(17,5)=0;
    lhs(17,6)=0;
    lhs(17,7)=0;
    lhs(17,8)=0;
    lhs(17,9)=-N1[2]*clhs191;
    lhs(17,10)=-N1[2]*clhs192;
    lhs(17,11)=-N1[2]*clhs193;
    lhs(17,12)=-N1[2]*clhs194;
    lhs(17,13)=-N1[2]*clhs195;
    lhs(17,14)=-N1[2]*clhs196;
    lhs(17,15)=-N1[2]*clhs197;
    lhs(17,16)=-N1[2]*clhs198;
    lhs(17,17)=-N1[2]*clhs199;
    lhs(17,18)=0;
    lhs(17,19)=0;
    lhs(17,20)=clhs205;
    lhs(17,21)=0;
    lhs(17,22)=0;
    lhs(17,23)=clhs206;
    lhs(17,24)=0;
    lhs(17,25)=0;
    lhs(17,26)=clhs207;
    lhs(18,0)=-clhs209*clhs213;
    lhs(18,1)=-clhs213*clhs214;
    lhs(18,2)=-clhs213*clhs215;
    lhs(18,3)=-clhs213*clhs216;
    lhs(18,4)=-clhs213*clhs217;
    lhs(18,5)=-clhs213*clhs218;
    lhs(18,6)=-clhs213*clhs219;
    lhs(18,7)=-clhs213*clhs220;
    lhs(18,8)=-clhs213*clhs221;
    lhs(18,9)=-GPnormal[0]*clhs227 - GPnormal[1]*clhs231 - GPnormal[2]*clhs235;
    lhs(18,10)=-GPnormal[0]*clhs237 - GPnormal[1]*clhs238 - GPnormal[2]*clhs239;
    lhs(18,11)=-GPnormal[0]*clhs241 - GPnormal[1]*clhs242 - GPnormal[2]*clhs243;
    lhs(18,12)=-GPnormal[0]*clhs245 - GPnormal[1]*clhs246 - GPnormal[2]*clhs247;
    lhs(18,13)=-GPnormal[0]*clhs249 - GPnormal[1]*clhs250 - GPnormal[2]*clhs251;
    lhs(18,14)=-GPnormal[0]*clhs253 - GPnormal[1]*clhs254 - GPnormal[2]*clhs255;
    lhs(18,15)=-GPnormal[0]*clhs257 - GPnormal[1]*clhs258 - GPnormal[2]*clhs259;
    lhs(18,16)=-GPnormal[0]*clhs261 - GPnormal[1]*clhs262 - GPnormal[2]*clhs263;
    lhs(18,17)=-GPnormal[0]*clhs265 - GPnormal[1]*clhs266 - GPnormal[2]*clhs267;
    lhs(18,18)=0;
    lhs(18,19)=0;
    lhs(18,20)=0;
    lhs(18,21)=0;
    lhs(18,22)=0;
    lhs(18,23)=0;
    lhs(18,24)=0;
    lhs(18,25)=0;
    lhs(18,26)=0;
    lhs(19,0)=-clhs209*clhs268;
    lhs(19,1)=-clhs214*clhs268;
    lhs(19,2)=-clhs215*clhs268;
    lhs(19,3)=-clhs216*clhs268;
    lhs(19,4)=-clhs217*clhs268;
    lhs(19,5)=-clhs218*clhs268;
    lhs(19,6)=-clhs219*clhs268;
    lhs(19,7)=-clhs220*clhs268;
    lhs(19,8)=-clhs221*clhs268;
    lhs(19,9)=-GPtangent1[0]*clhs227 - GPtangent1[1]*clhs231 - GPtangent1[2]*clhs235;
    lhs(19,10)=-GPtangent1[0]*clhs237 - GPtangent1[1]*clhs238 - GPtangent1[2]*clhs239;
    lhs(19,11)=-GPtangent1[0]*clhs241 - GPtangent1[1]*clhs242 - GPtangent1[2]*clhs243;
    lhs(19,12)=-GPtangent1[0]*clhs245 - GPtangent1[1]*clhs246 - GPtangent1[2]*clhs247;
    lhs(19,13)=-GPtangent1[0]*clhs249 - GPtangent1[1]*clhs250 - GPtangent1[2]*clhs251;
    lhs(19,14)=-GPtangent1[0]*clhs253 - GPtangent1[1]*clhs254 - GPtangent1[2]*clhs255;
    lhs(19,15)=-GPtangent1[0]*clhs257 - GPtangent1[1]*clhs258 - GPtangent1[2]*clhs259;
    lhs(19,16)=-GPtangent1[0]*clhs261 - GPtangent1[1]*clhs262 - GPtangent1[2]*clhs263;
    lhs(19,17)=-GPtangent1[0]*clhs265 - GPtangent1[1]*clhs266 - GPtangent1[2]*clhs267;
    lhs(19,18)=0;
    lhs(19,19)=0;
    lhs(19,20)=0;
    lhs(19,21)=0;
    lhs(19,22)=0;
    lhs(19,23)=0;
    lhs(19,24)=0;
    lhs(19,25)=0;
    lhs(19,26)=0;
    lhs(20,0)=-clhs209*clhs269;
    lhs(20,1)=-clhs214*clhs269;
    lhs(20,2)=-clhs215*clhs269;
    lhs(20,3)=-clhs216*clhs269;
    lhs(20,4)=-clhs217*clhs269;
    lhs(20,5)=-clhs218*clhs269;
    lhs(20,6)=-clhs219*clhs269;
    lhs(20,7)=-clhs220*clhs269;
    lhs(20,8)=-clhs221*clhs269;
    lhs(20,9)=-GPtangent2[0]*clhs227 - GPtangent2[1]*clhs231 - GPtangent2[2]*clhs235;
    lhs(20,10)=-GPtangent2[0]*clhs237 - GPtangent2[1]*clhs238 - GPtangent2[2]*clhs239;
    lhs(20,11)=-GPtangent2[0]*clhs241 - GPtangent2[1]*clhs242 - GPtangent2[2]*clhs243;
    lhs(20,12)=-GPtangent2[0]*clhs245 - GPtangent2[1]*clhs246 - GPtangent2[2]*clhs247;
    lhs(20,13)=-GPtangent2[0]*clhs249 - GPtangent2[1]*clhs250 - GPtangent2[2]*clhs251;
    lhs(20,14)=-GPtangent2[0]*clhs253 - GPtangent2[1]*clhs254 - GPtangent2[2]*clhs255;
    lhs(20,15)=-GPtangent2[0]*clhs257 - GPtangent2[1]*clhs258 - GPtangent2[2]*clhs259;
    lhs(20,16)=-GPtangent2[0]*clhs261 - GPtangent2[1]*clhs262 - GPtangent2[2]*clhs263;
    lhs(20,17)=-GPtangent2[0]*clhs265 - GPtangent2[1]*clhs266 - GPtangent2[2]*clhs267;
    lhs(20,18)=0;
    lhs(20,19)=0;
    lhs(20,20)=0;
    lhs(20,21)=0;
    lhs(20,22)=0;
    lhs(20,23)=0;
    lhs(20,24)=0;
    lhs(20,25)=0;
    lhs(20,26)=0;
    lhs(21,0)=-clhs209*clhs273;
    lhs(21,1)=-clhs214*clhs273;
    lhs(21,2)=-clhs215*clhs273;
    lhs(21,3)=-clhs216*clhs273;
    lhs(21,4)=-clhs217*clhs273;
    lhs(21,5)=-clhs218*clhs273;
    lhs(21,6)=-clhs219*clhs273;
    lhs(21,7)=-clhs220*clhs273;
    lhs(21,8)=-clhs221*clhs273;
    lhs(21,9)=-GPnormal[0]*clhs278 - GPnormal[1]*clhs282 - GPnormal[2]*clhs286;
    lhs(21,10)=-GPnormal[0]*clhs287 - GPnormal[1]*clhs288 - GPnormal[2]*clhs289;
    lhs(21,11)=-GPnormal[0]*clhs290 - GPnormal[1]*clhs291 - GPnormal[2]*clhs292;
    lhs(21,12)=-GPnormal[0]*clhs293 - GPnormal[1]*clhs294 - GPnormal[2]*clhs295;
    lhs(21,13)=-GPnormal[0]*clhs296 - GPnormal[1]*clhs297 - GPnormal[2]*clhs298;
    lhs(21,14)=-GPnormal[0]*clhs299 - GPnormal[1]*clhs300 - GPnormal[2]*clhs301;
    lhs(21,15)=-GPnormal[0]*clhs302 - GPnormal[1]*clhs303 - GPnormal[2]*clhs304;
    lhs(21,16)=-GPnormal[0]*clhs305 - GPnormal[1]*clhs306 - GPnormal[2]*clhs307;
    lhs(21,17)=-GPnormal[0]*clhs308 - GPnormal[1]*clhs309 - GPnormal[2]*clhs310;
    lhs(21,18)=0;
    lhs(21,19)=0;
    lhs(21,20)=0;
    lhs(21,21)=0;
    lhs(21,22)=0;
    lhs(21,23)=0;
    lhs(21,24)=0;
    lhs(21,25)=0;
    lhs(21,26)=0;
    lhs(22,0)=-clhs209*clhs311;
    lhs(22,1)=-clhs214*clhs311;
    lhs(22,2)=-clhs215*clhs311;
    lhs(22,3)=-clhs216*clhs311;
    lhs(22,4)=-clhs217*clhs311;
    lhs(22,5)=-clhs218*clhs311;
    lhs(22,6)=-clhs219*clhs311;
    lhs(22,7)=-clhs220*clhs311;
    lhs(22,8)=-clhs221*clhs311;
    lhs(22,9)=-GPtangent1[0]*clhs278 - GPtangent1[1]*clhs282 - GPtangent1[2]*clhs286;
    lhs(22,10)=-GPtangent1[0]*clhs287 - GPtangent1[1]*clhs288 - GPtangent1[2]*clhs289;
    lhs(22,11)=-GPtangent1[0]*clhs290 - GPtangent1[1]*clhs291 - GPtangent1[2]*clhs292;
    lhs(22,12)=-GPtangent1[0]*clhs293 - GPtangent1[1]*clhs294 - GPtangent1[2]*clhs295;
    lhs(22,13)=-GPtangent1[0]*clhs296 - GPtangent1[1]*clhs297 - GPtangent1[2]*clhs298;
    lhs(22,14)=-GPtangent1[0]*clhs299 - GPtangent1[1]*clhs300 - GPtangent1[2]*clhs301;
    lhs(22,15)=-GPtangent1[0]*clhs302 - GPtangent1[1]*clhs303 - GPtangent1[2]*clhs304;
    lhs(22,16)=-GPtangent1[0]*clhs305 - GPtangent1[1]*clhs306 - GPtangent1[2]*clhs307;
    lhs(22,17)=-GPtangent1[0]*clhs308 - GPtangent1[1]*clhs309 - GPtangent1[2]*clhs310;
    lhs(22,18)=0;
    lhs(22,19)=0;
    lhs(22,20)=0;
    lhs(22,21)=0;
    lhs(22,22)=0;
    lhs(22,23)=0;
    lhs(22,24)=0;
    lhs(22,25)=0;
    lhs(22,26)=0;
    lhs(23,0)=-clhs209*clhs312;
    lhs(23,1)=-clhs214*clhs312;
    lhs(23,2)=-clhs215*clhs312;
    lhs(23,3)=-clhs216*clhs312;
    lhs(23,4)=-clhs217*clhs312;
    lhs(23,5)=-clhs218*clhs312;
    lhs(23,6)=-clhs219*clhs312;
    lhs(23,7)=-clhs220*clhs312;
    lhs(23,8)=-clhs221*clhs312;
    lhs(23,9)=-GPtangent2[0]*clhs278 - GPtangent2[1]*clhs282 - GPtangent2[2]*clhs286;
    lhs(23,10)=-GPtangent2[0]*clhs287 - GPtangent2[1]*clhs288 - GPtangent2[2]*clhs289;
    lhs(23,11)=-GPtangent2[0]*clhs290 - GPtangent2[1]*clhs291 - GPtangent2[2]*clhs292;
    lhs(23,12)=-GPtangent2[0]*clhs293 - GPtangent2[1]*clhs294 - GPtangent2[2]*clhs295;
    lhs(23,13)=-GPtangent2[0]*clhs296 - GPtangent2[1]*clhs297 - GPtangent2[2]*clhs298;
    lhs(23,14)=-GPtangent2[0]*clhs299 - GPtangent2[1]*clhs300 - GPtangent2[2]*clhs301;
    lhs(23,15)=-GPtangent2[0]*clhs302 - GPtangent2[1]*clhs303 - GPtangent2[2]*clhs304;
    lhs(23,16)=-GPtangent2[0]*clhs305 - GPtangent2[1]*clhs306 - GPtangent2[2]*clhs307;
    lhs(23,17)=-GPtangent2[0]*clhs308 - GPtangent2[1]*clhs309 - GPtangent2[2]*clhs310;
    lhs(23,18)=0;
    lhs(23,19)=0;
    lhs(23,20)=0;
    lhs(23,21)=0;
    lhs(23,22)=0;
    lhs(23,23)=0;
    lhs(23,24)=0;
    lhs(23,25)=0;
    lhs(23,26)=0;
    lhs(24,0)=-clhs209*clhs316;
    lhs(24,1)=-clhs214*clhs316;
    lhs(24,2)=-clhs215*clhs316;
    lhs(24,3)=-clhs216*clhs316;
    lhs(24,4)=-clhs217*clhs316;
    lhs(24,5)=-clhs218*clhs316;
    lhs(24,6)=-clhs219*clhs316;
    lhs(24,7)=-clhs220*clhs316;
    lhs(24,8)=-clhs221*clhs316;
    lhs(24,9)=-GPnormal[0]*clhs321 - GPnormal[1]*clhs325 - GPnormal[2]*clhs329;
    lhs(24,10)=-GPnormal[0]*clhs330 - GPnormal[1]*clhs331 - GPnormal[2]*clhs332;
    lhs(24,11)=-GPnormal[0]*clhs333 - GPnormal[1]*clhs334 - GPnormal[2]*clhs335;
    lhs(24,12)=-GPnormal[0]*clhs336 - GPnormal[1]*clhs337 - GPnormal[2]*clhs338;
    lhs(24,13)=-GPnormal[0]*clhs339 - GPnormal[1]*clhs340 - GPnormal[2]*clhs341;
    lhs(24,14)=-GPnormal[0]*clhs342 - GPnormal[1]*clhs343 - GPnormal[2]*clhs344;
    lhs(24,15)=-GPnormal[0]*clhs345 - GPnormal[1]*clhs346 - GPnormal[2]*clhs347;
    lhs(24,16)=-GPnormal[0]*clhs348 - GPnormal[1]*clhs349 - GPnormal[2]*clhs350;
    lhs(24,17)=-GPnormal[0]*clhs351 - GPnormal[1]*clhs352 - GPnormal[2]*clhs353;
    lhs(24,18)=0;
    lhs(24,19)=0;
    lhs(24,20)=0;
    lhs(24,21)=0;
    lhs(24,22)=0;
    lhs(24,23)=0;
    lhs(24,24)=0;
    lhs(24,25)=0;
    lhs(24,26)=0;
    lhs(25,0)=-clhs209*clhs354;
    lhs(25,1)=-clhs214*clhs354;
    lhs(25,2)=-clhs215*clhs354;
    lhs(25,3)=-clhs216*clhs354;
    lhs(25,4)=-clhs217*clhs354;
    lhs(25,5)=-clhs218*clhs354;
    lhs(25,6)=-clhs219*clhs354;
    lhs(25,7)=-clhs220*clhs354;
    lhs(25,8)=-clhs221*clhs354;
    lhs(25,9)=-GPtangent1[0]*clhs321 - GPtangent1[1]*clhs325 - GPtangent1[2]*clhs329;
    lhs(25,10)=-GPtangent1[0]*clhs330 - GPtangent1[1]*clhs331 - GPtangent1[2]*clhs332;
    lhs(25,11)=-GPtangent1[0]*clhs333 - GPtangent1[1]*clhs334 - GPtangent1[2]*clhs335;
    lhs(25,12)=-GPtangent1[0]*clhs336 - GPtangent1[1]*clhs337 - GPtangent1[2]*clhs338;
    lhs(25,13)=-GPtangent1[0]*clhs339 - GPtangent1[1]*clhs340 - GPtangent1[2]*clhs341;
    lhs(25,14)=-GPtangent1[0]*clhs342 - GPtangent1[1]*clhs343 - GPtangent1[2]*clhs344;
    lhs(25,15)=-GPtangent1[0]*clhs345 - GPtangent1[1]*clhs346 - GPtangent1[2]*clhs347;
    lhs(25,16)=-GPtangent1[0]*clhs348 - GPtangent1[1]*clhs349 - GPtangent1[2]*clhs350;
    lhs(25,17)=-GPtangent1[0]*clhs351 - GPtangent1[1]*clhs352 - GPtangent1[2]*clhs353;
    lhs(25,18)=0;
    lhs(25,19)=0;
    lhs(25,20)=0;
    lhs(25,21)=0;
    lhs(25,22)=0;
    lhs(25,23)=0;
    lhs(25,24)=0;
    lhs(25,25)=0;
    lhs(25,26)=0;
    lhs(26,0)=-clhs209*clhs355;
    lhs(26,1)=-clhs214*clhs355;
    lhs(26,2)=-clhs215*clhs355;
    lhs(26,3)=-clhs216*clhs355;
    lhs(26,4)=-clhs217*clhs355;
    lhs(26,5)=-clhs218*clhs355;
    lhs(26,6)=-clhs219*clhs355;
    lhs(26,7)=-clhs220*clhs355;
    lhs(26,8)=-clhs221*clhs355;
    lhs(26,9)=-GPtangent2[0]*clhs321 - GPtangent2[1]*clhs325 - GPtangent2[2]*clhs329;
    lhs(26,10)=-GPtangent2[0]*clhs330 - GPtangent2[1]*clhs331 - GPtangent2[2]*clhs332;
    lhs(26,11)=-GPtangent2[0]*clhs333 - GPtangent2[1]*clhs334 - GPtangent2[2]*clhs335;
    lhs(26,12)=-GPtangent2[0]*clhs336 - GPtangent2[1]*clhs337 - GPtangent2[2]*clhs338;
    lhs(26,13)=-GPtangent2[0]*clhs339 - GPtangent2[1]*clhs340 - GPtangent2[2]*clhs341;
    lhs(26,14)=-GPtangent2[0]*clhs342 - GPtangent2[1]*clhs343 - GPtangent2[2]*clhs344;
    lhs(26,15)=-GPtangent2[0]*clhs345 - GPtangent2[1]*clhs346 - GPtangent2[2]*clhs347;
    lhs(26,16)=-GPtangent2[0]*clhs348 - GPtangent2[1]*clhs349 - GPtangent2[2]*clhs350;
    lhs(26,17)=-GPtangent2[0]*clhs351 - GPtangent2[1]*clhs352 - GPtangent2[2]*clhs353;
    lhs(26,18)=0;
    lhs(26,19)=0;
    lhs(26,20)=0;
    lhs(26,21)=0;
    lhs(26,22)=0;
    lhs(26,23)=0;
    lhs(26,24)=0;
    lhs(26,25)=0;
    lhs(26,26)=0;

    
    return lhs;
}

    /***********************************************************************************/
    /***********************************************************************************/
    
    static inline bounded_matrix<double,27,27> ComputeGaussPointStickLHS(
        const array_1d<double,3> N1, 
        const array_1d<double,3> N2, 
        const array_1d<double,3> Phi, 
        const double detJ, 
        const double mu, 
        const ContactData<3,3>& rContactData,
        const double& augmented_normal_lm,
        const double& augmented_tangent_lm,
        const double& integration_point_gap,
        const double& integration_point_slip
        )
{
    bounded_matrix<double,27,27> lhs;
    
    const bounded_matrix<double, 3,3> normalslave     = rContactData.Normal_s;
    const bounded_matrix<double, 3,3> tan1slave       = rContactData.Tangent_xi_s;
    const bounded_matrix<double, 3,3> tan2slave       = rContactData.Tangent_eta_s;
    const bounded_matrix<double, 3,3> lm              = rContactData.LagrangeMultipliers;
    const double Dt              = rContactData.Dt;
//     const double epsilon_normal  = rContactData.epsilon_normal;
//     const double epsilon_tangent = rContactData.epsilon_tangent;
    
    const array_1d<double,3> GPnormal     = prod(trans(normalslave), N1);
    const array_1d<double,3> GPtangent1   = prod(trans(tan1slave), N1);
    const array_1d<double,3> GPtangent2   = prod(trans(tan2slave), N1);
    
    const bounded_matrix<double, 3,3> v1 = rContactData.v1;
    const bounded_matrix<double, 3,3> v2 = rContactData.v2;
    
    const std::vector<double> DeltaJs          = rContactData.DeltaJ_s;
    const std::vector<bounded_matrix<double, 3, 3>> DeltaNormals     = rContactData.Delta_Normal_s;
    const std::vector<bounded_matrix<double, 3, 3>> Deltatangentxis  = rContactData.Delta_Tangent_xi_s;
    const std::vector<bounded_matrix<double, 3, 3>> Deltatangentetas = rContactData.Delta_Tangent_eta_s;
    const std::vector<array_1d<double,3>> DeltaPhi         = rContactData.DeltaPhi;
    const std::vector<array_1d<double,3>> DeltaN2          = rContactData.DeltaN2;

    const double clhs0 =     1.0/Dt;
    const double clhs1 =     Phi[0]; // PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs2 =     detJ; // DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs3 =     clhs0*clhs1*clhs2;
    const double clhs4 =     tan1slave(0,0); // TAN1SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs5 =     tan1slave(0,1); // TAN1SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs6 =     tan1slave(1,1); // TAN1SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs7 =     tan1slave(2,1); // TAN1SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs8 =     N1[0]*clhs5 + N1[1]*clhs6 + N1[2]*clhs7;
    const double clhs9 =     Dt*v2(0,1);
    const double clhs10 =     N2[0]; // N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
    const double clhs11 =     DeltaN2[9][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
    const double clhs12 =     Dt*v2(1,1);
    const double clhs13 =     N2[1]; // N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
    const double clhs14 =     DeltaN2[9][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
    const double clhs15 =     Dt*v2(2,1);
    const double clhs16 =     N2[2]; // N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
    const double clhs17 =     DeltaN2[9][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
    const double clhs18 =     clhs11*clhs9 + clhs12*clhs14 + clhs15*clhs17;
    const double clhs19 =     tan1slave(0,2); // TAN1SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs20 =     tan1slave(1,2); // TAN1SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs21 =     tan1slave(2,2); // TAN1SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs22 =     N1[0]*clhs19 + N1[1]*clhs20 + N1[2]*clhs21;
    const double clhs23 =     Dt*v2(0,2);
    const double clhs24 =     Dt*v2(1,2);
    const double clhs25 =     Dt*v2(2,2);
    const double clhs26 =     clhs11*clhs23 + clhs14*clhs24 + clhs17*clhs25;
    const double clhs27 =     tan1slave(1,0); // TAN1SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs28 =     tan1slave(2,0); // TAN1SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs29 =     N1[0]*clhs4 + N1[1]*clhs27 + N1[2]*clhs28;
    const double clhs30 =     Dt*v2(0,0);
    const double clhs31 =     Dt*v2(1,0);
    const double clhs32 =     Dt*v2(2,0);
    const double clhs33 =     clhs10 + clhs11*clhs30 + clhs14*clhs31 + clhs17*clhs32;
    const double clhs34 =     clhs18*clhs8 + clhs22*clhs26 + clhs29*clhs33;
    const double clhs35 =     tan2slave(0,0); // TAN2SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs36 =     tan2slave(0,1); // TAN2SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs37 =     tan2slave(1,1); // TAN2SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs38 =     tan2slave(2,1); // TAN2SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs39 =     N1[0]*clhs36 + N1[1]*clhs37 + N1[2]*clhs38;
    const double clhs40 =     tan2slave(0,2); // TAN2SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs41 =     tan2slave(1,2); // TAN2SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs42 =     tan2slave(2,2); // TAN2SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs43 =     N1[0]*clhs40 + N1[1]*clhs41 + N1[2]*clhs42;
    const double clhs44 =     tan2slave(1,0); // TAN2SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs45 =     tan2slave(2,0); // TAN2SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs46 =     N1[0]*clhs35 + N1[1]*clhs44 + N1[2]*clhs45;
    const double clhs47 =     clhs18*clhs39 + clhs26*clhs43 + clhs33*clhs46;
    const double clhs48 =     clhs34*clhs4 + clhs35*clhs47;
    const double clhs49 =     clhs34*clhs5 + clhs36*clhs47;
    const double clhs50 =     clhs19*clhs34 + clhs40*clhs47;
    const double clhs51 =     DeltaN2[10][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
    const double clhs52 =     DeltaN2[10][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
    const double clhs53 =     DeltaN2[10][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
    const double clhs54 =     clhs30*clhs51 + clhs31*clhs52 + clhs32*clhs53;
    const double clhs55 =     clhs23*clhs51 + clhs24*clhs52 + clhs25*clhs53;
    const double clhs56 =     clhs10 + clhs12*clhs52 + clhs15*clhs53 + clhs51*clhs9;
    const double clhs57 =     clhs22*clhs55 + clhs29*clhs54 + clhs56*clhs8;
    const double clhs58 =     clhs39*clhs56 + clhs43*clhs55 + clhs46*clhs54;
    const double clhs59 =     clhs35*clhs58 + clhs4*clhs57;
    const double clhs60 =     clhs36*clhs58 + clhs5*clhs57;
    const double clhs61 =     clhs19*clhs57 + clhs40*clhs58;
    const double clhs62 =     DeltaN2[11][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
    const double clhs63 =     DeltaN2[11][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
    const double clhs64 =     DeltaN2[11][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
    const double clhs65 =     clhs30*clhs62 + clhs31*clhs63 + clhs32*clhs64;
    const double clhs66 =     clhs12*clhs63 + clhs15*clhs64 + clhs62*clhs9;
    const double clhs67 =     clhs10 + clhs23*clhs62 + clhs24*clhs63 + clhs25*clhs64;
    const double clhs68 =     clhs22*clhs67 + clhs29*clhs65 + clhs66*clhs8;
    const double clhs69 =     clhs39*clhs66 + clhs43*clhs67 + clhs46*clhs65;
    const double clhs70 =     clhs35*clhs69 + clhs4*clhs68;
    const double clhs71 =     clhs36*clhs69 + clhs5*clhs68;
    const double clhs72 =     clhs19*clhs68 + clhs40*clhs69;
    const double clhs73 =     DeltaN2[12][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
    const double clhs74 =     DeltaN2[12][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
    const double clhs75 =     DeltaN2[12][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
    const double clhs76 =     clhs12*clhs74 + clhs15*clhs75 + clhs73*clhs9;
    const double clhs77 =     clhs23*clhs73 + clhs24*clhs74 + clhs25*clhs75;
    const double clhs78 =     clhs13 + clhs30*clhs73 + clhs31*clhs74 + clhs32*clhs75;
    const double clhs79 =     clhs22*clhs77 + clhs29*clhs78 + clhs76*clhs8;
    const double clhs80 =     clhs39*clhs76 + clhs43*clhs77 + clhs46*clhs78;
    const double clhs81 =     clhs35*clhs80 + clhs4*clhs79;
    const double clhs82 =     clhs36*clhs80 + clhs5*clhs79;
    const double clhs83 =     clhs19*clhs79 + clhs40*clhs80;
    const double clhs84 =     DeltaN2[13][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
    const double clhs85 =     DeltaN2[13][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
    const double clhs86 =     DeltaN2[13][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
    const double clhs87 =     clhs30*clhs84 + clhs31*clhs85 + clhs32*clhs86;
    const double clhs88 =     clhs23*clhs84 + clhs24*clhs85 + clhs25*clhs86;
    const double clhs89 =     clhs12*clhs85 + clhs13 + clhs15*clhs86 + clhs84*clhs9;
    const double clhs90 =     clhs22*clhs88 + clhs29*clhs87 + clhs8*clhs89;
    const double clhs91 =     clhs39*clhs89 + clhs43*clhs88 + clhs46*clhs87;
    const double clhs92 =     clhs35*clhs91 + clhs4*clhs90;
    const double clhs93 =     clhs36*clhs91 + clhs5*clhs90;
    const double clhs94 =     clhs19*clhs90 + clhs40*clhs91;
    const double clhs95 =     DeltaN2[14][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
    const double clhs96 =     DeltaN2[14][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
    const double clhs97 =     DeltaN2[14][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
    const double clhs98 =     clhs30*clhs95 + clhs31*clhs96 + clhs32*clhs97;
    const double clhs99 =     clhs12*clhs96 + clhs15*clhs97 + clhs9*clhs95;
    const double clhs100 =     clhs13 + clhs23*clhs95 + clhs24*clhs96 + clhs25*clhs97;
    const double clhs101 =     clhs100*clhs22 + clhs29*clhs98 + clhs8*clhs99;
    const double clhs102 =     clhs100*clhs43 + clhs39*clhs99 + clhs46*clhs98;
    const double clhs103 =     clhs101*clhs4 + clhs102*clhs35;
    const double clhs104 =     clhs101*clhs5 + clhs102*clhs36;
    const double clhs105 =     clhs101*clhs19 + clhs102*clhs40;
    const double clhs106 =     DeltaN2[15][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
    const double clhs107 =     DeltaN2[15][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
    const double clhs108 =     DeltaN2[15][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
    const double clhs109 =     clhs106*clhs9 + clhs107*clhs12 + clhs108*clhs15;
    const double clhs110 =     clhs106*clhs23 + clhs107*clhs24 + clhs108*clhs25;
    const double clhs111 =     clhs106*clhs30 + clhs107*clhs31 + clhs108*clhs32 + clhs16;
    const double clhs112 =     clhs109*clhs8 + clhs110*clhs22 + clhs111*clhs29;
    const double clhs113 =     clhs109*clhs39 + clhs110*clhs43 + clhs111*clhs46;
    const double clhs114 =     clhs112*clhs4 + clhs113*clhs35;
    const double clhs115 =     clhs112*clhs5 + clhs113*clhs36;
    const double clhs116 =     clhs112*clhs19 + clhs113*clhs40;
    const double clhs117 =     DeltaN2[16][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
    const double clhs118 =     DeltaN2[16][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
    const double clhs119 =     DeltaN2[16][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
    const double clhs120 =     clhs117*clhs30 + clhs118*clhs31 + clhs119*clhs32;
    const double clhs121 =     clhs117*clhs23 + clhs118*clhs24 + clhs119*clhs25;
    const double clhs122 =     clhs117*clhs9 + clhs118*clhs12 + clhs119*clhs15 + clhs16;
    const double clhs123 =     clhs120*clhs29 + clhs121*clhs22 + clhs122*clhs8;
    const double clhs124 =     clhs120*clhs46 + clhs121*clhs43 + clhs122*clhs39;
    const double clhs125 =     clhs123*clhs4 + clhs124*clhs35;
    const double clhs126 =     clhs123*clhs5 + clhs124*clhs36;
    const double clhs127 =     clhs123*clhs19 + clhs124*clhs40;
    const double clhs128 =     DeltaN2[17][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
    const double clhs129 =     DeltaN2[17][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
    const double clhs130 =     DeltaN2[17][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
    const double clhs131 =     clhs128*clhs30 + clhs129*clhs31 + clhs130*clhs32;
    const double clhs132 =     clhs12*clhs129 + clhs128*clhs9 + clhs130*clhs15;
    const double clhs133 =     clhs128*clhs23 + clhs129*clhs24 + clhs130*clhs25 + clhs16;
    const double clhs134 =     clhs131*clhs29 + clhs132*clhs8 + clhs133*clhs22;
    const double clhs135 =     clhs131*clhs46 + clhs132*clhs39 + clhs133*clhs43;
    const double clhs136 =     clhs134*clhs4 + clhs135*clhs35;
    const double clhs137 =     clhs134*clhs5 + clhs135*clhs36;
    const double clhs138 =     clhs134*clhs19 + clhs135*clhs40;
    const double clhs139 =     Deltatangentxis[0](0,0); // DERIVATIVE(TAN1SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs140 =     N1[0]*(Dt*v1(0,0)) + N1[1]*(Dt*v1(1,0)) + N1[2]*(Dt*v1(2,0)) - clhs10*clhs30 - clhs13*clhs31 - clhs16*clhs32;
    const double clhs141 =     N1[0]*(Dt*v1(0,1)) + N1[1]*(Dt*v1(1,1)) + N1[2]*(Dt*v1(2,1)) - clhs10*clhs9 - clhs12*clhs13 - clhs15*clhs16;
    const double clhs142 =     N1[0]*(Dt*v1(0,2)) + N1[1]*(Dt*v1(1,2)) + N1[2]*(Dt*v1(2,2)) - clhs10*clhs23 - clhs13*clhs24 - clhs16*clhs25;
    const double clhs143 =     clhs140*clhs29 + clhs141*clhs8 + clhs142*clhs22;
    const double clhs144 =     clhs1*clhs143*clhs2;
    const double clhs145 =     DeltaJs[0]; // DERIVATIVE(DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs146 =     clhs1*clhs143*clhs4;
    const double clhs147 =     DeltaPhi[0][0]; // DERIVATIVE(PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs148 =     clhs143*clhs2*clhs4;
    const double clhs149 =     Deltatangentetas[0](0,0); // DERIVATIVE(TAN2SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs150 =     clhs140*clhs46 + clhs141*clhs39 + clhs142*clhs43;
    const double clhs151 =     clhs1*clhs150*clhs2;
    const double clhs152 =     clhs1*clhs150*clhs35;
    const double clhs153 =     clhs150*clhs2*clhs35;
    const double clhs154 =     DeltaN2[0][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
    const double clhs155 =     DeltaN2[0][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
    const double clhs156 =     DeltaN2[0][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
    const double clhs157 =     clhs12*clhs155 + clhs15*clhs156 + clhs154*clhs9;
    const double clhs158 =     clhs154*clhs23 + clhs155*clhs24 + clhs156*clhs25;
    const double clhs159 =     -N1[0];
    const double clhs160 =     clhs154*clhs30 + clhs155*clhs31 + clhs156*clhs32 + clhs159;
    const double clhs161 =     Deltatangentxis[0](1,0); // DERIVATIVE(TAN1SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs162 =     Deltatangentxis[0](2,0); // DERIVATIVE(TAN1SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs163 =     Deltatangentxis[0](0,1); // DERIVATIVE(TAN1SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs164 =     Deltatangentxis[0](1,1); // DERIVATIVE(TAN1SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs165 =     Deltatangentxis[0](2,1); // DERIVATIVE(TAN1SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs166 =     Deltatangentxis[0](0,2); // DERIVATIVE(TAN1SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs167 =     Deltatangentxis[0](1,2); // DERIVATIVE(TAN1SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs168 =     Deltatangentxis[0](2,2); // DERIVATIVE(TAN1SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs169 =     -clhs140*(N1[0]*clhs139 + N1[1]*clhs161 + N1[2]*clhs162) - clhs141*(N1[0]*clhs163 + N1[1]*clhs164 + N1[2]*clhs165) - clhs142*(N1[0]*clhs166 + N1[1]*clhs167 + N1[2]*clhs168) + clhs157*clhs8 + clhs158*clhs22 + clhs160*clhs29;
    const double clhs170 =     clhs1*clhs169*clhs2;
    const double clhs171 =     Deltatangentetas[0](1,0); // DERIVATIVE(TAN2SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs172 =     Deltatangentetas[0](2,0); // DERIVATIVE(TAN2SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs173 =     Deltatangentetas[0](0,1); // DERIVATIVE(TAN2SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs174 =     Deltatangentetas[0](1,1); // DERIVATIVE(TAN2SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs175 =     Deltatangentetas[0](2,1); // DERIVATIVE(TAN2SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs176 =     Deltatangentetas[0](0,2); // DERIVATIVE(TAN2SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs177 =     Deltatangentetas[0](1,2); // DERIVATIVE(TAN2SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs178 =     Deltatangentetas[0](2,2); // DERIVATIVE(TAN2SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs179 =     -clhs140*(N1[0]*clhs149 + N1[1]*clhs171 + N1[2]*clhs172) - clhs141*(N1[0]*clhs173 + N1[1]*clhs174 + N1[2]*clhs175) - clhs142*(N1[0]*clhs176 + N1[1]*clhs177 + N1[2]*clhs178) + clhs157*clhs39 + clhs158*clhs43 + clhs160*clhs46;
    const double clhs180 =     clhs1*clhs179*clhs2;
    const double clhs181 =     clhs139*clhs144 + clhs145*clhs146 + clhs145*clhs152 + clhs147*clhs148 + clhs147*clhs153 + clhs149*clhs151 - clhs170*clhs4 - clhs180*clhs35;
    const double clhs182 =     clhs1*clhs143*clhs5;
    const double clhs183 =     clhs143*clhs2*clhs5;
    const double clhs184 =     clhs1*clhs150*clhs36;
    const double clhs185 =     clhs150*clhs2*clhs36;
    const double clhs186 =     clhs144*clhs163 + clhs145*clhs182 + clhs145*clhs184 + clhs147*clhs183 + clhs147*clhs185 + clhs151*clhs173 - clhs170*clhs5 - clhs180*clhs36;
    const double clhs187 =     clhs1*clhs143*clhs19;
    const double clhs188 =     clhs143*clhs19*clhs2;
    const double clhs189 =     clhs1*clhs150*clhs40;
    const double clhs190 =     clhs150*clhs2*clhs40;
    const double clhs191 =     clhs144*clhs166 + clhs145*clhs187 + clhs145*clhs189 + clhs147*clhs188 + clhs147*clhs190 + clhs151*clhs176 - clhs170*clhs19 - clhs180*clhs40;
    const double clhs192 =     Deltatangentxis[1](0,0); // DERIVATIVE(TAN1SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs193 =     DeltaJs[1]; // DERIVATIVE(DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs194 =     DeltaPhi[1][0]; // DERIVATIVE(PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs195 =     Deltatangentetas[1](0,0); // DERIVATIVE(TAN2SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs196 =     DeltaN2[1][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
    const double clhs197 =     DeltaN2[1][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
    const double clhs198 =     DeltaN2[1][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
    const double clhs199 =     clhs196*clhs30 + clhs197*clhs31 + clhs198*clhs32;
    const double clhs200 =     clhs196*clhs23 + clhs197*clhs24 + clhs198*clhs25;
    const double clhs201 =     clhs12*clhs197 + clhs15*clhs198 + clhs159 + clhs196*clhs9;
    const double clhs202 =     Deltatangentxis[1](1,0); // DERIVATIVE(TAN1SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs203 =     Deltatangentxis[1](2,0); // DERIVATIVE(TAN1SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs204 =     Deltatangentxis[1](0,1); // DERIVATIVE(TAN1SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs205 =     Deltatangentxis[1](1,1); // DERIVATIVE(TAN1SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs206 =     Deltatangentxis[1](2,1); // DERIVATIVE(TAN1SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs207 =     Deltatangentxis[1](0,2); // DERIVATIVE(TAN1SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs208 =     Deltatangentxis[1](1,2); // DERIVATIVE(TAN1SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs209 =     Deltatangentxis[1](2,2); // DERIVATIVE(TAN1SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs210 =     -clhs140*(N1[0]*clhs192 + N1[1]*clhs202 + N1[2]*clhs203) - clhs141*(N1[0]*clhs204 + N1[1]*clhs205 + N1[2]*clhs206) - clhs142*(N1[0]*clhs207 + N1[1]*clhs208 + N1[2]*clhs209) + clhs199*clhs29 + clhs200*clhs22 + clhs201*clhs8;
    const double clhs211 =     clhs1*clhs2*clhs210;
    const double clhs212 =     Deltatangentetas[1](1,0); // DERIVATIVE(TAN2SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs213 =     Deltatangentetas[1](2,0); // DERIVATIVE(TAN2SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs214 =     Deltatangentetas[1](0,1); // DERIVATIVE(TAN2SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs215 =     Deltatangentetas[1](1,1); // DERIVATIVE(TAN2SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs216 =     Deltatangentetas[1](2,1); // DERIVATIVE(TAN2SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs217 =     Deltatangentetas[1](0,2); // DERIVATIVE(TAN2SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs218 =     Deltatangentetas[1](1,2); // DERIVATIVE(TAN2SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs219 =     Deltatangentetas[1](2,2); // DERIVATIVE(TAN2SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs220 =     -clhs140*(N1[0]*clhs195 + N1[1]*clhs212 + N1[2]*clhs213) - clhs141*(N1[0]*clhs214 + N1[1]*clhs215 + N1[2]*clhs216) - clhs142*(N1[0]*clhs217 + N1[1]*clhs218 + N1[2]*clhs219) + clhs199*clhs46 + clhs200*clhs43 + clhs201*clhs39;
    const double clhs221 =     clhs1*clhs2*clhs220;
    const double clhs222 =     clhs144*clhs192 + clhs146*clhs193 + clhs148*clhs194 + clhs151*clhs195 + clhs152*clhs193 + clhs153*clhs194 - clhs211*clhs4 - clhs221*clhs35;
    const double clhs223 =     clhs144*clhs204 + clhs151*clhs214 + clhs182*clhs193 + clhs183*clhs194 + clhs184*clhs193 + clhs185*clhs194 - clhs211*clhs5 - clhs221*clhs36;
    const double clhs224 =     clhs144*clhs207 + clhs151*clhs217 + clhs187*clhs193 + clhs188*clhs194 + clhs189*clhs193 - clhs19*clhs211 + clhs190*clhs194 - clhs221*clhs40;
    const double clhs225 =     Deltatangentxis[2](0,0); // DERIVATIVE(TAN1SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs226 =     DeltaJs[2]; // DERIVATIVE(DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs227 =     DeltaPhi[2][0]; // DERIVATIVE(PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs228 =     Deltatangentetas[2](0,0); // DERIVATIVE(TAN2SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs229 =     DeltaN2[2][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
    const double clhs230 =     DeltaN2[2][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
    const double clhs231 =     DeltaN2[2][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
    const double clhs232 =     clhs229*clhs30 + clhs230*clhs31 + clhs231*clhs32;
    const double clhs233 =     clhs12*clhs230 + clhs15*clhs231 + clhs229*clhs9;
    const double clhs234 =     clhs159 + clhs229*clhs23 + clhs230*clhs24 + clhs231*clhs25;
    const double clhs235 =     Deltatangentxis[2](1,0); // DERIVATIVE(TAN1SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs236 =     Deltatangentxis[2](2,0); // DERIVATIVE(TAN1SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs237 =     Deltatangentxis[2](0,1); // DERIVATIVE(TAN1SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs238 =     Deltatangentxis[2](1,1); // DERIVATIVE(TAN1SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs239 =     Deltatangentxis[2](2,1); // DERIVATIVE(TAN1SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs240 =     Deltatangentxis[2](0,2); // DERIVATIVE(TAN1SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs241 =     Deltatangentxis[2](1,2); // DERIVATIVE(TAN1SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs242 =     Deltatangentxis[2](2,2); // DERIVATIVE(TAN1SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs243 =     -clhs140*(N1[0]*clhs225 + N1[1]*clhs235 + N1[2]*clhs236) - clhs141*(N1[0]*clhs237 + N1[1]*clhs238 + N1[2]*clhs239) - clhs142*(N1[0]*clhs240 + N1[1]*clhs241 + N1[2]*clhs242) + clhs22*clhs234 + clhs232*clhs29 + clhs233*clhs8;
    const double clhs244 =     clhs1*clhs2*clhs243;
    const double clhs245 =     Deltatangentetas[2](1,0); // DERIVATIVE(TAN2SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs246 =     Deltatangentetas[2](2,0); // DERIVATIVE(TAN2SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs247 =     Deltatangentetas[2](0,1); // DERIVATIVE(TAN2SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs248 =     Deltatangentetas[2](1,1); // DERIVATIVE(TAN2SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs249 =     Deltatangentetas[2](2,1); // DERIVATIVE(TAN2SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs250 =     Deltatangentetas[2](0,2); // DERIVATIVE(TAN2SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs251 =     Deltatangentetas[2](1,2); // DERIVATIVE(TAN2SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs252 =     Deltatangentetas[2](2,2); // DERIVATIVE(TAN2SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs253 =     -clhs140*(N1[0]*clhs228 + N1[1]*clhs245 + N1[2]*clhs246) - clhs141*(N1[0]*clhs247 + N1[1]*clhs248 + N1[2]*clhs249) - clhs142*(N1[0]*clhs250 + N1[1]*clhs251 + N1[2]*clhs252) + clhs232*clhs46 + clhs233*clhs39 + clhs234*clhs43;
    const double clhs254 =     clhs1*clhs2*clhs253;
    const double clhs255 =     clhs144*clhs225 + clhs146*clhs226 + clhs148*clhs227 + clhs151*clhs228 + clhs152*clhs226 + clhs153*clhs227 - clhs244*clhs4 - clhs254*clhs35;
    const double clhs256 =     clhs144*clhs237 + clhs151*clhs247 + clhs182*clhs226 + clhs183*clhs227 + clhs184*clhs226 + clhs185*clhs227 - clhs244*clhs5 - clhs254*clhs36;
    const double clhs257 =     clhs144*clhs240 + clhs151*clhs250 + clhs187*clhs226 + clhs188*clhs227 + clhs189*clhs226 - clhs19*clhs244 + clhs190*clhs227 - clhs254*clhs40;
    const double clhs258 =     Deltatangentxis[3](0,0); // DERIVATIVE(TAN1SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs259 =     DeltaJs[3]; // DERIVATIVE(DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs260 =     DeltaPhi[3][0]; // DERIVATIVE(PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs261 =     Deltatangentetas[3](0,0); // DERIVATIVE(TAN2SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs262 =     DeltaN2[3][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
    const double clhs263 =     DeltaN2[3][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
    const double clhs264 =     DeltaN2[3][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
    const double clhs265 =     clhs12*clhs263 + clhs15*clhs264 + clhs262*clhs9;
    const double clhs266 =     clhs23*clhs262 + clhs24*clhs263 + clhs25*clhs264;
    const double clhs267 =     -N1[1];
    const double clhs268 =     clhs262*clhs30 + clhs263*clhs31 + clhs264*clhs32 + clhs267;
    const double clhs269 =     Deltatangentxis[3](1,0); // DERIVATIVE(TAN1SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs270 =     Deltatangentxis[3](2,0); // DERIVATIVE(TAN1SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs271 =     Deltatangentxis[3](0,1); // DERIVATIVE(TAN1SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs272 =     Deltatangentxis[3](1,1); // DERIVATIVE(TAN1SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs273 =     Deltatangentxis[3](2,1); // DERIVATIVE(TAN1SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs274 =     Deltatangentxis[3](0,2); // DERIVATIVE(TAN1SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs275 =     Deltatangentxis[3](1,2); // DERIVATIVE(TAN1SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs276 =     Deltatangentxis[3](2,2); // DERIVATIVE(TAN1SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs277 =     -clhs140*(N1[0]*clhs258 + N1[1]*clhs269 + N1[2]*clhs270) - clhs141*(N1[0]*clhs271 + N1[1]*clhs272 + N1[2]*clhs273) - clhs142*(N1[0]*clhs274 + N1[1]*clhs275 + N1[2]*clhs276) + clhs22*clhs266 + clhs265*clhs8 + clhs268*clhs29;
    const double clhs278 =     clhs1*clhs2*clhs277;
    const double clhs279 =     Deltatangentetas[3](1,0); // DERIVATIVE(TAN2SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs280 =     Deltatangentetas[3](2,0); // DERIVATIVE(TAN2SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs281 =     Deltatangentetas[3](0,1); // DERIVATIVE(TAN2SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs282 =     Deltatangentetas[3](1,1); // DERIVATIVE(TAN2SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs283 =     Deltatangentetas[3](2,1); // DERIVATIVE(TAN2SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs284 =     Deltatangentetas[3](0,2); // DERIVATIVE(TAN2SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs285 =     Deltatangentetas[3](1,2); // DERIVATIVE(TAN2SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs286 =     Deltatangentetas[3](2,2); // DERIVATIVE(TAN2SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs287 =     -clhs140*(N1[0]*clhs261 + N1[1]*clhs279 + N1[2]*clhs280) - clhs141*(N1[0]*clhs281 + N1[1]*clhs282 + N1[2]*clhs283) - clhs142*(N1[0]*clhs284 + N1[1]*clhs285 + N1[2]*clhs286) + clhs265*clhs39 + clhs266*clhs43 + clhs268*clhs46;
    const double clhs288 =     clhs1*clhs2*clhs287;
    const double clhs289 =     clhs144*clhs258 + clhs146*clhs259 + clhs148*clhs260 + clhs151*clhs261 + clhs152*clhs259 + clhs153*clhs260 - clhs278*clhs4 - clhs288*clhs35;
    const double clhs290 =     clhs144*clhs271 + clhs151*clhs281 + clhs182*clhs259 + clhs183*clhs260 + clhs184*clhs259 + clhs185*clhs260 - clhs278*clhs5 - clhs288*clhs36;
    const double clhs291 =     clhs144*clhs274 + clhs151*clhs284 + clhs187*clhs259 + clhs188*clhs260 + clhs189*clhs259 - clhs19*clhs278 + clhs190*clhs260 - clhs288*clhs40;
    const double clhs292 =     Deltatangentxis[4](0,0); // DERIVATIVE(TAN1SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs293 =     DeltaJs[4]; // DERIVATIVE(DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs294 =     DeltaPhi[4][0]; // DERIVATIVE(PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs295 =     Deltatangentetas[4](0,0); // DERIVATIVE(TAN2SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs296 =     DeltaN2[4][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
    const double clhs297 =     DeltaN2[4][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
    const double clhs298 =     DeltaN2[4][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
    const double clhs299 =     clhs296*clhs30 + clhs297*clhs31 + clhs298*clhs32;
    const double clhs300 =     clhs23*clhs296 + clhs24*clhs297 + clhs25*clhs298;
    const double clhs301 =     clhs12*clhs297 + clhs15*clhs298 + clhs267 + clhs296*clhs9;
    const double clhs302 =     Deltatangentxis[4](1,0); // DERIVATIVE(TAN1SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs303 =     Deltatangentxis[4](2,0); // DERIVATIVE(TAN1SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs304 =     Deltatangentxis[4](0,1); // DERIVATIVE(TAN1SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs305 =     Deltatangentxis[4](1,1); // DERIVATIVE(TAN1SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs306 =     Deltatangentxis[4](2,1); // DERIVATIVE(TAN1SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs307 =     Deltatangentxis[4](0,2); // DERIVATIVE(TAN1SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs308 =     Deltatangentxis[4](1,2); // DERIVATIVE(TAN1SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs309 =     Deltatangentxis[4](2,2); // DERIVATIVE(TAN1SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs310 =     -clhs140*(N1[0]*clhs292 + N1[1]*clhs302 + N1[2]*clhs303) - clhs141*(N1[0]*clhs304 + N1[1]*clhs305 + N1[2]*clhs306) - clhs142*(N1[0]*clhs307 + N1[1]*clhs308 + N1[2]*clhs309) + clhs22*clhs300 + clhs29*clhs299 + clhs301*clhs8;
    const double clhs311 =     clhs1*clhs2*clhs310;
    const double clhs312 =     Deltatangentetas[4](1,0); // DERIVATIVE(TAN2SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs313 =     Deltatangentetas[4](2,0); // DERIVATIVE(TAN2SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs314 =     Deltatangentetas[4](0,1); // DERIVATIVE(TAN2SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs315 =     Deltatangentetas[4](1,1); // DERIVATIVE(TAN2SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs316 =     Deltatangentetas[4](2,1); // DERIVATIVE(TAN2SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs317 =     Deltatangentetas[4](0,2); // DERIVATIVE(TAN2SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs318 =     Deltatangentetas[4](1,2); // DERIVATIVE(TAN2SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs319 =     Deltatangentetas[4](2,2); // DERIVATIVE(TAN2SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs320 =     -clhs140*(N1[0]*clhs295 + N1[1]*clhs312 + N1[2]*clhs313) - clhs141*(N1[0]*clhs314 + N1[1]*clhs315 + N1[2]*clhs316) - clhs142*(N1[0]*clhs317 + N1[1]*clhs318 + N1[2]*clhs319) + clhs299*clhs46 + clhs300*clhs43 + clhs301*clhs39;
    const double clhs321 =     clhs1*clhs2*clhs320;
    const double clhs322 =     clhs144*clhs292 + clhs146*clhs293 + clhs148*clhs294 + clhs151*clhs295 + clhs152*clhs293 + clhs153*clhs294 - clhs311*clhs4 - clhs321*clhs35;
    const double clhs323 =     clhs144*clhs304 + clhs151*clhs314 + clhs182*clhs293 + clhs183*clhs294 + clhs184*clhs293 + clhs185*clhs294 - clhs311*clhs5 - clhs321*clhs36;
    const double clhs324 =     clhs144*clhs307 + clhs151*clhs317 + clhs187*clhs293 + clhs188*clhs294 + clhs189*clhs293 - clhs19*clhs311 + clhs190*clhs294 - clhs321*clhs40;
    const double clhs325 =     Deltatangentxis[5](0,0); // DERIVATIVE(TAN1SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs326 =     DeltaJs[5]; // DERIVATIVE(DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs327 =     DeltaPhi[5][0]; // DERIVATIVE(PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs328 =     Deltatangentetas[5](0,0); // DERIVATIVE(TAN2SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs329 =     DeltaN2[5][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
    const double clhs330 =     DeltaN2[5][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
    const double clhs331 =     DeltaN2[5][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
    const double clhs332 =     clhs30*clhs329 + clhs31*clhs330 + clhs32*clhs331;
    const double clhs333 =     clhs12*clhs330 + clhs15*clhs331 + clhs329*clhs9;
    const double clhs334 =     clhs23*clhs329 + clhs24*clhs330 + clhs25*clhs331 + clhs267;
    const double clhs335 =     Deltatangentxis[5](1,0); // DERIVATIVE(TAN1SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs336 =     Deltatangentxis[5](2,0); // DERIVATIVE(TAN1SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs337 =     Deltatangentxis[5](0,1); // DERIVATIVE(TAN1SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs338 =     Deltatangentxis[5](1,1); // DERIVATIVE(TAN1SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs339 =     Deltatangentxis[5](2,1); // DERIVATIVE(TAN1SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs340 =     Deltatangentxis[5](0,2); // DERIVATIVE(TAN1SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs341 =     Deltatangentxis[5](1,2); // DERIVATIVE(TAN1SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs342 =     Deltatangentxis[5](2,2); // DERIVATIVE(TAN1SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs343 =     -clhs140*(N1[0]*clhs325 + N1[1]*clhs335 + N1[2]*clhs336) - clhs141*(N1[0]*clhs337 + N1[1]*clhs338 + N1[2]*clhs339) - clhs142*(N1[0]*clhs340 + N1[1]*clhs341 + N1[2]*clhs342) + clhs22*clhs334 + clhs29*clhs332 + clhs333*clhs8;
    const double clhs344 =     clhs1*clhs2*clhs343;
    const double clhs345 =     Deltatangentetas[5](1,0); // DERIVATIVE(TAN2SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs346 =     Deltatangentetas[5](2,0); // DERIVATIVE(TAN2SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs347 =     Deltatangentetas[5](0,1); // DERIVATIVE(TAN2SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs348 =     Deltatangentetas[5](1,1); // DERIVATIVE(TAN2SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs349 =     Deltatangentetas[5](2,1); // DERIVATIVE(TAN2SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs350 =     Deltatangentetas[5](0,2); // DERIVATIVE(TAN2SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs351 =     Deltatangentetas[5](1,2); // DERIVATIVE(TAN2SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs352 =     Deltatangentetas[5](2,2); // DERIVATIVE(TAN2SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs353 =     -clhs140*(N1[0]*clhs328 + N1[1]*clhs345 + N1[2]*clhs346) - clhs141*(N1[0]*clhs347 + N1[1]*clhs348 + N1[2]*clhs349) - clhs142*(N1[0]*clhs350 + N1[1]*clhs351 + N1[2]*clhs352) + clhs332*clhs46 + clhs333*clhs39 + clhs334*clhs43;
    const double clhs354 =     clhs1*clhs2*clhs353;
    const double clhs355 =     clhs144*clhs325 + clhs146*clhs326 + clhs148*clhs327 + clhs151*clhs328 + clhs152*clhs326 + clhs153*clhs327 - clhs344*clhs4 - clhs35*clhs354;
    const double clhs356 =     clhs144*clhs337 + clhs151*clhs347 + clhs182*clhs326 + clhs183*clhs327 + clhs184*clhs326 + clhs185*clhs327 - clhs344*clhs5 - clhs354*clhs36;
    const double clhs357 =     clhs144*clhs340 + clhs151*clhs350 + clhs187*clhs326 + clhs188*clhs327 + clhs189*clhs326 - clhs19*clhs344 + clhs190*clhs327 - clhs354*clhs40;
    const double clhs358 =     Deltatangentxis[6](0,0); // DERIVATIVE(TAN1SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs359 =     DeltaJs[6]; // DERIVATIVE(DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs360 =     DeltaPhi[6][0]; // DERIVATIVE(PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs361 =     Deltatangentetas[6](0,0); // DERIVATIVE(TAN2SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs362 =     DeltaN2[6][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
    const double clhs363 =     DeltaN2[6][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
    const double clhs364 =     DeltaN2[6][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
    const double clhs365 =     clhs12*clhs363 + clhs15*clhs364 + clhs362*clhs9;
    const double clhs366 =     clhs23*clhs362 + clhs24*clhs363 + clhs25*clhs364;
    const double clhs367 =     -N1[2];
    const double clhs368 =     clhs30*clhs362 + clhs31*clhs363 + clhs32*clhs364 + clhs367;
    const double clhs369 =     Deltatangentxis[6](1,0); // DERIVATIVE(TAN1SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs370 =     Deltatangentxis[6](2,0); // DERIVATIVE(TAN1SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs371 =     Deltatangentxis[6](0,1); // DERIVATIVE(TAN1SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs372 =     Deltatangentxis[6](1,1); // DERIVATIVE(TAN1SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs373 =     Deltatangentxis[6](2,1); // DERIVATIVE(TAN1SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs374 =     Deltatangentxis[6](0,2); // DERIVATIVE(TAN1SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs375 =     Deltatangentxis[6](1,2); // DERIVATIVE(TAN1SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs376 =     Deltatangentxis[6](2,2); // DERIVATIVE(TAN1SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs377 =     -clhs140*(N1[0]*clhs358 + N1[1]*clhs369 + N1[2]*clhs370) - clhs141*(N1[0]*clhs371 + N1[1]*clhs372 + N1[2]*clhs373) - clhs142*(N1[0]*clhs374 + N1[1]*clhs375 + N1[2]*clhs376) + clhs22*clhs366 + clhs29*clhs368 + clhs365*clhs8;
    const double clhs378 =     clhs1*clhs2*clhs377;
    const double clhs379 =     Deltatangentetas[6](1,0); // DERIVATIVE(TAN2SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs380 =     Deltatangentetas[6](2,0); // DERIVATIVE(TAN2SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs381 =     Deltatangentetas[6](0,1); // DERIVATIVE(TAN2SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs382 =     Deltatangentetas[6](1,1); // DERIVATIVE(TAN2SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs383 =     Deltatangentetas[6](2,1); // DERIVATIVE(TAN2SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs384 =     Deltatangentetas[6](0,2); // DERIVATIVE(TAN2SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs385 =     Deltatangentetas[6](1,2); // DERIVATIVE(TAN2SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs386 =     Deltatangentetas[6](2,2); // DERIVATIVE(TAN2SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs387 =     -clhs140*(N1[0]*clhs361 + N1[1]*clhs379 + N1[2]*clhs380) - clhs141*(N1[0]*clhs381 + N1[1]*clhs382 + N1[2]*clhs383) - clhs142*(N1[0]*clhs384 + N1[1]*clhs385 + N1[2]*clhs386) + clhs365*clhs39 + clhs366*clhs43 + clhs368*clhs46;
    const double clhs388 =     clhs1*clhs2*clhs387;
    const double clhs389 =     clhs144*clhs358 + clhs146*clhs359 + clhs148*clhs360 + clhs151*clhs361 + clhs152*clhs359 + clhs153*clhs360 - clhs35*clhs388 - clhs378*clhs4;
    const double clhs390 =     clhs144*clhs371 + clhs151*clhs381 + clhs182*clhs359 + clhs183*clhs360 + clhs184*clhs359 + clhs185*clhs360 - clhs36*clhs388 - clhs378*clhs5;
    const double clhs391 =     clhs144*clhs374 + clhs151*clhs384 + clhs187*clhs359 + clhs188*clhs360 + clhs189*clhs359 - clhs19*clhs378 + clhs190*clhs360 - clhs388*clhs40;
    const double clhs392 =     Deltatangentxis[7](0,0); // DERIVATIVE(TAN1SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs393 =     DeltaJs[7]; // DERIVATIVE(DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs394 =     DeltaPhi[7][0]; // DERIVATIVE(PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs395 =     Deltatangentetas[7](0,0); // DERIVATIVE(TAN2SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs396 =     DeltaN2[7][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
    const double clhs397 =     DeltaN2[7][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
    const double clhs398 =     DeltaN2[7][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
    const double clhs399 =     clhs30*clhs396 + clhs31*clhs397 + clhs32*clhs398;
    const double clhs400 =     clhs23*clhs396 + clhs24*clhs397 + clhs25*clhs398;
    const double clhs401 =     clhs12*clhs397 + clhs15*clhs398 + clhs367 + clhs396*clhs9;
    const double clhs402 =     Deltatangentxis[7](1,0); // DERIVATIVE(TAN1SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs403 =     Deltatangentxis[7](2,0); // DERIVATIVE(TAN1SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs404 =     Deltatangentxis[7](0,1); // DERIVATIVE(TAN1SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs405 =     Deltatangentxis[7](1,1); // DERIVATIVE(TAN1SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs406 =     Deltatangentxis[7](2,1); // DERIVATIVE(TAN1SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs407 =     Deltatangentxis[7](0,2); // DERIVATIVE(TAN1SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs408 =     Deltatangentxis[7](1,2); // DERIVATIVE(TAN1SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs409 =     Deltatangentxis[7](2,2); // DERIVATIVE(TAN1SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs410 =     -clhs140*(N1[0]*clhs392 + N1[1]*clhs402 + N1[2]*clhs403) - clhs141*(N1[0]*clhs404 + N1[1]*clhs405 + N1[2]*clhs406) - clhs142*(N1[0]*clhs407 + N1[1]*clhs408 + N1[2]*clhs409) + clhs22*clhs400 + clhs29*clhs399 + clhs401*clhs8;
    const double clhs411 =     clhs1*clhs2*clhs410;
    const double clhs412 =     Deltatangentetas[7](1,0); // DERIVATIVE(TAN2SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs413 =     Deltatangentetas[7](2,0); // DERIVATIVE(TAN2SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs414 =     Deltatangentetas[7](0,1); // DERIVATIVE(TAN2SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs415 =     Deltatangentetas[7](1,1); // DERIVATIVE(TAN2SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs416 =     Deltatangentetas[7](2,1); // DERIVATIVE(TAN2SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs417 =     Deltatangentetas[7](0,2); // DERIVATIVE(TAN2SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs418 =     Deltatangentetas[7](1,2); // DERIVATIVE(TAN2SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs419 =     Deltatangentetas[7](2,2); // DERIVATIVE(TAN2SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs420 =     -clhs140*(N1[0]*clhs395 + N1[1]*clhs412 + N1[2]*clhs413) - clhs141*(N1[0]*clhs414 + N1[1]*clhs415 + N1[2]*clhs416) - clhs142*(N1[0]*clhs417 + N1[1]*clhs418 + N1[2]*clhs419) + clhs39*clhs401 + clhs399*clhs46 + clhs400*clhs43;
    const double clhs421 =     clhs1*clhs2*clhs420;
    const double clhs422 =     clhs144*clhs392 + clhs146*clhs393 + clhs148*clhs394 + clhs151*clhs395 + clhs152*clhs393 + clhs153*clhs394 - clhs35*clhs421 - clhs4*clhs411;
    const double clhs423 =     clhs144*clhs404 + clhs151*clhs414 + clhs182*clhs393 + clhs183*clhs394 + clhs184*clhs393 + clhs185*clhs394 - clhs36*clhs421 - clhs411*clhs5;
    const double clhs424 =     clhs144*clhs407 + clhs151*clhs417 + clhs187*clhs393 + clhs188*clhs394 + clhs189*clhs393 - clhs19*clhs411 + clhs190*clhs394 - clhs40*clhs421;
    const double clhs425 =     Deltatangentxis[8](0,0); // DERIVATIVE(TAN1SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs426 =     DeltaJs[8]; // DERIVATIVE(DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs427 =     DeltaPhi[8][0]; // DERIVATIVE(PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs428 =     Deltatangentetas[8](0,0); // DERIVATIVE(TAN2SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs429 =     DeltaN2[8][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
    const double clhs430 =     DeltaN2[8][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
    const double clhs431 =     DeltaN2[8][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
    const double clhs432 =     clhs30*clhs429 + clhs31*clhs430 + clhs32*clhs431;
    const double clhs433 =     clhs12*clhs430 + clhs15*clhs431 + clhs429*clhs9;
    const double clhs434 =     clhs23*clhs429 + clhs24*clhs430 + clhs25*clhs431 + clhs367;
    const double clhs435 =     Deltatangentxis[8](1,0); // DERIVATIVE(TAN1SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs436 =     Deltatangentxis[8](2,0); // DERIVATIVE(TAN1SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs437 =     Deltatangentxis[8](0,1); // DERIVATIVE(TAN1SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs438 =     Deltatangentxis[8](1,1); // DERIVATIVE(TAN1SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs439 =     Deltatangentxis[8](2,1); // DERIVATIVE(TAN1SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs440 =     Deltatangentxis[8](0,2); // DERIVATIVE(TAN1SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs441 =     Deltatangentxis[8](1,2); // DERIVATIVE(TAN1SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs442 =     Deltatangentxis[8](2,2); // DERIVATIVE(TAN1SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs443 =     -clhs140*(N1[0]*clhs425 + N1[1]*clhs435 + N1[2]*clhs436) - clhs141*(N1[0]*clhs437 + N1[1]*clhs438 + N1[2]*clhs439) - clhs142*(N1[0]*clhs440 + N1[1]*clhs441 + N1[2]*clhs442) + clhs22*clhs434 + clhs29*clhs432 + clhs433*clhs8;
    const double clhs444 =     clhs1*clhs2*clhs443;
    const double clhs445 =     Deltatangentetas[8](1,0); // DERIVATIVE(TAN2SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs446 =     Deltatangentetas[8](2,0); // DERIVATIVE(TAN2SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs447 =     Deltatangentetas[8](0,1); // DERIVATIVE(TAN2SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs448 =     Deltatangentetas[8](1,1); // DERIVATIVE(TAN2SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs449 =     Deltatangentetas[8](2,1); // DERIVATIVE(TAN2SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs450 =     Deltatangentetas[8](0,2); // DERIVATIVE(TAN2SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs451 =     Deltatangentetas[8](1,2); // DERIVATIVE(TAN2SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs452 =     Deltatangentetas[8](2,2); // DERIVATIVE(TAN2SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs453 =     -clhs140*(N1[0]*clhs428 + N1[1]*clhs445 + N1[2]*clhs446) - clhs141*(N1[0]*clhs447 + N1[1]*clhs448 + N1[2]*clhs449) - clhs142*(N1[0]*clhs450 + N1[1]*clhs451 + N1[2]*clhs452) + clhs39*clhs433 + clhs43*clhs434 + clhs432*clhs46;
    const double clhs454 =     clhs1*clhs2*clhs453;
    const double clhs455 =     clhs144*clhs425 + clhs146*clhs426 + clhs148*clhs427 + clhs151*clhs428 + clhs152*clhs426 + clhs153*clhs427 - clhs35*clhs454 - clhs4*clhs444;
    const double clhs456 =     clhs144*clhs437 + clhs151*clhs447 + clhs182*clhs426 + clhs183*clhs427 + clhs184*clhs426 + clhs185*clhs427 - clhs36*clhs454 - clhs444*clhs5;
    const double clhs457 =     clhs144*clhs440 + clhs151*clhs450 + clhs187*clhs426 + clhs188*clhs427 + clhs189*clhs426 - clhs19*clhs444 + clhs190*clhs427 - clhs40*clhs454;
    const double clhs458 =     Phi[1]; // PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs459 =     clhs0*clhs2*clhs458;
    const double clhs460 =     clhs27*clhs34 + clhs44*clhs47;
    const double clhs461 =     clhs34*clhs6 + clhs37*clhs47;
    const double clhs462 =     clhs20*clhs34 + clhs41*clhs47;
    const double clhs463 =     clhs27*clhs57 + clhs44*clhs58;
    const double clhs464 =     clhs37*clhs58 + clhs57*clhs6;
    const double clhs465 =     clhs20*clhs57 + clhs41*clhs58;
    const double clhs466 =     clhs27*clhs68 + clhs44*clhs69;
    const double clhs467 =     clhs37*clhs69 + clhs6*clhs68;
    const double clhs468 =     clhs20*clhs68 + clhs41*clhs69;
    const double clhs469 =     clhs27*clhs79 + clhs44*clhs80;
    const double clhs470 =     clhs37*clhs80 + clhs6*clhs79;
    const double clhs471 =     clhs20*clhs79 + clhs41*clhs80;
    const double clhs472 =     clhs27*clhs90 + clhs44*clhs91;
    const double clhs473 =     clhs37*clhs91 + clhs6*clhs90;
    const double clhs474 =     clhs20*clhs90 + clhs41*clhs91;
    const double clhs475 =     clhs101*clhs27 + clhs102*clhs44;
    const double clhs476 =     clhs101*clhs6 + clhs102*clhs37;
    const double clhs477 =     clhs101*clhs20 + clhs102*clhs41;
    const double clhs478 =     clhs112*clhs27 + clhs113*clhs44;
    const double clhs479 =     clhs112*clhs6 + clhs113*clhs37;
    const double clhs480 =     clhs112*clhs20 + clhs113*clhs41;
    const double clhs481 =     clhs123*clhs27 + clhs124*clhs44;
    const double clhs482 =     clhs123*clhs6 + clhs124*clhs37;
    const double clhs483 =     clhs123*clhs20 + clhs124*clhs41;
    const double clhs484 =     clhs134*clhs27 + clhs135*clhs44;
    const double clhs485 =     clhs134*clhs6 + clhs135*clhs37;
    const double clhs486 =     clhs134*clhs20 + clhs135*clhs41;
    const double clhs487 =     clhs143*clhs2*clhs458;
    const double clhs488 =     clhs143*clhs27*clhs458;
    const double clhs489 =     DeltaPhi[0][1]; // DERIVATIVE(PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs490 =     clhs143*clhs2*clhs27;
    const double clhs491 =     clhs150*clhs2*clhs458;
    const double clhs492 =     clhs150*clhs44*clhs458;
    const double clhs493 =     clhs150*clhs2*clhs44;
    const double clhs494 =     clhs169*clhs2*clhs458;
    const double clhs495 =     clhs179*clhs2*clhs458;
    const double clhs496 =     clhs145*clhs488 + clhs145*clhs492 + clhs161*clhs487 + clhs171*clhs491 - clhs27*clhs494 - clhs44*clhs495 + clhs489*clhs490 + clhs489*clhs493;
    const double clhs497 =     clhs143*clhs458*clhs6;
    const double clhs498 =     clhs143*clhs2*clhs6;
    const double clhs499 =     clhs150*clhs37*clhs458;
    const double clhs500 =     clhs150*clhs2*clhs37;
    const double clhs501 =     clhs145*clhs497 + clhs145*clhs499 + clhs164*clhs487 + clhs174*clhs491 - clhs37*clhs495 + clhs489*clhs498 + clhs489*clhs500 - clhs494*clhs6;
    const double clhs502 =     clhs143*clhs20*clhs458;
    const double clhs503 =     clhs143*clhs2*clhs20;
    const double clhs504 =     clhs150*clhs41*clhs458;
    const double clhs505 =     clhs150*clhs2*clhs41;
    const double clhs506 =     clhs145*clhs502 + clhs145*clhs504 + clhs167*clhs487 + clhs177*clhs491 - clhs20*clhs494 - clhs41*clhs495 + clhs489*clhs503 + clhs489*clhs505;
    const double clhs507 =     DeltaPhi[1][1]; // DERIVATIVE(PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs508 =     clhs2*clhs210*clhs458;
    const double clhs509 =     clhs2*clhs220*clhs458;
    const double clhs510 =     clhs193*clhs488 + clhs193*clhs492 + clhs202*clhs487 + clhs212*clhs491 - clhs27*clhs508 - clhs44*clhs509 + clhs490*clhs507 + clhs493*clhs507;
    const double clhs511 =     clhs193*clhs497 + clhs193*clhs499 + clhs205*clhs487 + clhs215*clhs491 - clhs37*clhs509 + clhs498*clhs507 + clhs500*clhs507 - clhs508*clhs6;
    const double clhs512 =     clhs193*clhs502 + clhs193*clhs504 - clhs20*clhs508 + clhs208*clhs487 + clhs218*clhs491 - clhs41*clhs509 + clhs503*clhs507 + clhs505*clhs507;
    const double clhs513 =     DeltaPhi[2][1]; // DERIVATIVE(PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs514 =     clhs2*clhs243*clhs458;
    const double clhs515 =     clhs2*clhs253*clhs458;
    const double clhs516 =     clhs226*clhs488 + clhs226*clhs492 + clhs235*clhs487 + clhs245*clhs491 - clhs27*clhs514 - clhs44*clhs515 + clhs490*clhs513 + clhs493*clhs513;
    const double clhs517 =     clhs226*clhs497 + clhs226*clhs499 + clhs238*clhs487 + clhs248*clhs491 - clhs37*clhs515 + clhs498*clhs513 + clhs500*clhs513 - clhs514*clhs6;
    const double clhs518 =     -clhs20*clhs514 + clhs226*clhs502 + clhs226*clhs504 + clhs241*clhs487 + clhs251*clhs491 - clhs41*clhs515 + clhs503*clhs513 + clhs505*clhs513;
    const double clhs519 =     DeltaPhi[3][1]; // DERIVATIVE(PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs520 =     clhs2*clhs277*clhs458;
    const double clhs521 =     clhs2*clhs287*clhs458;
    const double clhs522 =     clhs259*clhs488 + clhs259*clhs492 + clhs269*clhs487 - clhs27*clhs520 + clhs279*clhs491 - clhs44*clhs521 + clhs490*clhs519 + clhs493*clhs519;
    const double clhs523 =     clhs259*clhs497 + clhs259*clhs499 + clhs272*clhs487 + clhs282*clhs491 - clhs37*clhs521 + clhs498*clhs519 + clhs500*clhs519 - clhs520*clhs6;
    const double clhs524 =     -clhs20*clhs520 + clhs259*clhs502 + clhs259*clhs504 + clhs275*clhs487 + clhs285*clhs491 - clhs41*clhs521 + clhs503*clhs519 + clhs505*clhs519;
    const double clhs525 =     DeltaPhi[4][1]; // DERIVATIVE(PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs526 =     clhs2*clhs310*clhs458;
    const double clhs527 =     clhs2*clhs320*clhs458;
    const double clhs528 =     -clhs27*clhs526 + clhs293*clhs488 + clhs293*clhs492 + clhs302*clhs487 + clhs312*clhs491 - clhs44*clhs527 + clhs490*clhs525 + clhs493*clhs525;
    const double clhs529 =     clhs293*clhs497 + clhs293*clhs499 + clhs305*clhs487 + clhs315*clhs491 - clhs37*clhs527 + clhs498*clhs525 + clhs500*clhs525 - clhs526*clhs6;
    const double clhs530 =     -clhs20*clhs526 + clhs293*clhs502 + clhs293*clhs504 + clhs308*clhs487 + clhs318*clhs491 - clhs41*clhs527 + clhs503*clhs525 + clhs505*clhs525;
    const double clhs531 =     DeltaPhi[5][1]; // DERIVATIVE(PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs532 =     clhs2*clhs343*clhs458;
    const double clhs533 =     clhs2*clhs353*clhs458;
    const double clhs534 =     -clhs27*clhs532 + clhs326*clhs488 + clhs326*clhs492 + clhs335*clhs487 + clhs345*clhs491 - clhs44*clhs533 + clhs490*clhs531 + clhs493*clhs531;
    const double clhs535 =     clhs326*clhs497 + clhs326*clhs499 + clhs338*clhs487 + clhs348*clhs491 - clhs37*clhs533 + clhs498*clhs531 + clhs500*clhs531 - clhs532*clhs6;
    const double clhs536 =     -clhs20*clhs532 + clhs326*clhs502 + clhs326*clhs504 + clhs341*clhs487 + clhs351*clhs491 - clhs41*clhs533 + clhs503*clhs531 + clhs505*clhs531;
    const double clhs537 =     DeltaPhi[6][1]; // DERIVATIVE(PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs538 =     clhs2*clhs377*clhs458;
    const double clhs539 =     clhs2*clhs387*clhs458;
    const double clhs540 =     -clhs27*clhs538 + clhs359*clhs488 + clhs359*clhs492 + clhs369*clhs487 + clhs379*clhs491 - clhs44*clhs539 + clhs490*clhs537 + clhs493*clhs537;
    const double clhs541 =     clhs359*clhs497 + clhs359*clhs499 - clhs37*clhs539 + clhs372*clhs487 + clhs382*clhs491 + clhs498*clhs537 + clhs500*clhs537 - clhs538*clhs6;
    const double clhs542 =     -clhs20*clhs538 + clhs359*clhs502 + clhs359*clhs504 + clhs375*clhs487 + clhs385*clhs491 - clhs41*clhs539 + clhs503*clhs537 + clhs505*clhs537;
    const double clhs543 =     DeltaPhi[7][1]; // DERIVATIVE(PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs544 =     clhs2*clhs410*clhs458;
    const double clhs545 =     clhs2*clhs420*clhs458;
    const double clhs546 =     -clhs27*clhs544 + clhs393*clhs488 + clhs393*clhs492 + clhs402*clhs487 + clhs412*clhs491 - clhs44*clhs545 + clhs490*clhs543 + clhs493*clhs543;
    const double clhs547 =     -clhs37*clhs545 + clhs393*clhs497 + clhs393*clhs499 + clhs405*clhs487 + clhs415*clhs491 + clhs498*clhs543 + clhs500*clhs543 - clhs544*clhs6;
    const double clhs548 =     -clhs20*clhs544 + clhs393*clhs502 + clhs393*clhs504 + clhs408*clhs487 - clhs41*clhs545 + clhs418*clhs491 + clhs503*clhs543 + clhs505*clhs543;
    const double clhs549 =     DeltaPhi[8][1]; // DERIVATIVE(PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs550 =     clhs2*clhs443*clhs458;
    const double clhs551 =     clhs2*clhs453*clhs458;
    const double clhs552 =     -clhs27*clhs550 + clhs426*clhs488 + clhs426*clhs492 + clhs435*clhs487 - clhs44*clhs551 + clhs445*clhs491 + clhs490*clhs549 + clhs493*clhs549;
    const double clhs553 =     -clhs37*clhs551 + clhs426*clhs497 + clhs426*clhs499 + clhs438*clhs487 + clhs448*clhs491 + clhs498*clhs549 + clhs500*clhs549 - clhs550*clhs6;
    const double clhs554 =     -clhs20*clhs550 - clhs41*clhs551 + clhs426*clhs502 + clhs426*clhs504 + clhs441*clhs487 + clhs451*clhs491 + clhs503*clhs549 + clhs505*clhs549;
    const double clhs555 =     Phi[2]; // PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs556 =     clhs0*clhs2*clhs555;
    const double clhs557 =     clhs28*clhs34 + clhs45*clhs47;
    const double clhs558 =     clhs34*clhs7 + clhs38*clhs47;
    const double clhs559 =     clhs21*clhs34 + clhs42*clhs47;
    const double clhs560 =     clhs28*clhs57 + clhs45*clhs58;
    const double clhs561 =     clhs38*clhs58 + clhs57*clhs7;
    const double clhs562 =     clhs21*clhs57 + clhs42*clhs58;
    const double clhs563 =     clhs28*clhs68 + clhs45*clhs69;
    const double clhs564 =     clhs38*clhs69 + clhs68*clhs7;
    const double clhs565 =     clhs21*clhs68 + clhs42*clhs69;
    const double clhs566 =     clhs28*clhs79 + clhs45*clhs80;
    const double clhs567 =     clhs38*clhs80 + clhs7*clhs79;
    const double clhs568 =     clhs21*clhs79 + clhs42*clhs80;
    const double clhs569 =     clhs28*clhs90 + clhs45*clhs91;
    const double clhs570 =     clhs38*clhs91 + clhs7*clhs90;
    const double clhs571 =     clhs21*clhs90 + clhs42*clhs91;
    const double clhs572 =     clhs101*clhs28 + clhs102*clhs45;
    const double clhs573 =     clhs101*clhs7 + clhs102*clhs38;
    const double clhs574 =     clhs101*clhs21 + clhs102*clhs42;
    const double clhs575 =     clhs112*clhs28 + clhs113*clhs45;
    const double clhs576 =     clhs112*clhs7 + clhs113*clhs38;
    const double clhs577 =     clhs112*clhs21 + clhs113*clhs42;
    const double clhs578 =     clhs123*clhs28 + clhs124*clhs45;
    const double clhs579 =     clhs123*clhs7 + clhs124*clhs38;
    const double clhs580 =     clhs123*clhs21 + clhs124*clhs42;
    const double clhs581 =     clhs134*clhs28 + clhs135*clhs45;
    const double clhs582 =     clhs134*clhs7 + clhs135*clhs38;
    const double clhs583 =     clhs134*clhs21 + clhs135*clhs42;
    const double clhs584 =     clhs143*clhs2*clhs555;
    const double clhs585 =     clhs143*clhs28*clhs555;
    const double clhs586 =     DeltaPhi[0][2]; // DERIVATIVE(PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs587 =     clhs143*clhs2*clhs28;
    const double clhs588 =     clhs150*clhs2*clhs555;
    const double clhs589 =     clhs150*clhs45*clhs555;
    const double clhs590 =     clhs150*clhs2*clhs45;
    const double clhs591 =     clhs169*clhs2*clhs555;
    const double clhs592 =     clhs179*clhs2*clhs555;
    const double clhs593 =     clhs145*clhs585 + clhs145*clhs589 + clhs162*clhs584 + clhs172*clhs588 - clhs28*clhs591 - clhs45*clhs592 + clhs586*clhs587 + clhs586*clhs590;
    const double clhs594 =     clhs143*clhs555*clhs7;
    const double clhs595 =     clhs143*clhs2*clhs7;
    const double clhs596 =     clhs150*clhs38*clhs555;
    const double clhs597 =     clhs150*clhs2*clhs38;
    const double clhs598 =     clhs145*clhs594 + clhs145*clhs596 + clhs165*clhs584 + clhs175*clhs588 - clhs38*clhs592 + clhs586*clhs595 + clhs586*clhs597 - clhs591*clhs7;
    const double clhs599 =     clhs143*clhs21*clhs555;
    const double clhs600 =     clhs143*clhs2*clhs21;
    const double clhs601 =     clhs150*clhs42*clhs555;
    const double clhs602 =     clhs150*clhs2*clhs42;
    const double clhs603 =     clhs145*clhs599 + clhs145*clhs601 + clhs168*clhs584 + clhs178*clhs588 - clhs21*clhs591 - clhs42*clhs592 + clhs586*clhs600 + clhs586*clhs602;
    const double clhs604 =     DeltaPhi[1][2]; // DERIVATIVE(PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs605 =     clhs2*clhs210*clhs555;
    const double clhs606 =     clhs2*clhs220*clhs555;
    const double clhs607 =     clhs193*clhs585 + clhs193*clhs589 + clhs203*clhs584 + clhs213*clhs588 - clhs28*clhs605 - clhs45*clhs606 + clhs587*clhs604 + clhs590*clhs604;
    const double clhs608 =     clhs193*clhs594 + clhs193*clhs596 + clhs206*clhs584 + clhs216*clhs588 - clhs38*clhs606 + clhs595*clhs604 + clhs597*clhs604 - clhs605*clhs7;
    const double clhs609 =     clhs193*clhs599 + clhs193*clhs601 + clhs209*clhs584 - clhs21*clhs605 + clhs219*clhs588 - clhs42*clhs606 + clhs600*clhs604 + clhs602*clhs604;
    const double clhs610 =     DeltaPhi[2][2]; // DERIVATIVE(PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs611 =     clhs2*clhs243*clhs555;
    const double clhs612 =     clhs2*clhs253*clhs555;
    const double clhs613 =     clhs226*clhs585 + clhs226*clhs589 + clhs236*clhs584 + clhs246*clhs588 - clhs28*clhs611 - clhs45*clhs612 + clhs587*clhs610 + clhs590*clhs610;
    const double clhs614 =     clhs226*clhs594 + clhs226*clhs596 + clhs239*clhs584 + clhs249*clhs588 - clhs38*clhs612 + clhs595*clhs610 + clhs597*clhs610 - clhs611*clhs7;
    const double clhs615 =     -clhs21*clhs611 + clhs226*clhs599 + clhs226*clhs601 + clhs242*clhs584 + clhs252*clhs588 - clhs42*clhs612 + clhs600*clhs610 + clhs602*clhs610;
    const double clhs616 =     DeltaPhi[3][2]; // DERIVATIVE(PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs617 =     clhs2*clhs277*clhs555;
    const double clhs618 =     clhs2*clhs287*clhs555;
    const double clhs619 =     clhs259*clhs585 + clhs259*clhs589 + clhs270*clhs584 - clhs28*clhs617 + clhs280*clhs588 - clhs45*clhs618 + clhs587*clhs616 + clhs590*clhs616;
    const double clhs620 =     clhs259*clhs594 + clhs259*clhs596 + clhs273*clhs584 + clhs283*clhs588 - clhs38*clhs618 + clhs595*clhs616 + clhs597*clhs616 - clhs617*clhs7;
    const double clhs621 =     -clhs21*clhs617 + clhs259*clhs599 + clhs259*clhs601 + clhs276*clhs584 + clhs286*clhs588 - clhs42*clhs618 + clhs600*clhs616 + clhs602*clhs616;
    const double clhs622 =     DeltaPhi[4][2]; // DERIVATIVE(PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs623 =     clhs2*clhs310*clhs555;
    const double clhs624 =     clhs2*clhs320*clhs555;
    const double clhs625 =     -clhs28*clhs623 + clhs293*clhs585 + clhs293*clhs589 + clhs303*clhs584 + clhs313*clhs588 - clhs45*clhs624 + clhs587*clhs622 + clhs590*clhs622;
    const double clhs626 =     clhs293*clhs594 + clhs293*clhs596 + clhs306*clhs584 + clhs316*clhs588 - clhs38*clhs624 + clhs595*clhs622 + clhs597*clhs622 - clhs623*clhs7;
    const double clhs627 =     -clhs21*clhs623 + clhs293*clhs599 + clhs293*clhs601 + clhs309*clhs584 + clhs319*clhs588 - clhs42*clhs624 + clhs600*clhs622 + clhs602*clhs622;
    const double clhs628 =     DeltaPhi[5][2]; // DERIVATIVE(PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs629 =     clhs2*clhs343*clhs555;
    const double clhs630 =     clhs2*clhs353*clhs555;
    const double clhs631 =     -clhs28*clhs629 + clhs326*clhs585 + clhs326*clhs589 + clhs336*clhs584 + clhs346*clhs588 - clhs45*clhs630 + clhs587*clhs628 + clhs590*clhs628;
    const double clhs632 =     clhs326*clhs594 + clhs326*clhs596 + clhs339*clhs584 + clhs349*clhs588 - clhs38*clhs630 + clhs595*clhs628 + clhs597*clhs628 - clhs629*clhs7;
    const double clhs633 =     -clhs21*clhs629 + clhs326*clhs599 + clhs326*clhs601 + clhs342*clhs584 + clhs352*clhs588 - clhs42*clhs630 + clhs600*clhs628 + clhs602*clhs628;
    const double clhs634 =     DeltaPhi[6][2]; // DERIVATIVE(PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs635 =     clhs2*clhs377*clhs555;
    const double clhs636 =     clhs2*clhs387*clhs555;
    const double clhs637 =     -clhs28*clhs635 + clhs359*clhs585 + clhs359*clhs589 + clhs370*clhs584 + clhs380*clhs588 - clhs45*clhs636 + clhs587*clhs634 + clhs590*clhs634;
    const double clhs638 =     clhs359*clhs594 + clhs359*clhs596 + clhs373*clhs584 - clhs38*clhs636 + clhs383*clhs588 + clhs595*clhs634 + clhs597*clhs634 - clhs635*clhs7;
    const double clhs639 =     -clhs21*clhs635 + clhs359*clhs599 + clhs359*clhs601 + clhs376*clhs584 + clhs386*clhs588 - clhs42*clhs636 + clhs600*clhs634 + clhs602*clhs634;
    const double clhs640 =     DeltaPhi[7][2]; // DERIVATIVE(PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs641 =     clhs2*clhs410*clhs555;
    const double clhs642 =     clhs2*clhs420*clhs555;
    const double clhs643 =     -clhs28*clhs641 + clhs393*clhs585 + clhs393*clhs589 + clhs403*clhs584 + clhs413*clhs588 - clhs45*clhs642 + clhs587*clhs640 + clhs590*clhs640;
    const double clhs644 =     -clhs38*clhs642 + clhs393*clhs594 + clhs393*clhs596 + clhs406*clhs584 + clhs416*clhs588 + clhs595*clhs640 + clhs597*clhs640 - clhs641*clhs7;
    const double clhs645 =     -clhs21*clhs641 + clhs393*clhs599 + clhs393*clhs601 + clhs409*clhs584 + clhs419*clhs588 - clhs42*clhs642 + clhs600*clhs640 + clhs602*clhs640;
    const double clhs646 =     DeltaPhi[8][2]; // DERIVATIVE(PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs647 =     clhs2*clhs443*clhs555;
    const double clhs648 =     clhs2*clhs453*clhs555;
    const double clhs649 =     -clhs28*clhs647 + clhs426*clhs585 + clhs426*clhs589 + clhs436*clhs584 + clhs446*clhs588 - clhs45*clhs648 + clhs587*clhs646 + clhs590*clhs646;
    const double clhs650 =     -clhs38*clhs648 + clhs426*clhs594 + clhs426*clhs596 + clhs439*clhs584 + clhs449*clhs588 + clhs595*clhs646 + clhs597*clhs646 - clhs647*clhs7;
    const double clhs651 =     -clhs21*clhs647 - clhs42*clhs648 + clhs426*clhs599 + clhs426*clhs601 + clhs442*clhs584 + clhs452*clhs588 + clhs600*clhs646 + clhs602*clhs646;

    lhs(0,0)=0;
    lhs(0,1)=0;
    lhs(0,2)=0;
    lhs(0,3)=0;
    lhs(0,4)=0;
    lhs(0,5)=0;
    lhs(0,6)=0;
    lhs(0,7)=0;
    lhs(0,8)=0;
    lhs(0,9)=0;
    lhs(0,10)=0;
    lhs(0,11)=0;
    lhs(0,12)=0;
    lhs(0,13)=0;
    lhs(0,14)=0;
    lhs(0,15)=0;
    lhs(0,16)=0;
    lhs(0,17)=0;
    lhs(0,18)=0;
    lhs(0,19)=0;
    lhs(0,20)=0;
    lhs(0,21)=0;
    lhs(0,22)=0;
    lhs(0,23)=0;
    lhs(0,24)=0;
    lhs(0,25)=0;
    lhs(0,26)=0;
    lhs(1,0)=0;
    lhs(1,1)=0;
    lhs(1,2)=0;
    lhs(1,3)=0;
    lhs(1,4)=0;
    lhs(1,5)=0;
    lhs(1,6)=0;
    lhs(1,7)=0;
    lhs(1,8)=0;
    lhs(1,9)=0;
    lhs(1,10)=0;
    lhs(1,11)=0;
    lhs(1,12)=0;
    lhs(1,13)=0;
    lhs(1,14)=0;
    lhs(1,15)=0;
    lhs(1,16)=0;
    lhs(1,17)=0;
    lhs(1,18)=0;
    lhs(1,19)=0;
    lhs(1,20)=0;
    lhs(1,21)=0;
    lhs(1,22)=0;
    lhs(1,23)=0;
    lhs(1,24)=0;
    lhs(1,25)=0;
    lhs(1,26)=0;
    lhs(2,0)=0;
    lhs(2,1)=0;
    lhs(2,2)=0;
    lhs(2,3)=0;
    lhs(2,4)=0;
    lhs(2,5)=0;
    lhs(2,6)=0;
    lhs(2,7)=0;
    lhs(2,8)=0;
    lhs(2,9)=0;
    lhs(2,10)=0;
    lhs(2,11)=0;
    lhs(2,12)=0;
    lhs(2,13)=0;
    lhs(2,14)=0;
    lhs(2,15)=0;
    lhs(2,16)=0;
    lhs(2,17)=0;
    lhs(2,18)=0;
    lhs(2,19)=0;
    lhs(2,20)=0;
    lhs(2,21)=0;
    lhs(2,22)=0;
    lhs(2,23)=0;
    lhs(2,24)=0;
    lhs(2,25)=0;
    lhs(2,26)=0;
    lhs(3,0)=0;
    lhs(3,1)=0;
    lhs(3,2)=0;
    lhs(3,3)=0;
    lhs(3,4)=0;
    lhs(3,5)=0;
    lhs(3,6)=0;
    lhs(3,7)=0;
    lhs(3,8)=0;
    lhs(3,9)=0;
    lhs(3,10)=0;
    lhs(3,11)=0;
    lhs(3,12)=0;
    lhs(3,13)=0;
    lhs(3,14)=0;
    lhs(3,15)=0;
    lhs(3,16)=0;
    lhs(3,17)=0;
    lhs(3,18)=0;
    lhs(3,19)=0;
    lhs(3,20)=0;
    lhs(3,21)=0;
    lhs(3,22)=0;
    lhs(3,23)=0;
    lhs(3,24)=0;
    lhs(3,25)=0;
    lhs(3,26)=0;
    lhs(4,0)=0;
    lhs(4,1)=0;
    lhs(4,2)=0;
    lhs(4,3)=0;
    lhs(4,4)=0;
    lhs(4,5)=0;
    lhs(4,6)=0;
    lhs(4,7)=0;
    lhs(4,8)=0;
    lhs(4,9)=0;
    lhs(4,10)=0;
    lhs(4,11)=0;
    lhs(4,12)=0;
    lhs(4,13)=0;
    lhs(4,14)=0;
    lhs(4,15)=0;
    lhs(4,16)=0;
    lhs(4,17)=0;
    lhs(4,18)=0;
    lhs(4,19)=0;
    lhs(4,20)=0;
    lhs(4,21)=0;
    lhs(4,22)=0;
    lhs(4,23)=0;
    lhs(4,24)=0;
    lhs(4,25)=0;
    lhs(4,26)=0;
    lhs(5,0)=0;
    lhs(5,1)=0;
    lhs(5,2)=0;
    lhs(5,3)=0;
    lhs(5,4)=0;
    lhs(5,5)=0;
    lhs(5,6)=0;
    lhs(5,7)=0;
    lhs(5,8)=0;
    lhs(5,9)=0;
    lhs(5,10)=0;
    lhs(5,11)=0;
    lhs(5,12)=0;
    lhs(5,13)=0;
    lhs(5,14)=0;
    lhs(5,15)=0;
    lhs(5,16)=0;
    lhs(5,17)=0;
    lhs(5,18)=0;
    lhs(5,19)=0;
    lhs(5,20)=0;
    lhs(5,21)=0;
    lhs(5,22)=0;
    lhs(5,23)=0;
    lhs(5,24)=0;
    lhs(5,25)=0;
    lhs(5,26)=0;
    lhs(6,0)=0;
    lhs(6,1)=0;
    lhs(6,2)=0;
    lhs(6,3)=0;
    lhs(6,4)=0;
    lhs(6,5)=0;
    lhs(6,6)=0;
    lhs(6,7)=0;
    lhs(6,8)=0;
    lhs(6,9)=0;
    lhs(6,10)=0;
    lhs(6,11)=0;
    lhs(6,12)=0;
    lhs(6,13)=0;
    lhs(6,14)=0;
    lhs(6,15)=0;
    lhs(6,16)=0;
    lhs(6,17)=0;
    lhs(6,18)=0;
    lhs(6,19)=0;
    lhs(6,20)=0;
    lhs(6,21)=0;
    lhs(6,22)=0;
    lhs(6,23)=0;
    lhs(6,24)=0;
    lhs(6,25)=0;
    lhs(6,26)=0;
    lhs(7,0)=0;
    lhs(7,1)=0;
    lhs(7,2)=0;
    lhs(7,3)=0;
    lhs(7,4)=0;
    lhs(7,5)=0;
    lhs(7,6)=0;
    lhs(7,7)=0;
    lhs(7,8)=0;
    lhs(7,9)=0;
    lhs(7,10)=0;
    lhs(7,11)=0;
    lhs(7,12)=0;
    lhs(7,13)=0;
    lhs(7,14)=0;
    lhs(7,15)=0;
    lhs(7,16)=0;
    lhs(7,17)=0;
    lhs(7,18)=0;
    lhs(7,19)=0;
    lhs(7,20)=0;
    lhs(7,21)=0;
    lhs(7,22)=0;
    lhs(7,23)=0;
    lhs(7,24)=0;
    lhs(7,25)=0;
    lhs(7,26)=0;
    lhs(8,0)=0;
    lhs(8,1)=0;
    lhs(8,2)=0;
    lhs(8,3)=0;
    lhs(8,4)=0;
    lhs(8,5)=0;
    lhs(8,6)=0;
    lhs(8,7)=0;
    lhs(8,8)=0;
    lhs(8,9)=0;
    lhs(8,10)=0;
    lhs(8,11)=0;
    lhs(8,12)=0;
    lhs(8,13)=0;
    lhs(8,14)=0;
    lhs(8,15)=0;
    lhs(8,16)=0;
    lhs(8,17)=0;
    lhs(8,18)=0;
    lhs(8,19)=0;
    lhs(8,20)=0;
    lhs(8,21)=0;
    lhs(8,22)=0;
    lhs(8,23)=0;
    lhs(8,24)=0;
    lhs(8,25)=0;
    lhs(8,26)=0;
    lhs(9,0)=0;
    lhs(9,1)=0;
    lhs(9,2)=0;
    lhs(9,3)=0;
    lhs(9,4)=0;
    lhs(9,5)=0;
    lhs(9,6)=0;
    lhs(9,7)=0;
    lhs(9,8)=0;
    lhs(9,9)=0;
    lhs(9,10)=0;
    lhs(9,11)=0;
    lhs(9,12)=0;
    lhs(9,13)=0;
    lhs(9,14)=0;
    lhs(9,15)=0;
    lhs(9,16)=0;
    lhs(9,17)=0;
    lhs(9,18)=0;
    lhs(9,19)=0;
    lhs(9,20)=0;
    lhs(9,21)=0;
    lhs(9,22)=0;
    lhs(9,23)=0;
    lhs(9,24)=0;
    lhs(9,25)=0;
    lhs(9,26)=0;
    lhs(10,0)=0;
    lhs(10,1)=0;
    lhs(10,2)=0;
    lhs(10,3)=0;
    lhs(10,4)=0;
    lhs(10,5)=0;
    lhs(10,6)=0;
    lhs(10,7)=0;
    lhs(10,8)=0;
    lhs(10,9)=0;
    lhs(10,10)=0;
    lhs(10,11)=0;
    lhs(10,12)=0;
    lhs(10,13)=0;
    lhs(10,14)=0;
    lhs(10,15)=0;
    lhs(10,16)=0;
    lhs(10,17)=0;
    lhs(10,18)=0;
    lhs(10,19)=0;
    lhs(10,20)=0;
    lhs(10,21)=0;
    lhs(10,22)=0;
    lhs(10,23)=0;
    lhs(10,24)=0;
    lhs(10,25)=0;
    lhs(10,26)=0;
    lhs(11,0)=0;
    lhs(11,1)=0;
    lhs(11,2)=0;
    lhs(11,3)=0;
    lhs(11,4)=0;
    lhs(11,5)=0;
    lhs(11,6)=0;
    lhs(11,7)=0;
    lhs(11,8)=0;
    lhs(11,9)=0;
    lhs(11,10)=0;
    lhs(11,11)=0;
    lhs(11,12)=0;
    lhs(11,13)=0;
    lhs(11,14)=0;
    lhs(11,15)=0;
    lhs(11,16)=0;
    lhs(11,17)=0;
    lhs(11,18)=0;
    lhs(11,19)=0;
    lhs(11,20)=0;
    lhs(11,21)=0;
    lhs(11,22)=0;
    lhs(11,23)=0;
    lhs(11,24)=0;
    lhs(11,25)=0;
    lhs(11,26)=0;
    lhs(12,0)=0;
    lhs(12,1)=0;
    lhs(12,2)=0;
    lhs(12,3)=0;
    lhs(12,4)=0;
    lhs(12,5)=0;
    lhs(12,6)=0;
    lhs(12,7)=0;
    lhs(12,8)=0;
    lhs(12,9)=0;
    lhs(12,10)=0;
    lhs(12,11)=0;
    lhs(12,12)=0;
    lhs(12,13)=0;
    lhs(12,14)=0;
    lhs(12,15)=0;
    lhs(12,16)=0;
    lhs(12,17)=0;
    lhs(12,18)=0;
    lhs(12,19)=0;
    lhs(12,20)=0;
    lhs(12,21)=0;
    lhs(12,22)=0;
    lhs(12,23)=0;
    lhs(12,24)=0;
    lhs(12,25)=0;
    lhs(12,26)=0;
    lhs(13,0)=0;
    lhs(13,1)=0;
    lhs(13,2)=0;
    lhs(13,3)=0;
    lhs(13,4)=0;
    lhs(13,5)=0;
    lhs(13,6)=0;
    lhs(13,7)=0;
    lhs(13,8)=0;
    lhs(13,9)=0;
    lhs(13,10)=0;
    lhs(13,11)=0;
    lhs(13,12)=0;
    lhs(13,13)=0;
    lhs(13,14)=0;
    lhs(13,15)=0;
    lhs(13,16)=0;
    lhs(13,17)=0;
    lhs(13,18)=0;
    lhs(13,19)=0;
    lhs(13,20)=0;
    lhs(13,21)=0;
    lhs(13,22)=0;
    lhs(13,23)=0;
    lhs(13,24)=0;
    lhs(13,25)=0;
    lhs(13,26)=0;
    lhs(14,0)=0;
    lhs(14,1)=0;
    lhs(14,2)=0;
    lhs(14,3)=0;
    lhs(14,4)=0;
    lhs(14,5)=0;
    lhs(14,6)=0;
    lhs(14,7)=0;
    lhs(14,8)=0;
    lhs(14,9)=0;
    lhs(14,10)=0;
    lhs(14,11)=0;
    lhs(14,12)=0;
    lhs(14,13)=0;
    lhs(14,14)=0;
    lhs(14,15)=0;
    lhs(14,16)=0;
    lhs(14,17)=0;
    lhs(14,18)=0;
    lhs(14,19)=0;
    lhs(14,20)=0;
    lhs(14,21)=0;
    lhs(14,22)=0;
    lhs(14,23)=0;
    lhs(14,24)=0;
    lhs(14,25)=0;
    lhs(14,26)=0;
    lhs(15,0)=0;
    lhs(15,1)=0;
    lhs(15,2)=0;
    lhs(15,3)=0;
    lhs(15,4)=0;
    lhs(15,5)=0;
    lhs(15,6)=0;
    lhs(15,7)=0;
    lhs(15,8)=0;
    lhs(15,9)=0;
    lhs(15,10)=0;
    lhs(15,11)=0;
    lhs(15,12)=0;
    lhs(15,13)=0;
    lhs(15,14)=0;
    lhs(15,15)=0;
    lhs(15,16)=0;
    lhs(15,17)=0;
    lhs(15,18)=0;
    lhs(15,19)=0;
    lhs(15,20)=0;
    lhs(15,21)=0;
    lhs(15,22)=0;
    lhs(15,23)=0;
    lhs(15,24)=0;
    lhs(15,25)=0;
    lhs(15,26)=0;
    lhs(16,0)=0;
    lhs(16,1)=0;
    lhs(16,2)=0;
    lhs(16,3)=0;
    lhs(16,4)=0;
    lhs(16,5)=0;
    lhs(16,6)=0;
    lhs(16,7)=0;
    lhs(16,8)=0;
    lhs(16,9)=0;
    lhs(16,10)=0;
    lhs(16,11)=0;
    lhs(16,12)=0;
    lhs(16,13)=0;
    lhs(16,14)=0;
    lhs(16,15)=0;
    lhs(16,16)=0;
    lhs(16,17)=0;
    lhs(16,18)=0;
    lhs(16,19)=0;
    lhs(16,20)=0;
    lhs(16,21)=0;
    lhs(16,22)=0;
    lhs(16,23)=0;
    lhs(16,24)=0;
    lhs(16,25)=0;
    lhs(16,26)=0;
    lhs(17,0)=0;
    lhs(17,1)=0;
    lhs(17,2)=0;
    lhs(17,3)=0;
    lhs(17,4)=0;
    lhs(17,5)=0;
    lhs(17,6)=0;
    lhs(17,7)=0;
    lhs(17,8)=0;
    lhs(17,9)=0;
    lhs(17,10)=0;
    lhs(17,11)=0;
    lhs(17,12)=0;
    lhs(17,13)=0;
    lhs(17,14)=0;
    lhs(17,15)=0;
    lhs(17,16)=0;
    lhs(17,17)=0;
    lhs(17,18)=0;
    lhs(17,19)=0;
    lhs(17,20)=0;
    lhs(17,21)=0;
    lhs(17,22)=0;
    lhs(17,23)=0;
    lhs(17,24)=0;
    lhs(17,25)=0;
    lhs(17,26)=0;
    lhs(18,0)=-clhs3*(GPnormal[0]*clhs48 + GPnormal[1]*clhs49 + GPnormal[2]*clhs50);
    lhs(18,1)=-clhs3*(GPnormal[0]*clhs59 + GPnormal[1]*clhs60 + GPnormal[2]*clhs61);
    lhs(18,2)=-clhs3*(GPnormal[0]*clhs70 + GPnormal[1]*clhs71 + GPnormal[2]*clhs72);
    lhs(18,3)=-clhs3*(GPnormal[0]*clhs81 + GPnormal[1]*clhs82 + GPnormal[2]*clhs83);
    lhs(18,4)=-clhs3*(GPnormal[0]*clhs92 + GPnormal[1]*clhs93 + GPnormal[2]*clhs94);
    lhs(18,5)=-clhs3*(GPnormal[0]*clhs103 + GPnormal[1]*clhs104 + GPnormal[2]*clhs105);
    lhs(18,6)=-clhs3*(GPnormal[0]*clhs114 + GPnormal[1]*clhs115 + GPnormal[2]*clhs116);
    lhs(18,7)=-clhs3*(GPnormal[0]*clhs125 + GPnormal[1]*clhs126 + GPnormal[2]*clhs127);
    lhs(18,8)=-clhs3*(GPnormal[0]*clhs136 + GPnormal[1]*clhs137 + GPnormal[2]*clhs138);
    lhs(18,9)=clhs0*(GPnormal[0]*clhs181 + GPnormal[1]*clhs186 + GPnormal[2]*clhs191);
    lhs(18,10)=clhs0*(GPnormal[0]*clhs222 + GPnormal[1]*clhs223 + GPnormal[2]*clhs224);
    lhs(18,11)=clhs0*(GPnormal[0]*clhs255 + GPnormal[1]*clhs256 + GPnormal[2]*clhs257);
    lhs(18,12)=clhs0*(GPnormal[0]*clhs289 + GPnormal[1]*clhs290 + GPnormal[2]*clhs291);
    lhs(18,13)=clhs0*(GPnormal[0]*clhs322 + GPnormal[1]*clhs323 + GPnormal[2]*clhs324);
    lhs(18,14)=clhs0*(GPnormal[0]*clhs355 + GPnormal[1]*clhs356 + GPnormal[2]*clhs357);
    lhs(18,15)=clhs0*(GPnormal[0]*clhs389 + GPnormal[1]*clhs390 + GPnormal[2]*clhs391);
    lhs(18,16)=clhs0*(GPnormal[0]*clhs422 + GPnormal[1]*clhs423 + GPnormal[2]*clhs424);
    lhs(18,17)=clhs0*(GPnormal[0]*clhs455 + GPnormal[1]*clhs456 + GPnormal[2]*clhs457);
    lhs(18,18)=0;
    lhs(18,19)=0;
    lhs(18,20)=0;
    lhs(18,21)=0;
    lhs(18,22)=0;
    lhs(18,23)=0;
    lhs(18,24)=0;
    lhs(18,25)=0;
    lhs(18,26)=0;
    lhs(19,0)=-clhs3*(GPtangent1[0]*clhs48 + GPtangent1[1]*clhs49 + GPtangent1[2]*clhs50);
    lhs(19,1)=-clhs3*(GPtangent1[0]*clhs59 + GPtangent1[1]*clhs60 + GPtangent1[2]*clhs61);
    lhs(19,2)=-clhs3*(GPtangent1[0]*clhs70 + GPtangent1[1]*clhs71 + GPtangent1[2]*clhs72);
    lhs(19,3)=-clhs3*(GPtangent1[0]*clhs81 + GPtangent1[1]*clhs82 + GPtangent1[2]*clhs83);
    lhs(19,4)=-clhs3*(GPtangent1[0]*clhs92 + GPtangent1[1]*clhs93 + GPtangent1[2]*clhs94);
    lhs(19,5)=-clhs3*(GPtangent1[0]*clhs103 + GPtangent1[1]*clhs104 + GPtangent1[2]*clhs105);
    lhs(19,6)=-clhs3*(GPtangent1[0]*clhs114 + GPtangent1[1]*clhs115 + GPtangent1[2]*clhs116);
    lhs(19,7)=-clhs3*(GPtangent1[0]*clhs125 + GPtangent1[1]*clhs126 + GPtangent1[2]*clhs127);
    lhs(19,8)=-clhs3*(GPtangent1[0]*clhs136 + GPtangent1[1]*clhs137 + GPtangent1[2]*clhs138);
    lhs(19,9)=clhs0*(GPtangent1[0]*clhs181 + GPtangent1[1]*clhs186 + GPtangent1[2]*clhs191);
    lhs(19,10)=clhs0*(GPtangent1[0]*clhs222 + GPtangent1[1]*clhs223 + GPtangent1[2]*clhs224);
    lhs(19,11)=clhs0*(GPtangent1[0]*clhs255 + GPtangent1[1]*clhs256 + GPtangent1[2]*clhs257);
    lhs(19,12)=clhs0*(GPtangent1[0]*clhs289 + GPtangent1[1]*clhs290 + GPtangent1[2]*clhs291);
    lhs(19,13)=clhs0*(GPtangent1[0]*clhs322 + GPtangent1[1]*clhs323 + GPtangent1[2]*clhs324);
    lhs(19,14)=clhs0*(GPtangent1[0]*clhs355 + GPtangent1[1]*clhs356 + GPtangent1[2]*clhs357);
    lhs(19,15)=clhs0*(GPtangent1[0]*clhs389 + GPtangent1[1]*clhs390 + GPtangent1[2]*clhs391);
    lhs(19,16)=clhs0*(GPtangent1[0]*clhs422 + GPtangent1[1]*clhs423 + GPtangent1[2]*clhs424);
    lhs(19,17)=clhs0*(GPtangent1[0]*clhs455 + GPtangent1[1]*clhs456 + GPtangent1[2]*clhs457);
    lhs(19,18)=0;
    lhs(19,19)=0;
    lhs(19,20)=0;
    lhs(19,21)=0;
    lhs(19,22)=0;
    lhs(19,23)=0;
    lhs(19,24)=0;
    lhs(19,25)=0;
    lhs(19,26)=0;
    lhs(20,0)=-clhs3*(GPtangent2[0]*clhs48 + GPtangent2[1]*clhs49 + GPtangent2[2]*clhs50);
    lhs(20,1)=-clhs3*(GPtangent2[0]*clhs59 + GPtangent2[1]*clhs60 + GPtangent2[2]*clhs61);
    lhs(20,2)=-clhs3*(GPtangent2[0]*clhs70 + GPtangent2[1]*clhs71 + GPtangent2[2]*clhs72);
    lhs(20,3)=-clhs3*(GPtangent2[0]*clhs81 + GPtangent2[1]*clhs82 + GPtangent2[2]*clhs83);
    lhs(20,4)=-clhs3*(GPtangent2[0]*clhs92 + GPtangent2[1]*clhs93 + GPtangent2[2]*clhs94);
    lhs(20,5)=-clhs3*(GPtangent2[0]*clhs103 + GPtangent2[1]*clhs104 + GPtangent2[2]*clhs105);
    lhs(20,6)=-clhs3*(GPtangent2[0]*clhs114 + GPtangent2[1]*clhs115 + GPtangent2[2]*clhs116);
    lhs(20,7)=-clhs3*(GPtangent2[0]*clhs125 + GPtangent2[1]*clhs126 + GPtangent2[2]*clhs127);
    lhs(20,8)=-clhs3*(GPtangent2[0]*clhs136 + GPtangent2[1]*clhs137 + GPtangent2[2]*clhs138);
    lhs(20,9)=clhs0*(GPtangent2[0]*clhs181 + GPtangent2[1]*clhs186 + GPtangent2[2]*clhs191);
    lhs(20,10)=clhs0*(GPtangent2[0]*clhs222 + GPtangent2[1]*clhs223 + GPtangent2[2]*clhs224);
    lhs(20,11)=clhs0*(GPtangent2[0]*clhs255 + GPtangent2[1]*clhs256 + GPtangent2[2]*clhs257);
    lhs(20,12)=clhs0*(GPtangent2[0]*clhs289 + GPtangent2[1]*clhs290 + GPtangent2[2]*clhs291);
    lhs(20,13)=clhs0*(GPtangent2[0]*clhs322 + GPtangent2[1]*clhs323 + GPtangent2[2]*clhs324);
    lhs(20,14)=clhs0*(GPtangent2[0]*clhs355 + GPtangent2[1]*clhs356 + GPtangent2[2]*clhs357);
    lhs(20,15)=clhs0*(GPtangent2[0]*clhs389 + GPtangent2[1]*clhs390 + GPtangent2[2]*clhs391);
    lhs(20,16)=clhs0*(GPtangent2[0]*clhs422 + GPtangent2[1]*clhs423 + GPtangent2[2]*clhs424);
    lhs(20,17)=clhs0*(GPtangent2[0]*clhs455 + GPtangent2[1]*clhs456 + GPtangent2[2]*clhs457);
    lhs(20,18)=0;
    lhs(20,19)=0;
    lhs(20,20)=0;
    lhs(20,21)=0;
    lhs(20,22)=0;
    lhs(20,23)=0;
    lhs(20,24)=0;
    lhs(20,25)=0;
    lhs(20,26)=0;
    lhs(21,0)=-clhs459*(GPnormal[0]*clhs460 + GPnormal[1]*clhs461 + GPnormal[2]*clhs462);
    lhs(21,1)=-clhs459*(GPnormal[0]*clhs463 + GPnormal[1]*clhs464 + GPnormal[2]*clhs465);
    lhs(21,2)=-clhs459*(GPnormal[0]*clhs466 + GPnormal[1]*clhs467 + GPnormal[2]*clhs468);
    lhs(21,3)=-clhs459*(GPnormal[0]*clhs469 + GPnormal[1]*clhs470 + GPnormal[2]*clhs471);
    lhs(21,4)=-clhs459*(GPnormal[0]*clhs472 + GPnormal[1]*clhs473 + GPnormal[2]*clhs474);
    lhs(21,5)=-clhs459*(GPnormal[0]*clhs475 + GPnormal[1]*clhs476 + GPnormal[2]*clhs477);
    lhs(21,6)=-clhs459*(GPnormal[0]*clhs478 + GPnormal[1]*clhs479 + GPnormal[2]*clhs480);
    lhs(21,7)=-clhs459*(GPnormal[0]*clhs481 + GPnormal[1]*clhs482 + GPnormal[2]*clhs483);
    lhs(21,8)=-clhs459*(GPnormal[0]*clhs484 + GPnormal[1]*clhs485 + GPnormal[2]*clhs486);
    lhs(21,9)=clhs0*(GPnormal[0]*clhs496 + GPnormal[1]*clhs501 + GPnormal[2]*clhs506);
    lhs(21,10)=clhs0*(GPnormal[0]*clhs510 + GPnormal[1]*clhs511 + GPnormal[2]*clhs512);
    lhs(21,11)=clhs0*(GPnormal[0]*clhs516 + GPnormal[1]*clhs517 + GPnormal[2]*clhs518);
    lhs(21,12)=clhs0*(GPnormal[0]*clhs522 + GPnormal[1]*clhs523 + GPnormal[2]*clhs524);
    lhs(21,13)=clhs0*(GPnormal[0]*clhs528 + GPnormal[1]*clhs529 + GPnormal[2]*clhs530);
    lhs(21,14)=clhs0*(GPnormal[0]*clhs534 + GPnormal[1]*clhs535 + GPnormal[2]*clhs536);
    lhs(21,15)=clhs0*(GPnormal[0]*clhs540 + GPnormal[1]*clhs541 + GPnormal[2]*clhs542);
    lhs(21,16)=clhs0*(GPnormal[0]*clhs546 + GPnormal[1]*clhs547 + GPnormal[2]*clhs548);
    lhs(21,17)=clhs0*(GPnormal[0]*clhs552 + GPnormal[1]*clhs553 + GPnormal[2]*clhs554);
    lhs(21,18)=0;
    lhs(21,19)=0;
    lhs(21,20)=0;
    lhs(21,21)=0;
    lhs(21,22)=0;
    lhs(21,23)=0;
    lhs(21,24)=0;
    lhs(21,25)=0;
    lhs(21,26)=0;
    lhs(22,0)=-clhs459*(GPtangent1[0]*clhs460 + GPtangent1[1]*clhs461 + GPtangent1[2]*clhs462);
    lhs(22,1)=-clhs459*(GPtangent1[0]*clhs463 + GPtangent1[1]*clhs464 + GPtangent1[2]*clhs465);
    lhs(22,2)=-clhs459*(GPtangent1[0]*clhs466 + GPtangent1[1]*clhs467 + GPtangent1[2]*clhs468);
    lhs(22,3)=-clhs459*(GPtangent1[0]*clhs469 + GPtangent1[1]*clhs470 + GPtangent1[2]*clhs471);
    lhs(22,4)=-clhs459*(GPtangent1[0]*clhs472 + GPtangent1[1]*clhs473 + GPtangent1[2]*clhs474);
    lhs(22,5)=-clhs459*(GPtangent1[0]*clhs475 + GPtangent1[1]*clhs476 + GPtangent1[2]*clhs477);
    lhs(22,6)=-clhs459*(GPtangent1[0]*clhs478 + GPtangent1[1]*clhs479 + GPtangent1[2]*clhs480);
    lhs(22,7)=-clhs459*(GPtangent1[0]*clhs481 + GPtangent1[1]*clhs482 + GPtangent1[2]*clhs483);
    lhs(22,8)=-clhs459*(GPtangent1[0]*clhs484 + GPtangent1[1]*clhs485 + GPtangent1[2]*clhs486);
    lhs(22,9)=clhs0*(GPtangent1[0]*clhs496 + GPtangent1[1]*clhs501 + GPtangent1[2]*clhs506);
    lhs(22,10)=clhs0*(GPtangent1[0]*clhs510 + GPtangent1[1]*clhs511 + GPtangent1[2]*clhs512);
    lhs(22,11)=clhs0*(GPtangent1[0]*clhs516 + GPtangent1[1]*clhs517 + GPtangent1[2]*clhs518);
    lhs(22,12)=clhs0*(GPtangent1[0]*clhs522 + GPtangent1[1]*clhs523 + GPtangent1[2]*clhs524);
    lhs(22,13)=clhs0*(GPtangent1[0]*clhs528 + GPtangent1[1]*clhs529 + GPtangent1[2]*clhs530);
    lhs(22,14)=clhs0*(GPtangent1[0]*clhs534 + GPtangent1[1]*clhs535 + GPtangent1[2]*clhs536);
    lhs(22,15)=clhs0*(GPtangent1[0]*clhs540 + GPtangent1[1]*clhs541 + GPtangent1[2]*clhs542);
    lhs(22,16)=clhs0*(GPtangent1[0]*clhs546 + GPtangent1[1]*clhs547 + GPtangent1[2]*clhs548);
    lhs(22,17)=clhs0*(GPtangent1[0]*clhs552 + GPtangent1[1]*clhs553 + GPtangent1[2]*clhs554);
    lhs(22,18)=0;
    lhs(22,19)=0;
    lhs(22,20)=0;
    lhs(22,21)=0;
    lhs(22,22)=0;
    lhs(22,23)=0;
    lhs(22,24)=0;
    lhs(22,25)=0;
    lhs(22,26)=0;
    lhs(23,0)=-clhs459*(GPtangent2[0]*clhs460 + GPtangent2[1]*clhs461 + GPtangent2[2]*clhs462);
    lhs(23,1)=-clhs459*(GPtangent2[0]*clhs463 + GPtangent2[1]*clhs464 + GPtangent2[2]*clhs465);
    lhs(23,2)=-clhs459*(GPtangent2[0]*clhs466 + GPtangent2[1]*clhs467 + GPtangent2[2]*clhs468);
    lhs(23,3)=-clhs459*(GPtangent2[0]*clhs469 + GPtangent2[1]*clhs470 + GPtangent2[2]*clhs471);
    lhs(23,4)=-clhs459*(GPtangent2[0]*clhs472 + GPtangent2[1]*clhs473 + GPtangent2[2]*clhs474);
    lhs(23,5)=-clhs459*(GPtangent2[0]*clhs475 + GPtangent2[1]*clhs476 + GPtangent2[2]*clhs477);
    lhs(23,6)=-clhs459*(GPtangent2[0]*clhs478 + GPtangent2[1]*clhs479 + GPtangent2[2]*clhs480);
    lhs(23,7)=-clhs459*(GPtangent2[0]*clhs481 + GPtangent2[1]*clhs482 + GPtangent2[2]*clhs483);
    lhs(23,8)=-clhs459*(GPtangent2[0]*clhs484 + GPtangent2[1]*clhs485 + GPtangent2[2]*clhs486);
    lhs(23,9)=clhs0*(GPtangent2[0]*clhs496 + GPtangent2[1]*clhs501 + GPtangent2[2]*clhs506);
    lhs(23,10)=clhs0*(GPtangent2[0]*clhs510 + GPtangent2[1]*clhs511 + GPtangent2[2]*clhs512);
    lhs(23,11)=clhs0*(GPtangent2[0]*clhs516 + GPtangent2[1]*clhs517 + GPtangent2[2]*clhs518);
    lhs(23,12)=clhs0*(GPtangent2[0]*clhs522 + GPtangent2[1]*clhs523 + GPtangent2[2]*clhs524);
    lhs(23,13)=clhs0*(GPtangent2[0]*clhs528 + GPtangent2[1]*clhs529 + GPtangent2[2]*clhs530);
    lhs(23,14)=clhs0*(GPtangent2[0]*clhs534 + GPtangent2[1]*clhs535 + GPtangent2[2]*clhs536);
    lhs(23,15)=clhs0*(GPtangent2[0]*clhs540 + GPtangent2[1]*clhs541 + GPtangent2[2]*clhs542);
    lhs(23,16)=clhs0*(GPtangent2[0]*clhs546 + GPtangent2[1]*clhs547 + GPtangent2[2]*clhs548);
    lhs(23,17)=clhs0*(GPtangent2[0]*clhs552 + GPtangent2[1]*clhs553 + GPtangent2[2]*clhs554);
    lhs(23,18)=0;
    lhs(23,19)=0;
    lhs(23,20)=0;
    lhs(23,21)=0;
    lhs(23,22)=0;
    lhs(23,23)=0;
    lhs(23,24)=0;
    lhs(23,25)=0;
    lhs(23,26)=0;
    lhs(24,0)=-clhs556*(GPnormal[0]*clhs557 + GPnormal[1]*clhs558 + GPnormal[2]*clhs559);
    lhs(24,1)=-clhs556*(GPnormal[0]*clhs560 + GPnormal[1]*clhs561 + GPnormal[2]*clhs562);
    lhs(24,2)=-clhs556*(GPnormal[0]*clhs563 + GPnormal[1]*clhs564 + GPnormal[2]*clhs565);
    lhs(24,3)=-clhs556*(GPnormal[0]*clhs566 + GPnormal[1]*clhs567 + GPnormal[2]*clhs568);
    lhs(24,4)=-clhs556*(GPnormal[0]*clhs569 + GPnormal[1]*clhs570 + GPnormal[2]*clhs571);
    lhs(24,5)=-clhs556*(GPnormal[0]*clhs572 + GPnormal[1]*clhs573 + GPnormal[2]*clhs574);
    lhs(24,6)=-clhs556*(GPnormal[0]*clhs575 + GPnormal[1]*clhs576 + GPnormal[2]*clhs577);
    lhs(24,7)=-clhs556*(GPnormal[0]*clhs578 + GPnormal[1]*clhs579 + GPnormal[2]*clhs580);
    lhs(24,8)=-clhs556*(GPnormal[0]*clhs581 + GPnormal[1]*clhs582 + GPnormal[2]*clhs583);
    lhs(24,9)=clhs0*(GPnormal[0]*clhs593 + GPnormal[1]*clhs598 + GPnormal[2]*clhs603);
    lhs(24,10)=clhs0*(GPnormal[0]*clhs607 + GPnormal[1]*clhs608 + GPnormal[2]*clhs609);
    lhs(24,11)=clhs0*(GPnormal[0]*clhs613 + GPnormal[1]*clhs614 + GPnormal[2]*clhs615);
    lhs(24,12)=clhs0*(GPnormal[0]*clhs619 + GPnormal[1]*clhs620 + GPnormal[2]*clhs621);
    lhs(24,13)=clhs0*(GPnormal[0]*clhs625 + GPnormal[1]*clhs626 + GPnormal[2]*clhs627);
    lhs(24,14)=clhs0*(GPnormal[0]*clhs631 + GPnormal[1]*clhs632 + GPnormal[2]*clhs633);
    lhs(24,15)=clhs0*(GPnormal[0]*clhs637 + GPnormal[1]*clhs638 + GPnormal[2]*clhs639);
    lhs(24,16)=clhs0*(GPnormal[0]*clhs643 + GPnormal[1]*clhs644 + GPnormal[2]*clhs645);
    lhs(24,17)=clhs0*(GPnormal[0]*clhs649 + GPnormal[1]*clhs650 + GPnormal[2]*clhs651);
    lhs(24,18)=0;
    lhs(24,19)=0;
    lhs(24,20)=0;
    lhs(24,21)=0;
    lhs(24,22)=0;
    lhs(24,23)=0;
    lhs(24,24)=0;
    lhs(24,25)=0;
    lhs(24,26)=0;
    lhs(25,0)=-clhs556*(GPtangent1[0]*clhs557 + GPtangent1[1]*clhs558 + GPtangent1[2]*clhs559);
    lhs(25,1)=-clhs556*(GPtangent1[0]*clhs560 + GPtangent1[1]*clhs561 + GPtangent1[2]*clhs562);
    lhs(25,2)=-clhs556*(GPtangent1[0]*clhs563 + GPtangent1[1]*clhs564 + GPtangent1[2]*clhs565);
    lhs(25,3)=-clhs556*(GPtangent1[0]*clhs566 + GPtangent1[1]*clhs567 + GPtangent1[2]*clhs568);
    lhs(25,4)=-clhs556*(GPtangent1[0]*clhs569 + GPtangent1[1]*clhs570 + GPtangent1[2]*clhs571);
    lhs(25,5)=-clhs556*(GPtangent1[0]*clhs572 + GPtangent1[1]*clhs573 + GPtangent1[2]*clhs574);
    lhs(25,6)=-clhs556*(GPtangent1[0]*clhs575 + GPtangent1[1]*clhs576 + GPtangent1[2]*clhs577);
    lhs(25,7)=-clhs556*(GPtangent1[0]*clhs578 + GPtangent1[1]*clhs579 + GPtangent1[2]*clhs580);
    lhs(25,8)=-clhs556*(GPtangent1[0]*clhs581 + GPtangent1[1]*clhs582 + GPtangent1[2]*clhs583);
    lhs(25,9)=clhs0*(GPtangent1[0]*clhs593 + GPtangent1[1]*clhs598 + GPtangent1[2]*clhs603);
    lhs(25,10)=clhs0*(GPtangent1[0]*clhs607 + GPtangent1[1]*clhs608 + GPtangent1[2]*clhs609);
    lhs(25,11)=clhs0*(GPtangent1[0]*clhs613 + GPtangent1[1]*clhs614 + GPtangent1[2]*clhs615);
    lhs(25,12)=clhs0*(GPtangent1[0]*clhs619 + GPtangent1[1]*clhs620 + GPtangent1[2]*clhs621);
    lhs(25,13)=clhs0*(GPtangent1[0]*clhs625 + GPtangent1[1]*clhs626 + GPtangent1[2]*clhs627);
    lhs(25,14)=clhs0*(GPtangent1[0]*clhs631 + GPtangent1[1]*clhs632 + GPtangent1[2]*clhs633);
    lhs(25,15)=clhs0*(GPtangent1[0]*clhs637 + GPtangent1[1]*clhs638 + GPtangent1[2]*clhs639);
    lhs(25,16)=clhs0*(GPtangent1[0]*clhs643 + GPtangent1[1]*clhs644 + GPtangent1[2]*clhs645);
    lhs(25,17)=clhs0*(GPtangent1[0]*clhs649 + GPtangent1[1]*clhs650 + GPtangent1[2]*clhs651);
    lhs(25,18)=0;
    lhs(25,19)=0;
    lhs(25,20)=0;
    lhs(25,21)=0;
    lhs(25,22)=0;
    lhs(25,23)=0;
    lhs(25,24)=0;
    lhs(25,25)=0;
    lhs(25,26)=0;
    lhs(26,0)=-clhs556*(GPtangent2[0]*clhs557 + GPtangent2[1]*clhs558 + GPtangent2[2]*clhs559);
    lhs(26,1)=-clhs556*(GPtangent2[0]*clhs560 + GPtangent2[1]*clhs561 + GPtangent2[2]*clhs562);
    lhs(26,2)=-clhs556*(GPtangent2[0]*clhs563 + GPtangent2[1]*clhs564 + GPtangent2[2]*clhs565);
    lhs(26,3)=-clhs556*(GPtangent2[0]*clhs566 + GPtangent2[1]*clhs567 + GPtangent2[2]*clhs568);
    lhs(26,4)=-clhs556*(GPtangent2[0]*clhs569 + GPtangent2[1]*clhs570 + GPtangent2[2]*clhs571);
    lhs(26,5)=-clhs556*(GPtangent2[0]*clhs572 + GPtangent2[1]*clhs573 + GPtangent2[2]*clhs574);
    lhs(26,6)=-clhs556*(GPtangent2[0]*clhs575 + GPtangent2[1]*clhs576 + GPtangent2[2]*clhs577);
    lhs(26,7)=-clhs556*(GPtangent2[0]*clhs578 + GPtangent2[1]*clhs579 + GPtangent2[2]*clhs580);
    lhs(26,8)=-clhs556*(GPtangent2[0]*clhs581 + GPtangent2[1]*clhs582 + GPtangent2[2]*clhs583);
    lhs(26,9)=clhs0*(GPtangent2[0]*clhs593 + GPtangent2[1]*clhs598 + GPtangent2[2]*clhs603);
    lhs(26,10)=clhs0*(GPtangent2[0]*clhs607 + GPtangent2[1]*clhs608 + GPtangent2[2]*clhs609);
    lhs(26,11)=clhs0*(GPtangent2[0]*clhs613 + GPtangent2[1]*clhs614 + GPtangent2[2]*clhs615);
    lhs(26,12)=clhs0*(GPtangent2[0]*clhs619 + GPtangent2[1]*clhs620 + GPtangent2[2]*clhs621);
    lhs(26,13)=clhs0*(GPtangent2[0]*clhs625 + GPtangent2[1]*clhs626 + GPtangent2[2]*clhs627);
    lhs(26,14)=clhs0*(GPtangent2[0]*clhs631 + GPtangent2[1]*clhs632 + GPtangent2[2]*clhs633);
    lhs(26,15)=clhs0*(GPtangent2[0]*clhs637 + GPtangent2[1]*clhs638 + GPtangent2[2]*clhs639);
    lhs(26,16)=clhs0*(GPtangent2[0]*clhs643 + GPtangent2[1]*clhs644 + GPtangent2[2]*clhs645);
    lhs(26,17)=clhs0*(GPtangent2[0]*clhs649 + GPtangent2[1]*clhs650 + GPtangent2[2]*clhs651);
    lhs(26,18)=0;
    lhs(26,19)=0;
    lhs(26,20)=0;
    lhs(26,21)=0;
    lhs(26,22)=0;
    lhs(26,23)=0;
    lhs(26,24)=0;
    lhs(26,25)=0;
    lhs(26,26)=0;

    
    return lhs;
}
    /***********************************************************************************/
    /***********************************************************************************/
    
    static inline bounded_matrix<double,27,27> ComputeGaussPointSlipLHS(
        const array_1d<double,3> N1, 
        const array_1d<double,3> N2, 
        const array_1d<double,3> Phi, 
        const double detJ, 
        const double mu, 
        const ContactData<3,3>& rContactData,
        const double& augmented_normal_lm,
        const double& augmented_tangent_lm,
        const double& integration_point_gap,
        const double& integration_point_slip
        )
{
    bounded_matrix<double,27,27> lhs;
    
    const bounded_matrix<double, 3,3> normalslave     = rContactData.Normal_s;
    const bounded_matrix<double, 3,3> tan1slave       = rContactData.Tangent_xi_s;
    const bounded_matrix<double, 3,3> tan2slave       = rContactData.Tangent_eta_s;
    const bounded_matrix<double, 3,3> lm              = rContactData.LagrangeMultipliers;
    const double Dt              = rContactData.Dt;
//     const double epsilon_normal  = rContactData.epsilon_normal;
//     const double epsilon_tangent = rContactData.epsilon_tangent;
    
    const array_1d<double,3> GPnormal     = prod(trans(normalslave), N1);
    const array_1d<double,3> GPtangent1   = prod(trans(tan1slave), N1);
    const array_1d<double,3> GPtangent2   = prod(trans(tan2slave), N1);
    
//     const double sign_tangpress = boost::math::sign(augmented_tangent_lm);
    
    const bounded_matrix<double, 3,3> v1 = rContactData.v1;
    const bounded_matrix<double, 3,3> v2 = rContactData.v2;
    
    const std::vector<double> DeltaJs          = rContactData.DeltaJ_s;
    const std::vector<bounded_matrix<double, 3, 3>> DeltaNormals     = rContactData.Delta_Normal_s;
    const std::vector<bounded_matrix<double, 3, 3>> Deltatangentxis  = rContactData.Delta_Tangent_xi_s;
    const std::vector<bounded_matrix<double, 3, 3>> Deltatangentetas = rContactData.Delta_Tangent_eta_s;
    const std::vector<array_1d<double,3>> DeltaPhi         = rContactData.DeltaPhi;
    const std::vector<array_1d<double,3>> DeltaN2          = rContactData.DeltaN2;

    const double clhs0 =     1.0/Dt;
    const double clhs1 =     Phi[0]; // PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs2 =     detJ; // DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs3 =     clhs0*clhs1*clhs2;
    const double clhs4 =     tan1slave(0,0); // TAN1SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs5 =     tan1slave(0,1); // TAN1SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs6 =     tan1slave(1,1); // TAN1SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs7 =     tan1slave(2,1); // TAN1SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs8 =     N1[0]*clhs5 + N1[1]*clhs6 + N1[2]*clhs7;
    const double clhs9 =     Dt*v2(0,1);
    const double clhs10 =     N2[0]; // N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
    const double clhs11 =     DeltaN2[9][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
    const double clhs12 =     Dt*v2(1,1);
    const double clhs13 =     N2[1]; // N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
    const double clhs14 =     DeltaN2[9][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
    const double clhs15 =     Dt*v2(2,1);
    const double clhs16 =     N2[2]; // N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
    const double clhs17 =     DeltaN2[9][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
    const double clhs18 =     clhs11*clhs9 + clhs12*clhs14 + clhs15*clhs17;
    const double clhs19 =     tan1slave(0,2); // TAN1SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs20 =     tan1slave(1,2); // TAN1SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs21 =     tan1slave(2,2); // TAN1SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs22 =     N1[0]*clhs19 + N1[1]*clhs20 + N1[2]*clhs21;
    const double clhs23 =     Dt*v2(0,2);
    const double clhs24 =     Dt*v2(1,2);
    const double clhs25 =     Dt*v2(2,2);
    const double clhs26 =     clhs11*clhs23 + clhs14*clhs24 + clhs17*clhs25;
    const double clhs27 =     tan1slave(1,0); // TAN1SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs28 =     tan1slave(2,0); // TAN1SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs29 =     N1[0]*clhs4 + N1[1]*clhs27 + N1[2]*clhs28;
    const double clhs30 =     Dt*v2(0,0);
    const double clhs31 =     Dt*v2(1,0);
    const double clhs32 =     Dt*v2(2,0);
    const double clhs33 =     clhs10 + clhs11*clhs30 + clhs14*clhs31 + clhs17*clhs32;
    const double clhs34 =     clhs18*clhs8 + clhs22*clhs26 + clhs29*clhs33;
    const double clhs35 =     tan2slave(0,0); // TAN2SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs36 =     tan2slave(0,1); // TAN2SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs37 =     tan2slave(1,1); // TAN2SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs38 =     tan2slave(2,1); // TAN2SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs39 =     N1[0]*clhs36 + N1[1]*clhs37 + N1[2]*clhs38;
    const double clhs40 =     tan2slave(0,2); // TAN2SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs41 =     tan2slave(1,2); // TAN2SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs42 =     tan2slave(2,2); // TAN2SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs43 =     N1[0]*clhs40 + N1[1]*clhs41 + N1[2]*clhs42;
    const double clhs44 =     tan2slave(1,0); // TAN2SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs45 =     tan2slave(2,0); // TAN2SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs46 =     N1[0]*clhs35 + N1[1]*clhs44 + N1[2]*clhs45;
    const double clhs47 =     clhs18*clhs39 + clhs26*clhs43 + clhs33*clhs46;
    const double clhs48 =     clhs34*clhs4 + clhs35*clhs47;
    const double clhs49 =     clhs34*clhs5 + clhs36*clhs47;
    const double clhs50 =     clhs19*clhs34 + clhs40*clhs47;
    const double clhs51 =     DeltaN2[10][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
    const double clhs52 =     DeltaN2[10][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
    const double clhs53 =     DeltaN2[10][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
    const double clhs54 =     clhs30*clhs51 + clhs31*clhs52 + clhs32*clhs53;
    const double clhs55 =     clhs23*clhs51 + clhs24*clhs52 + clhs25*clhs53;
    const double clhs56 =     clhs10 + clhs12*clhs52 + clhs15*clhs53 + clhs51*clhs9;
    const double clhs57 =     clhs22*clhs55 + clhs29*clhs54 + clhs56*clhs8;
    const double clhs58 =     clhs39*clhs56 + clhs43*clhs55 + clhs46*clhs54;
    const double clhs59 =     clhs35*clhs58 + clhs4*clhs57;
    const double clhs60 =     clhs36*clhs58 + clhs5*clhs57;
    const double clhs61 =     clhs19*clhs57 + clhs40*clhs58;
    const double clhs62 =     DeltaN2[11][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
    const double clhs63 =     DeltaN2[11][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
    const double clhs64 =     DeltaN2[11][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
    const double clhs65 =     clhs30*clhs62 + clhs31*clhs63 + clhs32*clhs64;
    const double clhs66 =     clhs12*clhs63 + clhs15*clhs64 + clhs62*clhs9;
    const double clhs67 =     clhs10 + clhs23*clhs62 + clhs24*clhs63 + clhs25*clhs64;
    const double clhs68 =     clhs22*clhs67 + clhs29*clhs65 + clhs66*clhs8;
    const double clhs69 =     clhs39*clhs66 + clhs43*clhs67 + clhs46*clhs65;
    const double clhs70 =     clhs35*clhs69 + clhs4*clhs68;
    const double clhs71 =     clhs36*clhs69 + clhs5*clhs68;
    const double clhs72 =     clhs19*clhs68 + clhs40*clhs69;
    const double clhs73 =     DeltaN2[12][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
    const double clhs74 =     DeltaN2[12][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
    const double clhs75 =     DeltaN2[12][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
    const double clhs76 =     clhs12*clhs74 + clhs15*clhs75 + clhs73*clhs9;
    const double clhs77 =     clhs23*clhs73 + clhs24*clhs74 + clhs25*clhs75;
    const double clhs78 =     clhs13 + clhs30*clhs73 + clhs31*clhs74 + clhs32*clhs75;
    const double clhs79 =     clhs22*clhs77 + clhs29*clhs78 + clhs76*clhs8;
    const double clhs80 =     clhs39*clhs76 + clhs43*clhs77 + clhs46*clhs78;
    const double clhs81 =     clhs35*clhs80 + clhs4*clhs79;
    const double clhs82 =     clhs36*clhs80 + clhs5*clhs79;
    const double clhs83 =     clhs19*clhs79 + clhs40*clhs80;
    const double clhs84 =     DeltaN2[13][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
    const double clhs85 =     DeltaN2[13][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
    const double clhs86 =     DeltaN2[13][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
    const double clhs87 =     clhs30*clhs84 + clhs31*clhs85 + clhs32*clhs86;
    const double clhs88 =     clhs23*clhs84 + clhs24*clhs85 + clhs25*clhs86;
    const double clhs89 =     clhs12*clhs85 + clhs13 + clhs15*clhs86 + clhs84*clhs9;
    const double clhs90 =     clhs22*clhs88 + clhs29*clhs87 + clhs8*clhs89;
    const double clhs91 =     clhs39*clhs89 + clhs43*clhs88 + clhs46*clhs87;
    const double clhs92 =     clhs35*clhs91 + clhs4*clhs90;
    const double clhs93 =     clhs36*clhs91 + clhs5*clhs90;
    const double clhs94 =     clhs19*clhs90 + clhs40*clhs91;
    const double clhs95 =     DeltaN2[14][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
    const double clhs96 =     DeltaN2[14][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
    const double clhs97 =     DeltaN2[14][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
    const double clhs98 =     clhs30*clhs95 + clhs31*clhs96 + clhs32*clhs97;
    const double clhs99 =     clhs12*clhs96 + clhs15*clhs97 + clhs9*clhs95;
    const double clhs100 =     clhs13 + clhs23*clhs95 + clhs24*clhs96 + clhs25*clhs97;
    const double clhs101 =     clhs100*clhs22 + clhs29*clhs98 + clhs8*clhs99;
    const double clhs102 =     clhs100*clhs43 + clhs39*clhs99 + clhs46*clhs98;
    const double clhs103 =     clhs101*clhs4 + clhs102*clhs35;
    const double clhs104 =     clhs101*clhs5 + clhs102*clhs36;
    const double clhs105 =     clhs101*clhs19 + clhs102*clhs40;
    const double clhs106 =     DeltaN2[15][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
    const double clhs107 =     DeltaN2[15][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
    const double clhs108 =     DeltaN2[15][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
    const double clhs109 =     clhs106*clhs9 + clhs107*clhs12 + clhs108*clhs15;
    const double clhs110 =     clhs106*clhs23 + clhs107*clhs24 + clhs108*clhs25;
    const double clhs111 =     clhs106*clhs30 + clhs107*clhs31 + clhs108*clhs32 + clhs16;
    const double clhs112 =     clhs109*clhs8 + clhs110*clhs22 + clhs111*clhs29;
    const double clhs113 =     clhs109*clhs39 + clhs110*clhs43 + clhs111*clhs46;
    const double clhs114 =     clhs112*clhs4 + clhs113*clhs35;
    const double clhs115 =     clhs112*clhs5 + clhs113*clhs36;
    const double clhs116 =     clhs112*clhs19 + clhs113*clhs40;
    const double clhs117 =     DeltaN2[16][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
    const double clhs118 =     DeltaN2[16][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
    const double clhs119 =     DeltaN2[16][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
    const double clhs120 =     clhs117*clhs30 + clhs118*clhs31 + clhs119*clhs32;
    const double clhs121 =     clhs117*clhs23 + clhs118*clhs24 + clhs119*clhs25;
    const double clhs122 =     clhs117*clhs9 + clhs118*clhs12 + clhs119*clhs15 + clhs16;
    const double clhs123 =     clhs120*clhs29 + clhs121*clhs22 + clhs122*clhs8;
    const double clhs124 =     clhs120*clhs46 + clhs121*clhs43 + clhs122*clhs39;
    const double clhs125 =     clhs123*clhs4 + clhs124*clhs35;
    const double clhs126 =     clhs123*clhs5 + clhs124*clhs36;
    const double clhs127 =     clhs123*clhs19 + clhs124*clhs40;
    const double clhs128 =     DeltaN2[17][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
    const double clhs129 =     DeltaN2[17][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
    const double clhs130 =     DeltaN2[17][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
    const double clhs131 =     clhs128*clhs30 + clhs129*clhs31 + clhs130*clhs32;
    const double clhs132 =     clhs12*clhs129 + clhs128*clhs9 + clhs130*clhs15;
    const double clhs133 =     clhs128*clhs23 + clhs129*clhs24 + clhs130*clhs25 + clhs16;
    const double clhs134 =     clhs131*clhs29 + clhs132*clhs8 + clhs133*clhs22;
    const double clhs135 =     clhs131*clhs46 + clhs132*clhs39 + clhs133*clhs43;
    const double clhs136 =     clhs134*clhs4 + clhs135*clhs35;
    const double clhs137 =     clhs134*clhs5 + clhs135*clhs36;
    const double clhs138 =     clhs134*clhs19 + clhs135*clhs40;
    const double clhs139 =     Deltatangentxis[0](0,0); // DERIVATIVE(TAN1SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs140 =     N1[0]*(Dt*v1(0,0)) + N1[1]*(Dt*v1(1,0)) + N1[2]*(Dt*v1(2,0)) - clhs10*clhs30 - clhs13*clhs31 - clhs16*clhs32;
    const double clhs141 =     N1[0]*(Dt*v1(0,1)) + N1[1]*(Dt*v1(1,1)) + N1[2]*(Dt*v1(2,1)) - clhs10*clhs9 - clhs12*clhs13 - clhs15*clhs16;
    const double clhs142 =     N1[0]*(Dt*v1(0,2)) + N1[1]*(Dt*v1(1,2)) + N1[2]*(Dt*v1(2,2)) - clhs10*clhs23 - clhs13*clhs24 - clhs16*clhs25;
    const double clhs143 =     clhs140*clhs29 + clhs141*clhs8 + clhs142*clhs22;
    const double clhs144 =     clhs1*clhs143*clhs2;
    const double clhs145 =     DeltaJs[0]; // DERIVATIVE(DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs146 =     clhs1*clhs143*clhs4;
    const double clhs147 =     DeltaPhi[0][0]; // DERIVATIVE(PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs148 =     clhs143*clhs2*clhs4;
    const double clhs149 =     Deltatangentetas[0](0,0); // DERIVATIVE(TAN2SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs150 =     clhs140*clhs46 + clhs141*clhs39 + clhs142*clhs43;
    const double clhs151 =     clhs1*clhs150*clhs2;
    const double clhs152 =     clhs1*clhs150*clhs35;
    const double clhs153 =     clhs150*clhs2*clhs35;
    const double clhs154 =     DeltaN2[0][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
    const double clhs155 =     DeltaN2[0][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
    const double clhs156 =     DeltaN2[0][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
    const double clhs157 =     clhs12*clhs155 + clhs15*clhs156 + clhs154*clhs9;
    const double clhs158 =     clhs154*clhs23 + clhs155*clhs24 + clhs156*clhs25;
    const double clhs159 =     -N1[0];
    const double clhs160 =     clhs154*clhs30 + clhs155*clhs31 + clhs156*clhs32 + clhs159;
    const double clhs161 =     Deltatangentxis[0](1,0); // DERIVATIVE(TAN1SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs162 =     Deltatangentxis[0](2,0); // DERIVATIVE(TAN1SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs163 =     Deltatangentxis[0](0,1); // DERIVATIVE(TAN1SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs164 =     Deltatangentxis[0](1,1); // DERIVATIVE(TAN1SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs165 =     Deltatangentxis[0](2,1); // DERIVATIVE(TAN1SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs166 =     Deltatangentxis[0](0,2); // DERIVATIVE(TAN1SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs167 =     Deltatangentxis[0](1,2); // DERIVATIVE(TAN1SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs168 =     Deltatangentxis[0](2,2); // DERIVATIVE(TAN1SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs169 =     -clhs140*(N1[0]*clhs139 + N1[1]*clhs161 + N1[2]*clhs162) - clhs141*(N1[0]*clhs163 + N1[1]*clhs164 + N1[2]*clhs165) - clhs142*(N1[0]*clhs166 + N1[1]*clhs167 + N1[2]*clhs168) + clhs157*clhs8 + clhs158*clhs22 + clhs160*clhs29;
    const double clhs170 =     clhs1*clhs169*clhs2;
    const double clhs171 =     Deltatangentetas[0](1,0); // DERIVATIVE(TAN2SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs172 =     Deltatangentetas[0](2,0); // DERIVATIVE(TAN2SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs173 =     Deltatangentetas[0](0,1); // DERIVATIVE(TAN2SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs174 =     Deltatangentetas[0](1,1); // DERIVATIVE(TAN2SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs175 =     Deltatangentetas[0](2,1); // DERIVATIVE(TAN2SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs176 =     Deltatangentetas[0](0,2); // DERIVATIVE(TAN2SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs177 =     Deltatangentetas[0](1,2); // DERIVATIVE(TAN2SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs178 =     Deltatangentetas[0](2,2); // DERIVATIVE(TAN2SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs179 =     -clhs140*(N1[0]*clhs149 + N1[1]*clhs171 + N1[2]*clhs172) - clhs141*(N1[0]*clhs173 + N1[1]*clhs174 + N1[2]*clhs175) - clhs142*(N1[0]*clhs176 + N1[1]*clhs177 + N1[2]*clhs178) + clhs157*clhs39 + clhs158*clhs43 + clhs160*clhs46;
    const double clhs180 =     clhs1*clhs179*clhs2;
    const double clhs181 =     clhs139*clhs144 + clhs145*clhs146 + clhs145*clhs152 + clhs147*clhs148 + clhs147*clhs153 + clhs149*clhs151 - clhs170*clhs4 - clhs180*clhs35;
    const double clhs182 =     clhs1*clhs143*clhs5;
    const double clhs183 =     clhs143*clhs2*clhs5;
    const double clhs184 =     clhs1*clhs150*clhs36;
    const double clhs185 =     clhs150*clhs2*clhs36;
    const double clhs186 =     clhs144*clhs163 + clhs145*clhs182 + clhs145*clhs184 + clhs147*clhs183 + clhs147*clhs185 + clhs151*clhs173 - clhs170*clhs5 - clhs180*clhs36;
    const double clhs187 =     clhs1*clhs143*clhs19;
    const double clhs188 =     clhs143*clhs19*clhs2;
    const double clhs189 =     clhs1*clhs150*clhs40;
    const double clhs190 =     clhs150*clhs2*clhs40;
    const double clhs191 =     clhs144*clhs166 + clhs145*clhs187 + clhs145*clhs189 + clhs147*clhs188 + clhs147*clhs190 + clhs151*clhs176 - clhs170*clhs19 - clhs180*clhs40;
    const double clhs192 =     Deltatangentxis[1](0,0); // DERIVATIVE(TAN1SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs193 =     DeltaJs[1]; // DERIVATIVE(DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs194 =     DeltaPhi[1][0]; // DERIVATIVE(PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs195 =     Deltatangentetas[1](0,0); // DERIVATIVE(TAN2SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs196 =     DeltaN2[1][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
    const double clhs197 =     DeltaN2[1][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
    const double clhs198 =     DeltaN2[1][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
    const double clhs199 =     clhs196*clhs30 + clhs197*clhs31 + clhs198*clhs32;
    const double clhs200 =     clhs196*clhs23 + clhs197*clhs24 + clhs198*clhs25;
    const double clhs201 =     clhs12*clhs197 + clhs15*clhs198 + clhs159 + clhs196*clhs9;
    const double clhs202 =     Deltatangentxis[1](1,0); // DERIVATIVE(TAN1SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs203 =     Deltatangentxis[1](2,0); // DERIVATIVE(TAN1SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs204 =     Deltatangentxis[1](0,1); // DERIVATIVE(TAN1SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs205 =     Deltatangentxis[1](1,1); // DERIVATIVE(TAN1SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs206 =     Deltatangentxis[1](2,1); // DERIVATIVE(TAN1SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs207 =     Deltatangentxis[1](0,2); // DERIVATIVE(TAN1SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs208 =     Deltatangentxis[1](1,2); // DERIVATIVE(TAN1SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs209 =     Deltatangentxis[1](2,2); // DERIVATIVE(TAN1SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs210 =     -clhs140*(N1[0]*clhs192 + N1[1]*clhs202 + N1[2]*clhs203) - clhs141*(N1[0]*clhs204 + N1[1]*clhs205 + N1[2]*clhs206) - clhs142*(N1[0]*clhs207 + N1[1]*clhs208 + N1[2]*clhs209) + clhs199*clhs29 + clhs200*clhs22 + clhs201*clhs8;
    const double clhs211 =     clhs1*clhs2*clhs210;
    const double clhs212 =     Deltatangentetas[1](1,0); // DERIVATIVE(TAN2SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs213 =     Deltatangentetas[1](2,0); // DERIVATIVE(TAN2SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs214 =     Deltatangentetas[1](0,1); // DERIVATIVE(TAN2SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs215 =     Deltatangentetas[1](1,1); // DERIVATIVE(TAN2SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs216 =     Deltatangentetas[1](2,1); // DERIVATIVE(TAN2SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs217 =     Deltatangentetas[1](0,2); // DERIVATIVE(TAN2SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs218 =     Deltatangentetas[1](1,2); // DERIVATIVE(TAN2SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs219 =     Deltatangentetas[1](2,2); // DERIVATIVE(TAN2SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs220 =     -clhs140*(N1[0]*clhs195 + N1[1]*clhs212 + N1[2]*clhs213) - clhs141*(N1[0]*clhs214 + N1[1]*clhs215 + N1[2]*clhs216) - clhs142*(N1[0]*clhs217 + N1[1]*clhs218 + N1[2]*clhs219) + clhs199*clhs46 + clhs200*clhs43 + clhs201*clhs39;
    const double clhs221 =     clhs1*clhs2*clhs220;
    const double clhs222 =     clhs144*clhs192 + clhs146*clhs193 + clhs148*clhs194 + clhs151*clhs195 + clhs152*clhs193 + clhs153*clhs194 - clhs211*clhs4 - clhs221*clhs35;
    const double clhs223 =     clhs144*clhs204 + clhs151*clhs214 + clhs182*clhs193 + clhs183*clhs194 + clhs184*clhs193 + clhs185*clhs194 - clhs211*clhs5 - clhs221*clhs36;
    const double clhs224 =     clhs144*clhs207 + clhs151*clhs217 + clhs187*clhs193 + clhs188*clhs194 + clhs189*clhs193 - clhs19*clhs211 + clhs190*clhs194 - clhs221*clhs40;
    const double clhs225 =     Deltatangentxis[2](0,0); // DERIVATIVE(TAN1SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs226 =     DeltaJs[2]; // DERIVATIVE(DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs227 =     DeltaPhi[2][0]; // DERIVATIVE(PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs228 =     Deltatangentetas[2](0,0); // DERIVATIVE(TAN2SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs229 =     DeltaN2[2][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
    const double clhs230 =     DeltaN2[2][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
    const double clhs231 =     DeltaN2[2][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
    const double clhs232 =     clhs229*clhs30 + clhs230*clhs31 + clhs231*clhs32;
    const double clhs233 =     clhs12*clhs230 + clhs15*clhs231 + clhs229*clhs9;
    const double clhs234 =     clhs159 + clhs229*clhs23 + clhs230*clhs24 + clhs231*clhs25;
    const double clhs235 =     Deltatangentxis[2](1,0); // DERIVATIVE(TAN1SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs236 =     Deltatangentxis[2](2,0); // DERIVATIVE(TAN1SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs237 =     Deltatangentxis[2](0,1); // DERIVATIVE(TAN1SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs238 =     Deltatangentxis[2](1,1); // DERIVATIVE(TAN1SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs239 =     Deltatangentxis[2](2,1); // DERIVATIVE(TAN1SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs240 =     Deltatangentxis[2](0,2); // DERIVATIVE(TAN1SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs241 =     Deltatangentxis[2](1,2); // DERIVATIVE(TAN1SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs242 =     Deltatangentxis[2](2,2); // DERIVATIVE(TAN1SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs243 =     -clhs140*(N1[0]*clhs225 + N1[1]*clhs235 + N1[2]*clhs236) - clhs141*(N1[0]*clhs237 + N1[1]*clhs238 + N1[2]*clhs239) - clhs142*(N1[0]*clhs240 + N1[1]*clhs241 + N1[2]*clhs242) + clhs22*clhs234 + clhs232*clhs29 + clhs233*clhs8;
    const double clhs244 =     clhs1*clhs2*clhs243;
    const double clhs245 =     Deltatangentetas[2](1,0); // DERIVATIVE(TAN2SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs246 =     Deltatangentetas[2](2,0); // DERIVATIVE(TAN2SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs247 =     Deltatangentetas[2](0,1); // DERIVATIVE(TAN2SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs248 =     Deltatangentetas[2](1,1); // DERIVATIVE(TAN2SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs249 =     Deltatangentetas[2](2,1); // DERIVATIVE(TAN2SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs250 =     Deltatangentetas[2](0,2); // DERIVATIVE(TAN2SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs251 =     Deltatangentetas[2](1,2); // DERIVATIVE(TAN2SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs252 =     Deltatangentetas[2](2,2); // DERIVATIVE(TAN2SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs253 =     -clhs140*(N1[0]*clhs228 + N1[1]*clhs245 + N1[2]*clhs246) - clhs141*(N1[0]*clhs247 + N1[1]*clhs248 + N1[2]*clhs249) - clhs142*(N1[0]*clhs250 + N1[1]*clhs251 + N1[2]*clhs252) + clhs232*clhs46 + clhs233*clhs39 + clhs234*clhs43;
    const double clhs254 =     clhs1*clhs2*clhs253;
    const double clhs255 =     clhs144*clhs225 + clhs146*clhs226 + clhs148*clhs227 + clhs151*clhs228 + clhs152*clhs226 + clhs153*clhs227 - clhs244*clhs4 - clhs254*clhs35;
    const double clhs256 =     clhs144*clhs237 + clhs151*clhs247 + clhs182*clhs226 + clhs183*clhs227 + clhs184*clhs226 + clhs185*clhs227 - clhs244*clhs5 - clhs254*clhs36;
    const double clhs257 =     clhs144*clhs240 + clhs151*clhs250 + clhs187*clhs226 + clhs188*clhs227 + clhs189*clhs226 - clhs19*clhs244 + clhs190*clhs227 - clhs254*clhs40;
    const double clhs258 =     Deltatangentxis[3](0,0); // DERIVATIVE(TAN1SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs259 =     DeltaJs[3]; // DERIVATIVE(DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs260 =     DeltaPhi[3][0]; // DERIVATIVE(PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs261 =     Deltatangentetas[3](0,0); // DERIVATIVE(TAN2SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs262 =     DeltaN2[3][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
    const double clhs263 =     DeltaN2[3][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
    const double clhs264 =     DeltaN2[3][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
    const double clhs265 =     clhs12*clhs263 + clhs15*clhs264 + clhs262*clhs9;
    const double clhs266 =     clhs23*clhs262 + clhs24*clhs263 + clhs25*clhs264;
    const double clhs267 =     -N1[1];
    const double clhs268 =     clhs262*clhs30 + clhs263*clhs31 + clhs264*clhs32 + clhs267;
    const double clhs269 =     Deltatangentxis[3](1,0); // DERIVATIVE(TAN1SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs270 =     Deltatangentxis[3](2,0); // DERIVATIVE(TAN1SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs271 =     Deltatangentxis[3](0,1); // DERIVATIVE(TAN1SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs272 =     Deltatangentxis[3](1,1); // DERIVATIVE(TAN1SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs273 =     Deltatangentxis[3](2,1); // DERIVATIVE(TAN1SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs274 =     Deltatangentxis[3](0,2); // DERIVATIVE(TAN1SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs275 =     Deltatangentxis[3](1,2); // DERIVATIVE(TAN1SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs276 =     Deltatangentxis[3](2,2); // DERIVATIVE(TAN1SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs277 =     -clhs140*(N1[0]*clhs258 + N1[1]*clhs269 + N1[2]*clhs270) - clhs141*(N1[0]*clhs271 + N1[1]*clhs272 + N1[2]*clhs273) - clhs142*(N1[0]*clhs274 + N1[1]*clhs275 + N1[2]*clhs276) + clhs22*clhs266 + clhs265*clhs8 + clhs268*clhs29;
    const double clhs278 =     clhs1*clhs2*clhs277;
    const double clhs279 =     Deltatangentetas[3](1,0); // DERIVATIVE(TAN2SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs280 =     Deltatangentetas[3](2,0); // DERIVATIVE(TAN2SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs281 =     Deltatangentetas[3](0,1); // DERIVATIVE(TAN2SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs282 =     Deltatangentetas[3](1,1); // DERIVATIVE(TAN2SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs283 =     Deltatangentetas[3](2,1); // DERIVATIVE(TAN2SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs284 =     Deltatangentetas[3](0,2); // DERIVATIVE(TAN2SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs285 =     Deltatangentetas[3](1,2); // DERIVATIVE(TAN2SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs286 =     Deltatangentetas[3](2,2); // DERIVATIVE(TAN2SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs287 =     -clhs140*(N1[0]*clhs261 + N1[1]*clhs279 + N1[2]*clhs280) - clhs141*(N1[0]*clhs281 + N1[1]*clhs282 + N1[2]*clhs283) - clhs142*(N1[0]*clhs284 + N1[1]*clhs285 + N1[2]*clhs286) + clhs265*clhs39 + clhs266*clhs43 + clhs268*clhs46;
    const double clhs288 =     clhs1*clhs2*clhs287;
    const double clhs289 =     clhs144*clhs258 + clhs146*clhs259 + clhs148*clhs260 + clhs151*clhs261 + clhs152*clhs259 + clhs153*clhs260 - clhs278*clhs4 - clhs288*clhs35;
    const double clhs290 =     clhs144*clhs271 + clhs151*clhs281 + clhs182*clhs259 + clhs183*clhs260 + clhs184*clhs259 + clhs185*clhs260 - clhs278*clhs5 - clhs288*clhs36;
    const double clhs291 =     clhs144*clhs274 + clhs151*clhs284 + clhs187*clhs259 + clhs188*clhs260 + clhs189*clhs259 - clhs19*clhs278 + clhs190*clhs260 - clhs288*clhs40;
    const double clhs292 =     Deltatangentxis[4](0,0); // DERIVATIVE(TAN1SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs293 =     DeltaJs[4]; // DERIVATIVE(DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs294 =     DeltaPhi[4][0]; // DERIVATIVE(PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs295 =     Deltatangentetas[4](0,0); // DERIVATIVE(TAN2SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs296 =     DeltaN2[4][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
    const double clhs297 =     DeltaN2[4][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
    const double clhs298 =     DeltaN2[4][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
    const double clhs299 =     clhs296*clhs30 + clhs297*clhs31 + clhs298*clhs32;
    const double clhs300 =     clhs23*clhs296 + clhs24*clhs297 + clhs25*clhs298;
    const double clhs301 =     clhs12*clhs297 + clhs15*clhs298 + clhs267 + clhs296*clhs9;
    const double clhs302 =     Deltatangentxis[4](1,0); // DERIVATIVE(TAN1SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs303 =     Deltatangentxis[4](2,0); // DERIVATIVE(TAN1SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs304 =     Deltatangentxis[4](0,1); // DERIVATIVE(TAN1SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs305 =     Deltatangentxis[4](1,1); // DERIVATIVE(TAN1SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs306 =     Deltatangentxis[4](2,1); // DERIVATIVE(TAN1SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs307 =     Deltatangentxis[4](0,2); // DERIVATIVE(TAN1SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs308 =     Deltatangentxis[4](1,2); // DERIVATIVE(TAN1SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs309 =     Deltatangentxis[4](2,2); // DERIVATIVE(TAN1SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs310 =     -clhs140*(N1[0]*clhs292 + N1[1]*clhs302 + N1[2]*clhs303) - clhs141*(N1[0]*clhs304 + N1[1]*clhs305 + N1[2]*clhs306) - clhs142*(N1[0]*clhs307 + N1[1]*clhs308 + N1[2]*clhs309) + clhs22*clhs300 + clhs29*clhs299 + clhs301*clhs8;
    const double clhs311 =     clhs1*clhs2*clhs310;
    const double clhs312 =     Deltatangentetas[4](1,0); // DERIVATIVE(TAN2SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs313 =     Deltatangentetas[4](2,0); // DERIVATIVE(TAN2SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs314 =     Deltatangentetas[4](0,1); // DERIVATIVE(TAN2SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs315 =     Deltatangentetas[4](1,1); // DERIVATIVE(TAN2SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs316 =     Deltatangentetas[4](2,1); // DERIVATIVE(TAN2SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs317 =     Deltatangentetas[4](0,2); // DERIVATIVE(TAN2SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs318 =     Deltatangentetas[4](1,2); // DERIVATIVE(TAN2SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs319 =     Deltatangentetas[4](2,2); // DERIVATIVE(TAN2SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs320 =     -clhs140*(N1[0]*clhs295 + N1[1]*clhs312 + N1[2]*clhs313) - clhs141*(N1[0]*clhs314 + N1[1]*clhs315 + N1[2]*clhs316) - clhs142*(N1[0]*clhs317 + N1[1]*clhs318 + N1[2]*clhs319) + clhs299*clhs46 + clhs300*clhs43 + clhs301*clhs39;
    const double clhs321 =     clhs1*clhs2*clhs320;
    const double clhs322 =     clhs144*clhs292 + clhs146*clhs293 + clhs148*clhs294 + clhs151*clhs295 + clhs152*clhs293 + clhs153*clhs294 - clhs311*clhs4 - clhs321*clhs35;
    const double clhs323 =     clhs144*clhs304 + clhs151*clhs314 + clhs182*clhs293 + clhs183*clhs294 + clhs184*clhs293 + clhs185*clhs294 - clhs311*clhs5 - clhs321*clhs36;
    const double clhs324 =     clhs144*clhs307 + clhs151*clhs317 + clhs187*clhs293 + clhs188*clhs294 + clhs189*clhs293 - clhs19*clhs311 + clhs190*clhs294 - clhs321*clhs40;
    const double clhs325 =     Deltatangentxis[5](0,0); // DERIVATIVE(TAN1SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs326 =     DeltaJs[5]; // DERIVATIVE(DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs327 =     DeltaPhi[5][0]; // DERIVATIVE(PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs328 =     Deltatangentetas[5](0,0); // DERIVATIVE(TAN2SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs329 =     DeltaN2[5][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
    const double clhs330 =     DeltaN2[5][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
    const double clhs331 =     DeltaN2[5][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
    const double clhs332 =     clhs30*clhs329 + clhs31*clhs330 + clhs32*clhs331;
    const double clhs333 =     clhs12*clhs330 + clhs15*clhs331 + clhs329*clhs9;
    const double clhs334 =     clhs23*clhs329 + clhs24*clhs330 + clhs25*clhs331 + clhs267;
    const double clhs335 =     Deltatangentxis[5](1,0); // DERIVATIVE(TAN1SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs336 =     Deltatangentxis[5](2,0); // DERIVATIVE(TAN1SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs337 =     Deltatangentxis[5](0,1); // DERIVATIVE(TAN1SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs338 =     Deltatangentxis[5](1,1); // DERIVATIVE(TAN1SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs339 =     Deltatangentxis[5](2,1); // DERIVATIVE(TAN1SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs340 =     Deltatangentxis[5](0,2); // DERIVATIVE(TAN1SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs341 =     Deltatangentxis[5](1,2); // DERIVATIVE(TAN1SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs342 =     Deltatangentxis[5](2,2); // DERIVATIVE(TAN1SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs343 =     -clhs140*(N1[0]*clhs325 + N1[1]*clhs335 + N1[2]*clhs336) - clhs141*(N1[0]*clhs337 + N1[1]*clhs338 + N1[2]*clhs339) - clhs142*(N1[0]*clhs340 + N1[1]*clhs341 + N1[2]*clhs342) + clhs22*clhs334 + clhs29*clhs332 + clhs333*clhs8;
    const double clhs344 =     clhs1*clhs2*clhs343;
    const double clhs345 =     Deltatangentetas[5](1,0); // DERIVATIVE(TAN2SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs346 =     Deltatangentetas[5](2,0); // DERIVATIVE(TAN2SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs347 =     Deltatangentetas[5](0,1); // DERIVATIVE(TAN2SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs348 =     Deltatangentetas[5](1,1); // DERIVATIVE(TAN2SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs349 =     Deltatangentetas[5](2,1); // DERIVATIVE(TAN2SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs350 =     Deltatangentetas[5](0,2); // DERIVATIVE(TAN2SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs351 =     Deltatangentetas[5](1,2); // DERIVATIVE(TAN2SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs352 =     Deltatangentetas[5](2,2); // DERIVATIVE(TAN2SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs353 =     -clhs140*(N1[0]*clhs328 + N1[1]*clhs345 + N1[2]*clhs346) - clhs141*(N1[0]*clhs347 + N1[1]*clhs348 + N1[2]*clhs349) - clhs142*(N1[0]*clhs350 + N1[1]*clhs351 + N1[2]*clhs352) + clhs332*clhs46 + clhs333*clhs39 + clhs334*clhs43;
    const double clhs354 =     clhs1*clhs2*clhs353;
    const double clhs355 =     clhs144*clhs325 + clhs146*clhs326 + clhs148*clhs327 + clhs151*clhs328 + clhs152*clhs326 + clhs153*clhs327 - clhs344*clhs4 - clhs35*clhs354;
    const double clhs356 =     clhs144*clhs337 + clhs151*clhs347 + clhs182*clhs326 + clhs183*clhs327 + clhs184*clhs326 + clhs185*clhs327 - clhs344*clhs5 - clhs354*clhs36;
    const double clhs357 =     clhs144*clhs340 + clhs151*clhs350 + clhs187*clhs326 + clhs188*clhs327 + clhs189*clhs326 - clhs19*clhs344 + clhs190*clhs327 - clhs354*clhs40;
    const double clhs358 =     Deltatangentxis[6](0,0); // DERIVATIVE(TAN1SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs359 =     DeltaJs[6]; // DERIVATIVE(DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs360 =     DeltaPhi[6][0]; // DERIVATIVE(PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs361 =     Deltatangentetas[6](0,0); // DERIVATIVE(TAN2SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs362 =     DeltaN2[6][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
    const double clhs363 =     DeltaN2[6][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
    const double clhs364 =     DeltaN2[6][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
    const double clhs365 =     clhs12*clhs363 + clhs15*clhs364 + clhs362*clhs9;
    const double clhs366 =     clhs23*clhs362 + clhs24*clhs363 + clhs25*clhs364;
    const double clhs367 =     -N1[2];
    const double clhs368 =     clhs30*clhs362 + clhs31*clhs363 + clhs32*clhs364 + clhs367;
    const double clhs369 =     Deltatangentxis[6](1,0); // DERIVATIVE(TAN1SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs370 =     Deltatangentxis[6](2,0); // DERIVATIVE(TAN1SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs371 =     Deltatangentxis[6](0,1); // DERIVATIVE(TAN1SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs372 =     Deltatangentxis[6](1,1); // DERIVATIVE(TAN1SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs373 =     Deltatangentxis[6](2,1); // DERIVATIVE(TAN1SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs374 =     Deltatangentxis[6](0,2); // DERIVATIVE(TAN1SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs375 =     Deltatangentxis[6](1,2); // DERIVATIVE(TAN1SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs376 =     Deltatangentxis[6](2,2); // DERIVATIVE(TAN1SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs377 =     -clhs140*(N1[0]*clhs358 + N1[1]*clhs369 + N1[2]*clhs370) - clhs141*(N1[0]*clhs371 + N1[1]*clhs372 + N1[2]*clhs373) - clhs142*(N1[0]*clhs374 + N1[1]*clhs375 + N1[2]*clhs376) + clhs22*clhs366 + clhs29*clhs368 + clhs365*clhs8;
    const double clhs378 =     clhs1*clhs2*clhs377;
    const double clhs379 =     Deltatangentetas[6](1,0); // DERIVATIVE(TAN2SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs380 =     Deltatangentetas[6](2,0); // DERIVATIVE(TAN2SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs381 =     Deltatangentetas[6](0,1); // DERIVATIVE(TAN2SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs382 =     Deltatangentetas[6](1,1); // DERIVATIVE(TAN2SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs383 =     Deltatangentetas[6](2,1); // DERIVATIVE(TAN2SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs384 =     Deltatangentetas[6](0,2); // DERIVATIVE(TAN2SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs385 =     Deltatangentetas[6](1,2); // DERIVATIVE(TAN2SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs386 =     Deltatangentetas[6](2,2); // DERIVATIVE(TAN2SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs387 =     -clhs140*(N1[0]*clhs361 + N1[1]*clhs379 + N1[2]*clhs380) - clhs141*(N1[0]*clhs381 + N1[1]*clhs382 + N1[2]*clhs383) - clhs142*(N1[0]*clhs384 + N1[1]*clhs385 + N1[2]*clhs386) + clhs365*clhs39 + clhs366*clhs43 + clhs368*clhs46;
    const double clhs388 =     clhs1*clhs2*clhs387;
    const double clhs389 =     clhs144*clhs358 + clhs146*clhs359 + clhs148*clhs360 + clhs151*clhs361 + clhs152*clhs359 + clhs153*clhs360 - clhs35*clhs388 - clhs378*clhs4;
    const double clhs390 =     clhs144*clhs371 + clhs151*clhs381 + clhs182*clhs359 + clhs183*clhs360 + clhs184*clhs359 + clhs185*clhs360 - clhs36*clhs388 - clhs378*clhs5;
    const double clhs391 =     clhs144*clhs374 + clhs151*clhs384 + clhs187*clhs359 + clhs188*clhs360 + clhs189*clhs359 - clhs19*clhs378 + clhs190*clhs360 - clhs388*clhs40;
    const double clhs392 =     Deltatangentxis[7](0,0); // DERIVATIVE(TAN1SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs393 =     DeltaJs[7]; // DERIVATIVE(DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs394 =     DeltaPhi[7][0]; // DERIVATIVE(PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs395 =     Deltatangentetas[7](0,0); // DERIVATIVE(TAN2SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs396 =     DeltaN2[7][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
    const double clhs397 =     DeltaN2[7][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
    const double clhs398 =     DeltaN2[7][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
    const double clhs399 =     clhs30*clhs396 + clhs31*clhs397 + clhs32*clhs398;
    const double clhs400 =     clhs23*clhs396 + clhs24*clhs397 + clhs25*clhs398;
    const double clhs401 =     clhs12*clhs397 + clhs15*clhs398 + clhs367 + clhs396*clhs9;
    const double clhs402 =     Deltatangentxis[7](1,0); // DERIVATIVE(TAN1SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs403 =     Deltatangentxis[7](2,0); // DERIVATIVE(TAN1SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs404 =     Deltatangentxis[7](0,1); // DERIVATIVE(TAN1SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs405 =     Deltatangentxis[7](1,1); // DERIVATIVE(TAN1SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs406 =     Deltatangentxis[7](2,1); // DERIVATIVE(TAN1SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs407 =     Deltatangentxis[7](0,2); // DERIVATIVE(TAN1SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs408 =     Deltatangentxis[7](1,2); // DERIVATIVE(TAN1SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs409 =     Deltatangentxis[7](2,2); // DERIVATIVE(TAN1SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs410 =     -clhs140*(N1[0]*clhs392 + N1[1]*clhs402 + N1[2]*clhs403) - clhs141*(N1[0]*clhs404 + N1[1]*clhs405 + N1[2]*clhs406) - clhs142*(N1[0]*clhs407 + N1[1]*clhs408 + N1[2]*clhs409) + clhs22*clhs400 + clhs29*clhs399 + clhs401*clhs8;
    const double clhs411 =     clhs1*clhs2*clhs410;
    const double clhs412 =     Deltatangentetas[7](1,0); // DERIVATIVE(TAN2SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs413 =     Deltatangentetas[7](2,0); // DERIVATIVE(TAN2SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs414 =     Deltatangentetas[7](0,1); // DERIVATIVE(TAN2SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs415 =     Deltatangentetas[7](1,1); // DERIVATIVE(TAN2SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs416 =     Deltatangentetas[7](2,1); // DERIVATIVE(TAN2SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs417 =     Deltatangentetas[7](0,2); // DERIVATIVE(TAN2SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs418 =     Deltatangentetas[7](1,2); // DERIVATIVE(TAN2SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs419 =     Deltatangentetas[7](2,2); // DERIVATIVE(TAN2SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs420 =     -clhs140*(N1[0]*clhs395 + N1[1]*clhs412 + N1[2]*clhs413) - clhs141*(N1[0]*clhs414 + N1[1]*clhs415 + N1[2]*clhs416) - clhs142*(N1[0]*clhs417 + N1[1]*clhs418 + N1[2]*clhs419) + clhs39*clhs401 + clhs399*clhs46 + clhs400*clhs43;
    const double clhs421 =     clhs1*clhs2*clhs420;
    const double clhs422 =     clhs144*clhs392 + clhs146*clhs393 + clhs148*clhs394 + clhs151*clhs395 + clhs152*clhs393 + clhs153*clhs394 - clhs35*clhs421 - clhs4*clhs411;
    const double clhs423 =     clhs144*clhs404 + clhs151*clhs414 + clhs182*clhs393 + clhs183*clhs394 + clhs184*clhs393 + clhs185*clhs394 - clhs36*clhs421 - clhs411*clhs5;
    const double clhs424 =     clhs144*clhs407 + clhs151*clhs417 + clhs187*clhs393 + clhs188*clhs394 + clhs189*clhs393 - clhs19*clhs411 + clhs190*clhs394 - clhs40*clhs421;
    const double clhs425 =     Deltatangentxis[8](0,0); // DERIVATIVE(TAN1SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs426 =     DeltaJs[8]; // DERIVATIVE(DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs427 =     DeltaPhi[8][0]; // DERIVATIVE(PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs428 =     Deltatangentetas[8](0,0); // DERIVATIVE(TAN2SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs429 =     DeltaN2[8][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
    const double clhs430 =     DeltaN2[8][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
    const double clhs431 =     DeltaN2[8][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
    const double clhs432 =     clhs30*clhs429 + clhs31*clhs430 + clhs32*clhs431;
    const double clhs433 =     clhs12*clhs430 + clhs15*clhs431 + clhs429*clhs9;
    const double clhs434 =     clhs23*clhs429 + clhs24*clhs430 + clhs25*clhs431 + clhs367;
    const double clhs435 =     Deltatangentxis[8](1,0); // DERIVATIVE(TAN1SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs436 =     Deltatangentxis[8](2,0); // DERIVATIVE(TAN1SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs437 =     Deltatangentxis[8](0,1); // DERIVATIVE(TAN1SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs438 =     Deltatangentxis[8](1,1); // DERIVATIVE(TAN1SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs439 =     Deltatangentxis[8](2,1); // DERIVATIVE(TAN1SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs440 =     Deltatangentxis[8](0,2); // DERIVATIVE(TAN1SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs441 =     Deltatangentxis[8](1,2); // DERIVATIVE(TAN1SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs442 =     Deltatangentxis[8](2,2); // DERIVATIVE(TAN1SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs443 =     -clhs140*(N1[0]*clhs425 + N1[1]*clhs435 + N1[2]*clhs436) - clhs141*(N1[0]*clhs437 + N1[1]*clhs438 + N1[2]*clhs439) - clhs142*(N1[0]*clhs440 + N1[1]*clhs441 + N1[2]*clhs442) + clhs22*clhs434 + clhs29*clhs432 + clhs433*clhs8;
    const double clhs444 =     clhs1*clhs2*clhs443;
    const double clhs445 =     Deltatangentetas[8](1,0); // DERIVATIVE(TAN2SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs446 =     Deltatangentetas[8](2,0); // DERIVATIVE(TAN2SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs447 =     Deltatangentetas[8](0,1); // DERIVATIVE(TAN2SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs448 =     Deltatangentetas[8](1,1); // DERIVATIVE(TAN2SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs449 =     Deltatangentetas[8](2,1); // DERIVATIVE(TAN2SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs450 =     Deltatangentetas[8](0,2); // DERIVATIVE(TAN2SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs451 =     Deltatangentetas[8](1,2); // DERIVATIVE(TAN2SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs452 =     Deltatangentetas[8](2,2); // DERIVATIVE(TAN2SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs453 =     -clhs140*(N1[0]*clhs428 + N1[1]*clhs445 + N1[2]*clhs446) - clhs141*(N1[0]*clhs447 + N1[1]*clhs448 + N1[2]*clhs449) - clhs142*(N1[0]*clhs450 + N1[1]*clhs451 + N1[2]*clhs452) + clhs39*clhs433 + clhs43*clhs434 + clhs432*clhs46;
    const double clhs454 =     clhs1*clhs2*clhs453;
    const double clhs455 =     clhs144*clhs425 + clhs146*clhs426 + clhs148*clhs427 + clhs151*clhs428 + clhs152*clhs426 + clhs153*clhs427 - clhs35*clhs454 - clhs4*clhs444;
    const double clhs456 =     clhs144*clhs437 + clhs151*clhs447 + clhs182*clhs426 + clhs183*clhs427 + clhs184*clhs426 + clhs185*clhs427 - clhs36*clhs454 - clhs444*clhs5;
    const double clhs457 =     clhs144*clhs440 + clhs151*clhs450 + clhs187*clhs426 + clhs188*clhs427 + clhs189*clhs426 - clhs19*clhs444 + clhs190*clhs427 - clhs40*clhs454;
    const double clhs458 =     Phi[1]; // PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs459 =     clhs0*clhs2*clhs458;
    const double clhs460 =     clhs27*clhs34 + clhs44*clhs47;
    const double clhs461 =     clhs34*clhs6 + clhs37*clhs47;
    const double clhs462 =     clhs20*clhs34 + clhs41*clhs47;
    const double clhs463 =     clhs27*clhs57 + clhs44*clhs58;
    const double clhs464 =     clhs37*clhs58 + clhs57*clhs6;
    const double clhs465 =     clhs20*clhs57 + clhs41*clhs58;
    const double clhs466 =     clhs27*clhs68 + clhs44*clhs69;
    const double clhs467 =     clhs37*clhs69 + clhs6*clhs68;
    const double clhs468 =     clhs20*clhs68 + clhs41*clhs69;
    const double clhs469 =     clhs27*clhs79 + clhs44*clhs80;
    const double clhs470 =     clhs37*clhs80 + clhs6*clhs79;
    const double clhs471 =     clhs20*clhs79 + clhs41*clhs80;
    const double clhs472 =     clhs27*clhs90 + clhs44*clhs91;
    const double clhs473 =     clhs37*clhs91 + clhs6*clhs90;
    const double clhs474 =     clhs20*clhs90 + clhs41*clhs91;
    const double clhs475 =     clhs101*clhs27 + clhs102*clhs44;
    const double clhs476 =     clhs101*clhs6 + clhs102*clhs37;
    const double clhs477 =     clhs101*clhs20 + clhs102*clhs41;
    const double clhs478 =     clhs112*clhs27 + clhs113*clhs44;
    const double clhs479 =     clhs112*clhs6 + clhs113*clhs37;
    const double clhs480 =     clhs112*clhs20 + clhs113*clhs41;
    const double clhs481 =     clhs123*clhs27 + clhs124*clhs44;
    const double clhs482 =     clhs123*clhs6 + clhs124*clhs37;
    const double clhs483 =     clhs123*clhs20 + clhs124*clhs41;
    const double clhs484 =     clhs134*clhs27 + clhs135*clhs44;
    const double clhs485 =     clhs134*clhs6 + clhs135*clhs37;
    const double clhs486 =     clhs134*clhs20 + clhs135*clhs41;
    const double clhs487 =     clhs143*clhs2*clhs458;
    const double clhs488 =     clhs143*clhs27*clhs458;
    const double clhs489 =     DeltaPhi[0][1]; // DERIVATIVE(PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs490 =     clhs143*clhs2*clhs27;
    const double clhs491 =     clhs150*clhs2*clhs458;
    const double clhs492 =     clhs150*clhs44*clhs458;
    const double clhs493 =     clhs150*clhs2*clhs44;
    const double clhs494 =     clhs169*clhs2*clhs458;
    const double clhs495 =     clhs179*clhs2*clhs458;
    const double clhs496 =     clhs145*clhs488 + clhs145*clhs492 + clhs161*clhs487 + clhs171*clhs491 - clhs27*clhs494 - clhs44*clhs495 + clhs489*clhs490 + clhs489*clhs493;
    const double clhs497 =     clhs143*clhs458*clhs6;
    const double clhs498 =     clhs143*clhs2*clhs6;
    const double clhs499 =     clhs150*clhs37*clhs458;
    const double clhs500 =     clhs150*clhs2*clhs37;
    const double clhs501 =     clhs145*clhs497 + clhs145*clhs499 + clhs164*clhs487 + clhs174*clhs491 - clhs37*clhs495 + clhs489*clhs498 + clhs489*clhs500 - clhs494*clhs6;
    const double clhs502 =     clhs143*clhs20*clhs458;
    const double clhs503 =     clhs143*clhs2*clhs20;
    const double clhs504 =     clhs150*clhs41*clhs458;
    const double clhs505 =     clhs150*clhs2*clhs41;
    const double clhs506 =     clhs145*clhs502 + clhs145*clhs504 + clhs167*clhs487 + clhs177*clhs491 - clhs20*clhs494 - clhs41*clhs495 + clhs489*clhs503 + clhs489*clhs505;
    const double clhs507 =     DeltaPhi[1][1]; // DERIVATIVE(PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs508 =     clhs2*clhs210*clhs458;
    const double clhs509 =     clhs2*clhs220*clhs458;
    const double clhs510 =     clhs193*clhs488 + clhs193*clhs492 + clhs202*clhs487 + clhs212*clhs491 - clhs27*clhs508 - clhs44*clhs509 + clhs490*clhs507 + clhs493*clhs507;
    const double clhs511 =     clhs193*clhs497 + clhs193*clhs499 + clhs205*clhs487 + clhs215*clhs491 - clhs37*clhs509 + clhs498*clhs507 + clhs500*clhs507 - clhs508*clhs6;
    const double clhs512 =     clhs193*clhs502 + clhs193*clhs504 - clhs20*clhs508 + clhs208*clhs487 + clhs218*clhs491 - clhs41*clhs509 + clhs503*clhs507 + clhs505*clhs507;
    const double clhs513 =     DeltaPhi[2][1]; // DERIVATIVE(PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs514 =     clhs2*clhs243*clhs458;
    const double clhs515 =     clhs2*clhs253*clhs458;
    const double clhs516 =     clhs226*clhs488 + clhs226*clhs492 + clhs235*clhs487 + clhs245*clhs491 - clhs27*clhs514 - clhs44*clhs515 + clhs490*clhs513 + clhs493*clhs513;
    const double clhs517 =     clhs226*clhs497 + clhs226*clhs499 + clhs238*clhs487 + clhs248*clhs491 - clhs37*clhs515 + clhs498*clhs513 + clhs500*clhs513 - clhs514*clhs6;
    const double clhs518 =     -clhs20*clhs514 + clhs226*clhs502 + clhs226*clhs504 + clhs241*clhs487 + clhs251*clhs491 - clhs41*clhs515 + clhs503*clhs513 + clhs505*clhs513;
    const double clhs519 =     DeltaPhi[3][1]; // DERIVATIVE(PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs520 =     clhs2*clhs277*clhs458;
    const double clhs521 =     clhs2*clhs287*clhs458;
    const double clhs522 =     clhs259*clhs488 + clhs259*clhs492 + clhs269*clhs487 - clhs27*clhs520 + clhs279*clhs491 - clhs44*clhs521 + clhs490*clhs519 + clhs493*clhs519;
    const double clhs523 =     clhs259*clhs497 + clhs259*clhs499 + clhs272*clhs487 + clhs282*clhs491 - clhs37*clhs521 + clhs498*clhs519 + clhs500*clhs519 - clhs520*clhs6;
    const double clhs524 =     -clhs20*clhs520 + clhs259*clhs502 + clhs259*clhs504 + clhs275*clhs487 + clhs285*clhs491 - clhs41*clhs521 + clhs503*clhs519 + clhs505*clhs519;
    const double clhs525 =     DeltaPhi[4][1]; // DERIVATIVE(PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs526 =     clhs2*clhs310*clhs458;
    const double clhs527 =     clhs2*clhs320*clhs458;
    const double clhs528 =     -clhs27*clhs526 + clhs293*clhs488 + clhs293*clhs492 + clhs302*clhs487 + clhs312*clhs491 - clhs44*clhs527 + clhs490*clhs525 + clhs493*clhs525;
    const double clhs529 =     clhs293*clhs497 + clhs293*clhs499 + clhs305*clhs487 + clhs315*clhs491 - clhs37*clhs527 + clhs498*clhs525 + clhs500*clhs525 - clhs526*clhs6;
    const double clhs530 =     -clhs20*clhs526 + clhs293*clhs502 + clhs293*clhs504 + clhs308*clhs487 + clhs318*clhs491 - clhs41*clhs527 + clhs503*clhs525 + clhs505*clhs525;
    const double clhs531 =     DeltaPhi[5][1]; // DERIVATIVE(PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs532 =     clhs2*clhs343*clhs458;
    const double clhs533 =     clhs2*clhs353*clhs458;
    const double clhs534 =     -clhs27*clhs532 + clhs326*clhs488 + clhs326*clhs492 + clhs335*clhs487 + clhs345*clhs491 - clhs44*clhs533 + clhs490*clhs531 + clhs493*clhs531;
    const double clhs535 =     clhs326*clhs497 + clhs326*clhs499 + clhs338*clhs487 + clhs348*clhs491 - clhs37*clhs533 + clhs498*clhs531 + clhs500*clhs531 - clhs532*clhs6;
    const double clhs536 =     -clhs20*clhs532 + clhs326*clhs502 + clhs326*clhs504 + clhs341*clhs487 + clhs351*clhs491 - clhs41*clhs533 + clhs503*clhs531 + clhs505*clhs531;
    const double clhs537 =     DeltaPhi[6][1]; // DERIVATIVE(PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs538 =     clhs2*clhs377*clhs458;
    const double clhs539 =     clhs2*clhs387*clhs458;
    const double clhs540 =     -clhs27*clhs538 + clhs359*clhs488 + clhs359*clhs492 + clhs369*clhs487 + clhs379*clhs491 - clhs44*clhs539 + clhs490*clhs537 + clhs493*clhs537;
    const double clhs541 =     clhs359*clhs497 + clhs359*clhs499 - clhs37*clhs539 + clhs372*clhs487 + clhs382*clhs491 + clhs498*clhs537 + clhs500*clhs537 - clhs538*clhs6;
    const double clhs542 =     -clhs20*clhs538 + clhs359*clhs502 + clhs359*clhs504 + clhs375*clhs487 + clhs385*clhs491 - clhs41*clhs539 + clhs503*clhs537 + clhs505*clhs537;
    const double clhs543 =     DeltaPhi[7][1]; // DERIVATIVE(PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs544 =     clhs2*clhs410*clhs458;
    const double clhs545 =     clhs2*clhs420*clhs458;
    const double clhs546 =     -clhs27*clhs544 + clhs393*clhs488 + clhs393*clhs492 + clhs402*clhs487 + clhs412*clhs491 - clhs44*clhs545 + clhs490*clhs543 + clhs493*clhs543;
    const double clhs547 =     -clhs37*clhs545 + clhs393*clhs497 + clhs393*clhs499 + clhs405*clhs487 + clhs415*clhs491 + clhs498*clhs543 + clhs500*clhs543 - clhs544*clhs6;
    const double clhs548 =     -clhs20*clhs544 + clhs393*clhs502 + clhs393*clhs504 + clhs408*clhs487 - clhs41*clhs545 + clhs418*clhs491 + clhs503*clhs543 + clhs505*clhs543;
    const double clhs549 =     DeltaPhi[8][1]; // DERIVATIVE(PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs550 =     clhs2*clhs443*clhs458;
    const double clhs551 =     clhs2*clhs453*clhs458;
    const double clhs552 =     -clhs27*clhs550 + clhs426*clhs488 + clhs426*clhs492 + clhs435*clhs487 - clhs44*clhs551 + clhs445*clhs491 + clhs490*clhs549 + clhs493*clhs549;
    const double clhs553 =     -clhs37*clhs551 + clhs426*clhs497 + clhs426*clhs499 + clhs438*clhs487 + clhs448*clhs491 + clhs498*clhs549 + clhs500*clhs549 - clhs550*clhs6;
    const double clhs554 =     -clhs20*clhs550 - clhs41*clhs551 + clhs426*clhs502 + clhs426*clhs504 + clhs441*clhs487 + clhs451*clhs491 + clhs503*clhs549 + clhs505*clhs549;
    const double clhs555 =     Phi[2]; // PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs556 =     clhs0*clhs2*clhs555;
    const double clhs557 =     clhs28*clhs34 + clhs45*clhs47;
    const double clhs558 =     clhs34*clhs7 + clhs38*clhs47;
    const double clhs559 =     clhs21*clhs34 + clhs42*clhs47;
    const double clhs560 =     clhs28*clhs57 + clhs45*clhs58;
    const double clhs561 =     clhs38*clhs58 + clhs57*clhs7;
    const double clhs562 =     clhs21*clhs57 + clhs42*clhs58;
    const double clhs563 =     clhs28*clhs68 + clhs45*clhs69;
    const double clhs564 =     clhs38*clhs69 + clhs68*clhs7;
    const double clhs565 =     clhs21*clhs68 + clhs42*clhs69;
    const double clhs566 =     clhs28*clhs79 + clhs45*clhs80;
    const double clhs567 =     clhs38*clhs80 + clhs7*clhs79;
    const double clhs568 =     clhs21*clhs79 + clhs42*clhs80;
    const double clhs569 =     clhs28*clhs90 + clhs45*clhs91;
    const double clhs570 =     clhs38*clhs91 + clhs7*clhs90;
    const double clhs571 =     clhs21*clhs90 + clhs42*clhs91;
    const double clhs572 =     clhs101*clhs28 + clhs102*clhs45;
    const double clhs573 =     clhs101*clhs7 + clhs102*clhs38;
    const double clhs574 =     clhs101*clhs21 + clhs102*clhs42;
    const double clhs575 =     clhs112*clhs28 + clhs113*clhs45;
    const double clhs576 =     clhs112*clhs7 + clhs113*clhs38;
    const double clhs577 =     clhs112*clhs21 + clhs113*clhs42;
    const double clhs578 =     clhs123*clhs28 + clhs124*clhs45;
    const double clhs579 =     clhs123*clhs7 + clhs124*clhs38;
    const double clhs580 =     clhs123*clhs21 + clhs124*clhs42;
    const double clhs581 =     clhs134*clhs28 + clhs135*clhs45;
    const double clhs582 =     clhs134*clhs7 + clhs135*clhs38;
    const double clhs583 =     clhs134*clhs21 + clhs135*clhs42;
    const double clhs584 =     clhs143*clhs2*clhs555;
    const double clhs585 =     clhs143*clhs28*clhs555;
    const double clhs586 =     DeltaPhi[0][2]; // DERIVATIVE(PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs587 =     clhs143*clhs2*clhs28;
    const double clhs588 =     clhs150*clhs2*clhs555;
    const double clhs589 =     clhs150*clhs45*clhs555;
    const double clhs590 =     clhs150*clhs2*clhs45;
    const double clhs591 =     clhs169*clhs2*clhs555;
    const double clhs592 =     clhs179*clhs2*clhs555;
    const double clhs593 =     clhs145*clhs585 + clhs145*clhs589 + clhs162*clhs584 + clhs172*clhs588 - clhs28*clhs591 - clhs45*clhs592 + clhs586*clhs587 + clhs586*clhs590;
    const double clhs594 =     clhs143*clhs555*clhs7;
    const double clhs595 =     clhs143*clhs2*clhs7;
    const double clhs596 =     clhs150*clhs38*clhs555;
    const double clhs597 =     clhs150*clhs2*clhs38;
    const double clhs598 =     clhs145*clhs594 + clhs145*clhs596 + clhs165*clhs584 + clhs175*clhs588 - clhs38*clhs592 + clhs586*clhs595 + clhs586*clhs597 - clhs591*clhs7;
    const double clhs599 =     clhs143*clhs21*clhs555;
    const double clhs600 =     clhs143*clhs2*clhs21;
    const double clhs601 =     clhs150*clhs42*clhs555;
    const double clhs602 =     clhs150*clhs2*clhs42;
    const double clhs603 =     clhs145*clhs599 + clhs145*clhs601 + clhs168*clhs584 + clhs178*clhs588 - clhs21*clhs591 - clhs42*clhs592 + clhs586*clhs600 + clhs586*clhs602;
    const double clhs604 =     DeltaPhi[1][2]; // DERIVATIVE(PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs605 =     clhs2*clhs210*clhs555;
    const double clhs606 =     clhs2*clhs220*clhs555;
    const double clhs607 =     clhs193*clhs585 + clhs193*clhs589 + clhs203*clhs584 + clhs213*clhs588 - clhs28*clhs605 - clhs45*clhs606 + clhs587*clhs604 + clhs590*clhs604;
    const double clhs608 =     clhs193*clhs594 + clhs193*clhs596 + clhs206*clhs584 + clhs216*clhs588 - clhs38*clhs606 + clhs595*clhs604 + clhs597*clhs604 - clhs605*clhs7;
    const double clhs609 =     clhs193*clhs599 + clhs193*clhs601 + clhs209*clhs584 - clhs21*clhs605 + clhs219*clhs588 - clhs42*clhs606 + clhs600*clhs604 + clhs602*clhs604;
    const double clhs610 =     DeltaPhi[2][2]; // DERIVATIVE(PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs611 =     clhs2*clhs243*clhs555;
    const double clhs612 =     clhs2*clhs253*clhs555;
    const double clhs613 =     clhs226*clhs585 + clhs226*clhs589 + clhs236*clhs584 + clhs246*clhs588 - clhs28*clhs611 - clhs45*clhs612 + clhs587*clhs610 + clhs590*clhs610;
    const double clhs614 =     clhs226*clhs594 + clhs226*clhs596 + clhs239*clhs584 + clhs249*clhs588 - clhs38*clhs612 + clhs595*clhs610 + clhs597*clhs610 - clhs611*clhs7;
    const double clhs615 =     -clhs21*clhs611 + clhs226*clhs599 + clhs226*clhs601 + clhs242*clhs584 + clhs252*clhs588 - clhs42*clhs612 + clhs600*clhs610 + clhs602*clhs610;
    const double clhs616 =     DeltaPhi[3][2]; // DERIVATIVE(PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs617 =     clhs2*clhs277*clhs555;
    const double clhs618 =     clhs2*clhs287*clhs555;
    const double clhs619 =     clhs259*clhs585 + clhs259*clhs589 + clhs270*clhs584 - clhs28*clhs617 + clhs280*clhs588 - clhs45*clhs618 + clhs587*clhs616 + clhs590*clhs616;
    const double clhs620 =     clhs259*clhs594 + clhs259*clhs596 + clhs273*clhs584 + clhs283*clhs588 - clhs38*clhs618 + clhs595*clhs616 + clhs597*clhs616 - clhs617*clhs7;
    const double clhs621 =     -clhs21*clhs617 + clhs259*clhs599 + clhs259*clhs601 + clhs276*clhs584 + clhs286*clhs588 - clhs42*clhs618 + clhs600*clhs616 + clhs602*clhs616;
    const double clhs622 =     DeltaPhi[4][2]; // DERIVATIVE(PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs623 =     clhs2*clhs310*clhs555;
    const double clhs624 =     clhs2*clhs320*clhs555;
    const double clhs625 =     -clhs28*clhs623 + clhs293*clhs585 + clhs293*clhs589 + clhs303*clhs584 + clhs313*clhs588 - clhs45*clhs624 + clhs587*clhs622 + clhs590*clhs622;
    const double clhs626 =     clhs293*clhs594 + clhs293*clhs596 + clhs306*clhs584 + clhs316*clhs588 - clhs38*clhs624 + clhs595*clhs622 + clhs597*clhs622 - clhs623*clhs7;
    const double clhs627 =     -clhs21*clhs623 + clhs293*clhs599 + clhs293*clhs601 + clhs309*clhs584 + clhs319*clhs588 - clhs42*clhs624 + clhs600*clhs622 + clhs602*clhs622;
    const double clhs628 =     DeltaPhi[5][2]; // DERIVATIVE(PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs629 =     clhs2*clhs343*clhs555;
    const double clhs630 =     clhs2*clhs353*clhs555;
    const double clhs631 =     -clhs28*clhs629 + clhs326*clhs585 + clhs326*clhs589 + clhs336*clhs584 + clhs346*clhs588 - clhs45*clhs630 + clhs587*clhs628 + clhs590*clhs628;
    const double clhs632 =     clhs326*clhs594 + clhs326*clhs596 + clhs339*clhs584 + clhs349*clhs588 - clhs38*clhs630 + clhs595*clhs628 + clhs597*clhs628 - clhs629*clhs7;
    const double clhs633 =     -clhs21*clhs629 + clhs326*clhs599 + clhs326*clhs601 + clhs342*clhs584 + clhs352*clhs588 - clhs42*clhs630 + clhs600*clhs628 + clhs602*clhs628;
    const double clhs634 =     DeltaPhi[6][2]; // DERIVATIVE(PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs635 =     clhs2*clhs377*clhs555;
    const double clhs636 =     clhs2*clhs387*clhs555;
    const double clhs637 =     -clhs28*clhs635 + clhs359*clhs585 + clhs359*clhs589 + clhs370*clhs584 + clhs380*clhs588 - clhs45*clhs636 + clhs587*clhs634 + clhs590*clhs634;
    const double clhs638 =     clhs359*clhs594 + clhs359*clhs596 + clhs373*clhs584 - clhs38*clhs636 + clhs383*clhs588 + clhs595*clhs634 + clhs597*clhs634 - clhs635*clhs7;
    const double clhs639 =     -clhs21*clhs635 + clhs359*clhs599 + clhs359*clhs601 + clhs376*clhs584 + clhs386*clhs588 - clhs42*clhs636 + clhs600*clhs634 + clhs602*clhs634;
    const double clhs640 =     DeltaPhi[7][2]; // DERIVATIVE(PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs641 =     clhs2*clhs410*clhs555;
    const double clhs642 =     clhs2*clhs420*clhs555;
    const double clhs643 =     -clhs28*clhs641 + clhs393*clhs585 + clhs393*clhs589 + clhs403*clhs584 + clhs413*clhs588 - clhs45*clhs642 + clhs587*clhs640 + clhs590*clhs640;
    const double clhs644 =     -clhs38*clhs642 + clhs393*clhs594 + clhs393*clhs596 + clhs406*clhs584 + clhs416*clhs588 + clhs595*clhs640 + clhs597*clhs640 - clhs641*clhs7;
    const double clhs645 =     -clhs21*clhs641 + clhs393*clhs599 + clhs393*clhs601 + clhs409*clhs584 + clhs419*clhs588 - clhs42*clhs642 + clhs600*clhs640 + clhs602*clhs640;
    const double clhs646 =     DeltaPhi[8][2]; // DERIVATIVE(PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs647 =     clhs2*clhs443*clhs555;
    const double clhs648 =     clhs2*clhs453*clhs555;
    const double clhs649 =     -clhs28*clhs647 + clhs426*clhs585 + clhs426*clhs589 + clhs436*clhs584 + clhs446*clhs588 - clhs45*clhs648 + clhs587*clhs646 + clhs590*clhs646;
    const double clhs650 =     -clhs38*clhs648 + clhs426*clhs594 + clhs426*clhs596 + clhs439*clhs584 + clhs449*clhs588 + clhs595*clhs646 + clhs597*clhs646 - clhs647*clhs7;
    const double clhs651 =     -clhs21*clhs647 - clhs42*clhs648 + clhs426*clhs599 + clhs426*clhs601 + clhs442*clhs584 + clhs452*clhs588 + clhs600*clhs646 + clhs602*clhs646;

    lhs(0,0)=0;
    lhs(0,1)=0;
    lhs(0,2)=0;
    lhs(0,3)=0;
    lhs(0,4)=0;
    lhs(0,5)=0;
    lhs(0,6)=0;
    lhs(0,7)=0;
    lhs(0,8)=0;
    lhs(0,9)=0;
    lhs(0,10)=0;
    lhs(0,11)=0;
    lhs(0,12)=0;
    lhs(0,13)=0;
    lhs(0,14)=0;
    lhs(0,15)=0;
    lhs(0,16)=0;
    lhs(0,17)=0;
    lhs(0,18)=0;
    lhs(0,19)=0;
    lhs(0,20)=0;
    lhs(0,21)=0;
    lhs(0,22)=0;
    lhs(0,23)=0;
    lhs(0,24)=0;
    lhs(0,25)=0;
    lhs(0,26)=0;
    lhs(1,0)=0;
    lhs(1,1)=0;
    lhs(1,2)=0;
    lhs(1,3)=0;
    lhs(1,4)=0;
    lhs(1,5)=0;
    lhs(1,6)=0;
    lhs(1,7)=0;
    lhs(1,8)=0;
    lhs(1,9)=0;
    lhs(1,10)=0;
    lhs(1,11)=0;
    lhs(1,12)=0;
    lhs(1,13)=0;
    lhs(1,14)=0;
    lhs(1,15)=0;
    lhs(1,16)=0;
    lhs(1,17)=0;
    lhs(1,18)=0;
    lhs(1,19)=0;
    lhs(1,20)=0;
    lhs(1,21)=0;
    lhs(1,22)=0;
    lhs(1,23)=0;
    lhs(1,24)=0;
    lhs(1,25)=0;
    lhs(1,26)=0;
    lhs(2,0)=0;
    lhs(2,1)=0;
    lhs(2,2)=0;
    lhs(2,3)=0;
    lhs(2,4)=0;
    lhs(2,5)=0;
    lhs(2,6)=0;
    lhs(2,7)=0;
    lhs(2,8)=0;
    lhs(2,9)=0;
    lhs(2,10)=0;
    lhs(2,11)=0;
    lhs(2,12)=0;
    lhs(2,13)=0;
    lhs(2,14)=0;
    lhs(2,15)=0;
    lhs(2,16)=0;
    lhs(2,17)=0;
    lhs(2,18)=0;
    lhs(2,19)=0;
    lhs(2,20)=0;
    lhs(2,21)=0;
    lhs(2,22)=0;
    lhs(2,23)=0;
    lhs(2,24)=0;
    lhs(2,25)=0;
    lhs(2,26)=0;
    lhs(3,0)=0;
    lhs(3,1)=0;
    lhs(3,2)=0;
    lhs(3,3)=0;
    lhs(3,4)=0;
    lhs(3,5)=0;
    lhs(3,6)=0;
    lhs(3,7)=0;
    lhs(3,8)=0;
    lhs(3,9)=0;
    lhs(3,10)=0;
    lhs(3,11)=0;
    lhs(3,12)=0;
    lhs(3,13)=0;
    lhs(3,14)=0;
    lhs(3,15)=0;
    lhs(3,16)=0;
    lhs(3,17)=0;
    lhs(3,18)=0;
    lhs(3,19)=0;
    lhs(3,20)=0;
    lhs(3,21)=0;
    lhs(3,22)=0;
    lhs(3,23)=0;
    lhs(3,24)=0;
    lhs(3,25)=0;
    lhs(3,26)=0;
    lhs(4,0)=0;
    lhs(4,1)=0;
    lhs(4,2)=0;
    lhs(4,3)=0;
    lhs(4,4)=0;
    lhs(4,5)=0;
    lhs(4,6)=0;
    lhs(4,7)=0;
    lhs(4,8)=0;
    lhs(4,9)=0;
    lhs(4,10)=0;
    lhs(4,11)=0;
    lhs(4,12)=0;
    lhs(4,13)=0;
    lhs(4,14)=0;
    lhs(4,15)=0;
    lhs(4,16)=0;
    lhs(4,17)=0;
    lhs(4,18)=0;
    lhs(4,19)=0;
    lhs(4,20)=0;
    lhs(4,21)=0;
    lhs(4,22)=0;
    lhs(4,23)=0;
    lhs(4,24)=0;
    lhs(4,25)=0;
    lhs(4,26)=0;
    lhs(5,0)=0;
    lhs(5,1)=0;
    lhs(5,2)=0;
    lhs(5,3)=0;
    lhs(5,4)=0;
    lhs(5,5)=0;
    lhs(5,6)=0;
    lhs(5,7)=0;
    lhs(5,8)=0;
    lhs(5,9)=0;
    lhs(5,10)=0;
    lhs(5,11)=0;
    lhs(5,12)=0;
    lhs(5,13)=0;
    lhs(5,14)=0;
    lhs(5,15)=0;
    lhs(5,16)=0;
    lhs(5,17)=0;
    lhs(5,18)=0;
    lhs(5,19)=0;
    lhs(5,20)=0;
    lhs(5,21)=0;
    lhs(5,22)=0;
    lhs(5,23)=0;
    lhs(5,24)=0;
    lhs(5,25)=0;
    lhs(5,26)=0;
    lhs(6,0)=0;
    lhs(6,1)=0;
    lhs(6,2)=0;
    lhs(6,3)=0;
    lhs(6,4)=0;
    lhs(6,5)=0;
    lhs(6,6)=0;
    lhs(6,7)=0;
    lhs(6,8)=0;
    lhs(6,9)=0;
    lhs(6,10)=0;
    lhs(6,11)=0;
    lhs(6,12)=0;
    lhs(6,13)=0;
    lhs(6,14)=0;
    lhs(6,15)=0;
    lhs(6,16)=0;
    lhs(6,17)=0;
    lhs(6,18)=0;
    lhs(6,19)=0;
    lhs(6,20)=0;
    lhs(6,21)=0;
    lhs(6,22)=0;
    lhs(6,23)=0;
    lhs(6,24)=0;
    lhs(6,25)=0;
    lhs(6,26)=0;
    lhs(7,0)=0;
    lhs(7,1)=0;
    lhs(7,2)=0;
    lhs(7,3)=0;
    lhs(7,4)=0;
    lhs(7,5)=0;
    lhs(7,6)=0;
    lhs(7,7)=0;
    lhs(7,8)=0;
    lhs(7,9)=0;
    lhs(7,10)=0;
    lhs(7,11)=0;
    lhs(7,12)=0;
    lhs(7,13)=0;
    lhs(7,14)=0;
    lhs(7,15)=0;
    lhs(7,16)=0;
    lhs(7,17)=0;
    lhs(7,18)=0;
    lhs(7,19)=0;
    lhs(7,20)=0;
    lhs(7,21)=0;
    lhs(7,22)=0;
    lhs(7,23)=0;
    lhs(7,24)=0;
    lhs(7,25)=0;
    lhs(7,26)=0;
    lhs(8,0)=0;
    lhs(8,1)=0;
    lhs(8,2)=0;
    lhs(8,3)=0;
    lhs(8,4)=0;
    lhs(8,5)=0;
    lhs(8,6)=0;
    lhs(8,7)=0;
    lhs(8,8)=0;
    lhs(8,9)=0;
    lhs(8,10)=0;
    lhs(8,11)=0;
    lhs(8,12)=0;
    lhs(8,13)=0;
    lhs(8,14)=0;
    lhs(8,15)=0;
    lhs(8,16)=0;
    lhs(8,17)=0;
    lhs(8,18)=0;
    lhs(8,19)=0;
    lhs(8,20)=0;
    lhs(8,21)=0;
    lhs(8,22)=0;
    lhs(8,23)=0;
    lhs(8,24)=0;
    lhs(8,25)=0;
    lhs(8,26)=0;
    lhs(9,0)=0;
    lhs(9,1)=0;
    lhs(9,2)=0;
    lhs(9,3)=0;
    lhs(9,4)=0;
    lhs(9,5)=0;
    lhs(9,6)=0;
    lhs(9,7)=0;
    lhs(9,8)=0;
    lhs(9,9)=0;
    lhs(9,10)=0;
    lhs(9,11)=0;
    lhs(9,12)=0;
    lhs(9,13)=0;
    lhs(9,14)=0;
    lhs(9,15)=0;
    lhs(9,16)=0;
    lhs(9,17)=0;
    lhs(9,18)=0;
    lhs(9,19)=0;
    lhs(9,20)=0;
    lhs(9,21)=0;
    lhs(9,22)=0;
    lhs(9,23)=0;
    lhs(9,24)=0;
    lhs(9,25)=0;
    lhs(9,26)=0;
    lhs(10,0)=0;
    lhs(10,1)=0;
    lhs(10,2)=0;
    lhs(10,3)=0;
    lhs(10,4)=0;
    lhs(10,5)=0;
    lhs(10,6)=0;
    lhs(10,7)=0;
    lhs(10,8)=0;
    lhs(10,9)=0;
    lhs(10,10)=0;
    lhs(10,11)=0;
    lhs(10,12)=0;
    lhs(10,13)=0;
    lhs(10,14)=0;
    lhs(10,15)=0;
    lhs(10,16)=0;
    lhs(10,17)=0;
    lhs(10,18)=0;
    lhs(10,19)=0;
    lhs(10,20)=0;
    lhs(10,21)=0;
    lhs(10,22)=0;
    lhs(10,23)=0;
    lhs(10,24)=0;
    lhs(10,25)=0;
    lhs(10,26)=0;
    lhs(11,0)=0;
    lhs(11,1)=0;
    lhs(11,2)=0;
    lhs(11,3)=0;
    lhs(11,4)=0;
    lhs(11,5)=0;
    lhs(11,6)=0;
    lhs(11,7)=0;
    lhs(11,8)=0;
    lhs(11,9)=0;
    lhs(11,10)=0;
    lhs(11,11)=0;
    lhs(11,12)=0;
    lhs(11,13)=0;
    lhs(11,14)=0;
    lhs(11,15)=0;
    lhs(11,16)=0;
    lhs(11,17)=0;
    lhs(11,18)=0;
    lhs(11,19)=0;
    lhs(11,20)=0;
    lhs(11,21)=0;
    lhs(11,22)=0;
    lhs(11,23)=0;
    lhs(11,24)=0;
    lhs(11,25)=0;
    lhs(11,26)=0;
    lhs(12,0)=0;
    lhs(12,1)=0;
    lhs(12,2)=0;
    lhs(12,3)=0;
    lhs(12,4)=0;
    lhs(12,5)=0;
    lhs(12,6)=0;
    lhs(12,7)=0;
    lhs(12,8)=0;
    lhs(12,9)=0;
    lhs(12,10)=0;
    lhs(12,11)=0;
    lhs(12,12)=0;
    lhs(12,13)=0;
    lhs(12,14)=0;
    lhs(12,15)=0;
    lhs(12,16)=0;
    lhs(12,17)=0;
    lhs(12,18)=0;
    lhs(12,19)=0;
    lhs(12,20)=0;
    lhs(12,21)=0;
    lhs(12,22)=0;
    lhs(12,23)=0;
    lhs(12,24)=0;
    lhs(12,25)=0;
    lhs(12,26)=0;
    lhs(13,0)=0;
    lhs(13,1)=0;
    lhs(13,2)=0;
    lhs(13,3)=0;
    lhs(13,4)=0;
    lhs(13,5)=0;
    lhs(13,6)=0;
    lhs(13,7)=0;
    lhs(13,8)=0;
    lhs(13,9)=0;
    lhs(13,10)=0;
    lhs(13,11)=0;
    lhs(13,12)=0;
    lhs(13,13)=0;
    lhs(13,14)=0;
    lhs(13,15)=0;
    lhs(13,16)=0;
    lhs(13,17)=0;
    lhs(13,18)=0;
    lhs(13,19)=0;
    lhs(13,20)=0;
    lhs(13,21)=0;
    lhs(13,22)=0;
    lhs(13,23)=0;
    lhs(13,24)=0;
    lhs(13,25)=0;
    lhs(13,26)=0;
    lhs(14,0)=0;
    lhs(14,1)=0;
    lhs(14,2)=0;
    lhs(14,3)=0;
    lhs(14,4)=0;
    lhs(14,5)=0;
    lhs(14,6)=0;
    lhs(14,7)=0;
    lhs(14,8)=0;
    lhs(14,9)=0;
    lhs(14,10)=0;
    lhs(14,11)=0;
    lhs(14,12)=0;
    lhs(14,13)=0;
    lhs(14,14)=0;
    lhs(14,15)=0;
    lhs(14,16)=0;
    lhs(14,17)=0;
    lhs(14,18)=0;
    lhs(14,19)=0;
    lhs(14,20)=0;
    lhs(14,21)=0;
    lhs(14,22)=0;
    lhs(14,23)=0;
    lhs(14,24)=0;
    lhs(14,25)=0;
    lhs(14,26)=0;
    lhs(15,0)=0;
    lhs(15,1)=0;
    lhs(15,2)=0;
    lhs(15,3)=0;
    lhs(15,4)=0;
    lhs(15,5)=0;
    lhs(15,6)=0;
    lhs(15,7)=0;
    lhs(15,8)=0;
    lhs(15,9)=0;
    lhs(15,10)=0;
    lhs(15,11)=0;
    lhs(15,12)=0;
    lhs(15,13)=0;
    lhs(15,14)=0;
    lhs(15,15)=0;
    lhs(15,16)=0;
    lhs(15,17)=0;
    lhs(15,18)=0;
    lhs(15,19)=0;
    lhs(15,20)=0;
    lhs(15,21)=0;
    lhs(15,22)=0;
    lhs(15,23)=0;
    lhs(15,24)=0;
    lhs(15,25)=0;
    lhs(15,26)=0;
    lhs(16,0)=0;
    lhs(16,1)=0;
    lhs(16,2)=0;
    lhs(16,3)=0;
    lhs(16,4)=0;
    lhs(16,5)=0;
    lhs(16,6)=0;
    lhs(16,7)=0;
    lhs(16,8)=0;
    lhs(16,9)=0;
    lhs(16,10)=0;
    lhs(16,11)=0;
    lhs(16,12)=0;
    lhs(16,13)=0;
    lhs(16,14)=0;
    lhs(16,15)=0;
    lhs(16,16)=0;
    lhs(16,17)=0;
    lhs(16,18)=0;
    lhs(16,19)=0;
    lhs(16,20)=0;
    lhs(16,21)=0;
    lhs(16,22)=0;
    lhs(16,23)=0;
    lhs(16,24)=0;
    lhs(16,25)=0;
    lhs(16,26)=0;
    lhs(17,0)=0;
    lhs(17,1)=0;
    lhs(17,2)=0;
    lhs(17,3)=0;
    lhs(17,4)=0;
    lhs(17,5)=0;
    lhs(17,6)=0;
    lhs(17,7)=0;
    lhs(17,8)=0;
    lhs(17,9)=0;
    lhs(17,10)=0;
    lhs(17,11)=0;
    lhs(17,12)=0;
    lhs(17,13)=0;
    lhs(17,14)=0;
    lhs(17,15)=0;
    lhs(17,16)=0;
    lhs(17,17)=0;
    lhs(17,18)=0;
    lhs(17,19)=0;
    lhs(17,20)=0;
    lhs(17,21)=0;
    lhs(17,22)=0;
    lhs(17,23)=0;
    lhs(17,24)=0;
    lhs(17,25)=0;
    lhs(17,26)=0;
    lhs(18,0)=-clhs3*(GPnormal[0]*clhs48 + GPnormal[1]*clhs49 + GPnormal[2]*clhs50);
    lhs(18,1)=-clhs3*(GPnormal[0]*clhs59 + GPnormal[1]*clhs60 + GPnormal[2]*clhs61);
    lhs(18,2)=-clhs3*(GPnormal[0]*clhs70 + GPnormal[1]*clhs71 + GPnormal[2]*clhs72);
    lhs(18,3)=-clhs3*(GPnormal[0]*clhs81 + GPnormal[1]*clhs82 + GPnormal[2]*clhs83);
    lhs(18,4)=-clhs3*(GPnormal[0]*clhs92 + GPnormal[1]*clhs93 + GPnormal[2]*clhs94);
    lhs(18,5)=-clhs3*(GPnormal[0]*clhs103 + GPnormal[1]*clhs104 + GPnormal[2]*clhs105);
    lhs(18,6)=-clhs3*(GPnormal[0]*clhs114 + GPnormal[1]*clhs115 + GPnormal[2]*clhs116);
    lhs(18,7)=-clhs3*(GPnormal[0]*clhs125 + GPnormal[1]*clhs126 + GPnormal[2]*clhs127);
    lhs(18,8)=-clhs3*(GPnormal[0]*clhs136 + GPnormal[1]*clhs137 + GPnormal[2]*clhs138);
    lhs(18,9)=clhs0*(GPnormal[0]*clhs181 + GPnormal[1]*clhs186 + GPnormal[2]*clhs191);
    lhs(18,10)=clhs0*(GPnormal[0]*clhs222 + GPnormal[1]*clhs223 + GPnormal[2]*clhs224);
    lhs(18,11)=clhs0*(GPnormal[0]*clhs255 + GPnormal[1]*clhs256 + GPnormal[2]*clhs257);
    lhs(18,12)=clhs0*(GPnormal[0]*clhs289 + GPnormal[1]*clhs290 + GPnormal[2]*clhs291);
    lhs(18,13)=clhs0*(GPnormal[0]*clhs322 + GPnormal[1]*clhs323 + GPnormal[2]*clhs324);
    lhs(18,14)=clhs0*(GPnormal[0]*clhs355 + GPnormal[1]*clhs356 + GPnormal[2]*clhs357);
    lhs(18,15)=clhs0*(GPnormal[0]*clhs389 + GPnormal[1]*clhs390 + GPnormal[2]*clhs391);
    lhs(18,16)=clhs0*(GPnormal[0]*clhs422 + GPnormal[1]*clhs423 + GPnormal[2]*clhs424);
    lhs(18,17)=clhs0*(GPnormal[0]*clhs455 + GPnormal[1]*clhs456 + GPnormal[2]*clhs457);
    lhs(18,18)=0;
    lhs(18,19)=0;
    lhs(18,20)=0;
    lhs(18,21)=0;
    lhs(18,22)=0;
    lhs(18,23)=0;
    lhs(18,24)=0;
    lhs(18,25)=0;
    lhs(18,26)=0;
    lhs(19,0)=-clhs3*(GPtangent1[0]*clhs48 + GPtangent1[1]*clhs49 + GPtangent1[2]*clhs50);
    lhs(19,1)=-clhs3*(GPtangent1[0]*clhs59 + GPtangent1[1]*clhs60 + GPtangent1[2]*clhs61);
    lhs(19,2)=-clhs3*(GPtangent1[0]*clhs70 + GPtangent1[1]*clhs71 + GPtangent1[2]*clhs72);
    lhs(19,3)=-clhs3*(GPtangent1[0]*clhs81 + GPtangent1[1]*clhs82 + GPtangent1[2]*clhs83);
    lhs(19,4)=-clhs3*(GPtangent1[0]*clhs92 + GPtangent1[1]*clhs93 + GPtangent1[2]*clhs94);
    lhs(19,5)=-clhs3*(GPtangent1[0]*clhs103 + GPtangent1[1]*clhs104 + GPtangent1[2]*clhs105);
    lhs(19,6)=-clhs3*(GPtangent1[0]*clhs114 + GPtangent1[1]*clhs115 + GPtangent1[2]*clhs116);
    lhs(19,7)=-clhs3*(GPtangent1[0]*clhs125 + GPtangent1[1]*clhs126 + GPtangent1[2]*clhs127);
    lhs(19,8)=-clhs3*(GPtangent1[0]*clhs136 + GPtangent1[1]*clhs137 + GPtangent1[2]*clhs138);
    lhs(19,9)=clhs0*(GPtangent1[0]*clhs181 + GPtangent1[1]*clhs186 + GPtangent1[2]*clhs191);
    lhs(19,10)=clhs0*(GPtangent1[0]*clhs222 + GPtangent1[1]*clhs223 + GPtangent1[2]*clhs224);
    lhs(19,11)=clhs0*(GPtangent1[0]*clhs255 + GPtangent1[1]*clhs256 + GPtangent1[2]*clhs257);
    lhs(19,12)=clhs0*(GPtangent1[0]*clhs289 + GPtangent1[1]*clhs290 + GPtangent1[2]*clhs291);
    lhs(19,13)=clhs0*(GPtangent1[0]*clhs322 + GPtangent1[1]*clhs323 + GPtangent1[2]*clhs324);
    lhs(19,14)=clhs0*(GPtangent1[0]*clhs355 + GPtangent1[1]*clhs356 + GPtangent1[2]*clhs357);
    lhs(19,15)=clhs0*(GPtangent1[0]*clhs389 + GPtangent1[1]*clhs390 + GPtangent1[2]*clhs391);
    lhs(19,16)=clhs0*(GPtangent1[0]*clhs422 + GPtangent1[1]*clhs423 + GPtangent1[2]*clhs424);
    lhs(19,17)=clhs0*(GPtangent1[0]*clhs455 + GPtangent1[1]*clhs456 + GPtangent1[2]*clhs457);
    lhs(19,18)=0;
    lhs(19,19)=0;
    lhs(19,20)=0;
    lhs(19,21)=0;
    lhs(19,22)=0;
    lhs(19,23)=0;
    lhs(19,24)=0;
    lhs(19,25)=0;
    lhs(19,26)=0;
    lhs(20,0)=-clhs3*(GPtangent2[0]*clhs48 + GPtangent2[1]*clhs49 + GPtangent2[2]*clhs50);
    lhs(20,1)=-clhs3*(GPtangent2[0]*clhs59 + GPtangent2[1]*clhs60 + GPtangent2[2]*clhs61);
    lhs(20,2)=-clhs3*(GPtangent2[0]*clhs70 + GPtangent2[1]*clhs71 + GPtangent2[2]*clhs72);
    lhs(20,3)=-clhs3*(GPtangent2[0]*clhs81 + GPtangent2[1]*clhs82 + GPtangent2[2]*clhs83);
    lhs(20,4)=-clhs3*(GPtangent2[0]*clhs92 + GPtangent2[1]*clhs93 + GPtangent2[2]*clhs94);
    lhs(20,5)=-clhs3*(GPtangent2[0]*clhs103 + GPtangent2[1]*clhs104 + GPtangent2[2]*clhs105);
    lhs(20,6)=-clhs3*(GPtangent2[0]*clhs114 + GPtangent2[1]*clhs115 + GPtangent2[2]*clhs116);
    lhs(20,7)=-clhs3*(GPtangent2[0]*clhs125 + GPtangent2[1]*clhs126 + GPtangent2[2]*clhs127);
    lhs(20,8)=-clhs3*(GPtangent2[0]*clhs136 + GPtangent2[1]*clhs137 + GPtangent2[2]*clhs138);
    lhs(20,9)=clhs0*(GPtangent2[0]*clhs181 + GPtangent2[1]*clhs186 + GPtangent2[2]*clhs191);
    lhs(20,10)=clhs0*(GPtangent2[0]*clhs222 + GPtangent2[1]*clhs223 + GPtangent2[2]*clhs224);
    lhs(20,11)=clhs0*(GPtangent2[0]*clhs255 + GPtangent2[1]*clhs256 + GPtangent2[2]*clhs257);
    lhs(20,12)=clhs0*(GPtangent2[0]*clhs289 + GPtangent2[1]*clhs290 + GPtangent2[2]*clhs291);
    lhs(20,13)=clhs0*(GPtangent2[0]*clhs322 + GPtangent2[1]*clhs323 + GPtangent2[2]*clhs324);
    lhs(20,14)=clhs0*(GPtangent2[0]*clhs355 + GPtangent2[1]*clhs356 + GPtangent2[2]*clhs357);
    lhs(20,15)=clhs0*(GPtangent2[0]*clhs389 + GPtangent2[1]*clhs390 + GPtangent2[2]*clhs391);
    lhs(20,16)=clhs0*(GPtangent2[0]*clhs422 + GPtangent2[1]*clhs423 + GPtangent2[2]*clhs424);
    lhs(20,17)=clhs0*(GPtangent2[0]*clhs455 + GPtangent2[1]*clhs456 + GPtangent2[2]*clhs457);
    lhs(20,18)=0;
    lhs(20,19)=0;
    lhs(20,20)=0;
    lhs(20,21)=0;
    lhs(20,22)=0;
    lhs(20,23)=0;
    lhs(20,24)=0;
    lhs(20,25)=0;
    lhs(20,26)=0;
    lhs(21,0)=-clhs459*(GPnormal[0]*clhs460 + GPnormal[1]*clhs461 + GPnormal[2]*clhs462);
    lhs(21,1)=-clhs459*(GPnormal[0]*clhs463 + GPnormal[1]*clhs464 + GPnormal[2]*clhs465);
    lhs(21,2)=-clhs459*(GPnormal[0]*clhs466 + GPnormal[1]*clhs467 + GPnormal[2]*clhs468);
    lhs(21,3)=-clhs459*(GPnormal[0]*clhs469 + GPnormal[1]*clhs470 + GPnormal[2]*clhs471);
    lhs(21,4)=-clhs459*(GPnormal[0]*clhs472 + GPnormal[1]*clhs473 + GPnormal[2]*clhs474);
    lhs(21,5)=-clhs459*(GPnormal[0]*clhs475 + GPnormal[1]*clhs476 + GPnormal[2]*clhs477);
    lhs(21,6)=-clhs459*(GPnormal[0]*clhs478 + GPnormal[1]*clhs479 + GPnormal[2]*clhs480);
    lhs(21,7)=-clhs459*(GPnormal[0]*clhs481 + GPnormal[1]*clhs482 + GPnormal[2]*clhs483);
    lhs(21,8)=-clhs459*(GPnormal[0]*clhs484 + GPnormal[1]*clhs485 + GPnormal[2]*clhs486);
    lhs(21,9)=clhs0*(GPnormal[0]*clhs496 + GPnormal[1]*clhs501 + GPnormal[2]*clhs506);
    lhs(21,10)=clhs0*(GPnormal[0]*clhs510 + GPnormal[1]*clhs511 + GPnormal[2]*clhs512);
    lhs(21,11)=clhs0*(GPnormal[0]*clhs516 + GPnormal[1]*clhs517 + GPnormal[2]*clhs518);
    lhs(21,12)=clhs0*(GPnormal[0]*clhs522 + GPnormal[1]*clhs523 + GPnormal[2]*clhs524);
    lhs(21,13)=clhs0*(GPnormal[0]*clhs528 + GPnormal[1]*clhs529 + GPnormal[2]*clhs530);
    lhs(21,14)=clhs0*(GPnormal[0]*clhs534 + GPnormal[1]*clhs535 + GPnormal[2]*clhs536);
    lhs(21,15)=clhs0*(GPnormal[0]*clhs540 + GPnormal[1]*clhs541 + GPnormal[2]*clhs542);
    lhs(21,16)=clhs0*(GPnormal[0]*clhs546 + GPnormal[1]*clhs547 + GPnormal[2]*clhs548);
    lhs(21,17)=clhs0*(GPnormal[0]*clhs552 + GPnormal[1]*clhs553 + GPnormal[2]*clhs554);
    lhs(21,18)=0;
    lhs(21,19)=0;
    lhs(21,20)=0;
    lhs(21,21)=0;
    lhs(21,22)=0;
    lhs(21,23)=0;
    lhs(21,24)=0;
    lhs(21,25)=0;
    lhs(21,26)=0;
    lhs(22,0)=-clhs459*(GPtangent1[0]*clhs460 + GPtangent1[1]*clhs461 + GPtangent1[2]*clhs462);
    lhs(22,1)=-clhs459*(GPtangent1[0]*clhs463 + GPtangent1[1]*clhs464 + GPtangent1[2]*clhs465);
    lhs(22,2)=-clhs459*(GPtangent1[0]*clhs466 + GPtangent1[1]*clhs467 + GPtangent1[2]*clhs468);
    lhs(22,3)=-clhs459*(GPtangent1[0]*clhs469 + GPtangent1[1]*clhs470 + GPtangent1[2]*clhs471);
    lhs(22,4)=-clhs459*(GPtangent1[0]*clhs472 + GPtangent1[1]*clhs473 + GPtangent1[2]*clhs474);
    lhs(22,5)=-clhs459*(GPtangent1[0]*clhs475 + GPtangent1[1]*clhs476 + GPtangent1[2]*clhs477);
    lhs(22,6)=-clhs459*(GPtangent1[0]*clhs478 + GPtangent1[1]*clhs479 + GPtangent1[2]*clhs480);
    lhs(22,7)=-clhs459*(GPtangent1[0]*clhs481 + GPtangent1[1]*clhs482 + GPtangent1[2]*clhs483);
    lhs(22,8)=-clhs459*(GPtangent1[0]*clhs484 + GPtangent1[1]*clhs485 + GPtangent1[2]*clhs486);
    lhs(22,9)=clhs0*(GPtangent1[0]*clhs496 + GPtangent1[1]*clhs501 + GPtangent1[2]*clhs506);
    lhs(22,10)=clhs0*(GPtangent1[0]*clhs510 + GPtangent1[1]*clhs511 + GPtangent1[2]*clhs512);
    lhs(22,11)=clhs0*(GPtangent1[0]*clhs516 + GPtangent1[1]*clhs517 + GPtangent1[2]*clhs518);
    lhs(22,12)=clhs0*(GPtangent1[0]*clhs522 + GPtangent1[1]*clhs523 + GPtangent1[2]*clhs524);
    lhs(22,13)=clhs0*(GPtangent1[0]*clhs528 + GPtangent1[1]*clhs529 + GPtangent1[2]*clhs530);
    lhs(22,14)=clhs0*(GPtangent1[0]*clhs534 + GPtangent1[1]*clhs535 + GPtangent1[2]*clhs536);
    lhs(22,15)=clhs0*(GPtangent1[0]*clhs540 + GPtangent1[1]*clhs541 + GPtangent1[2]*clhs542);
    lhs(22,16)=clhs0*(GPtangent1[0]*clhs546 + GPtangent1[1]*clhs547 + GPtangent1[2]*clhs548);
    lhs(22,17)=clhs0*(GPtangent1[0]*clhs552 + GPtangent1[1]*clhs553 + GPtangent1[2]*clhs554);
    lhs(22,18)=0;
    lhs(22,19)=0;
    lhs(22,20)=0;
    lhs(22,21)=0;
    lhs(22,22)=0;
    lhs(22,23)=0;
    lhs(22,24)=0;
    lhs(22,25)=0;
    lhs(22,26)=0;
    lhs(23,0)=-clhs459*(GPtangent2[0]*clhs460 + GPtangent2[1]*clhs461 + GPtangent2[2]*clhs462);
    lhs(23,1)=-clhs459*(GPtangent2[0]*clhs463 + GPtangent2[1]*clhs464 + GPtangent2[2]*clhs465);
    lhs(23,2)=-clhs459*(GPtangent2[0]*clhs466 + GPtangent2[1]*clhs467 + GPtangent2[2]*clhs468);
    lhs(23,3)=-clhs459*(GPtangent2[0]*clhs469 + GPtangent2[1]*clhs470 + GPtangent2[2]*clhs471);
    lhs(23,4)=-clhs459*(GPtangent2[0]*clhs472 + GPtangent2[1]*clhs473 + GPtangent2[2]*clhs474);
    lhs(23,5)=-clhs459*(GPtangent2[0]*clhs475 + GPtangent2[1]*clhs476 + GPtangent2[2]*clhs477);
    lhs(23,6)=-clhs459*(GPtangent2[0]*clhs478 + GPtangent2[1]*clhs479 + GPtangent2[2]*clhs480);
    lhs(23,7)=-clhs459*(GPtangent2[0]*clhs481 + GPtangent2[1]*clhs482 + GPtangent2[2]*clhs483);
    lhs(23,8)=-clhs459*(GPtangent2[0]*clhs484 + GPtangent2[1]*clhs485 + GPtangent2[2]*clhs486);
    lhs(23,9)=clhs0*(GPtangent2[0]*clhs496 + GPtangent2[1]*clhs501 + GPtangent2[2]*clhs506);
    lhs(23,10)=clhs0*(GPtangent2[0]*clhs510 + GPtangent2[1]*clhs511 + GPtangent2[2]*clhs512);
    lhs(23,11)=clhs0*(GPtangent2[0]*clhs516 + GPtangent2[1]*clhs517 + GPtangent2[2]*clhs518);
    lhs(23,12)=clhs0*(GPtangent2[0]*clhs522 + GPtangent2[1]*clhs523 + GPtangent2[2]*clhs524);
    lhs(23,13)=clhs0*(GPtangent2[0]*clhs528 + GPtangent2[1]*clhs529 + GPtangent2[2]*clhs530);
    lhs(23,14)=clhs0*(GPtangent2[0]*clhs534 + GPtangent2[1]*clhs535 + GPtangent2[2]*clhs536);
    lhs(23,15)=clhs0*(GPtangent2[0]*clhs540 + GPtangent2[1]*clhs541 + GPtangent2[2]*clhs542);
    lhs(23,16)=clhs0*(GPtangent2[0]*clhs546 + GPtangent2[1]*clhs547 + GPtangent2[2]*clhs548);
    lhs(23,17)=clhs0*(GPtangent2[0]*clhs552 + GPtangent2[1]*clhs553 + GPtangent2[2]*clhs554);
    lhs(23,18)=0;
    lhs(23,19)=0;
    lhs(23,20)=0;
    lhs(23,21)=0;
    lhs(23,22)=0;
    lhs(23,23)=0;
    lhs(23,24)=0;
    lhs(23,25)=0;
    lhs(23,26)=0;
    lhs(24,0)=-clhs556*(GPnormal[0]*clhs557 + GPnormal[1]*clhs558 + GPnormal[2]*clhs559);
    lhs(24,1)=-clhs556*(GPnormal[0]*clhs560 + GPnormal[1]*clhs561 + GPnormal[2]*clhs562);
    lhs(24,2)=-clhs556*(GPnormal[0]*clhs563 + GPnormal[1]*clhs564 + GPnormal[2]*clhs565);
    lhs(24,3)=-clhs556*(GPnormal[0]*clhs566 + GPnormal[1]*clhs567 + GPnormal[2]*clhs568);
    lhs(24,4)=-clhs556*(GPnormal[0]*clhs569 + GPnormal[1]*clhs570 + GPnormal[2]*clhs571);
    lhs(24,5)=-clhs556*(GPnormal[0]*clhs572 + GPnormal[1]*clhs573 + GPnormal[2]*clhs574);
    lhs(24,6)=-clhs556*(GPnormal[0]*clhs575 + GPnormal[1]*clhs576 + GPnormal[2]*clhs577);
    lhs(24,7)=-clhs556*(GPnormal[0]*clhs578 + GPnormal[1]*clhs579 + GPnormal[2]*clhs580);
    lhs(24,8)=-clhs556*(GPnormal[0]*clhs581 + GPnormal[1]*clhs582 + GPnormal[2]*clhs583);
    lhs(24,9)=clhs0*(GPnormal[0]*clhs593 + GPnormal[1]*clhs598 + GPnormal[2]*clhs603);
    lhs(24,10)=clhs0*(GPnormal[0]*clhs607 + GPnormal[1]*clhs608 + GPnormal[2]*clhs609);
    lhs(24,11)=clhs0*(GPnormal[0]*clhs613 + GPnormal[1]*clhs614 + GPnormal[2]*clhs615);
    lhs(24,12)=clhs0*(GPnormal[0]*clhs619 + GPnormal[1]*clhs620 + GPnormal[2]*clhs621);
    lhs(24,13)=clhs0*(GPnormal[0]*clhs625 + GPnormal[1]*clhs626 + GPnormal[2]*clhs627);
    lhs(24,14)=clhs0*(GPnormal[0]*clhs631 + GPnormal[1]*clhs632 + GPnormal[2]*clhs633);
    lhs(24,15)=clhs0*(GPnormal[0]*clhs637 + GPnormal[1]*clhs638 + GPnormal[2]*clhs639);
    lhs(24,16)=clhs0*(GPnormal[0]*clhs643 + GPnormal[1]*clhs644 + GPnormal[2]*clhs645);
    lhs(24,17)=clhs0*(GPnormal[0]*clhs649 + GPnormal[1]*clhs650 + GPnormal[2]*clhs651);
    lhs(24,18)=0;
    lhs(24,19)=0;
    lhs(24,20)=0;
    lhs(24,21)=0;
    lhs(24,22)=0;
    lhs(24,23)=0;
    lhs(24,24)=0;
    lhs(24,25)=0;
    lhs(24,26)=0;
    lhs(25,0)=-clhs556*(GPtangent1[0]*clhs557 + GPtangent1[1]*clhs558 + GPtangent1[2]*clhs559);
    lhs(25,1)=-clhs556*(GPtangent1[0]*clhs560 + GPtangent1[1]*clhs561 + GPtangent1[2]*clhs562);
    lhs(25,2)=-clhs556*(GPtangent1[0]*clhs563 + GPtangent1[1]*clhs564 + GPtangent1[2]*clhs565);
    lhs(25,3)=-clhs556*(GPtangent1[0]*clhs566 + GPtangent1[1]*clhs567 + GPtangent1[2]*clhs568);
    lhs(25,4)=-clhs556*(GPtangent1[0]*clhs569 + GPtangent1[1]*clhs570 + GPtangent1[2]*clhs571);
    lhs(25,5)=-clhs556*(GPtangent1[0]*clhs572 + GPtangent1[1]*clhs573 + GPtangent1[2]*clhs574);
    lhs(25,6)=-clhs556*(GPtangent1[0]*clhs575 + GPtangent1[1]*clhs576 + GPtangent1[2]*clhs577);
    lhs(25,7)=-clhs556*(GPtangent1[0]*clhs578 + GPtangent1[1]*clhs579 + GPtangent1[2]*clhs580);
    lhs(25,8)=-clhs556*(GPtangent1[0]*clhs581 + GPtangent1[1]*clhs582 + GPtangent1[2]*clhs583);
    lhs(25,9)=clhs0*(GPtangent1[0]*clhs593 + GPtangent1[1]*clhs598 + GPtangent1[2]*clhs603);
    lhs(25,10)=clhs0*(GPtangent1[0]*clhs607 + GPtangent1[1]*clhs608 + GPtangent1[2]*clhs609);
    lhs(25,11)=clhs0*(GPtangent1[0]*clhs613 + GPtangent1[1]*clhs614 + GPtangent1[2]*clhs615);
    lhs(25,12)=clhs0*(GPtangent1[0]*clhs619 + GPtangent1[1]*clhs620 + GPtangent1[2]*clhs621);
    lhs(25,13)=clhs0*(GPtangent1[0]*clhs625 + GPtangent1[1]*clhs626 + GPtangent1[2]*clhs627);
    lhs(25,14)=clhs0*(GPtangent1[0]*clhs631 + GPtangent1[1]*clhs632 + GPtangent1[2]*clhs633);
    lhs(25,15)=clhs0*(GPtangent1[0]*clhs637 + GPtangent1[1]*clhs638 + GPtangent1[2]*clhs639);
    lhs(25,16)=clhs0*(GPtangent1[0]*clhs643 + GPtangent1[1]*clhs644 + GPtangent1[2]*clhs645);
    lhs(25,17)=clhs0*(GPtangent1[0]*clhs649 + GPtangent1[1]*clhs650 + GPtangent1[2]*clhs651);
    lhs(25,18)=0;
    lhs(25,19)=0;
    lhs(25,20)=0;
    lhs(25,21)=0;
    lhs(25,22)=0;
    lhs(25,23)=0;
    lhs(25,24)=0;
    lhs(25,25)=0;
    lhs(25,26)=0;
    lhs(26,0)=-clhs556*(GPtangent2[0]*clhs557 + GPtangent2[1]*clhs558 + GPtangent2[2]*clhs559);
    lhs(26,1)=-clhs556*(GPtangent2[0]*clhs560 + GPtangent2[1]*clhs561 + GPtangent2[2]*clhs562);
    lhs(26,2)=-clhs556*(GPtangent2[0]*clhs563 + GPtangent2[1]*clhs564 + GPtangent2[2]*clhs565);
    lhs(26,3)=-clhs556*(GPtangent2[0]*clhs566 + GPtangent2[1]*clhs567 + GPtangent2[2]*clhs568);
    lhs(26,4)=-clhs556*(GPtangent2[0]*clhs569 + GPtangent2[1]*clhs570 + GPtangent2[2]*clhs571);
    lhs(26,5)=-clhs556*(GPtangent2[0]*clhs572 + GPtangent2[1]*clhs573 + GPtangent2[2]*clhs574);
    lhs(26,6)=-clhs556*(GPtangent2[0]*clhs575 + GPtangent2[1]*clhs576 + GPtangent2[2]*clhs577);
    lhs(26,7)=-clhs556*(GPtangent2[0]*clhs578 + GPtangent2[1]*clhs579 + GPtangent2[2]*clhs580);
    lhs(26,8)=-clhs556*(GPtangent2[0]*clhs581 + GPtangent2[1]*clhs582 + GPtangent2[2]*clhs583);
    lhs(26,9)=clhs0*(GPtangent2[0]*clhs593 + GPtangent2[1]*clhs598 + GPtangent2[2]*clhs603);
    lhs(26,10)=clhs0*(GPtangent2[0]*clhs607 + GPtangent2[1]*clhs608 + GPtangent2[2]*clhs609);
    lhs(26,11)=clhs0*(GPtangent2[0]*clhs613 + GPtangent2[1]*clhs614 + GPtangent2[2]*clhs615);
    lhs(26,12)=clhs0*(GPtangent2[0]*clhs619 + GPtangent2[1]*clhs620 + GPtangent2[2]*clhs621);
    lhs(26,13)=clhs0*(GPtangent2[0]*clhs625 + GPtangent2[1]*clhs626 + GPtangent2[2]*clhs627);
    lhs(26,14)=clhs0*(GPtangent2[0]*clhs631 + GPtangent2[1]*clhs632 + GPtangent2[2]*clhs633);
    lhs(26,15)=clhs0*(GPtangent2[0]*clhs637 + GPtangent2[1]*clhs638 + GPtangent2[2]*clhs639);
    lhs(26,16)=clhs0*(GPtangent2[0]*clhs643 + GPtangent2[1]*clhs644 + GPtangent2[2]*clhs645);
    lhs(26,17)=clhs0*(GPtangent2[0]*clhs649 + GPtangent2[1]*clhs650 + GPtangent2[2]*clhs651);
    lhs(26,18)=0;
    lhs(26,19)=0;
    lhs(26,20)=0;
    lhs(26,21)=0;
    lhs(26,22)=0;
    lhs(26,23)=0;
    lhs(26,24)=0;
    lhs(26,25)=0;
    lhs(26,26)=0;

    
    return lhs;
}

//     /***********************************************************************************/
//     /***********************************************************************************/
//     
//     static inline bounded_matrix<double,27,27> ComputeGaussPointInactiveLHS(
//         const array_1d<double,3> N1, 
//         const array_1d<double,3> N2, 
//         const array_1d<double,3> Phi, 
//         const double detJ, 
//         const ContactData<3,3>& rContactData,
//         const double& augmented_normal_lm,
//         const double& augmented_tangent_lm,
//         const double& integration_point_gap,
//         const double& integration_point_slip
//         )
// {
//     bounded_matrix<double,27,27> lhs;
//
//     const bounded_matrix<double, 3,3> normalslave     = rContactData.Normal_s;
//     const bounded_matrix<double, 3,3> tan1slave       = rContactData.Tangent_xi_s;
//     const bounded_matrix<double, 3,3> tan2slave       = rContactData.Tangent_eta_s;
//     const bounded_matrix<double, 3,3> lm              = rContactData.LagrangeMultipliers;
//     const double Dt              = rContactData.Dt;
//     const double epsilon_normal  = rContactData.epsilon_normal;
//     const double epsilon_tangent = rContactData.epsilon_tangent;
//     
//     const array_1d<double,3> GPnormal     = prod(trans(normalslave), N1);
//     const array_1d<double,3> GPtangent1   = prod(trans(tan1slave), N1);
//     const array_1d<double,3> GPtangent2   = prod(trans(tan2slave), N1);
//
//     const bounded_matrix<double, 3,3> v1 = rContactData.v1;
//     const bounded_matrix<double, 3,3> v2 = rContactData.v2;
// 
//     const std::vector<double> DeltaJs          = rContactData.DeltaJ_s;
//     const std::vector<bounded_matrix<double, 3, 3>> DeltaNormals     = rContactData.Delta_Normal_s;
//     const std::vector<bounded_matrix<double, 3, 3>> Deltatangentxis  = rContactData.Delta_Tangent_xi_s;
//     const std::vector<bounded_matrix<double, 3, 3>> Deltatangentetas = rContactData.Delta_Tangent_eta_s;
//     const std::vector<double> DeltaGap         = rContactData.DeltaGap;
//     const std::vector<array_1d<double,3>> DeltaPhi         = rContactData.DeltaPhi;
//     const std::vector<array_1d<double,3>> DeltaN2          = rContactData.DeltaN2;
//
// //substitute_inactive_lhs
//     
//     return lhs;
// }

    /***********************************************************************************/
    /***********************************************************************************/
    
    static inline array_1d<double,27> ComputeGaussPointActiveRHS(
        const array_1d<double,3> N1, 
        const array_1d<double,3> N2, 
        const array_1d<double,3> Phi, 
        const double detJ, 
        const ContactData<3,3>& rContactData,
        const double& augmented_normal_lm,
        const double& augmented_tangent_lm,
        const double& integration_point_gap,
        const double& integration_point_slip
        )
{
    array_1d<double,27> rhs;
    
    const bounded_matrix<double, 3,3> normalslave    = rContactData.Normal_s;
    const bounded_matrix<double, 3,3> tan1slave      = rContactData.Tangent_xi_s;
    const bounded_matrix<double, 3,3> tan2slave      = rContactData.Tangent_eta_s;
    const bounded_matrix<double, 3,3> lm             = rContactData.LagrangeMultipliers;
//     const double Dt             = rContactData.Dt;
//     const double epsilon_normal = rContactData.epsilon_normal;
    
    const array_1d<double,3> GPnormal     = prod(trans(normalslave), N1);
    const array_1d<double,3> GPtangent1   = prod(trans(tan1slave), N1);
    const array_1d<double,3> GPtangent2   = prod(trans(tan2slave), N1);
    
    const bounded_matrix<double, 3,3> v1 = rContactData.v1;
    const bounded_matrix<double, 3,3> v2 = rContactData.v2;
    
    const double crhs0 =     N2[0]; // N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
    const double crhs1 =     detJ; // DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs2 =     Phi[0]; // PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs3 =     Phi[1]; // PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs4 =     Phi[2]; // PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs5 =     crhs2*lm(0,0) + crhs3*lm(1,0) + crhs4*lm(2,0);
    const double crhs6 =     crhs1*crhs5;
    const double crhs7 =     crhs2*lm(0,1) + crhs3*lm(1,1) + crhs4*lm(2,1);
    const double crhs8 =     crhs1*crhs7;
    const double crhs9 =     crhs2*lm(0,2) + crhs3*lm(1,2) + crhs4*lm(2,2);
    const double crhs10 =     crhs1*crhs9;
    const double crhs11 =     N2[1]; // N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
    const double crhs12 =     N2[2]; // N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
    const double crhs13 =     N1[0]*crhs1;
    const double crhs14 =     N1[1]*crhs1;
    const double crhs15 =     N1[2]*crhs1;
    const double crhs16 =     normalslave(0,0); // NORMALSLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs17 =     normalslave(0,1); // NORMALSLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs18 =     normalslave(0,2); // NORMALSLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs19 =     integration_point_gap; // GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
    const double crhs20 =     crhs1*crhs19*crhs2;
    const double crhs21 =     normalslave(1,0); // NORMALSLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs22 =     normalslave(1,1); // NORMALSLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs23 =     normalslave(1,2); // NORMALSLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs24 =     crhs1*crhs19*crhs3;
    const double crhs25 =     normalslave(2,0); // NORMALSLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs26 =     normalslave(2,1); // NORMALSLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs27 =     normalslave(2,2); // NORMALSLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs28 =     crhs1*crhs19*crhs4;

    rhs[0]=-crhs0*crhs6;
    rhs[1]=-crhs0*crhs8;
    rhs[2]=-crhs0*crhs10;
    rhs[3]=-crhs11*crhs6;
    rhs[4]=-crhs11*crhs8;
    rhs[5]=-crhs10*crhs11;
    rhs[6]=-crhs12*crhs6;
    rhs[7]=-crhs12*crhs8;
    rhs[8]=-crhs10*crhs12;
    rhs[9]=crhs13*crhs5;
    rhs[10]=crhs13*crhs7;
    rhs[11]=crhs13*crhs9;
    rhs[12]=crhs14*crhs5;
    rhs[13]=crhs14*crhs7;
    rhs[14]=crhs14*crhs9;
    rhs[15]=crhs15*crhs5;
    rhs[16]=crhs15*crhs7;
    rhs[17]=crhs15*crhs9;
    rhs[18]=crhs20*(GPnormal[0]*crhs16 + GPnormal[1]*crhs17 + GPnormal[2]*crhs18);
    rhs[19]=crhs20*(GPtangent1[0]*crhs16 + GPtangent1[1]*crhs17 + GPtangent1[2]*crhs18);
    rhs[20]=crhs20*(GPtangent2[0]*crhs16 + GPtangent2[1]*crhs17 + GPtangent2[2]*crhs18);
    rhs[21]=crhs24*(GPnormal[0]*crhs21 + GPnormal[1]*crhs22 + GPnormal[2]*crhs23);
    rhs[22]=crhs24*(GPtangent1[0]*crhs21 + GPtangent1[1]*crhs22 + GPtangent1[2]*crhs23);
    rhs[23]=crhs24*(GPtangent2[0]*crhs21 + GPtangent2[1]*crhs22 + GPtangent2[2]*crhs23);
    rhs[24]=crhs28*(GPnormal[0]*crhs25 + GPnormal[1]*crhs26 + GPnormal[2]*crhs27);
    rhs[25]=crhs28*(GPtangent1[0]*crhs25 + GPtangent1[1]*crhs26 + GPtangent1[2]*crhs27);
    rhs[26]=crhs28*(GPtangent2[0]*crhs25 + GPtangent2[1]*crhs26 + GPtangent2[2]*crhs27);

    
    return rhs;
}

    /***********************************************************************************/
    /***********************************************************************************/
    
    static inline array_1d<double,27> ComputeGaussPointStickRHS(
        const array_1d<double,3> N1, 
        const array_1d<double,3> N2, 
        const array_1d<double,3> Phi, 
        const double detJ, 
        const double mu, 
        const ContactData<3,3>& rContactData,
        const double& augmented_normal_lm,
        const double& augmented_tangent_lm,
        const double& integration_point_gap,
        const double& integration_point_slip
        )
{
    array_1d<double,27> rhs;
    
    const bounded_matrix<double, 3,3> normalslave     = rContactData.Normal_s;
    const bounded_matrix<double, 3,3> tan1slave       = rContactData.Tangent_xi_s;
    const bounded_matrix<double, 3,3> tan2slave       = rContactData.Tangent_eta_s;
//     const bounded_matrix<double, 3,3> lm              = rContactData.LagrangeMultipliers;
    const double Dt              = rContactData.Dt;
//     const double epsilon_normal  = rContactData.epsilon_normal;
//     const double epsilon_tangent = rContactData.epsilon_tangent;
    
    const array_1d<double,3> GPnormal     = prod(trans(normalslave), N1);
    const array_1d<double,3> GPtangent1   = prod(trans(tan1slave), N1);
    const array_1d<double,3> GPtangent2   = prod(trans(tan2slave), N1);
    
    const bounded_matrix<double, 3,3> v1 = rContactData.v1;
    const bounded_matrix<double, 3,3> v2 = rContactData.v2;
    
    const double crhs0 =     1.0/Dt;
    const double crhs1 =     detJ; // DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs2 =     crhs0*crhs1*Phi[0]; // CRHS0*CRHS1*PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs3 =     tan1slave(0,0); // TAN1SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs4 =     tan1slave(1,0); // TAN1SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs5 =     tan1slave(2,0); // TAN1SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs6 =     N2[0]; // N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
    const double crhs7 =     N2[1]; // N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
    const double crhs8 =     N2[2]; // N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
    const double crhs9 =     N1[0]*(Dt*v1(0,0)) + N1[1]*(Dt*v1(1,0)) + N1[2]*(Dt*v1(2,0)) - crhs6*(Dt*v2(0,0)) - crhs7*(Dt*v2(1,0)) - crhs8*(Dt*v2(2,0));
    const double crhs10 =     tan1slave(0,1); // TAN1SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs11 =     tan1slave(1,1); // TAN1SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs12 =     tan1slave(2,1); // TAN1SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs13 =     N1[0]*(Dt*v1(0,1)) + N1[1]*(Dt*v1(1,1)) + N1[2]*(Dt*v1(2,1)) - crhs6*(Dt*v2(0,1)) - crhs7*(Dt*v2(1,1)) - crhs8*(Dt*v2(2,1));
    const double crhs14 =     tan1slave(0,2); // TAN1SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs15 =     tan1slave(1,2); // TAN1SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs16 =     tan1slave(2,2); // TAN1SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs17 =     N1[0]*(Dt*v1(0,2)) + N1[1]*(Dt*v1(1,2)) + N1[2]*(Dt*v1(2,2)) - crhs6*(Dt*v2(0,2)) - crhs7*(Dt*v2(1,2)) - crhs8*(Dt*v2(2,2));
    const double crhs18 =     crhs13*(N1[0]*crhs10 + N1[1]*crhs11 + N1[2]*crhs12) + crhs17*(N1[0]*crhs14 + N1[1]*crhs15 + N1[2]*crhs16) + crhs9*(N1[0]*crhs3 + N1[1]*crhs4 + N1[2]*crhs5);
    const double crhs19 =     tan2slave(0,0); // TAN2SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs20 =     tan2slave(1,0); // TAN2SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs21 =     tan2slave(2,0); // TAN2SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs22 =     tan2slave(0,1); // TAN2SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs23 =     tan2slave(1,1); // TAN2SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs24 =     tan2slave(2,1); // TAN2SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs25 =     tan2slave(0,2); // TAN2SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs26 =     tan2slave(1,2); // TAN2SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs27 =     tan2slave(2,2); // TAN2SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs28 =     crhs13*(N1[0]*crhs22 + N1[1]*crhs23 + N1[2]*crhs24) + crhs17*(N1[0]*crhs25 + N1[1]*crhs26 + N1[2]*crhs27) + crhs9*(N1[0]*crhs19 + N1[1]*crhs20 + N1[2]*crhs21);
    const double crhs29 =     crhs18*crhs3 + crhs19*crhs28;
    const double crhs30 =     crhs10*crhs18 + crhs22*crhs28;
    const double crhs31 =     crhs14*crhs18 + crhs25*crhs28;
    const double crhs32 =     crhs0*crhs1*Phi[1]; // CRHS0*CRHS1*PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs33 =     crhs18*crhs4 + crhs20*crhs28;
    const double crhs34 =     crhs11*crhs18 + crhs23*crhs28;
    const double crhs35 =     crhs15*crhs18 + crhs26*crhs28;
    const double crhs36 =     crhs0*crhs1*Phi[2]; // CRHS0*CRHS1*PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs37 =     crhs18*crhs5 + crhs21*crhs28;
    const double crhs38 =     crhs12*crhs18 + crhs24*crhs28;
    const double crhs39 =     crhs16*crhs18 + crhs27*crhs28;

    rhs[0]=0;
    rhs[1]=0;
    rhs[2]=0;
    rhs[3]=0;
    rhs[4]=0;
    rhs[5]=0;
    rhs[6]=0;
    rhs[7]=0;
    rhs[8]=0;
    rhs[9]=0;
    rhs[10]=0;
    rhs[11]=0;
    rhs[12]=0;
    rhs[13]=0;
    rhs[14]=0;
    rhs[15]=0;
    rhs[16]=0;
    rhs[17]=0;
    rhs[18]=-crhs2*(GPnormal[0]*crhs29 + GPnormal[1]*crhs30 + GPnormal[2]*crhs31);
    rhs[19]=-crhs2*(GPtangent1[0]*crhs29 + GPtangent1[1]*crhs30 + GPtangent1[2]*crhs31);
    rhs[20]=-crhs2*(GPtangent2[0]*crhs29 + GPtangent2[1]*crhs30 + GPtangent2[2]*crhs31);
    rhs[21]=-crhs32*(GPnormal[0]*crhs33 + GPnormal[1]*crhs34 + GPnormal[2]*crhs35);
    rhs[22]=-crhs32*(GPtangent1[0]*crhs33 + GPtangent1[1]*crhs34 + GPtangent1[2]*crhs35);
    rhs[23]=-crhs32*(GPtangent2[0]*crhs33 + GPtangent2[1]*crhs34 + GPtangent2[2]*crhs35);
    rhs[24]=-crhs36*(GPnormal[0]*crhs37 + GPnormal[1]*crhs38 + GPnormal[2]*crhs39);
    rhs[25]=-crhs36*(GPtangent1[0]*crhs37 + GPtangent1[1]*crhs38 + GPtangent1[2]*crhs39);
    rhs[26]=-crhs36*(GPtangent2[0]*crhs37 + GPtangent2[1]*crhs38 + GPtangent2[2]*crhs39);

    
    return rhs;
}

    /***********************************************************************************/
    /***********************************************************************************/
    
    static inline array_1d<double,27> ComputeGaussPointSlipRHS(
        const array_1d<double,3> N1, 
        const array_1d<double,3> N2, 
        const array_1d<double,3> Phi, 
        const double detJ, 
        const double mu, 
        const ContactData<3,3>& rContactData,
        const double& augmented_normal_lm,
        const double& augmented_tangent_lm,
        const double& integration_point_gap,
        const double& integration_point_slip
        )
{
    array_1d<double,27> rhs;
    
    const bounded_matrix<double, 3,3> normalslave     = rContactData.Normal_s;
    const bounded_matrix<double, 3,3> tan1slave       = rContactData.Tangent_xi_s;
    const bounded_matrix<double, 3,3> tan2slave       = rContactData.Tangent_eta_s;
//     const bounded_matrix<double, 3,3> lm              = rContactData.LagrangeMultipliers;
    const double Dt              = rContactData.Dt;
//     const double epsilon_normal  = rContactData.epsilon_normal;
//     const double epsilon_tangent = rContactData.epsilon_tangent;
    
    const array_1d<double,3> GPnormal     = prod(trans(normalslave), N1);
    const array_1d<double,3> GPtangent1   = prod(trans(tan1slave), N1);
    const array_1d<double,3> GPtangent2   = prod(trans(tan2slave), N1);
    
//     const double sign_tangpress = boost::math::sign(augmented_tangent_lm);
    
    const bounded_matrix<double, 3,3> v1 = rContactData.v1;
    const bounded_matrix<double, 3,3> v2 = rContactData.v2;
    
    const double crhs0 =     1.0/Dt;
    const double crhs1 =     detJ; // DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs2 =     crhs0*crhs1*Phi[0]; // CRHS0*CRHS1*PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs3 =     tan1slave(0,0); // TAN1SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs4 =     tan1slave(1,0); // TAN1SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs5 =     tan1slave(2,0); // TAN1SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs6 =     N2[0]; // N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
    const double crhs7 =     N2[1]; // N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
    const double crhs8 =     N2[2]; // N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
    const double crhs9 =     N1[0]*(Dt*v1(0,0)) + N1[1]*(Dt*v1(1,0)) + N1[2]*(Dt*v1(2,0)) - crhs6*(Dt*v2(0,0)) - crhs7*(Dt*v2(1,0)) - crhs8*(Dt*v2(2,0));
    const double crhs10 =     tan1slave(0,1); // TAN1SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs11 =     tan1slave(1,1); // TAN1SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs12 =     tan1slave(2,1); // TAN1SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs13 =     N1[0]*(Dt*v1(0,1)) + N1[1]*(Dt*v1(1,1)) + N1[2]*(Dt*v1(2,1)) - crhs6*(Dt*v2(0,1)) - crhs7*(Dt*v2(1,1)) - crhs8*(Dt*v2(2,1));
    const double crhs14 =     tan1slave(0,2); // TAN1SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs15 =     tan1slave(1,2); // TAN1SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs16 =     tan1slave(2,2); // TAN1SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs17 =     N1[0]*(Dt*v1(0,2)) + N1[1]*(Dt*v1(1,2)) + N1[2]*(Dt*v1(2,2)) - crhs6*(Dt*v2(0,2)) - crhs7*(Dt*v2(1,2)) - crhs8*(Dt*v2(2,2));
    const double crhs18 =     crhs13*(N1[0]*crhs10 + N1[1]*crhs11 + N1[2]*crhs12) + crhs17*(N1[0]*crhs14 + N1[1]*crhs15 + N1[2]*crhs16) + crhs9*(N1[0]*crhs3 + N1[1]*crhs4 + N1[2]*crhs5);
    const double crhs19 =     tan2slave(0,0); // TAN2SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs20 =     tan2slave(1,0); // TAN2SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs21 =     tan2slave(2,0); // TAN2SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs22 =     tan2slave(0,1); // TAN2SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs23 =     tan2slave(1,1); // TAN2SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs24 =     tan2slave(2,1); // TAN2SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs25 =     tan2slave(0,2); // TAN2SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs26 =     tan2slave(1,2); // TAN2SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs27 =     tan2slave(2,2); // TAN2SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs28 =     crhs13*(N1[0]*crhs22 + N1[1]*crhs23 + N1[2]*crhs24) + crhs17*(N1[0]*crhs25 + N1[1]*crhs26 + N1[2]*crhs27) + crhs9*(N1[0]*crhs19 + N1[1]*crhs20 + N1[2]*crhs21);
    const double crhs29 =     crhs18*crhs3 + crhs19*crhs28;
    const double crhs30 =     crhs10*crhs18 + crhs22*crhs28;
    const double crhs31 =     crhs14*crhs18 + crhs25*crhs28;
    const double crhs32 =     crhs0*crhs1*Phi[1]; // CRHS0*CRHS1*PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs33 =     crhs18*crhs4 + crhs20*crhs28;
    const double crhs34 =     crhs11*crhs18 + crhs23*crhs28;
    const double crhs35 =     crhs15*crhs18 + crhs26*crhs28;
    const double crhs36 =     crhs0*crhs1*Phi[2]; // CRHS0*CRHS1*PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs37 =     crhs18*crhs5 + crhs21*crhs28;
    const double crhs38 =     crhs12*crhs18 + crhs24*crhs28;
    const double crhs39 =     crhs16*crhs18 + crhs27*crhs28;

    rhs[0]=0;
    rhs[1]=0;
    rhs[2]=0;
    rhs[3]=0;
    rhs[4]=0;
    rhs[5]=0;
    rhs[6]=0;
    rhs[7]=0;
    rhs[8]=0;
    rhs[9]=0;
    rhs[10]=0;
    rhs[11]=0;
    rhs[12]=0;
    rhs[13]=0;
    rhs[14]=0;
    rhs[15]=0;
    rhs[16]=0;
    rhs[17]=0;
    rhs[18]=-crhs2*(GPnormal[0]*crhs29 + GPnormal[1]*crhs30 + GPnormal[2]*crhs31);
    rhs[19]=-crhs2*(GPtangent1[0]*crhs29 + GPtangent1[1]*crhs30 + GPtangent1[2]*crhs31);
    rhs[20]=-crhs2*(GPtangent2[0]*crhs29 + GPtangent2[1]*crhs30 + GPtangent2[2]*crhs31);
    rhs[21]=-crhs32*(GPnormal[0]*crhs33 + GPnormal[1]*crhs34 + GPnormal[2]*crhs35);
    rhs[22]=-crhs32*(GPtangent1[0]*crhs33 + GPtangent1[1]*crhs34 + GPtangent1[2]*crhs35);
    rhs[23]=-crhs32*(GPtangent2[0]*crhs33 + GPtangent2[1]*crhs34 + GPtangent2[2]*crhs35);
    rhs[24]=-crhs36*(GPnormal[0]*crhs37 + GPnormal[1]*crhs38 + GPnormal[2]*crhs39);
    rhs[25]=-crhs36*(GPtangent1[0]*crhs37 + GPtangent1[1]*crhs38 + GPtangent1[2]*crhs39);
    rhs[26]=-crhs36*(GPtangent2[0]*crhs37 + GPtangent2[1]*crhs38 + GPtangent2[2]*crhs39);

    
    return rhs;
}

//     /***********************************************************************************/
//     /***********************************************************************************/
//     
//     static inline array_1d<double,27> ComputeGaussPointInactiveRHS(
//         const array_1d<double,3> N1, 
//         const array_1d<double,3> N2, 
//         const array_1d<double,3> Phi, 
//         const double detJ, 
//         const ContactData<3,3>& rContactData,
//         const double& augmented_normal_lm,
//         const double& augmented_tangent_lm,
//         const double& integration_point_gap,
//         const double& integration_point_slip
//         )
// {
//     array_1d<double,27> rhs;
//     
//     const bounded_matrix<double, 3,3> normalslave     = rContactData.Normal_s;
//     const bounded_matrix<double, 3,3> tan1slave       = rContactData.Tangent_xi_s;
//     const bounded_matrix<double, 3,3> tan2slave       = rContactData.Tangent_eta_s;
//     const bounded_matrix<double, 3,3> lm              = rContactData.LagrangeMultipliers;
//     const double Dt              = rContactData.Dt;
//     const double epsilon_normal  = rContactData.epsilon_normal;
//     const double epsilon_tangent = rContactData.epsilon_tangent;
//     
//     const array_1d<double,3> GPnormal     = prod(trans(normalslave), N1);
//     const array_1d<double,3> GPtangent1   = prod(trans(tan1slave), N1);
//     const array_1d<double,3> GPtangent2   = prod(trans(tan2slave), N1);
// 
//     const bounded_matrix<double, 3,3> v1 = rContactData.v1;
//     const bounded_matrix<double, 3,3> v2 = rContactData.v2;
//     
// //substitute_inactive_rhs
//     
//     return rhs;
// }

private:
};// class Contact3D3N3N
}
#endif /* KRATOS_CONTACT3D3N3N defined */
