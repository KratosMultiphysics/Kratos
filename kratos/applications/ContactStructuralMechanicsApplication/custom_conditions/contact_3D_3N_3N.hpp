// KRATOS  ___|  |       |       |
//       \___ \  __|  __| |   |  __| __| |   |  __| _` | |
//           | |   |    |   | (    |   |   | |   (   | |
//       _____/ \__|_|   \__,_|\___|\__|\__,_|_|  \__,_|_| MECHANICS
//
//  License: BSD License
//   license: structural_mechanics_application/license.txt
//
//  Main authors:    Vicente Mataix Ferr√°ndiz
//

#if !defined(KRATOS_CONTACT3D3N3N)
#define KRATOS_CONTACT3D3N3N

// System includes

// External includes

// Project includes
#include "custom_conditions/mortar_contact_condition.h"
#include "custom_utilities/contact_utilities.h"
#include "structural_mechanics_application.h"
#include "structural_mechanics_application_variables.h"

namespace Kratos 
{
    ///@name Kratos Globals
    ///@{

    ///@}
    ///@name Type Definitions
    ///@{
        
    typedef Point<3>                                  PointType;
    typedef Node<3>                                    NodeType;
    typedef Geometry<NodeType>                     GeometryType;
        
    ///@}
    ///@name  Enum's
    ///@{

    ///@}
    ///@name  Functions
    ///@{

    ///@}
    ///@name Kratos Classes
    ///@{
        
class Contact3D3N3N
{
public:
    
    static inline bounded_matrix<double,27,27> ComputeGaussPointLHSInternalContribution(
        const Vector N1, 
        const Vector N2, 
        const Vector Phi, 
        const double J, 
        const ContactData& rContactData
        )
{
    bounded_matrix<double,27,27> lhs;

    const double clhs0 =             J*N2[0];
const double clhs1 =             Phi[0]*clhs0;
const double clhs2 =             Phi[1]*clhs0;
const double clhs3 =             Phi[2]*clhs0;
const double clhs4 =             J*N2[1];
const double clhs5 =             Phi[0]*clhs4;
const double clhs6 =             Phi[1]*clhs4;
const double clhs7 =             Phi[2]*clhs4;
const double clhs8 =             J*N2[2];
const double clhs9 =             Phi[0]*clhs8;
const double clhs10 =             Phi[1]*clhs8;
const double clhs11 =             Phi[2]*clhs8;
const double clhs12 =             J*N1[0];
const double clhs13 =             -Phi[0]*clhs12;
const double clhs14 =             -Phi[1]*clhs12;
const double clhs15 =             -Phi[2]*clhs12;
const double clhs16 =             J*N1[1];
const double clhs17 =             -Phi[0]*clhs16;
const double clhs18 =             -Phi[1]*clhs16;
const double clhs19 =             -Phi[2]*clhs16;
const double clhs20 =             J*N1[2];
const double clhs21 =             -Phi[0]*clhs20;
const double clhs22 =             -Phi[1]*clhs20;
const double clhs23 =             -Phi[2]*clhs20;
            lhs(0,0)=0;
            lhs(0,1)=0;
            lhs(0,2)=0;
            lhs(0,3)=0;
            lhs(0,4)=0;
            lhs(0,5)=0;
            lhs(0,6)=0;
            lhs(0,7)=0;
            lhs(0,8)=0;
            lhs(0,9)=0;
            lhs(0,10)=0;
            lhs(0,11)=0;
            lhs(0,12)=0;
            lhs(0,13)=0;
            lhs(0,14)=0;
            lhs(0,15)=0;
            lhs(0,16)=0;
            lhs(0,17)=0;
            lhs(0,18)=clhs1;
            lhs(0,19)=0;
            lhs(0,20)=0;
            lhs(0,21)=clhs2;
            lhs(0,22)=0;
            lhs(0,23)=0;
            lhs(0,24)=clhs3;
            lhs(0,25)=0;
            lhs(0,26)=0;
            lhs(1,0)=0;
            lhs(1,1)=0;
            lhs(1,2)=0;
            lhs(1,3)=0;
            lhs(1,4)=0;
            lhs(1,5)=0;
            lhs(1,6)=0;
            lhs(1,7)=0;
            lhs(1,8)=0;
            lhs(1,9)=0;
            lhs(1,10)=0;
            lhs(1,11)=0;
            lhs(1,12)=0;
            lhs(1,13)=0;
            lhs(1,14)=0;
            lhs(1,15)=0;
            lhs(1,16)=0;
            lhs(1,17)=0;
            lhs(1,18)=0;
            lhs(1,19)=clhs1;
            lhs(1,20)=0;
            lhs(1,21)=0;
            lhs(1,22)=clhs2;
            lhs(1,23)=0;
            lhs(1,24)=0;
            lhs(1,25)=clhs3;
            lhs(1,26)=0;
            lhs(2,0)=0;
            lhs(2,1)=0;
            lhs(2,2)=0;
            lhs(2,3)=0;
            lhs(2,4)=0;
            lhs(2,5)=0;
            lhs(2,6)=0;
            lhs(2,7)=0;
            lhs(2,8)=0;
            lhs(2,9)=0;
            lhs(2,10)=0;
            lhs(2,11)=0;
            lhs(2,12)=0;
            lhs(2,13)=0;
            lhs(2,14)=0;
            lhs(2,15)=0;
            lhs(2,16)=0;
            lhs(2,17)=0;
            lhs(2,18)=0;
            lhs(2,19)=0;
            lhs(2,20)=clhs1;
            lhs(2,21)=0;
            lhs(2,22)=0;
            lhs(2,23)=clhs2;
            lhs(2,24)=0;
            lhs(2,25)=0;
            lhs(2,26)=clhs3;
            lhs(3,0)=0;
            lhs(3,1)=0;
            lhs(3,2)=0;
            lhs(3,3)=0;
            lhs(3,4)=0;
            lhs(3,5)=0;
            lhs(3,6)=0;
            lhs(3,7)=0;
            lhs(3,8)=0;
            lhs(3,9)=0;
            lhs(3,10)=0;
            lhs(3,11)=0;
            lhs(3,12)=0;
            lhs(3,13)=0;
            lhs(3,14)=0;
            lhs(3,15)=0;
            lhs(3,16)=0;
            lhs(3,17)=0;
            lhs(3,18)=clhs5;
            lhs(3,19)=0;
            lhs(3,20)=0;
            lhs(3,21)=clhs6;
            lhs(3,22)=0;
            lhs(3,23)=0;
            lhs(3,24)=clhs7;
            lhs(3,25)=0;
            lhs(3,26)=0;
            lhs(4,0)=0;
            lhs(4,1)=0;
            lhs(4,2)=0;
            lhs(4,3)=0;
            lhs(4,4)=0;
            lhs(4,5)=0;
            lhs(4,6)=0;
            lhs(4,7)=0;
            lhs(4,8)=0;
            lhs(4,9)=0;
            lhs(4,10)=0;
            lhs(4,11)=0;
            lhs(4,12)=0;
            lhs(4,13)=0;
            lhs(4,14)=0;
            lhs(4,15)=0;
            lhs(4,16)=0;
            lhs(4,17)=0;
            lhs(4,18)=0;
            lhs(4,19)=clhs5;
            lhs(4,20)=0;
            lhs(4,21)=0;
            lhs(4,22)=clhs6;
            lhs(4,23)=0;
            lhs(4,24)=0;
            lhs(4,25)=clhs7;
            lhs(4,26)=0;
            lhs(5,0)=0;
            lhs(5,1)=0;
            lhs(5,2)=0;
            lhs(5,3)=0;
            lhs(5,4)=0;
            lhs(5,5)=0;
            lhs(5,6)=0;
            lhs(5,7)=0;
            lhs(5,8)=0;
            lhs(5,9)=0;
            lhs(5,10)=0;
            lhs(5,11)=0;
            lhs(5,12)=0;
            lhs(5,13)=0;
            lhs(5,14)=0;
            lhs(5,15)=0;
            lhs(5,16)=0;
            lhs(5,17)=0;
            lhs(5,18)=0;
            lhs(5,19)=0;
            lhs(5,20)=clhs5;
            lhs(5,21)=0;
            lhs(5,22)=0;
            lhs(5,23)=clhs6;
            lhs(5,24)=0;
            lhs(5,25)=0;
            lhs(5,26)=clhs7;
            lhs(6,0)=0;
            lhs(6,1)=0;
            lhs(6,2)=0;
            lhs(6,3)=0;
            lhs(6,4)=0;
            lhs(6,5)=0;
            lhs(6,6)=0;
            lhs(6,7)=0;
            lhs(6,8)=0;
            lhs(6,9)=0;
            lhs(6,10)=0;
            lhs(6,11)=0;
            lhs(6,12)=0;
            lhs(6,13)=0;
            lhs(6,14)=0;
            lhs(6,15)=0;
            lhs(6,16)=0;
            lhs(6,17)=0;
            lhs(6,18)=clhs9;
            lhs(6,19)=0;
            lhs(6,20)=0;
            lhs(6,21)=clhs10;
            lhs(6,22)=0;
            lhs(6,23)=0;
            lhs(6,24)=clhs11;
            lhs(6,25)=0;
            lhs(6,26)=0;
            lhs(7,0)=0;
            lhs(7,1)=0;
            lhs(7,2)=0;
            lhs(7,3)=0;
            lhs(7,4)=0;
            lhs(7,5)=0;
            lhs(7,6)=0;
            lhs(7,7)=0;
            lhs(7,8)=0;
            lhs(7,9)=0;
            lhs(7,10)=0;
            lhs(7,11)=0;
            lhs(7,12)=0;
            lhs(7,13)=0;
            lhs(7,14)=0;
            lhs(7,15)=0;
            lhs(7,16)=0;
            lhs(7,17)=0;
            lhs(7,18)=0;
            lhs(7,19)=clhs9;
            lhs(7,20)=0;
            lhs(7,21)=0;
            lhs(7,22)=clhs10;
            lhs(7,23)=0;
            lhs(7,24)=0;
            lhs(7,25)=clhs11;
            lhs(7,26)=0;
            lhs(8,0)=0;
            lhs(8,1)=0;
            lhs(8,2)=0;
            lhs(8,3)=0;
            lhs(8,4)=0;
            lhs(8,5)=0;
            lhs(8,6)=0;
            lhs(8,7)=0;
            lhs(8,8)=0;
            lhs(8,9)=0;
            lhs(8,10)=0;
            lhs(8,11)=0;
            lhs(8,12)=0;
            lhs(8,13)=0;
            lhs(8,14)=0;
            lhs(8,15)=0;
            lhs(8,16)=0;
            lhs(8,17)=0;
            lhs(8,18)=0;
            lhs(8,19)=0;
            lhs(8,20)=clhs9;
            lhs(8,21)=0;
            lhs(8,22)=0;
            lhs(8,23)=clhs10;
            lhs(8,24)=0;
            lhs(8,25)=0;
            lhs(8,26)=clhs11;
            lhs(9,0)=0;
            lhs(9,1)=0;
            lhs(9,2)=0;
            lhs(9,3)=0;
            lhs(9,4)=0;
            lhs(9,5)=0;
            lhs(9,6)=0;
            lhs(9,7)=0;
            lhs(9,8)=0;
            lhs(9,9)=0;
            lhs(9,10)=0;
            lhs(9,11)=0;
            lhs(9,12)=0;
            lhs(9,13)=0;
            lhs(9,14)=0;
            lhs(9,15)=0;
            lhs(9,16)=0;
            lhs(9,17)=0;
            lhs(9,18)=clhs13;
            lhs(9,19)=0;
            lhs(9,20)=0;
            lhs(9,21)=clhs14;
            lhs(9,22)=0;
            lhs(9,23)=0;
            lhs(9,24)=clhs15;
            lhs(9,25)=0;
            lhs(9,26)=0;
            lhs(10,0)=0;
            lhs(10,1)=0;
            lhs(10,2)=0;
            lhs(10,3)=0;
            lhs(10,4)=0;
            lhs(10,5)=0;
            lhs(10,6)=0;
            lhs(10,7)=0;
            lhs(10,8)=0;
            lhs(10,9)=0;
            lhs(10,10)=0;
            lhs(10,11)=0;
            lhs(10,12)=0;
            lhs(10,13)=0;
            lhs(10,14)=0;
            lhs(10,15)=0;
            lhs(10,16)=0;
            lhs(10,17)=0;
            lhs(10,18)=0;
            lhs(10,19)=clhs13;
            lhs(10,20)=0;
            lhs(10,21)=0;
            lhs(10,22)=clhs14;
            lhs(10,23)=0;
            lhs(10,24)=0;
            lhs(10,25)=clhs15;
            lhs(10,26)=0;
            lhs(11,0)=0;
            lhs(11,1)=0;
            lhs(11,2)=0;
            lhs(11,3)=0;
            lhs(11,4)=0;
            lhs(11,5)=0;
            lhs(11,6)=0;
            lhs(11,7)=0;
            lhs(11,8)=0;
            lhs(11,9)=0;
            lhs(11,10)=0;
            lhs(11,11)=0;
            lhs(11,12)=0;
            lhs(11,13)=0;
            lhs(11,14)=0;
            lhs(11,15)=0;
            lhs(11,16)=0;
            lhs(11,17)=0;
            lhs(11,18)=0;
            lhs(11,19)=0;
            lhs(11,20)=clhs13;
            lhs(11,21)=0;
            lhs(11,22)=0;
            lhs(11,23)=clhs14;
            lhs(11,24)=0;
            lhs(11,25)=0;
            lhs(11,26)=clhs15;
            lhs(12,0)=0;
            lhs(12,1)=0;
            lhs(12,2)=0;
            lhs(12,3)=0;
            lhs(12,4)=0;
            lhs(12,5)=0;
            lhs(12,6)=0;
            lhs(12,7)=0;
            lhs(12,8)=0;
            lhs(12,9)=0;
            lhs(12,10)=0;
            lhs(12,11)=0;
            lhs(12,12)=0;
            lhs(12,13)=0;
            lhs(12,14)=0;
            lhs(12,15)=0;
            lhs(12,16)=0;
            lhs(12,17)=0;
            lhs(12,18)=clhs17;
            lhs(12,19)=0;
            lhs(12,20)=0;
            lhs(12,21)=clhs18;
            lhs(12,22)=0;
            lhs(12,23)=0;
            lhs(12,24)=clhs19;
            lhs(12,25)=0;
            lhs(12,26)=0;
            lhs(13,0)=0;
            lhs(13,1)=0;
            lhs(13,2)=0;
            lhs(13,3)=0;
            lhs(13,4)=0;
            lhs(13,5)=0;
            lhs(13,6)=0;
            lhs(13,7)=0;
            lhs(13,8)=0;
            lhs(13,9)=0;
            lhs(13,10)=0;
            lhs(13,11)=0;
            lhs(13,12)=0;
            lhs(13,13)=0;
            lhs(13,14)=0;
            lhs(13,15)=0;
            lhs(13,16)=0;
            lhs(13,17)=0;
            lhs(13,18)=0;
            lhs(13,19)=clhs17;
            lhs(13,20)=0;
            lhs(13,21)=0;
            lhs(13,22)=clhs18;
            lhs(13,23)=0;
            lhs(13,24)=0;
            lhs(13,25)=clhs19;
            lhs(13,26)=0;
            lhs(14,0)=0;
            lhs(14,1)=0;
            lhs(14,2)=0;
            lhs(14,3)=0;
            lhs(14,4)=0;
            lhs(14,5)=0;
            lhs(14,6)=0;
            lhs(14,7)=0;
            lhs(14,8)=0;
            lhs(14,9)=0;
            lhs(14,10)=0;
            lhs(14,11)=0;
            lhs(14,12)=0;
            lhs(14,13)=0;
            lhs(14,14)=0;
            lhs(14,15)=0;
            lhs(14,16)=0;
            lhs(14,17)=0;
            lhs(14,18)=0;
            lhs(14,19)=0;
            lhs(14,20)=clhs17;
            lhs(14,21)=0;
            lhs(14,22)=0;
            lhs(14,23)=clhs18;
            lhs(14,24)=0;
            lhs(14,25)=0;
            lhs(14,26)=clhs19;
            lhs(15,0)=0;
            lhs(15,1)=0;
            lhs(15,2)=0;
            lhs(15,3)=0;
            lhs(15,4)=0;
            lhs(15,5)=0;
            lhs(15,6)=0;
            lhs(15,7)=0;
            lhs(15,8)=0;
            lhs(15,9)=0;
            lhs(15,10)=0;
            lhs(15,11)=0;
            lhs(15,12)=0;
            lhs(15,13)=0;
            lhs(15,14)=0;
            lhs(15,15)=0;
            lhs(15,16)=0;
            lhs(15,17)=0;
            lhs(15,18)=clhs21;
            lhs(15,19)=0;
            lhs(15,20)=0;
            lhs(15,21)=clhs22;
            lhs(15,22)=0;
            lhs(15,23)=0;
            lhs(15,24)=clhs23;
            lhs(15,25)=0;
            lhs(15,26)=0;
            lhs(16,0)=0;
            lhs(16,1)=0;
            lhs(16,2)=0;
            lhs(16,3)=0;
            lhs(16,4)=0;
            lhs(16,5)=0;
            lhs(16,6)=0;
            lhs(16,7)=0;
            lhs(16,8)=0;
            lhs(16,9)=0;
            lhs(16,10)=0;
            lhs(16,11)=0;
            lhs(16,12)=0;
            lhs(16,13)=0;
            lhs(16,14)=0;
            lhs(16,15)=0;
            lhs(16,16)=0;
            lhs(16,17)=0;
            lhs(16,18)=0;
            lhs(16,19)=clhs21;
            lhs(16,20)=0;
            lhs(16,21)=0;
            lhs(16,22)=clhs22;
            lhs(16,23)=0;
            lhs(16,24)=0;
            lhs(16,25)=clhs23;
            lhs(16,26)=0;
            lhs(17,0)=0;
            lhs(17,1)=0;
            lhs(17,2)=0;
            lhs(17,3)=0;
            lhs(17,4)=0;
            lhs(17,5)=0;
            lhs(17,6)=0;
            lhs(17,7)=0;
            lhs(17,8)=0;
            lhs(17,9)=0;
            lhs(17,10)=0;
            lhs(17,11)=0;
            lhs(17,12)=0;
            lhs(17,13)=0;
            lhs(17,14)=0;
            lhs(17,15)=0;
            lhs(17,16)=0;
            lhs(17,17)=0;
            lhs(17,18)=0;
            lhs(17,19)=0;
            lhs(17,20)=clhs21;
            lhs(17,21)=0;
            lhs(17,22)=0;
            lhs(17,23)=clhs22;
            lhs(17,24)=0;
            lhs(17,25)=0;
            lhs(17,26)=clhs23;
            lhs(18,0)=0;
            lhs(18,1)=0;
            lhs(18,2)=0;
            lhs(18,3)=0;
            lhs(18,4)=0;
            lhs(18,5)=0;
            lhs(18,6)=0;
            lhs(18,7)=0;
            lhs(18,8)=0;
            lhs(18,9)=0;
            lhs(18,10)=0;
            lhs(18,11)=0;
            lhs(18,12)=0;
            lhs(18,13)=0;
            lhs(18,14)=0;
            lhs(18,15)=0;
            lhs(18,16)=0;
            lhs(18,17)=0;
            lhs(18,18)=0;
            lhs(18,19)=0;
            lhs(18,20)=0;
            lhs(18,21)=0;
            lhs(18,22)=0;
            lhs(18,23)=0;
            lhs(18,24)=0;
            lhs(18,25)=0;
            lhs(18,26)=0;
            lhs(19,0)=0;
            lhs(19,1)=0;
            lhs(19,2)=0;
            lhs(19,3)=0;
            lhs(19,4)=0;
            lhs(19,5)=0;
            lhs(19,6)=0;
            lhs(19,7)=0;
            lhs(19,8)=0;
            lhs(19,9)=0;
            lhs(19,10)=0;
            lhs(19,11)=0;
            lhs(19,12)=0;
            lhs(19,13)=0;
            lhs(19,14)=0;
            lhs(19,15)=0;
            lhs(19,16)=0;
            lhs(19,17)=0;
            lhs(19,18)=0;
            lhs(19,19)=0;
            lhs(19,20)=0;
            lhs(19,21)=0;
            lhs(19,22)=0;
            lhs(19,23)=0;
            lhs(19,24)=0;
            lhs(19,25)=0;
            lhs(19,26)=0;
            lhs(20,0)=0;
            lhs(20,1)=0;
            lhs(20,2)=0;
            lhs(20,3)=0;
            lhs(20,4)=0;
            lhs(20,5)=0;
            lhs(20,6)=0;
            lhs(20,7)=0;
            lhs(20,8)=0;
            lhs(20,9)=0;
            lhs(20,10)=0;
            lhs(20,11)=0;
            lhs(20,12)=0;
            lhs(20,13)=0;
            lhs(20,14)=0;
            lhs(20,15)=0;
            lhs(20,16)=0;
            lhs(20,17)=0;
            lhs(20,18)=0;
            lhs(20,19)=0;
            lhs(20,20)=0;
            lhs(20,21)=0;
            lhs(20,22)=0;
            lhs(20,23)=0;
            lhs(20,24)=0;
            lhs(20,25)=0;
            lhs(20,26)=0;
            lhs(21,0)=0;
            lhs(21,1)=0;
            lhs(21,2)=0;
            lhs(21,3)=0;
            lhs(21,4)=0;
            lhs(21,5)=0;
            lhs(21,6)=0;
            lhs(21,7)=0;
            lhs(21,8)=0;
            lhs(21,9)=0;
            lhs(21,10)=0;
            lhs(21,11)=0;
            lhs(21,12)=0;
            lhs(21,13)=0;
            lhs(21,14)=0;
            lhs(21,15)=0;
            lhs(21,16)=0;
            lhs(21,17)=0;
            lhs(21,18)=0;
            lhs(21,19)=0;
            lhs(21,20)=0;
            lhs(21,21)=0;
            lhs(21,22)=0;
            lhs(21,23)=0;
            lhs(21,24)=0;
            lhs(21,25)=0;
            lhs(21,26)=0;
            lhs(22,0)=0;
            lhs(22,1)=0;
            lhs(22,2)=0;
            lhs(22,3)=0;
            lhs(22,4)=0;
            lhs(22,5)=0;
            lhs(22,6)=0;
            lhs(22,7)=0;
            lhs(22,8)=0;
            lhs(22,9)=0;
            lhs(22,10)=0;
            lhs(22,11)=0;
            lhs(22,12)=0;
            lhs(22,13)=0;
            lhs(22,14)=0;
            lhs(22,15)=0;
            lhs(22,16)=0;
            lhs(22,17)=0;
            lhs(22,18)=0;
            lhs(22,19)=0;
            lhs(22,20)=0;
            lhs(22,21)=0;
            lhs(22,22)=0;
            lhs(22,23)=0;
            lhs(22,24)=0;
            lhs(22,25)=0;
            lhs(22,26)=0;
            lhs(23,0)=0;
            lhs(23,1)=0;
            lhs(23,2)=0;
            lhs(23,3)=0;
            lhs(23,4)=0;
            lhs(23,5)=0;
            lhs(23,6)=0;
            lhs(23,7)=0;
            lhs(23,8)=0;
            lhs(23,9)=0;
            lhs(23,10)=0;
            lhs(23,11)=0;
            lhs(23,12)=0;
            lhs(23,13)=0;
            lhs(23,14)=0;
            lhs(23,15)=0;
            lhs(23,16)=0;
            lhs(23,17)=0;
            lhs(23,18)=0;
            lhs(23,19)=0;
            lhs(23,20)=0;
            lhs(23,21)=0;
            lhs(23,22)=0;
            lhs(23,23)=0;
            lhs(23,24)=0;
            lhs(23,25)=0;
            lhs(23,26)=0;
            lhs(24,0)=0;
            lhs(24,1)=0;
            lhs(24,2)=0;
            lhs(24,3)=0;
            lhs(24,4)=0;
            lhs(24,5)=0;
            lhs(24,6)=0;
            lhs(24,7)=0;
            lhs(24,8)=0;
            lhs(24,9)=0;
            lhs(24,10)=0;
            lhs(24,11)=0;
            lhs(24,12)=0;
            lhs(24,13)=0;
            lhs(24,14)=0;
            lhs(24,15)=0;
            lhs(24,16)=0;
            lhs(24,17)=0;
            lhs(24,18)=0;
            lhs(24,19)=0;
            lhs(24,20)=0;
            lhs(24,21)=0;
            lhs(24,22)=0;
            lhs(24,23)=0;
            lhs(24,24)=0;
            lhs(24,25)=0;
            lhs(24,26)=0;
            lhs(25,0)=0;
            lhs(25,1)=0;
            lhs(25,2)=0;
            lhs(25,3)=0;
            lhs(25,4)=0;
            lhs(25,5)=0;
            lhs(25,6)=0;
            lhs(25,7)=0;
            lhs(25,8)=0;
            lhs(25,9)=0;
            lhs(25,10)=0;
            lhs(25,11)=0;
            lhs(25,12)=0;
            lhs(25,13)=0;
            lhs(25,14)=0;
            lhs(25,15)=0;
            lhs(25,16)=0;
            lhs(25,17)=0;
            lhs(25,18)=0;
            lhs(25,19)=0;
            lhs(25,20)=0;
            lhs(25,21)=0;
            lhs(25,22)=0;
            lhs(25,23)=0;
            lhs(25,24)=0;
            lhs(25,25)=0;
            lhs(25,26)=0;
            lhs(26,0)=0;
            lhs(26,1)=0;
            lhs(26,2)=0;
            lhs(26,3)=0;
            lhs(26,4)=0;
            lhs(26,5)=0;
            lhs(26,6)=0;
            lhs(26,7)=0;
            lhs(26,8)=0;
            lhs(26,9)=0;
            lhs(26,10)=0;
            lhs(26,11)=0;
            lhs(26,12)=0;
            lhs(26,13)=0;
            lhs(26,14)=0;
            lhs(26,15)=0;
            lhs(26,16)=0;
            lhs(26,17)=0;
            lhs(26,18)=0;
            lhs(26,19)=0;
            lhs(26,20)=0;
            lhs(26,21)=0;
            lhs(26,22)=0;
            lhs(26,23)=0;
            lhs(26,24)=0;
            lhs(26,25)=0;
            lhs(26,26)=0;

    
    return lhs;
}

    /***********************************************************************************/
    /***********************************************************************************/
    
    static inline bounded_matrix<double,27,27> ComputeGaussPointLHSContactContribution(
        const Vector N1, 
        const Vector N2, 
        const Vector Phi, 
        const double J, 
        const ContactData& rContactData
        )
{
    bounded_matrix<double,27,27> lhs;
    
    const Matrix normalmaster = rContactData.NormalsMaster;
    const Matrix normalslave  = rContactData.NormalsSlave;
    const Matrix tan1slave    = rContactData.Tangent1Slave;
    const Matrix tan2slave    = rContactData.Tangent2Slave;
    const Matrix lm           = rContactData.LagrangeMultipliers;
    const double Dt           = rContactData.Dt;
    
    const Matrix X1 = GetCoordinates(rContactData, rContactData.SlaveGeometry, false);
    const Matrix X2 = GetCoordinates(rContactData, rContactData.MasterGeometry, false);
    const Matrix x1 = GetCoordinates(rContactData, rContactData.SlaveGeometry, true);
    const Matrix x2 = GetCoordinates(rContactData, rContactData.MasterGeometry, true);
    const Matrix u1 = GetVariableMatrix(rContactData, DISPLACEMENT, 0, rContactData.SlaveGeometry);
    const Matrix u2 = GetVariableMatrix(rContactData, DISPLACEMENT, 0, rContactData.MasterGeometry);
    const Matrix u1previous = GetVariableMatrix(rContactData, DISPLACEMENT, 1, rContactData.SlaveGeometry);
    const Matrix u2previous = GetVariableMatrix(rContactData, DISPLACEMENT, 1, rContactData.MasterGeometry);
    const Matrix v1 = GetVariableMatrix(rContactData, VELOCITY, 0, rContactData.SlaveGeometry); // TODO: Replace with the Bossak velocity
    const Matrix v2 = GetVariableMatrix(rContactData, VELOCITY, 0, rContactData.MasterGeometry);

    const double clhs0 =             1.0/Dt;
const double clhs1 =             J*N2[0]*Phi[0]*clhs0;
const double clhs2 =             N1[0]*tan1slave(0,0) + N1[1]*tan1slave(1,0) + N1[2]*tan1slave(2,0);
const double clhs3 =             N1[0]*tan2slave(0,0) + N1[1]*tan2slave(1,0) + N1[2]*tan2slave(2,0);
const double clhs4 =             Dt*normalslave(0,0);
const double clhs5 =             N1[0]*normalslave(0,0) + N1[1]*normalslave(1,0) + N1[2]*normalslave(2,0);
const double clhs6 =             clhs2*tan1slave(0,0) + clhs3*tan2slave(0,0) + clhs4*clhs5;
const double clhs7 =             N1[0]*tan1slave(0,1) + N1[1]*tan1slave(1,1) + N1[2]*tan1slave(2,1);
const double clhs8 =             N1[0]*tan2slave(0,1) + N1[1]*tan2slave(1,1) + N1[2]*tan2slave(2,1);
const double clhs9 =             N1[0]*normalslave(0,1) + N1[1]*normalslave(1,1) + N1[2]*normalslave(2,1);
const double clhs10 =             clhs4*clhs9 + clhs7*tan1slave(0,0) + clhs8*tan2slave(0,0);
const double clhs11 =             N1[0]*tan1slave(0,2) + N1[1]*tan1slave(1,2) + N1[2]*tan1slave(2,2);
const double clhs12 =             N1[0]*tan2slave(0,2) + N1[1]*tan2slave(1,2) + N1[2]*tan2slave(2,2);
const double clhs13 =             N1[0]*normalslave(0,2) + N1[1]*normalslave(1,2) + N1[2]*normalslave(2,2);
const double clhs14 =             clhs11*tan1slave(0,0) + clhs12*tan2slave(0,0) + clhs13*clhs4;
const double clhs15 =             J*N2[1]*Phi[0]*clhs0;
const double clhs16 =             J*N2[2]*Phi[0]*clhs0;
const double clhs17 =             J*N1[0]*Phi[0]*clhs0;
const double clhs18 =             J*N1[1]*Phi[0]*clhs0;
const double clhs19 =             J*N1[2]*Phi[0]*clhs0;
const double clhs20 =             Dt*normalslave(0,1);
const double clhs21 =             clhs2*tan1slave(0,1) + clhs20*clhs5 + clhs3*tan2slave(0,1);
const double clhs22 =             clhs20*clhs9 + clhs7*tan1slave(0,1) + clhs8*tan2slave(0,1);
const double clhs23 =             clhs11*tan1slave(0,1) + clhs12*tan2slave(0,1) + clhs13*clhs20;
const double clhs24 =             Dt*normalslave(0,2);
const double clhs25 =             clhs2*tan1slave(0,2) + clhs24*clhs5 + clhs3*tan2slave(0,2);
const double clhs26 =             clhs24*clhs9 + clhs7*tan1slave(0,2) + clhs8*tan2slave(0,2);
const double clhs27 =             clhs11*tan1slave(0,2) + clhs12*tan2slave(0,2) + clhs13*clhs24;
const double clhs28 =             J*N2[0]*Phi[1]*clhs0;
const double clhs29 =             Dt*normalslave(1,0);
const double clhs30 =             clhs2*tan1slave(1,0) + clhs29*clhs5 + clhs3*tan2slave(1,0);
const double clhs31 =             clhs29*clhs9 + clhs7*tan1slave(1,0) + clhs8*tan2slave(1,0);
const double clhs32 =             clhs11*tan1slave(1,0) + clhs12*tan2slave(1,0) + clhs13*clhs29;
const double clhs33 =             J*N2[1]*Phi[1]*clhs0;
const double clhs34 =             J*N2[2]*Phi[1]*clhs0;
const double clhs35 =             J*N1[0]*Phi[1]*clhs0;
const double clhs36 =             J*N1[1]*Phi[1]*clhs0;
const double clhs37 =             J*N1[2]*Phi[1]*clhs0;
const double clhs38 =             Dt*normalslave(1,1);
const double clhs39 =             clhs2*tan1slave(1,1) + clhs3*tan2slave(1,1) + clhs38*clhs5;
const double clhs40 =             clhs38*clhs9 + clhs7*tan1slave(1,1) + clhs8*tan2slave(1,1);
const double clhs41 =             clhs11*tan1slave(1,1) + clhs12*tan2slave(1,1) + clhs13*clhs38;
const double clhs42 =             Dt*normalslave(1,2);
const double clhs43 =             clhs2*tan1slave(1,2) + clhs3*tan2slave(1,2) + clhs42*clhs5;
const double clhs44 =             clhs42*clhs9 + clhs7*tan1slave(1,2) + clhs8*tan2slave(1,2);
const double clhs45 =             clhs11*tan1slave(1,2) + clhs12*tan2slave(1,2) + clhs13*clhs42;
const double clhs46 =             J*N2[0]*Phi[2]*clhs0;
const double clhs47 =             Dt*normalslave(2,0);
const double clhs48 =             clhs2*tan1slave(2,0) + clhs3*tan2slave(2,0) + clhs47*clhs5;
const double clhs49 =             clhs47*clhs9 + clhs7*tan1slave(2,0) + clhs8*tan2slave(2,0);
const double clhs50 =             clhs11*tan1slave(2,0) + clhs12*tan2slave(2,0) + clhs13*clhs47;
const double clhs51 =             J*N2[1]*Phi[2]*clhs0;
const double clhs52 =             J*N2[2]*Phi[2]*clhs0;
const double clhs53 =             J*N1[0]*Phi[2]*clhs0;
const double clhs54 =             J*N1[1]*Phi[2]*clhs0;
const double clhs55 =             J*N1[2]*Phi[2]*clhs0;
const double clhs56 =             Dt*normalslave(2,1);
const double clhs57 =             clhs2*tan1slave(2,1) + clhs3*tan2slave(2,1) + clhs5*clhs56;
const double clhs58 =             clhs56*clhs9 + clhs7*tan1slave(2,1) + clhs8*tan2slave(2,1);
const double clhs59 =             clhs11*tan1slave(2,1) + clhs12*tan2slave(2,1) + clhs13*clhs56;
const double clhs60 =             Dt*normalslave(2,2);
const double clhs61 =             clhs2*tan1slave(2,2) + clhs3*tan2slave(2,2) + clhs5*clhs60;
const double clhs62 =             clhs60*clhs9 + clhs7*tan1slave(2,2) + clhs8*tan2slave(2,2);
const double clhs63 =             clhs11*tan1slave(2,2) + clhs12*tan2slave(2,2) + clhs13*clhs60;
            lhs(0,0)=0;
            lhs(0,1)=0;
            lhs(0,2)=0;
            lhs(0,3)=0;
            lhs(0,4)=0;
            lhs(0,5)=0;
            lhs(0,6)=0;
            lhs(0,7)=0;
            lhs(0,8)=0;
            lhs(0,9)=0;
            lhs(0,10)=0;
            lhs(0,11)=0;
            lhs(0,12)=0;
            lhs(0,13)=0;
            lhs(0,14)=0;
            lhs(0,15)=0;
            lhs(0,16)=0;
            lhs(0,17)=0;
            lhs(0,18)=0;
            lhs(0,19)=0;
            lhs(0,20)=0;
            lhs(0,21)=0;
            lhs(0,22)=0;
            lhs(0,23)=0;
            lhs(0,24)=0;
            lhs(0,25)=0;
            lhs(0,26)=0;
            lhs(1,0)=0;
            lhs(1,1)=0;
            lhs(1,2)=0;
            lhs(1,3)=0;
            lhs(1,4)=0;
            lhs(1,5)=0;
            lhs(1,6)=0;
            lhs(1,7)=0;
            lhs(1,8)=0;
            lhs(1,9)=0;
            lhs(1,10)=0;
            lhs(1,11)=0;
            lhs(1,12)=0;
            lhs(1,13)=0;
            lhs(1,14)=0;
            lhs(1,15)=0;
            lhs(1,16)=0;
            lhs(1,17)=0;
            lhs(1,18)=0;
            lhs(1,19)=0;
            lhs(1,20)=0;
            lhs(1,21)=0;
            lhs(1,22)=0;
            lhs(1,23)=0;
            lhs(1,24)=0;
            lhs(1,25)=0;
            lhs(1,26)=0;
            lhs(2,0)=0;
            lhs(2,1)=0;
            lhs(2,2)=0;
            lhs(2,3)=0;
            lhs(2,4)=0;
            lhs(2,5)=0;
            lhs(2,6)=0;
            lhs(2,7)=0;
            lhs(2,8)=0;
            lhs(2,9)=0;
            lhs(2,10)=0;
            lhs(2,11)=0;
            lhs(2,12)=0;
            lhs(2,13)=0;
            lhs(2,14)=0;
            lhs(2,15)=0;
            lhs(2,16)=0;
            lhs(2,17)=0;
            lhs(2,18)=0;
            lhs(2,19)=0;
            lhs(2,20)=0;
            lhs(2,21)=0;
            lhs(2,22)=0;
            lhs(2,23)=0;
            lhs(2,24)=0;
            lhs(2,25)=0;
            lhs(2,26)=0;
            lhs(3,0)=0;
            lhs(3,1)=0;
            lhs(3,2)=0;
            lhs(3,3)=0;
            lhs(3,4)=0;
            lhs(3,5)=0;
            lhs(3,6)=0;
            lhs(3,7)=0;
            lhs(3,8)=0;
            lhs(3,9)=0;
            lhs(3,10)=0;
            lhs(3,11)=0;
            lhs(3,12)=0;
            lhs(3,13)=0;
            lhs(3,14)=0;
            lhs(3,15)=0;
            lhs(3,16)=0;
            lhs(3,17)=0;
            lhs(3,18)=0;
            lhs(3,19)=0;
            lhs(3,20)=0;
            lhs(3,21)=0;
            lhs(3,22)=0;
            lhs(3,23)=0;
            lhs(3,24)=0;
            lhs(3,25)=0;
            lhs(3,26)=0;
            lhs(4,0)=0;
            lhs(4,1)=0;
            lhs(4,2)=0;
            lhs(4,3)=0;
            lhs(4,4)=0;
            lhs(4,5)=0;
            lhs(4,6)=0;
            lhs(4,7)=0;
            lhs(4,8)=0;
            lhs(4,9)=0;
            lhs(4,10)=0;
            lhs(4,11)=0;
            lhs(4,12)=0;
            lhs(4,13)=0;
            lhs(4,14)=0;
            lhs(4,15)=0;
            lhs(4,16)=0;
            lhs(4,17)=0;
            lhs(4,18)=0;
            lhs(4,19)=0;
            lhs(4,20)=0;
            lhs(4,21)=0;
            lhs(4,22)=0;
            lhs(4,23)=0;
            lhs(4,24)=0;
            lhs(4,25)=0;
            lhs(4,26)=0;
            lhs(5,0)=0;
            lhs(5,1)=0;
            lhs(5,2)=0;
            lhs(5,3)=0;
            lhs(5,4)=0;
            lhs(5,5)=0;
            lhs(5,6)=0;
            lhs(5,7)=0;
            lhs(5,8)=0;
            lhs(5,9)=0;
            lhs(5,10)=0;
            lhs(5,11)=0;
            lhs(5,12)=0;
            lhs(5,13)=0;
            lhs(5,14)=0;
            lhs(5,15)=0;
            lhs(5,16)=0;
            lhs(5,17)=0;
            lhs(5,18)=0;
            lhs(5,19)=0;
            lhs(5,20)=0;
            lhs(5,21)=0;
            lhs(5,22)=0;
            lhs(5,23)=0;
            lhs(5,24)=0;
            lhs(5,25)=0;
            lhs(5,26)=0;
            lhs(6,0)=0;
            lhs(6,1)=0;
            lhs(6,2)=0;
            lhs(6,3)=0;
            lhs(6,4)=0;
            lhs(6,5)=0;
            lhs(6,6)=0;
            lhs(6,7)=0;
            lhs(6,8)=0;
            lhs(6,9)=0;
            lhs(6,10)=0;
            lhs(6,11)=0;
            lhs(6,12)=0;
            lhs(6,13)=0;
            lhs(6,14)=0;
            lhs(6,15)=0;
            lhs(6,16)=0;
            lhs(6,17)=0;
            lhs(6,18)=0;
            lhs(6,19)=0;
            lhs(6,20)=0;
            lhs(6,21)=0;
            lhs(6,22)=0;
            lhs(6,23)=0;
            lhs(6,24)=0;
            lhs(6,25)=0;
            lhs(6,26)=0;
            lhs(7,0)=0;
            lhs(7,1)=0;
            lhs(7,2)=0;
            lhs(7,3)=0;
            lhs(7,4)=0;
            lhs(7,5)=0;
            lhs(7,6)=0;
            lhs(7,7)=0;
            lhs(7,8)=0;
            lhs(7,9)=0;
            lhs(7,10)=0;
            lhs(7,11)=0;
            lhs(7,12)=0;
            lhs(7,13)=0;
            lhs(7,14)=0;
            lhs(7,15)=0;
            lhs(7,16)=0;
            lhs(7,17)=0;
            lhs(7,18)=0;
            lhs(7,19)=0;
            lhs(7,20)=0;
            lhs(7,21)=0;
            lhs(7,22)=0;
            lhs(7,23)=0;
            lhs(7,24)=0;
            lhs(7,25)=0;
            lhs(7,26)=0;
            lhs(8,0)=0;
            lhs(8,1)=0;
            lhs(8,2)=0;
            lhs(8,3)=0;
            lhs(8,4)=0;
            lhs(8,5)=0;
            lhs(8,6)=0;
            lhs(8,7)=0;
            lhs(8,8)=0;
            lhs(8,9)=0;
            lhs(8,10)=0;
            lhs(8,11)=0;
            lhs(8,12)=0;
            lhs(8,13)=0;
            lhs(8,14)=0;
            lhs(8,15)=0;
            lhs(8,16)=0;
            lhs(8,17)=0;
            lhs(8,18)=0;
            lhs(8,19)=0;
            lhs(8,20)=0;
            lhs(8,21)=0;
            lhs(8,22)=0;
            lhs(8,23)=0;
            lhs(8,24)=0;
            lhs(8,25)=0;
            lhs(8,26)=0;
            lhs(9,0)=0;
            lhs(9,1)=0;
            lhs(9,2)=0;
            lhs(9,3)=0;
            lhs(9,4)=0;
            lhs(9,5)=0;
            lhs(9,6)=0;
            lhs(9,7)=0;
            lhs(9,8)=0;
            lhs(9,9)=0;
            lhs(9,10)=0;
            lhs(9,11)=0;
            lhs(9,12)=0;
            lhs(9,13)=0;
            lhs(9,14)=0;
            lhs(9,15)=0;
            lhs(9,16)=0;
            lhs(9,17)=0;
            lhs(9,18)=0;
            lhs(9,19)=0;
            lhs(9,20)=0;
            lhs(9,21)=0;
            lhs(9,22)=0;
            lhs(9,23)=0;
            lhs(9,24)=0;
            lhs(9,25)=0;
            lhs(9,26)=0;
            lhs(10,0)=0;
            lhs(10,1)=0;
            lhs(10,2)=0;
            lhs(10,3)=0;
            lhs(10,4)=0;
            lhs(10,5)=0;
            lhs(10,6)=0;
            lhs(10,7)=0;
            lhs(10,8)=0;
            lhs(10,9)=0;
            lhs(10,10)=0;
            lhs(10,11)=0;
            lhs(10,12)=0;
            lhs(10,13)=0;
            lhs(10,14)=0;
            lhs(10,15)=0;
            lhs(10,16)=0;
            lhs(10,17)=0;
            lhs(10,18)=0;
            lhs(10,19)=0;
            lhs(10,20)=0;
            lhs(10,21)=0;
            lhs(10,22)=0;
            lhs(10,23)=0;
            lhs(10,24)=0;
            lhs(10,25)=0;
            lhs(10,26)=0;
            lhs(11,0)=0;
            lhs(11,1)=0;
            lhs(11,2)=0;
            lhs(11,3)=0;
            lhs(11,4)=0;
            lhs(11,5)=0;
            lhs(11,6)=0;
            lhs(11,7)=0;
            lhs(11,8)=0;
            lhs(11,9)=0;
            lhs(11,10)=0;
            lhs(11,11)=0;
            lhs(11,12)=0;
            lhs(11,13)=0;
            lhs(11,14)=0;
            lhs(11,15)=0;
            lhs(11,16)=0;
            lhs(11,17)=0;
            lhs(11,18)=0;
            lhs(11,19)=0;
            lhs(11,20)=0;
            lhs(11,21)=0;
            lhs(11,22)=0;
            lhs(11,23)=0;
            lhs(11,24)=0;
            lhs(11,25)=0;
            lhs(11,26)=0;
            lhs(12,0)=0;
            lhs(12,1)=0;
            lhs(12,2)=0;
            lhs(12,3)=0;
            lhs(12,4)=0;
            lhs(12,5)=0;
            lhs(12,6)=0;
            lhs(12,7)=0;
            lhs(12,8)=0;
            lhs(12,9)=0;
            lhs(12,10)=0;
            lhs(12,11)=0;
            lhs(12,12)=0;
            lhs(12,13)=0;
            lhs(12,14)=0;
            lhs(12,15)=0;
            lhs(12,16)=0;
            lhs(12,17)=0;
            lhs(12,18)=0;
            lhs(12,19)=0;
            lhs(12,20)=0;
            lhs(12,21)=0;
            lhs(12,22)=0;
            lhs(12,23)=0;
            lhs(12,24)=0;
            lhs(12,25)=0;
            lhs(12,26)=0;
            lhs(13,0)=0;
            lhs(13,1)=0;
            lhs(13,2)=0;
            lhs(13,3)=0;
            lhs(13,4)=0;
            lhs(13,5)=0;
            lhs(13,6)=0;
            lhs(13,7)=0;
            lhs(13,8)=0;
            lhs(13,9)=0;
            lhs(13,10)=0;
            lhs(13,11)=0;
            lhs(13,12)=0;
            lhs(13,13)=0;
            lhs(13,14)=0;
            lhs(13,15)=0;
            lhs(13,16)=0;
            lhs(13,17)=0;
            lhs(13,18)=0;
            lhs(13,19)=0;
            lhs(13,20)=0;
            lhs(13,21)=0;
            lhs(13,22)=0;
            lhs(13,23)=0;
            lhs(13,24)=0;
            lhs(13,25)=0;
            lhs(13,26)=0;
            lhs(14,0)=0;
            lhs(14,1)=0;
            lhs(14,2)=0;
            lhs(14,3)=0;
            lhs(14,4)=0;
            lhs(14,5)=0;
            lhs(14,6)=0;
            lhs(14,7)=0;
            lhs(14,8)=0;
            lhs(14,9)=0;
            lhs(14,10)=0;
            lhs(14,11)=0;
            lhs(14,12)=0;
            lhs(14,13)=0;
            lhs(14,14)=0;
            lhs(14,15)=0;
            lhs(14,16)=0;
            lhs(14,17)=0;
            lhs(14,18)=0;
            lhs(14,19)=0;
            lhs(14,20)=0;
            lhs(14,21)=0;
            lhs(14,22)=0;
            lhs(14,23)=0;
            lhs(14,24)=0;
            lhs(14,25)=0;
            lhs(14,26)=0;
            lhs(15,0)=0;
            lhs(15,1)=0;
            lhs(15,2)=0;
            lhs(15,3)=0;
            lhs(15,4)=0;
            lhs(15,5)=0;
            lhs(15,6)=0;
            lhs(15,7)=0;
            lhs(15,8)=0;
            lhs(15,9)=0;
            lhs(15,10)=0;
            lhs(15,11)=0;
            lhs(15,12)=0;
            lhs(15,13)=0;
            lhs(15,14)=0;
            lhs(15,15)=0;
            lhs(15,16)=0;
            lhs(15,17)=0;
            lhs(15,18)=0;
            lhs(15,19)=0;
            lhs(15,20)=0;
            lhs(15,21)=0;
            lhs(15,22)=0;
            lhs(15,23)=0;
            lhs(15,24)=0;
            lhs(15,25)=0;
            lhs(15,26)=0;
            lhs(16,0)=0;
            lhs(16,1)=0;
            lhs(16,2)=0;
            lhs(16,3)=0;
            lhs(16,4)=0;
            lhs(16,5)=0;
            lhs(16,6)=0;
            lhs(16,7)=0;
            lhs(16,8)=0;
            lhs(16,9)=0;
            lhs(16,10)=0;
            lhs(16,11)=0;
            lhs(16,12)=0;
            lhs(16,13)=0;
            lhs(16,14)=0;
            lhs(16,15)=0;
            lhs(16,16)=0;
            lhs(16,17)=0;
            lhs(16,18)=0;
            lhs(16,19)=0;
            lhs(16,20)=0;
            lhs(16,21)=0;
            lhs(16,22)=0;
            lhs(16,23)=0;
            lhs(16,24)=0;
            lhs(16,25)=0;
            lhs(16,26)=0;
            lhs(17,0)=0;
            lhs(17,1)=0;
            lhs(17,2)=0;
            lhs(17,3)=0;
            lhs(17,4)=0;
            lhs(17,5)=0;
            lhs(17,6)=0;
            lhs(17,7)=0;
            lhs(17,8)=0;
            lhs(17,9)=0;
            lhs(17,10)=0;
            lhs(17,11)=0;
            lhs(17,12)=0;
            lhs(17,13)=0;
            lhs(17,14)=0;
            lhs(17,15)=0;
            lhs(17,16)=0;
            lhs(17,17)=0;
            lhs(17,18)=0;
            lhs(17,19)=0;
            lhs(17,20)=0;
            lhs(17,21)=0;
            lhs(17,22)=0;
            lhs(17,23)=0;
            lhs(17,24)=0;
            lhs(17,25)=0;
            lhs(17,26)=0;
            lhs(18,0)=-clhs1*clhs6;
            lhs(18,1)=-clhs1*clhs10;
            lhs(18,2)=-clhs1*clhs14;
            lhs(18,3)=-clhs15*clhs6;
            lhs(18,4)=-clhs10*clhs15;
            lhs(18,5)=-clhs14*clhs15;
            lhs(18,6)=-clhs16*clhs6;
            lhs(18,7)=-clhs10*clhs16;
            lhs(18,8)=-clhs14*clhs16;
            lhs(18,9)=clhs17*clhs6;
            lhs(18,10)=clhs10*clhs17;
            lhs(18,11)=clhs14*clhs17;
            lhs(18,12)=clhs18*clhs6;
            lhs(18,13)=clhs10*clhs18;
            lhs(18,14)=clhs14*clhs18;
            lhs(18,15)=clhs19*clhs6;
            lhs(18,16)=clhs10*clhs19;
            lhs(18,17)=clhs14*clhs19;
            lhs(18,18)=0;
            lhs(18,19)=0;
            lhs(18,20)=0;
            lhs(18,21)=0;
            lhs(18,22)=0;
            lhs(18,23)=0;
            lhs(18,24)=0;
            lhs(18,25)=0;
            lhs(18,26)=0;
            lhs(19,0)=-clhs1*clhs21;
            lhs(19,1)=-clhs1*clhs22;
            lhs(19,2)=-clhs1*clhs23;
            lhs(19,3)=-clhs15*clhs21;
            lhs(19,4)=-clhs15*clhs22;
            lhs(19,5)=-clhs15*clhs23;
            lhs(19,6)=-clhs16*clhs21;
            lhs(19,7)=-clhs16*clhs22;
            lhs(19,8)=-clhs16*clhs23;
            lhs(19,9)=clhs17*clhs21;
            lhs(19,10)=clhs17*clhs22;
            lhs(19,11)=clhs17*clhs23;
            lhs(19,12)=clhs18*clhs21;
            lhs(19,13)=clhs18*clhs22;
            lhs(19,14)=clhs18*clhs23;
            lhs(19,15)=clhs19*clhs21;
            lhs(19,16)=clhs19*clhs22;
            lhs(19,17)=clhs19*clhs23;
            lhs(19,18)=0;
            lhs(19,19)=0;
            lhs(19,20)=0;
            lhs(19,21)=0;
            lhs(19,22)=0;
            lhs(19,23)=0;
            lhs(19,24)=0;
            lhs(19,25)=0;
            lhs(19,26)=0;
            lhs(20,0)=-clhs1*clhs25;
            lhs(20,1)=-clhs1*clhs26;
            lhs(20,2)=-clhs1*clhs27;
            lhs(20,3)=-clhs15*clhs25;
            lhs(20,4)=-clhs15*clhs26;
            lhs(20,5)=-clhs15*clhs27;
            lhs(20,6)=-clhs16*clhs25;
            lhs(20,7)=-clhs16*clhs26;
            lhs(20,8)=-clhs16*clhs27;
            lhs(20,9)=clhs17*clhs25;
            lhs(20,10)=clhs17*clhs26;
            lhs(20,11)=clhs17*clhs27;
            lhs(20,12)=clhs18*clhs25;
            lhs(20,13)=clhs18*clhs26;
            lhs(20,14)=clhs18*clhs27;
            lhs(20,15)=clhs19*clhs25;
            lhs(20,16)=clhs19*clhs26;
            lhs(20,17)=clhs19*clhs27;
            lhs(20,18)=0;
            lhs(20,19)=0;
            lhs(20,20)=0;
            lhs(20,21)=0;
            lhs(20,22)=0;
            lhs(20,23)=0;
            lhs(20,24)=0;
            lhs(20,25)=0;
            lhs(20,26)=0;
            lhs(21,0)=-clhs28*clhs30;
            lhs(21,1)=-clhs28*clhs31;
            lhs(21,2)=-clhs28*clhs32;
            lhs(21,3)=-clhs30*clhs33;
            lhs(21,4)=-clhs31*clhs33;
            lhs(21,5)=-clhs32*clhs33;
            lhs(21,6)=-clhs30*clhs34;
            lhs(21,7)=-clhs31*clhs34;
            lhs(21,8)=-clhs32*clhs34;
            lhs(21,9)=clhs30*clhs35;
            lhs(21,10)=clhs31*clhs35;
            lhs(21,11)=clhs32*clhs35;
            lhs(21,12)=clhs30*clhs36;
            lhs(21,13)=clhs31*clhs36;
            lhs(21,14)=clhs32*clhs36;
            lhs(21,15)=clhs30*clhs37;
            lhs(21,16)=clhs31*clhs37;
            lhs(21,17)=clhs32*clhs37;
            lhs(21,18)=0;
            lhs(21,19)=0;
            lhs(21,20)=0;
            lhs(21,21)=0;
            lhs(21,22)=0;
            lhs(21,23)=0;
            lhs(21,24)=0;
            lhs(21,25)=0;
            lhs(21,26)=0;
            lhs(22,0)=-clhs28*clhs39;
            lhs(22,1)=-clhs28*clhs40;
            lhs(22,2)=-clhs28*clhs41;
            lhs(22,3)=-clhs33*clhs39;
            lhs(22,4)=-clhs33*clhs40;
            lhs(22,5)=-clhs33*clhs41;
            lhs(22,6)=-clhs34*clhs39;
            lhs(22,7)=-clhs34*clhs40;
            lhs(22,8)=-clhs34*clhs41;
            lhs(22,9)=clhs35*clhs39;
            lhs(22,10)=clhs35*clhs40;
            lhs(22,11)=clhs35*clhs41;
            lhs(22,12)=clhs36*clhs39;
            lhs(22,13)=clhs36*clhs40;
            lhs(22,14)=clhs36*clhs41;
            lhs(22,15)=clhs37*clhs39;
            lhs(22,16)=clhs37*clhs40;
            lhs(22,17)=clhs37*clhs41;
            lhs(22,18)=0;
            lhs(22,19)=0;
            lhs(22,20)=0;
            lhs(22,21)=0;
            lhs(22,22)=0;
            lhs(22,23)=0;
            lhs(22,24)=0;
            lhs(22,25)=0;
            lhs(22,26)=0;
            lhs(23,0)=-clhs28*clhs43;
            lhs(23,1)=-clhs28*clhs44;
            lhs(23,2)=-clhs28*clhs45;
            lhs(23,3)=-clhs33*clhs43;
            lhs(23,4)=-clhs33*clhs44;
            lhs(23,5)=-clhs33*clhs45;
            lhs(23,6)=-clhs34*clhs43;
            lhs(23,7)=-clhs34*clhs44;
            lhs(23,8)=-clhs34*clhs45;
            lhs(23,9)=clhs35*clhs43;
            lhs(23,10)=clhs35*clhs44;
            lhs(23,11)=clhs35*clhs45;
            lhs(23,12)=clhs36*clhs43;
            lhs(23,13)=clhs36*clhs44;
            lhs(23,14)=clhs36*clhs45;
            lhs(23,15)=clhs37*clhs43;
            lhs(23,16)=clhs37*clhs44;
            lhs(23,17)=clhs37*clhs45;
            lhs(23,18)=0;
            lhs(23,19)=0;
            lhs(23,20)=0;
            lhs(23,21)=0;
            lhs(23,22)=0;
            lhs(23,23)=0;
            lhs(23,24)=0;
            lhs(23,25)=0;
            lhs(23,26)=0;
            lhs(24,0)=-clhs46*clhs48;
            lhs(24,1)=-clhs46*clhs49;
            lhs(24,2)=-clhs46*clhs50;
            lhs(24,3)=-clhs48*clhs51;
            lhs(24,4)=-clhs49*clhs51;
            lhs(24,5)=-clhs50*clhs51;
            lhs(24,6)=-clhs48*clhs52;
            lhs(24,7)=-clhs49*clhs52;
            lhs(24,8)=-clhs50*clhs52;
            lhs(24,9)=clhs48*clhs53;
            lhs(24,10)=clhs49*clhs53;
            lhs(24,11)=clhs50*clhs53;
            lhs(24,12)=clhs48*clhs54;
            lhs(24,13)=clhs49*clhs54;
            lhs(24,14)=clhs50*clhs54;
            lhs(24,15)=clhs48*clhs55;
            lhs(24,16)=clhs49*clhs55;
            lhs(24,17)=clhs50*clhs55;
            lhs(24,18)=0;
            lhs(24,19)=0;
            lhs(24,20)=0;
            lhs(24,21)=0;
            lhs(24,22)=0;
            lhs(24,23)=0;
            lhs(24,24)=0;
            lhs(24,25)=0;
            lhs(24,26)=0;
            lhs(25,0)=-clhs46*clhs57;
            lhs(25,1)=-clhs46*clhs58;
            lhs(25,2)=-clhs46*clhs59;
            lhs(25,3)=-clhs51*clhs57;
            lhs(25,4)=-clhs51*clhs58;
            lhs(25,5)=-clhs51*clhs59;
            lhs(25,6)=-clhs52*clhs57;
            lhs(25,7)=-clhs52*clhs58;
            lhs(25,8)=-clhs52*clhs59;
            lhs(25,9)=clhs53*clhs57;
            lhs(25,10)=clhs53*clhs58;
            lhs(25,11)=clhs53*clhs59;
            lhs(25,12)=clhs54*clhs57;
            lhs(25,13)=clhs54*clhs58;
            lhs(25,14)=clhs54*clhs59;
            lhs(25,15)=clhs55*clhs57;
            lhs(25,16)=clhs55*clhs58;
            lhs(25,17)=clhs55*clhs59;
            lhs(25,18)=0;
            lhs(25,19)=0;
            lhs(25,20)=0;
            lhs(25,21)=0;
            lhs(25,22)=0;
            lhs(25,23)=0;
            lhs(25,24)=0;
            lhs(25,25)=0;
            lhs(25,26)=0;
            lhs(26,0)=-clhs46*clhs61;
            lhs(26,1)=-clhs46*clhs62;
            lhs(26,2)=-clhs46*clhs63;
            lhs(26,3)=-clhs51*clhs61;
            lhs(26,4)=-clhs51*clhs62;
            lhs(26,5)=-clhs51*clhs63;
            lhs(26,6)=-clhs52*clhs61;
            lhs(26,7)=-clhs52*clhs62;
            lhs(26,8)=-clhs52*clhs63;
            lhs(26,9)=clhs53*clhs61;
            lhs(26,10)=clhs53*clhs62;
            lhs(26,11)=clhs53*clhs63;
            lhs(26,12)=clhs54*clhs61;
            lhs(26,13)=clhs54*clhs62;
            lhs(26,14)=clhs54*clhs63;
            lhs(26,15)=clhs55*clhs61;
            lhs(26,16)=clhs55*clhs62;
            lhs(26,17)=clhs55*clhs63;
            lhs(26,18)=0;
            lhs(26,19)=0;
            lhs(26,20)=0;
            lhs(26,21)=0;
            lhs(26,22)=0;
            lhs(26,23)=0;
            lhs(26,24)=0;
            lhs(26,25)=0;
            lhs(26,26)=0;

    
    return lhs;
}

    /***********************************************************************************/
    /***********************************************************************************/
        
    static inline array_1d<double,27> ComputeGaussPointRHSInternalContribution(
        const Vector N1, 
        const Vector N2, 
        const Vector Phi, 
        const double J, 
        const ContactData& rContactData
        )
{
    array_1d<double,27> rhs;

    const Matrix lm           = rContactData.LagrangeMultipliers;

    const double crhs0 =             J*N2[0];
const double crhs1 =             Phi[0]*lm(0,0) + Phi[1]*lm(1,0) + Phi[2]*lm(2,0);
const double crhs2 =             Phi[0]*lm(0,1) + Phi[1]*lm(1,1) + Phi[2]*lm(2,1);
const double crhs3 =             Phi[0]*lm(0,2) + Phi[1]*lm(1,2) + Phi[2]*lm(2,2);
const double crhs4 =             J*N2[1];
const double crhs5 =             J*N2[2];
const double crhs6 =             J*N1[0];
const double crhs7 =             J*N1[1];
const double crhs8 =             J*N1[2];
            rhs[0]=-crhs0*crhs1;
            rhs[1]=-crhs0*crhs2;
            rhs[2]=-crhs0*crhs3;
            rhs[3]=-crhs1*crhs4;
            rhs[4]=-crhs2*crhs4;
            rhs[5]=-crhs3*crhs4;
            rhs[6]=-crhs1*crhs5;
            rhs[7]=-crhs2*crhs5;
            rhs[8]=-crhs3*crhs5;
            rhs[9]=crhs1*crhs6;
            rhs[10]=crhs2*crhs6;
            rhs[11]=crhs3*crhs6;
            rhs[12]=crhs1*crhs7;
            rhs[13]=crhs2*crhs7;
            rhs[14]=crhs3*crhs7;
            rhs[15]=crhs1*crhs8;
            rhs[16]=crhs2*crhs8;
            rhs[17]=crhs3*crhs8;
            rhs[18]=0;
            rhs[19]=0;
            rhs[20]=0;
            rhs[21]=0;
            rhs[22]=0;
            rhs[23]=0;
            rhs[24]=0;
            rhs[25]=0;
            rhs[26]=0;

    
    return rhs;
}

    /***********************************************************************************/
    /***********************************************************************************/
    
    static inline array_1d<double,27> ComputeGaussPointRHSContactContribution(
        const Vector N1, 
        const Vector N2, 
        const Vector Phi, 
        const double J, 
        const ContactData& rContactData
        )
{
    array_1d<double,27> rhs;
    
    const Matrix lm           = rContactData.LagrangeMultipliers;
    const Matrix normalmaster = rContactData.NormalsMaster;
    const Matrix normalslave  = rContactData.NormalsSlave;
    const Matrix tan1slave    = rContactData.Tangent1Slave;
    const Matrix tan2slave    = rContactData.Tangent2Slave;
    const double Dt           = rContactData.Dt;
    
    const Matrix X1 = GetCoordinates(rContactData, rContactData.SlaveGeometry, false);
    const Matrix X2 = GetCoordinates(rContactData, rContactData.MasterGeometry, false);
    const Matrix x1 = GetCoordinates(rContactData, rContactData.SlaveGeometry, true);
    const Matrix x2 = GetCoordinates(rContactData, rContactData.MasterGeometry, true);
    const Matrix u1 = GetVariableMatrix(rContactData, DISPLACEMENT, 0, rContactData.SlaveGeometry);
    const Matrix u2 = GetVariableMatrix(rContactData, DISPLACEMENT, 0, rContactData.MasterGeometry);
    const Matrix u1previous = GetVariableMatrix(rContactData, DISPLACEMENT, 1, rContactData.SlaveGeometry);
    const Matrix u2previous = GetVariableMatrix(rContactData, DISPLACEMENT, 1, rContactData.MasterGeometry);
    const Matrix v1 = GetVariableMatrix(rContactData, VELOCITY, 0, rContactData.SlaveGeometry); // TODO: Replace with the Bossak velocity
    const Matrix v2 = GetVariableMatrix(rContactData, VELOCITY, 0, rContactData.MasterGeometry);

    const double crhs0 =             1.0/Dt;
const double crhs1 =             J*Phi[0]*crhs0;
const double crhs2 =             Dt*((N1[0]*normalslave(0,0) + N1[1]*normalslave(1,0) + N1[2]*normalslave(2,0))*(N1[0]*(X1(0,0) + u1(0,0)) + N1[1]*(X1(1,0) + u1(1,0)) + N1[2]*(X1(2,0) + u1(2,0)) - N2[0]*(X2(0,0) + u2(0,0)) - N2[1]*(X2(1,0) + u2(1,0)) - N2[2]*(X2(2,0) + u2(2,0))) + (N1[0]*normalslave(0,1) + N1[1]*normalslave(1,1) + N1[2]*normalslave(2,1))*(N1[0]*(X1(0,1) + u1(0,1)) + N1[1]*(X1(1,1) + u1(1,1)) + N1[2]*(X1(2,1) + u1(2,1)) - N2[0]*(X2(0,1) + u2(0,1)) - N2[1]*(X2(1,1) + u2(1,1)) - N2[2]*(X2(2,1) + u2(2,1))) + (N1[0]*normalslave(0,2) + N1[1]*normalslave(1,2) + N1[2]*normalslave(2,2))*(N1[0]*(X1(0,2) + u1(0,2)) + N1[1]*(X1(1,2) + u1(1,2)) + N1[2]*(X1(2,2) + u1(2,2)) - N2[0]*(X2(0,2) + u2(0,2)) - N2[1]*(X2(1,2) + u2(1,2)) - N2[2]*(X2(2,2) + u2(2,2))));
const double crhs3 =             N1[0]*(u1(0,0) - u1previous(0,0)) + N1[1]*(u1(1,0) - u1previous(1,0)) + N1[2]*(u1(2,0) - u1previous(2,0)) - N2[0]*(u2(0,0) - u2previous(0,0)) - N2[1]*(u2(1,0) - u2previous(1,0)) - N2[2]*(u2(2,0) - u2previous(2,0));
const double crhs4 =             N1[0]*(u1(0,1) - u1previous(0,1)) + N1[1]*(u1(1,1) - u1previous(1,1)) + N1[2]*(u1(2,1) - u1previous(2,1)) - N2[0]*(u2(0,1) - u2previous(0,1)) - N2[1]*(u2(1,1) - u2previous(1,1)) - N2[2]*(u2(2,1) - u2previous(2,1));
const double crhs5 =             N1[0]*(u1(0,2) - u1previous(0,2)) + N1[1]*(u1(1,2) - u1previous(1,2)) + N1[2]*(u1(2,2) - u1previous(2,2)) - N2[0]*(u2(0,2) - u2previous(0,2)) - N2[1]*(u2(1,2) - u2previous(1,2)) - N2[2]*(u2(2,2) - u2previous(2,2));
const double crhs6 =             crhs3*(N1[0]*tan1slave(0,0) + N1[1]*tan1slave(1,0) + N1[2]*tan1slave(2,0)) + crhs4*(N1[0]*tan1slave(0,1) + N1[1]*tan1slave(1,1) + N1[2]*tan1slave(2,1)) + crhs5*(N1[0]*tan1slave(0,2) + N1[1]*tan1slave(1,2) + N1[2]*tan1slave(2,2));
const double crhs7 =             crhs3*(N1[0]*tan2slave(0,0) + N1[1]*tan2slave(1,0) + N1[2]*tan2slave(2,0)) + crhs4*(N1[0]*tan2slave(0,1) + N1[1]*tan2slave(1,1) + N1[2]*tan2slave(2,1)) + crhs5*(N1[0]*tan2slave(0,2) + N1[1]*tan2slave(1,2) + N1[2]*tan2slave(2,2));
const double crhs8 =             J*Phi[1]*crhs0;
const double crhs9 =             J*Phi[2]*crhs0;
            rhs[0]=0;
            rhs[1]=0;
            rhs[2]=0;
            rhs[3]=0;
            rhs[4]=0;
            rhs[5]=0;
            rhs[6]=0;
            rhs[7]=0;
            rhs[8]=0;
            rhs[9]=0;
            rhs[10]=0;
            rhs[11]=0;
            rhs[12]=0;
            rhs[13]=0;
            rhs[14]=0;
            rhs[15]=0;
            rhs[16]=0;
            rhs[17]=0;
            rhs[18]=-crhs1*(crhs2*normalslave(0,0) + crhs6*tan1slave(0,0) + crhs7*tan2slave(0,0));
            rhs[19]=-crhs1*(crhs2*normalslave(0,1) + crhs6*tan1slave(0,1) + crhs7*tan2slave(0,1));
            rhs[20]=-crhs1*(crhs2*normalslave(0,2) + crhs6*tan1slave(0,2) + crhs7*tan2slave(0,2));
            rhs[21]=-crhs8*(crhs2*normalslave(1,0) + crhs6*tan1slave(1,0) + crhs7*tan2slave(1,0));
            rhs[22]=-crhs8*(crhs2*normalslave(1,1) + crhs6*tan1slave(1,1) + crhs7*tan2slave(1,1));
            rhs[23]=-crhs8*(crhs2*normalslave(1,2) + crhs6*tan1slave(1,2) + crhs7*tan2slave(1,2));
            rhs[24]=-crhs9*(crhs2*normalslave(2,0) + crhs6*tan1slave(2,0) + crhs7*tan2slave(2,0));
            rhs[25]=-crhs9*(crhs2*normalslave(2,1) + crhs6*tan1slave(2,1) + crhs7*tan2slave(2,1));
            rhs[26]=-crhs9*(crhs2*normalslave(2,2) + crhs6*tan1slave(2,2) + crhs7*tan2slave(2,2));

    
    return rhs;
}

private:
    
    static inline Matrix GetCoordinates(
        const ContactData& rContactData,
        const GeometryType& nodes,
        const bool current
        )
{
    /* DEFINITIONS */    
    const unsigned int dimension = nodes.WorkingSpaceDimension();
    const unsigned int number_of_nodes  =  nodes.PointsNumber( );
    
    Matrix Coordinates(number_of_nodes, dimension);
    
    for (unsigned int iNode = 0; iNode < number_of_nodes; iNode++)
    {
        array_1d<double, 3> coord = nodes[iNode].Coordinates();
        
        if (current == false)
        {
            coord -= nodes[iNode].FastGetSolutionStepValue(DISPLACEMENT, 0);
        }

        for (unsigned int iDof = 0; iDof < dimension; iDof++)
        {
            Coordinates(iNode, iDof) = coord[iDof];
        }
    }
    
    return Coordinates;
}

    /***********************************************************************************/
    /***********************************************************************************/

    static inline Matrix GetVariableMatrix(
        ContactData const & rContactData,
        const Variable<array_1d<double,3> >& rVarName,
        unsigned int step,
        const GeometryType& nodes
        )
{
    /* DEFINITIONS */
    const unsigned int dimension = nodes.WorkingSpaceDimension();
    const unsigned int number_of_nodes  =  nodes.PointsNumber( );
    
    Matrix VarMatrix(number_of_nodes, dimension);
    
    for (unsigned int iNode = 0; iNode < number_of_nodes; iNode++)
    {
        array_1d<double, 3> Value = nodes[iNode].FastGetSolutionStepValue(rVarName, step);
        for (unsigned int iDof = 0; iDof < dimension; iDof++)
        {
            VarMatrix(iNode, iDof) = Value[iDof];
        }
    }
    
    return VarMatrix;
}

};// class Contact3D3N3N
}
#endif /* KRATOS_CONTACT3D3N3N defined */