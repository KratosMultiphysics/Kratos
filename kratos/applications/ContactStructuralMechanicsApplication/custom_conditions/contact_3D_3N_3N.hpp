// KRATOS  ___|  |       |       |
//       \___ \  __|  __| |   |  __| __| |   |  __| _` | |
//           | |   |    |   | (    |   |   | |   (   | |
//       _____/ \__|_|   \__,_|\___|\__|\__,_|_|  \__,_|_| MECHANICS
//
//  License: BSD License
//   license: structural_mechanics_application/license.txt
//
//  Main authors:    Vicente Mataix Ferr√°ndiz
//

#if !defined(KRATOS_CONTACT3D3N3N)
#define KRATOS_CONTACT3D3N3N

// System includes

// External includes

// Project includes
#include "custom_conditions/mortar_contact_condition.h"
#include "custom_utilities/contact_utilities.h"
#include "structural_mechanics_application.h"
#include "structural_mechanics_application_variables.h"
#include <boost/math/special_functions/sign.hpp>

namespace Kratos 
{
    ///@name Kratos Globals
    ///@{

    ///@}
    ///@name Type Definitions
    ///@{
        
    typedef Point<3>                                  PointType;
    typedef Node<3>                                    NodeType;
    typedef Geometry<NodeType>                     GeometryType;
        
    ///@}
    ///@name  Enum's
    ///@{

    ///@}
    ///@name  Functions
    ///@{

    ///@}
    ///@name Kratos Classes
    ///@{
        
class Contact3D3N3N
{
public:
    
    static inline bounded_matrix<double,27,27> ComputeGaussPointFrictionlessLHS(
        const array_1d<double,3> N1, 
        const array_1d<double,3> N2, 
        const array_1d<double,3> Phi, 
        const double detJ, 
        const ContactData<3,3>& rContactData
        )
{
    bounded_matrix<double,27,27> lhs;
    
    const double integration_point_gap = inner_prod(rContactData.Gaps,N1);
    const bounded_matrix<double, 3,3> normalslave = rContactData.Normal_s;
    const bounded_matrix<double, 3,3> tan1slave   = rContactData.Tangent_xi_s;
    const bounded_matrix<double, 3,3> tan2slave   = rContactData.Tangent_eta_s;
    const bounded_matrix<double, 3,3> lm          = rContactData.LagrangeMultipliers;
    
    const std::vector<double> DeltaJs  = rContactData.DeltaJ_s;
    const std::vector<double> DeltaGap = rContactData.DeltaGap;
    const std::vector<array_1d<double,3>> DeltaPhi = rContactData.DeltaPhi;
    const std::vector<array_1d<double,3>> DeltaN2  = rContactData.DeltaN2;
    const std::vector<bounded_matrix<double, 3, 3>> DeltaNormals = rContactData.Delta_Normal_s;
    const std::vector<bounded_matrix<double, 3, 3>> Deltatangentxis  = rContactData.Delta_Tangent_xi_s;
    const std::vector<bounded_matrix<double, 3, 3>> Deltatangentetas = rContactData.Delta_Tangent_eta_s;
    
    const double Dt = rContactData.Dt;
    const bounded_matrix<double, 3, 3> v1 = rContactData.v1;
    const bounded_matrix<double, 3, 3> v2 = rContactData.v2;

    const double clhs0 =     N2[0]; // N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
    const double clhs1 =     DeltaN2[9][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
    const double clhs2 =     detJ; // DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs3 =     Phi[0]; // PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs4 =     Phi[1]; // PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs5 =     Phi[2]; // PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs6 =     clhs3*lm(0,0) + clhs4*lm(1,0) + clhs5*lm(2,0);
    const double clhs7 =     clhs2*clhs6;
    const double clhs8 =     DeltaN2[10][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
    const double clhs9 =     DeltaN2[11][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
    const double clhs10 =     DeltaN2[12][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
    const double clhs11 =     DeltaN2[13][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
    const double clhs12 =     DeltaN2[14][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
    const double clhs13 =     DeltaN2[15][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
    const double clhs14 =     DeltaN2[16][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
    const double clhs15 =     DeltaN2[17][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
    const double clhs16 =     DeltaJs[0]; // DERIVATIVE(DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs17 =     clhs16*clhs6;
    const double clhs18 =     DeltaN2[0][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
    const double clhs19 =     clhs0*clhs2;
    const double clhs20 =     DeltaPhi[0][0]; // DERIVATIVE(PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs21 =     DeltaPhi[0][1]; // DERIVATIVE(PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs22 =     DeltaPhi[0][2]; // DERIVATIVE(PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs23 =     clhs20*lm(0,0) + clhs21*lm(1,0) + clhs22*lm(2,0);
    const double clhs24 =     DeltaJs[1]; // DERIVATIVE(DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs25 =     clhs24*clhs6;
    const double clhs26 =     DeltaN2[1][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
    const double clhs27 =     DeltaPhi[1][0]; // DERIVATIVE(PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs28 =     DeltaPhi[1][1]; // DERIVATIVE(PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs29 =     DeltaPhi[1][2]; // DERIVATIVE(PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs30 =     clhs27*lm(0,0) + clhs28*lm(1,0) + clhs29*lm(2,0);
    const double clhs31 =     DeltaJs[2]; // DERIVATIVE(DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs32 =     clhs31*clhs6;
    const double clhs33 =     DeltaN2[2][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
    const double clhs34 =     DeltaPhi[2][0]; // DERIVATIVE(PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs35 =     DeltaPhi[2][1]; // DERIVATIVE(PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs36 =     DeltaPhi[2][2]; // DERIVATIVE(PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs37 =     clhs34*lm(0,0) + clhs35*lm(1,0) + clhs36*lm(2,0);
    const double clhs38 =     DeltaJs[3]; // DERIVATIVE(DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs39 =     clhs38*clhs6;
    const double clhs40 =     DeltaN2[3][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
    const double clhs41 =     DeltaPhi[3][0]; // DERIVATIVE(PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs42 =     DeltaPhi[3][1]; // DERIVATIVE(PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs43 =     DeltaPhi[3][2]; // DERIVATIVE(PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs44 =     clhs41*lm(0,0) + clhs42*lm(1,0) + clhs43*lm(2,0);
    const double clhs45 =     DeltaJs[4]; // DERIVATIVE(DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs46 =     clhs45*clhs6;
    const double clhs47 =     DeltaN2[4][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
    const double clhs48 =     DeltaPhi[4][0]; // DERIVATIVE(PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs49 =     DeltaPhi[4][1]; // DERIVATIVE(PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs50 =     DeltaPhi[4][2]; // DERIVATIVE(PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs51 =     clhs48*lm(0,0) + clhs49*lm(1,0) + clhs50*lm(2,0);
    const double clhs52 =     DeltaJs[5]; // DERIVATIVE(DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs53 =     clhs52*clhs6;
    const double clhs54 =     DeltaN2[5][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
    const double clhs55 =     DeltaPhi[5][0]; // DERIVATIVE(PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs56 =     DeltaPhi[5][1]; // DERIVATIVE(PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs57 =     DeltaPhi[5][2]; // DERIVATIVE(PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs58 =     clhs55*lm(0,0) + clhs56*lm(1,0) + clhs57*lm(2,0);
    const double clhs59 =     DeltaJs[6]; // DERIVATIVE(DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs60 =     clhs59*clhs6;
    const double clhs61 =     DeltaN2[6][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
    const double clhs62 =     DeltaPhi[6][0]; // DERIVATIVE(PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs63 =     DeltaPhi[6][1]; // DERIVATIVE(PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs64 =     DeltaPhi[6][2]; // DERIVATIVE(PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs65 =     clhs62*lm(0,0) + clhs63*lm(1,0) + clhs64*lm(2,0);
    const double clhs66 =     DeltaJs[7]; // DERIVATIVE(DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs67 =     clhs6*clhs66;
    const double clhs68 =     DeltaN2[7][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
    const double clhs69 =     DeltaPhi[7][0]; // DERIVATIVE(PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs70 =     DeltaPhi[7][1]; // DERIVATIVE(PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs71 =     DeltaPhi[7][2]; // DERIVATIVE(PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs72 =     clhs69*lm(0,0) + clhs70*lm(1,0) + clhs71*lm(2,0);
    const double clhs73 =     DeltaJs[8]; // DERIVATIVE(DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs74 =     clhs6*clhs73;
    const double clhs75 =     DeltaN2[8][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
    const double clhs76 =     DeltaPhi[8][0]; // DERIVATIVE(PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs77 =     DeltaPhi[8][1]; // DERIVATIVE(PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs78 =     DeltaPhi[8][2]; // DERIVATIVE(PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs79 =     clhs76*lm(0,0) + clhs77*lm(1,0) + clhs78*lm(2,0);
    const double clhs80 =     clhs19*clhs3;
    const double clhs81 =     clhs19*clhs4;
    const double clhs82 =     clhs19*clhs5;
    const double clhs83 =     clhs3*lm(0,1) + clhs4*lm(1,1) + clhs5*lm(2,1);
    const double clhs84 =     clhs2*clhs83;
    const double clhs85 =     clhs16*clhs83;
    const double clhs86 =     clhs20*lm(0,1) + clhs21*lm(1,1) + clhs22*lm(2,1);
    const double clhs87 =     clhs24*clhs83;
    const double clhs88 =     clhs27*lm(0,1) + clhs28*lm(1,1) + clhs29*lm(2,1);
    const double clhs89 =     clhs31*clhs83;
    const double clhs90 =     clhs34*lm(0,1) + clhs35*lm(1,1) + clhs36*lm(2,1);
    const double clhs91 =     clhs38*clhs83;
    const double clhs92 =     clhs41*lm(0,1) + clhs42*lm(1,1) + clhs43*lm(2,1);
    const double clhs93 =     clhs45*clhs83;
    const double clhs94 =     clhs48*lm(0,1) + clhs49*lm(1,1) + clhs50*lm(2,1);
    const double clhs95 =     clhs52*clhs83;
    const double clhs96 =     clhs55*lm(0,1) + clhs56*lm(1,1) + clhs57*lm(2,1);
    const double clhs97 =     clhs59*clhs83;
    const double clhs98 =     clhs62*lm(0,1) + clhs63*lm(1,1) + clhs64*lm(2,1);
    const double clhs99 =     clhs66*clhs83;
    const double clhs100 =     clhs69*lm(0,1) + clhs70*lm(1,1) + clhs71*lm(2,1);
    const double clhs101 =     clhs73*clhs83;
    const double clhs102 =     clhs76*lm(0,1) + clhs77*lm(1,1) + clhs78*lm(2,1);
    const double clhs103 =     clhs3*lm(0,2) + clhs4*lm(1,2) + clhs5*lm(2,2);
    const double clhs104 =     clhs103*clhs2;
    const double clhs105 =     clhs103*clhs16;
    const double clhs106 =     clhs20*lm(0,2) + clhs21*lm(1,2) + clhs22*lm(2,2);
    const double clhs107 =     clhs103*clhs24;
    const double clhs108 =     clhs27*lm(0,2) + clhs28*lm(1,2) + clhs29*lm(2,2);
    const double clhs109 =     clhs103*clhs31;
    const double clhs110 =     clhs34*lm(0,2) + clhs35*lm(1,2) + clhs36*lm(2,2);
    const double clhs111 =     clhs103*clhs38;
    const double clhs112 =     clhs41*lm(0,2) + clhs42*lm(1,2) + clhs43*lm(2,2);
    const double clhs113 =     clhs103*clhs45;
    const double clhs114 =     clhs48*lm(0,2) + clhs49*lm(1,2) + clhs50*lm(2,2);
    const double clhs115 =     clhs103*clhs52;
    const double clhs116 =     clhs55*lm(0,2) + clhs56*lm(1,2) + clhs57*lm(2,2);
    const double clhs117 =     clhs103*clhs59;
    const double clhs118 =     clhs62*lm(0,2) + clhs63*lm(1,2) + clhs64*lm(2,2);
    const double clhs119 =     clhs103*clhs66;
    const double clhs120 =     clhs69*lm(0,2) + clhs70*lm(1,2) + clhs71*lm(2,2);
    const double clhs121 =     clhs103*clhs73;
    const double clhs122 =     clhs76*lm(0,2) + clhs77*lm(1,2) + clhs78*lm(2,2);
    const double clhs123 =     N2[1]; // N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
    const double clhs124 =     DeltaN2[9][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
    const double clhs125 =     DeltaN2[10][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
    const double clhs126 =     DeltaN2[11][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
    const double clhs127 =     DeltaN2[12][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
    const double clhs128 =     DeltaN2[13][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
    const double clhs129 =     DeltaN2[14][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
    const double clhs130 =     DeltaN2[15][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
    const double clhs131 =     DeltaN2[16][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
    const double clhs132 =     DeltaN2[17][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
    const double clhs133 =     DeltaN2[0][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
    const double clhs134 =     clhs123*clhs2;
    const double clhs135 =     DeltaN2[1][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
    const double clhs136 =     DeltaN2[2][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
    const double clhs137 =     DeltaN2[3][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
    const double clhs138 =     DeltaN2[4][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
    const double clhs139 =     DeltaN2[5][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
    const double clhs140 =     DeltaN2[6][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
    const double clhs141 =     DeltaN2[7][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
    const double clhs142 =     DeltaN2[8][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
    const double clhs143 =     clhs134*clhs3;
    const double clhs144 =     clhs134*clhs4;
    const double clhs145 =     clhs134*clhs5;
    const double clhs146 =     N2[2]; // N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
    const double clhs147 =     DeltaN2[9][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
    const double clhs148 =     DeltaN2[10][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
    const double clhs149 =     DeltaN2[11][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
    const double clhs150 =     DeltaN2[12][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
    const double clhs151 =     DeltaN2[13][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
    const double clhs152 =     DeltaN2[14][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
    const double clhs153 =     DeltaN2[15][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
    const double clhs154 =     DeltaN2[16][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
    const double clhs155 =     DeltaN2[17][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
    const double clhs156 =     DeltaN2[0][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
    const double clhs157 =     clhs146*clhs2;
    const double clhs158 =     DeltaN2[1][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
    const double clhs159 =     DeltaN2[2][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
    const double clhs160 =     DeltaN2[3][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
    const double clhs161 =     DeltaN2[4][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
    const double clhs162 =     DeltaN2[5][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
    const double clhs163 =     DeltaN2[6][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
    const double clhs164 =     DeltaN2[7][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
    const double clhs165 =     DeltaN2[8][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
    const double clhs166 =     clhs157*clhs3;
    const double clhs167 =     clhs157*clhs4;
    const double clhs168 =     clhs157*clhs5;
    const double clhs169 =     clhs17 + clhs2*clhs23;
    const double clhs170 =     clhs2*clhs30 + clhs25;
    const double clhs171 =     clhs2*clhs37 + clhs32;
    const double clhs172 =     clhs2*clhs44 + clhs39;
    const double clhs173 =     clhs2*clhs51 + clhs46;
    const double clhs174 =     clhs2*clhs58 + clhs53;
    const double clhs175 =     clhs2*clhs65 + clhs60;
    const double clhs176 =     clhs2*clhs72 + clhs67;
    const double clhs177 =     clhs2*clhs79 + clhs74;
    const double clhs178 =     N1[0]*clhs2;
    const double clhs179 =     -clhs178*clhs3;
    const double clhs180 =     -clhs178*clhs4;
    const double clhs181 =     -clhs178*clhs5;
    const double clhs182 =     clhs2*clhs86 + clhs85;
    const double clhs183 =     clhs2*clhs88 + clhs87;
    const double clhs184 =     clhs2*clhs90 + clhs89;
    const double clhs185 =     clhs2*clhs92 + clhs91;
    const double clhs186 =     clhs2*clhs94 + clhs93;
    const double clhs187 =     clhs2*clhs96 + clhs95;
    const double clhs188 =     clhs2*clhs98 + clhs97;
    const double clhs189 =     clhs100*clhs2 + clhs99;
    const double clhs190 =     clhs101 + clhs102*clhs2;
    const double clhs191 =     clhs105 + clhs106*clhs2;
    const double clhs192 =     clhs107 + clhs108*clhs2;
    const double clhs193 =     clhs109 + clhs110*clhs2;
    const double clhs194 =     clhs111 + clhs112*clhs2;
    const double clhs195 =     clhs113 + clhs114*clhs2;
    const double clhs196 =     clhs115 + clhs116*clhs2;
    const double clhs197 =     clhs117 + clhs118*clhs2;
    const double clhs198 =     clhs119 + clhs120*clhs2;
    const double clhs199 =     clhs121 + clhs122*clhs2;
    const double clhs200 =     N1[1]*clhs2;
    const double clhs201 =     -clhs200*clhs3;
    const double clhs202 =     -clhs200*clhs4;
    const double clhs203 =     -clhs200*clhs5;
    const double clhs204 =     N1[2]*clhs2;
    const double clhs205 =     -clhs204*clhs3;
    const double clhs206 =     -clhs204*clhs4;
    const double clhs207 =     -clhs204*clhs5;
    const double clhs208 =     clhs2*clhs3;
    const double clhs209 =     normalslave(0,0); // NORMALSLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs210 =     integration_point_gap; // GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
    const double clhs211 =     DeltaGap[9]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
    const double clhs212 =     tan1slave(0,0); // TAN1SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs213 =     1.0/Dt;
    const double clhs214 =     tan1slave(0,1); // TAN1SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs215 =     tan1slave(1,1); // TAN1SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs216 =     tan1slave(2,1); // TAN1SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs217 =     N1[0]*clhs214 + N1[1]*clhs215 + N1[2]*clhs216;
    const double clhs218 =     Dt*v2(0,1);
    const double clhs219 =     Dt*v2(1,1);
    const double clhs220 =     Dt*v2(2,1);
    const double clhs221 =     clhs1*clhs218 + clhs124*clhs219 + clhs147*clhs220;
    const double clhs222 =     tan1slave(0,2); // TAN1SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs223 =     tan1slave(1,2); // TAN1SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs224 =     tan1slave(2,2); // TAN1SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs225 =     N1[0]*clhs222 + N1[1]*clhs223 + N1[2]*clhs224;
    const double clhs226 =     Dt*v2(0,2);
    const double clhs227 =     Dt*v2(1,2);
    const double clhs228 =     Dt*v2(2,2);
    const double clhs229 =     clhs1*clhs226 + clhs124*clhs227 + clhs147*clhs228;
    const double clhs230 =     tan1slave(1,0); // TAN1SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs231 =     tan1slave(2,0); // TAN1SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs232 =     N1[0]*clhs212 + N1[1]*clhs230 + N1[2]*clhs231;
    const double clhs233 =     Dt*v2(0,0);
    const double clhs234 =     Dt*v2(1,0);
    const double clhs235 =     Dt*v2(2,0);
    const double clhs236 =     clhs0 + clhs1*clhs233 + clhs124*clhs234 + clhs147*clhs235;
    const double clhs237 =     clhs213*(clhs217*clhs221 + clhs225*clhs229 + clhs232*clhs236);
    const double clhs238 =     tan2slave(0,0); // TAN2SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs239 =     tan2slave(0,1); // TAN2SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs240 =     tan2slave(1,1); // TAN2SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs241 =     tan2slave(2,1); // TAN2SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs242 =     N1[0]*clhs239 + N1[1]*clhs240 + N1[2]*clhs241;
    const double clhs243 =     tan2slave(0,2); // TAN2SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs244 =     tan2slave(1,2); // TAN2SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs245 =     tan2slave(2,2); // TAN2SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs246 =     N1[0]*clhs243 + N1[1]*clhs244 + N1[2]*clhs245;
    const double clhs247 =     tan2slave(1,0); // TAN2SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs248 =     tan2slave(2,0); // TAN2SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs249 =     N1[0]*clhs238 + N1[1]*clhs247 + N1[2]*clhs248;
    const double clhs250 =     clhs213*(clhs221*clhs242 + clhs229*clhs246 + clhs236*clhs249);
    const double clhs251 =     DeltaGap[10]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
    const double clhs252 =     clhs125*clhs234 + clhs148*clhs235 + clhs233*clhs8;
    const double clhs253 =     clhs125*clhs227 + clhs148*clhs228 + clhs226*clhs8;
    const double clhs254 =     clhs0 + clhs125*clhs219 + clhs148*clhs220 + clhs218*clhs8;
    const double clhs255 =     clhs213*(clhs217*clhs254 + clhs225*clhs253 + clhs232*clhs252);
    const double clhs256 =     clhs213*(clhs242*clhs254 + clhs246*clhs253 + clhs249*clhs252);
    const double clhs257 =     DeltaGap[11]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
    const double clhs258 =     clhs126*clhs234 + clhs149*clhs235 + clhs233*clhs9;
    const double clhs259 =     clhs126*clhs219 + clhs149*clhs220 + clhs218*clhs9;
    const double clhs260 =     clhs0 + clhs126*clhs227 + clhs149*clhs228 + clhs226*clhs9;
    const double clhs261 =     clhs213*(clhs217*clhs259 + clhs225*clhs260 + clhs232*clhs258);
    const double clhs262 =     clhs213*(clhs242*clhs259 + clhs246*clhs260 + clhs249*clhs258);
    const double clhs263 =     DeltaGap[12]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
    const double clhs264 =     clhs10*clhs218 + clhs127*clhs219 + clhs150*clhs220;
    const double clhs265 =     clhs10*clhs226 + clhs127*clhs227 + clhs150*clhs228;
    const double clhs266 =     clhs10*clhs233 + clhs123 + clhs127*clhs234 + clhs150*clhs235;
    const double clhs267 =     clhs213*(clhs217*clhs264 + clhs225*clhs265 + clhs232*clhs266);
    const double clhs268 =     clhs213*(clhs242*clhs264 + clhs246*clhs265 + clhs249*clhs266);
    const double clhs269 =     DeltaGap[13]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
    const double clhs270 =     clhs11*clhs233 + clhs128*clhs234 + clhs151*clhs235;
    const double clhs271 =     clhs11*clhs226 + clhs128*clhs227 + clhs151*clhs228;
    const double clhs272 =     clhs11*clhs218 + clhs123 + clhs128*clhs219 + clhs151*clhs220;
    const double clhs273 =     clhs213*(clhs217*clhs272 + clhs225*clhs271 + clhs232*clhs270);
    const double clhs274 =     clhs213*(clhs242*clhs272 + clhs246*clhs271 + clhs249*clhs270);
    const double clhs275 =     DeltaGap[14]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
    const double clhs276 =     clhs12*clhs233 + clhs129*clhs234 + clhs152*clhs235;
    const double clhs277 =     clhs12*clhs218 + clhs129*clhs219 + clhs152*clhs220;
    const double clhs278 =     clhs12*clhs226 + clhs123 + clhs129*clhs227 + clhs152*clhs228;
    const double clhs279 =     clhs213*(clhs217*clhs277 + clhs225*clhs278 + clhs232*clhs276);
    const double clhs280 =     clhs213*(clhs242*clhs277 + clhs246*clhs278 + clhs249*clhs276);
    const double clhs281 =     DeltaGap[15]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
    const double clhs282 =     clhs13*clhs218 + clhs130*clhs219 + clhs153*clhs220;
    const double clhs283 =     clhs13*clhs226 + clhs130*clhs227 + clhs153*clhs228;
    const double clhs284 =     clhs13*clhs233 + clhs130*clhs234 + clhs146 + clhs153*clhs235;
    const double clhs285 =     clhs213*(clhs217*clhs282 + clhs225*clhs283 + clhs232*clhs284);
    const double clhs286 =     clhs213*(clhs242*clhs282 + clhs246*clhs283 + clhs249*clhs284);
    const double clhs287 =     DeltaGap[16]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
    const double clhs288 =     clhs131*clhs234 + clhs14*clhs233 + clhs154*clhs235;
    const double clhs289 =     clhs131*clhs227 + clhs14*clhs226 + clhs154*clhs228;
    const double clhs290 =     clhs131*clhs219 + clhs14*clhs218 + clhs146 + clhs154*clhs220;
    const double clhs291 =     clhs213*(clhs217*clhs290 + clhs225*clhs289 + clhs232*clhs288);
    const double clhs292 =     clhs213*(clhs242*clhs290 + clhs246*clhs289 + clhs249*clhs288);
    const double clhs293 =     DeltaGap[17]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
    const double clhs294 =     clhs132*clhs234 + clhs15*clhs233 + clhs155*clhs235;
    const double clhs295 =     clhs132*clhs219 + clhs15*clhs218 + clhs155*clhs220;
    const double clhs296 =     clhs132*clhs227 + clhs146 + clhs15*clhs226 + clhs155*clhs228;
    const double clhs297 =     clhs213*(clhs217*clhs295 + clhs225*clhs296 + clhs232*clhs294);
    const double clhs298 =     clhs213*(clhs242*clhs295 + clhs246*clhs296 + clhs249*clhs294);
    const double clhs299 =     clhs2*clhs210*clhs3;
    const double clhs300 =     DeltaGap[0]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
    const double clhs301 =     clhs2*clhs209*clhs3;
    const double clhs302 =     clhs209*clhs210*clhs3;
    const double clhs303 =     clhs2*clhs209*clhs210;
    const double clhs304 =     Deltatangentxis[0](0,0); // DERIVATIVE(TAN1SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs305 =     N1[0]*(Dt*v1(0,0)) + N1[1]*(Dt*v1(1,0)) + N1[2]*(Dt*v1(2,0)) - clhs0*clhs233 - clhs123*clhs234 - clhs146*clhs235;
    const double clhs306 =     N1[0]*(Dt*v1(0,1)) + N1[1]*(Dt*v1(1,1)) + N1[2]*(Dt*v1(2,1)) - clhs0*clhs218 - clhs123*clhs219 - clhs146*clhs220;
    const double clhs307 =     N1[0]*(Dt*v1(0,2)) + N1[1]*(Dt*v1(1,2)) + N1[2]*(Dt*v1(2,2)) - clhs0*clhs226 - clhs123*clhs227 - clhs146*clhs228;
    const double clhs308 =     clhs217*clhs306 + clhs225*clhs307 + clhs232*clhs305;
    const double clhs309 =     clhs2*clhs213*clhs3*clhs308;
    const double clhs310 =     clhs212*clhs213*clhs3*clhs308;
    const double clhs311 =     clhs2*clhs212*clhs213*clhs308;
    const double clhs312 =     Deltatangentetas[0](0,0); // DERIVATIVE(TAN2SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs313 =     clhs242*clhs306 + clhs246*clhs307 + clhs249*clhs305;
    const double clhs314 =     clhs2*clhs213*clhs3*clhs313;
    const double clhs315 =     clhs213*clhs238*clhs3*clhs313;
    const double clhs316 =     clhs2*clhs213*clhs238*clhs313;
    const double clhs317 =     clhs133*clhs219 + clhs156*clhs220 + clhs18*clhs218;
    const double clhs318 =     clhs133*clhs227 + clhs156*clhs228 + clhs18*clhs226;
    const double clhs319 =     -N1[0];
    const double clhs320 =     clhs133*clhs234 + clhs156*clhs235 + clhs18*clhs233 + clhs319;
    const double clhs321 =     Deltatangentxis[0](1,0); // DERIVATIVE(TAN1SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs322 =     Deltatangentxis[0](2,0); // DERIVATIVE(TAN1SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs323 =     Deltatangentxis[0](0,1); // DERIVATIVE(TAN1SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs324 =     Deltatangentxis[0](1,1); // DERIVATIVE(TAN1SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs325 =     Deltatangentxis[0](2,1); // DERIVATIVE(TAN1SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs326 =     Deltatangentxis[0](0,2); // DERIVATIVE(TAN1SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs327 =     Deltatangentxis[0](1,2); // DERIVATIVE(TAN1SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs328 =     Deltatangentxis[0](2,2); // DERIVATIVE(TAN1SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs329 =     clhs217*clhs317 + clhs225*clhs318 + clhs232*clhs320 - clhs305*(N1[0]*clhs304 + N1[1]*clhs321 + N1[2]*clhs322) - clhs306*(N1[0]*clhs323 + N1[1]*clhs324 + N1[2]*clhs325) - clhs307*(N1[0]*clhs326 + N1[1]*clhs327 + N1[2]*clhs328);
    const double clhs330 =     clhs2*clhs213*clhs3*clhs329;
    const double clhs331 =     Deltatangentetas[0](1,0); // DERIVATIVE(TAN2SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs332 =     Deltatangentetas[0](2,0); // DERIVATIVE(TAN2SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs333 =     Deltatangentetas[0](0,1); // DERIVATIVE(TAN2SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs334 =     Deltatangentetas[0](1,1); // DERIVATIVE(TAN2SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs335 =     Deltatangentetas[0](2,1); // DERIVATIVE(TAN2SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs336 =     Deltatangentetas[0](0,2); // DERIVATIVE(TAN2SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs337 =     Deltatangentetas[0](1,2); // DERIVATIVE(TAN2SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs338 =     Deltatangentetas[0](2,2); // DERIVATIVE(TAN2SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs339 =     clhs242*clhs317 + clhs246*clhs318 + clhs249*clhs320 - clhs305*(N1[0]*clhs312 + N1[1]*clhs331 + N1[2]*clhs332) - clhs306*(N1[0]*clhs333 + N1[1]*clhs334 + N1[2]*clhs335) - clhs307*(N1[0]*clhs336 + N1[1]*clhs337 + N1[2]*clhs338);
    const double clhs340 =     clhs2*clhs213*clhs3*clhs339;
    const double clhs341 =     DeltaGap[1]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
    const double clhs342 =     Deltatangentxis[1](0,0); // DERIVATIVE(TAN1SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs343 =     Deltatangentetas[1](0,0); // DERIVATIVE(TAN2SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs344 =     clhs135*clhs234 + clhs158*clhs235 + clhs233*clhs26;
    const double clhs345 =     clhs135*clhs227 + clhs158*clhs228 + clhs226*clhs26;
    const double clhs346 =     clhs135*clhs219 + clhs158*clhs220 + clhs218*clhs26 + clhs319;
    const double clhs347 =     Deltatangentxis[1](1,0); // DERIVATIVE(TAN1SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs348 =     Deltatangentxis[1](2,0); // DERIVATIVE(TAN1SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs349 =     Deltatangentxis[1](0,1); // DERIVATIVE(TAN1SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs350 =     Deltatangentxis[1](1,1); // DERIVATIVE(TAN1SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs351 =     Deltatangentxis[1](2,1); // DERIVATIVE(TAN1SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs352 =     Deltatangentxis[1](0,2); // DERIVATIVE(TAN1SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs353 =     Deltatangentxis[1](1,2); // DERIVATIVE(TAN1SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs354 =     Deltatangentxis[1](2,2); // DERIVATIVE(TAN1SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs355 =     clhs217*clhs346 + clhs225*clhs345 + clhs232*clhs344 - clhs305*(N1[0]*clhs342 + N1[1]*clhs347 + N1[2]*clhs348) - clhs306*(N1[0]*clhs349 + N1[1]*clhs350 + N1[2]*clhs351) - clhs307*(N1[0]*clhs352 + N1[1]*clhs353 + N1[2]*clhs354);
    const double clhs356 =     clhs2*clhs213*clhs3*clhs355;
    const double clhs357 =     Deltatangentetas[1](1,0); // DERIVATIVE(TAN2SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs358 =     Deltatangentetas[1](2,0); // DERIVATIVE(TAN2SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs359 =     Deltatangentetas[1](0,1); // DERIVATIVE(TAN2SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs360 =     Deltatangentetas[1](1,1); // DERIVATIVE(TAN2SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs361 =     Deltatangentetas[1](2,1); // DERIVATIVE(TAN2SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs362 =     Deltatangentetas[1](0,2); // DERIVATIVE(TAN2SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs363 =     Deltatangentetas[1](1,2); // DERIVATIVE(TAN2SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs364 =     Deltatangentetas[1](2,2); // DERIVATIVE(TAN2SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs365 =     clhs242*clhs346 + clhs246*clhs345 + clhs249*clhs344 - clhs305*(N1[0]*clhs343 + N1[1]*clhs357 + N1[2]*clhs358) - clhs306*(N1[0]*clhs359 + N1[1]*clhs360 + N1[2]*clhs361) - clhs307*(N1[0]*clhs362 + N1[1]*clhs363 + N1[2]*clhs364);
    const double clhs366 =     clhs2*clhs213*clhs3*clhs365;
    const double clhs367 =     DeltaGap[2]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
    const double clhs368 =     Deltatangentxis[2](0,0); // DERIVATIVE(TAN1SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs369 =     Deltatangentetas[2](0,0); // DERIVATIVE(TAN2SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs370 =     clhs136*clhs234 + clhs159*clhs235 + clhs233*clhs33;
    const double clhs371 =     clhs136*clhs219 + clhs159*clhs220 + clhs218*clhs33;
    const double clhs372 =     clhs136*clhs227 + clhs159*clhs228 + clhs226*clhs33 + clhs319;
    const double clhs373 =     Deltatangentxis[2](1,0); // DERIVATIVE(TAN1SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs374 =     Deltatangentxis[2](2,0); // DERIVATIVE(TAN1SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs375 =     Deltatangentxis[2](0,1); // DERIVATIVE(TAN1SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs376 =     Deltatangentxis[2](1,1); // DERIVATIVE(TAN1SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs377 =     Deltatangentxis[2](2,1); // DERIVATIVE(TAN1SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs378 =     Deltatangentxis[2](0,2); // DERIVATIVE(TAN1SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs379 =     Deltatangentxis[2](1,2); // DERIVATIVE(TAN1SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs380 =     Deltatangentxis[2](2,2); // DERIVATIVE(TAN1SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs381 =     clhs217*clhs371 + clhs225*clhs372 + clhs232*clhs370 - clhs305*(N1[0]*clhs368 + N1[1]*clhs373 + N1[2]*clhs374) - clhs306*(N1[0]*clhs375 + N1[1]*clhs376 + N1[2]*clhs377) - clhs307*(N1[0]*clhs378 + N1[1]*clhs379 + N1[2]*clhs380);
    const double clhs382 =     clhs2*clhs213*clhs3*clhs381;
    const double clhs383 =     Deltatangentetas[2](1,0); // DERIVATIVE(TAN2SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs384 =     Deltatangentetas[2](2,0); // DERIVATIVE(TAN2SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs385 =     Deltatangentetas[2](0,1); // DERIVATIVE(TAN2SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs386 =     Deltatangentetas[2](1,1); // DERIVATIVE(TAN2SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs387 =     Deltatangentetas[2](2,1); // DERIVATIVE(TAN2SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs388 =     Deltatangentetas[2](0,2); // DERIVATIVE(TAN2SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs389 =     Deltatangentetas[2](1,2); // DERIVATIVE(TAN2SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs390 =     Deltatangentetas[2](2,2); // DERIVATIVE(TAN2SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs391 =     clhs242*clhs371 + clhs246*clhs372 + clhs249*clhs370 - clhs305*(N1[0]*clhs369 + N1[1]*clhs383 + N1[2]*clhs384) - clhs306*(N1[0]*clhs385 + N1[1]*clhs386 + N1[2]*clhs387) - clhs307*(N1[0]*clhs388 + N1[1]*clhs389 + N1[2]*clhs390);
    const double clhs392 =     clhs2*clhs213*clhs3*clhs391;
    const double clhs393 =     DeltaGap[3]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
    const double clhs394 =     Deltatangentxis[3](0,0); // DERIVATIVE(TAN1SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs395 =     Deltatangentetas[3](0,0); // DERIVATIVE(TAN2SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs396 =     clhs137*clhs219 + clhs160*clhs220 + clhs218*clhs40;
    const double clhs397 =     clhs137*clhs227 + clhs160*clhs228 + clhs226*clhs40;
    const double clhs398 =     -N1[1];
    const double clhs399 =     clhs137*clhs234 + clhs160*clhs235 + clhs233*clhs40 + clhs398;
    const double clhs400 =     Deltatangentxis[3](1,0); // DERIVATIVE(TAN1SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs401 =     Deltatangentxis[3](2,0); // DERIVATIVE(TAN1SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs402 =     Deltatangentxis[3](0,1); // DERIVATIVE(TAN1SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs403 =     Deltatangentxis[3](1,1); // DERIVATIVE(TAN1SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs404 =     Deltatangentxis[3](2,1); // DERIVATIVE(TAN1SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs405 =     Deltatangentxis[3](0,2); // DERIVATIVE(TAN1SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs406 =     Deltatangentxis[3](1,2); // DERIVATIVE(TAN1SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs407 =     Deltatangentxis[3](2,2); // DERIVATIVE(TAN1SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs408 =     clhs217*clhs396 + clhs225*clhs397 + clhs232*clhs399 - clhs305*(N1[0]*clhs394 + N1[1]*clhs400 + N1[2]*clhs401) - clhs306*(N1[0]*clhs402 + N1[1]*clhs403 + N1[2]*clhs404) - clhs307*(N1[0]*clhs405 + N1[1]*clhs406 + N1[2]*clhs407);
    const double clhs409 =     clhs2*clhs213*clhs3*clhs408;
    const double clhs410 =     Deltatangentetas[3](1,0); // DERIVATIVE(TAN2SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs411 =     Deltatangentetas[3](2,0); // DERIVATIVE(TAN2SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs412 =     Deltatangentetas[3](0,1); // DERIVATIVE(TAN2SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs413 =     Deltatangentetas[3](1,1); // DERIVATIVE(TAN2SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs414 =     Deltatangentetas[3](2,1); // DERIVATIVE(TAN2SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs415 =     Deltatangentetas[3](0,2); // DERIVATIVE(TAN2SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs416 =     Deltatangentetas[3](1,2); // DERIVATIVE(TAN2SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs417 =     Deltatangentetas[3](2,2); // DERIVATIVE(TAN2SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs418 =     clhs242*clhs396 + clhs246*clhs397 + clhs249*clhs399 - clhs305*(N1[0]*clhs395 + N1[1]*clhs410 + N1[2]*clhs411) - clhs306*(N1[0]*clhs412 + N1[1]*clhs413 + N1[2]*clhs414) - clhs307*(N1[0]*clhs415 + N1[1]*clhs416 + N1[2]*clhs417);
    const double clhs419 =     clhs2*clhs213*clhs3*clhs418;
    const double clhs420 =     DeltaGap[4]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
    const double clhs421 =     Deltatangentxis[4](0,0); // DERIVATIVE(TAN1SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs422 =     Deltatangentetas[4](0,0); // DERIVATIVE(TAN2SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs423 =     clhs138*clhs234 + clhs161*clhs235 + clhs233*clhs47;
    const double clhs424 =     clhs138*clhs227 + clhs161*clhs228 + clhs226*clhs47;
    const double clhs425 =     clhs138*clhs219 + clhs161*clhs220 + clhs218*clhs47 + clhs398;
    const double clhs426 =     Deltatangentxis[4](1,0); // DERIVATIVE(TAN1SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs427 =     Deltatangentxis[4](2,0); // DERIVATIVE(TAN1SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs428 =     Deltatangentxis[4](0,1); // DERIVATIVE(TAN1SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs429 =     Deltatangentxis[4](1,1); // DERIVATIVE(TAN1SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs430 =     Deltatangentxis[4](2,1); // DERIVATIVE(TAN1SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs431 =     Deltatangentxis[4](0,2); // DERIVATIVE(TAN1SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs432 =     Deltatangentxis[4](1,2); // DERIVATIVE(TAN1SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs433 =     Deltatangentxis[4](2,2); // DERIVATIVE(TAN1SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs434 =     clhs217*clhs425 + clhs225*clhs424 + clhs232*clhs423 - clhs305*(N1[0]*clhs421 + N1[1]*clhs426 + N1[2]*clhs427) - clhs306*(N1[0]*clhs428 + N1[1]*clhs429 + N1[2]*clhs430) - clhs307*(N1[0]*clhs431 + N1[1]*clhs432 + N1[2]*clhs433);
    const double clhs435 =     clhs2*clhs213*clhs3*clhs434;
    const double clhs436 =     Deltatangentetas[4](1,0); // DERIVATIVE(TAN2SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs437 =     Deltatangentetas[4](2,0); // DERIVATIVE(TAN2SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs438 =     Deltatangentetas[4](0,1); // DERIVATIVE(TAN2SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs439 =     Deltatangentetas[4](1,1); // DERIVATIVE(TAN2SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs440 =     Deltatangentetas[4](2,1); // DERIVATIVE(TAN2SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs441 =     Deltatangentetas[4](0,2); // DERIVATIVE(TAN2SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs442 =     Deltatangentetas[4](1,2); // DERIVATIVE(TAN2SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs443 =     Deltatangentetas[4](2,2); // DERIVATIVE(TAN2SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs444 =     clhs242*clhs425 + clhs246*clhs424 + clhs249*clhs423 - clhs305*(N1[0]*clhs422 + N1[1]*clhs436 + N1[2]*clhs437) - clhs306*(N1[0]*clhs438 + N1[1]*clhs439 + N1[2]*clhs440) - clhs307*(N1[0]*clhs441 + N1[1]*clhs442 + N1[2]*clhs443);
    const double clhs445 =     clhs2*clhs213*clhs3*clhs444;
    const double clhs446 =     DeltaGap[5]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
    const double clhs447 =     Deltatangentxis[5](0,0); // DERIVATIVE(TAN1SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs448 =     Deltatangentetas[5](0,0); // DERIVATIVE(TAN2SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs449 =     clhs139*clhs234 + clhs162*clhs235 + clhs233*clhs54;
    const double clhs450 =     clhs139*clhs219 + clhs162*clhs220 + clhs218*clhs54;
    const double clhs451 =     clhs139*clhs227 + clhs162*clhs228 + clhs226*clhs54 + clhs398;
    const double clhs452 =     Deltatangentxis[5](1,0); // DERIVATIVE(TAN1SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs453 =     Deltatangentxis[5](2,0); // DERIVATIVE(TAN1SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs454 =     Deltatangentxis[5](0,1); // DERIVATIVE(TAN1SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs455 =     Deltatangentxis[5](1,1); // DERIVATIVE(TAN1SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs456 =     Deltatangentxis[5](2,1); // DERIVATIVE(TAN1SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs457 =     Deltatangentxis[5](0,2); // DERIVATIVE(TAN1SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs458 =     Deltatangentxis[5](1,2); // DERIVATIVE(TAN1SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs459 =     Deltatangentxis[5](2,2); // DERIVATIVE(TAN1SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs460 =     clhs217*clhs450 + clhs225*clhs451 + clhs232*clhs449 - clhs305*(N1[0]*clhs447 + N1[1]*clhs452 + N1[2]*clhs453) - clhs306*(N1[0]*clhs454 + N1[1]*clhs455 + N1[2]*clhs456) - clhs307*(N1[0]*clhs457 + N1[1]*clhs458 + N1[2]*clhs459);
    const double clhs461 =     clhs2*clhs213*clhs3*clhs460;
    const double clhs462 =     Deltatangentetas[5](1,0); // DERIVATIVE(TAN2SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs463 =     Deltatangentetas[5](2,0); // DERIVATIVE(TAN2SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs464 =     Deltatangentetas[5](0,1); // DERIVATIVE(TAN2SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs465 =     Deltatangentetas[5](1,1); // DERIVATIVE(TAN2SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs466 =     Deltatangentetas[5](2,1); // DERIVATIVE(TAN2SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs467 =     Deltatangentetas[5](0,2); // DERIVATIVE(TAN2SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs468 =     Deltatangentetas[5](1,2); // DERIVATIVE(TAN2SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs469 =     Deltatangentetas[5](2,2); // DERIVATIVE(TAN2SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs470 =     clhs242*clhs450 + clhs246*clhs451 + clhs249*clhs449 - clhs305*(N1[0]*clhs448 + N1[1]*clhs462 + N1[2]*clhs463) - clhs306*(N1[0]*clhs464 + N1[1]*clhs465 + N1[2]*clhs466) - clhs307*(N1[0]*clhs467 + N1[1]*clhs468 + N1[2]*clhs469);
    const double clhs471 =     clhs2*clhs213*clhs3*clhs470;
    const double clhs472 =     DeltaGap[6]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
    const double clhs473 =     Deltatangentxis[6](0,0); // DERIVATIVE(TAN1SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs474 =     Deltatangentetas[6](0,0); // DERIVATIVE(TAN2SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs475 =     clhs140*clhs219 + clhs163*clhs220 + clhs218*clhs61;
    const double clhs476 =     clhs140*clhs227 + clhs163*clhs228 + clhs226*clhs61;
    const double clhs477 =     -N1[2];
    const double clhs478 =     clhs140*clhs234 + clhs163*clhs235 + clhs233*clhs61 + clhs477;
    const double clhs479 =     Deltatangentxis[6](1,0); // DERIVATIVE(TAN1SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs480 =     Deltatangentxis[6](2,0); // DERIVATIVE(TAN1SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs481 =     Deltatangentxis[6](0,1); // DERIVATIVE(TAN1SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs482 =     Deltatangentxis[6](1,1); // DERIVATIVE(TAN1SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs483 =     Deltatangentxis[6](2,1); // DERIVATIVE(TAN1SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs484 =     Deltatangentxis[6](0,2); // DERIVATIVE(TAN1SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs485 =     Deltatangentxis[6](1,2); // DERIVATIVE(TAN1SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs486 =     Deltatangentxis[6](2,2); // DERIVATIVE(TAN1SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs487 =     clhs217*clhs475 + clhs225*clhs476 + clhs232*clhs478 - clhs305*(N1[0]*clhs473 + N1[1]*clhs479 + N1[2]*clhs480) - clhs306*(N1[0]*clhs481 + N1[1]*clhs482 + N1[2]*clhs483) - clhs307*(N1[0]*clhs484 + N1[1]*clhs485 + N1[2]*clhs486);
    const double clhs488 =     clhs2*clhs213*clhs3*clhs487;
    const double clhs489 =     Deltatangentetas[6](1,0); // DERIVATIVE(TAN2SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs490 =     Deltatangentetas[6](2,0); // DERIVATIVE(TAN2SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs491 =     Deltatangentetas[6](0,1); // DERIVATIVE(TAN2SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs492 =     Deltatangentetas[6](1,1); // DERIVATIVE(TAN2SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs493 =     Deltatangentetas[6](2,1); // DERIVATIVE(TAN2SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs494 =     Deltatangentetas[6](0,2); // DERIVATIVE(TAN2SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs495 =     Deltatangentetas[6](1,2); // DERIVATIVE(TAN2SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs496 =     Deltatangentetas[6](2,2); // DERIVATIVE(TAN2SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs497 =     clhs242*clhs475 + clhs246*clhs476 + clhs249*clhs478 - clhs305*(N1[0]*clhs474 + N1[1]*clhs489 + N1[2]*clhs490) - clhs306*(N1[0]*clhs491 + N1[1]*clhs492 + N1[2]*clhs493) - clhs307*(N1[0]*clhs494 + N1[1]*clhs495 + N1[2]*clhs496);
    const double clhs498 =     clhs2*clhs213*clhs3*clhs497;
    const double clhs499 =     DeltaGap[7]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
    const double clhs500 =     Deltatangentxis[7](0,0); // DERIVATIVE(TAN1SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs501 =     Deltatangentetas[7](0,0); // DERIVATIVE(TAN2SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs502 =     clhs141*clhs234 + clhs164*clhs235 + clhs233*clhs68;
    const double clhs503 =     clhs141*clhs227 + clhs164*clhs228 + clhs226*clhs68;
    const double clhs504 =     clhs141*clhs219 + clhs164*clhs220 + clhs218*clhs68 + clhs477;
    const double clhs505 =     Deltatangentxis[7](1,0); // DERIVATIVE(TAN1SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs506 =     Deltatangentxis[7](2,0); // DERIVATIVE(TAN1SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs507 =     Deltatangentxis[7](0,1); // DERIVATIVE(TAN1SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs508 =     Deltatangentxis[7](1,1); // DERIVATIVE(TAN1SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs509 =     Deltatangentxis[7](2,1); // DERIVATIVE(TAN1SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs510 =     Deltatangentxis[7](0,2); // DERIVATIVE(TAN1SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs511 =     Deltatangentxis[7](1,2); // DERIVATIVE(TAN1SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs512 =     Deltatangentxis[7](2,2); // DERIVATIVE(TAN1SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs513 =     clhs217*clhs504 + clhs225*clhs503 + clhs232*clhs502 - clhs305*(N1[0]*clhs500 + N1[1]*clhs505 + N1[2]*clhs506) - clhs306*(N1[0]*clhs507 + N1[1]*clhs508 + N1[2]*clhs509) - clhs307*(N1[0]*clhs510 + N1[1]*clhs511 + N1[2]*clhs512);
    const double clhs514 =     clhs2*clhs213*clhs3*clhs513;
    const double clhs515 =     Deltatangentetas[7](1,0); // DERIVATIVE(TAN2SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs516 =     Deltatangentetas[7](2,0); // DERIVATIVE(TAN2SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs517 =     Deltatangentetas[7](0,1); // DERIVATIVE(TAN2SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs518 =     Deltatangentetas[7](1,1); // DERIVATIVE(TAN2SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs519 =     Deltatangentetas[7](2,1); // DERIVATIVE(TAN2SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs520 =     Deltatangentetas[7](0,2); // DERIVATIVE(TAN2SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs521 =     Deltatangentetas[7](1,2); // DERIVATIVE(TAN2SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs522 =     Deltatangentetas[7](2,2); // DERIVATIVE(TAN2SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs523 =     clhs242*clhs504 + clhs246*clhs503 + clhs249*clhs502 - clhs305*(N1[0]*clhs501 + N1[1]*clhs515 + N1[2]*clhs516) - clhs306*(N1[0]*clhs517 + N1[1]*clhs518 + N1[2]*clhs519) - clhs307*(N1[0]*clhs520 + N1[1]*clhs521 + N1[2]*clhs522);
    const double clhs524 =     clhs2*clhs213*clhs3*clhs523;
    const double clhs525 =     DeltaGap[8]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
    const double clhs526 =     Deltatangentxis[8](0,0); // DERIVATIVE(TAN1SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs527 =     Deltatangentetas[8](0,0); // DERIVATIVE(TAN2SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs528 =     clhs142*clhs234 + clhs165*clhs235 + clhs233*clhs75;
    const double clhs529 =     clhs142*clhs219 + clhs165*clhs220 + clhs218*clhs75;
    const double clhs530 =     clhs142*clhs227 + clhs165*clhs228 + clhs226*clhs75 + clhs477;
    const double clhs531 =     Deltatangentxis[8](1,0); // DERIVATIVE(TAN1SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs532 =     Deltatangentxis[8](2,0); // DERIVATIVE(TAN1SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs533 =     Deltatangentxis[8](0,1); // DERIVATIVE(TAN1SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs534 =     Deltatangentxis[8](1,1); // DERIVATIVE(TAN1SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs535 =     Deltatangentxis[8](2,1); // DERIVATIVE(TAN1SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs536 =     Deltatangentxis[8](0,2); // DERIVATIVE(TAN1SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs537 =     Deltatangentxis[8](1,2); // DERIVATIVE(TAN1SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs538 =     Deltatangentxis[8](2,2); // DERIVATIVE(TAN1SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs539 =     clhs217*clhs529 + clhs225*clhs530 + clhs232*clhs528 - clhs305*(N1[0]*clhs526 + N1[1]*clhs531 + N1[2]*clhs532) - clhs306*(N1[0]*clhs533 + N1[1]*clhs534 + N1[2]*clhs535) - clhs307*(N1[0]*clhs536 + N1[1]*clhs537 + N1[2]*clhs538);
    const double clhs540 =     clhs2*clhs213*clhs3*clhs539;
    const double clhs541 =     Deltatangentetas[8](1,0); // DERIVATIVE(TAN2SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs542 =     Deltatangentetas[8](2,0); // DERIVATIVE(TAN2SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs543 =     Deltatangentetas[8](0,1); // DERIVATIVE(TAN2SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs544 =     Deltatangentetas[8](1,1); // DERIVATIVE(TAN2SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs545 =     Deltatangentetas[8](2,1); // DERIVATIVE(TAN2SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs546 =     Deltatangentetas[8](0,2); // DERIVATIVE(TAN2SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs547 =     Deltatangentetas[8](1,2); // DERIVATIVE(TAN2SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs548 =     Deltatangentetas[8](2,2); // DERIVATIVE(TAN2SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs549 =     clhs242*clhs529 + clhs246*clhs530 + clhs249*clhs528 - clhs305*(N1[0]*clhs527 + N1[1]*clhs541 + N1[2]*clhs542) - clhs306*(N1[0]*clhs543 + N1[1]*clhs544 + N1[2]*clhs545) - clhs307*(N1[0]*clhs546 + N1[1]*clhs547 + N1[2]*clhs548);
    const double clhs550 =     clhs2*clhs213*clhs3*clhs549;
    const double clhs551 =     normalslave(0,1); // NORMALSLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs552 =     clhs2*clhs3*clhs551;
    const double clhs553 =     clhs210*clhs3*clhs551;
    const double clhs554 =     clhs2*clhs210*clhs551;
    const double clhs555 =     clhs213*clhs214*clhs3*clhs308;
    const double clhs556 =     clhs2*clhs213*clhs214*clhs308;
    const double clhs557 =     clhs213*clhs239*clhs3*clhs313;
    const double clhs558 =     clhs2*clhs213*clhs239*clhs313;
    const double clhs559 =     normalslave(0,2); // NORMALSLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs560 =     clhs2*clhs3*clhs559;
    const double clhs561 =     clhs210*clhs3*clhs559;
    const double clhs562 =     clhs2*clhs210*clhs559;
    const double clhs563 =     clhs213*clhs222*clhs3*clhs308;
    const double clhs564 =     clhs2*clhs213*clhs222*clhs308;
    const double clhs565 =     clhs213*clhs243*clhs3*clhs313;
    const double clhs566 =     clhs2*clhs213*clhs243*clhs313;
    const double clhs567 =     clhs2*clhs4;
    const double clhs568 =     normalslave(1,0); // NORMALSLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs569 =     clhs2*clhs210*clhs4;
    const double clhs570 =     clhs2*clhs4*clhs568;
    const double clhs571 =     clhs210*clhs4*clhs568;
    const double clhs572 =     clhs2*clhs210*clhs568;
    const double clhs573 =     clhs2*clhs213*clhs308*clhs4;
    const double clhs574 =     clhs213*clhs230*clhs308*clhs4;
    const double clhs575 =     clhs2*clhs213*clhs230*clhs308;
    const double clhs576 =     clhs2*clhs213*clhs313*clhs4;
    const double clhs577 =     clhs213*clhs247*clhs313*clhs4;
    const double clhs578 =     clhs2*clhs213*clhs247*clhs313;
    const double clhs579 =     clhs2*clhs213*clhs329*clhs4;
    const double clhs580 =     clhs2*clhs213*clhs339*clhs4;
    const double clhs581 =     clhs2*clhs213*clhs355*clhs4;
    const double clhs582 =     clhs2*clhs213*clhs365*clhs4;
    const double clhs583 =     clhs2*clhs213*clhs381*clhs4;
    const double clhs584 =     clhs2*clhs213*clhs391*clhs4;
    const double clhs585 =     clhs2*clhs213*clhs4*clhs408;
    const double clhs586 =     clhs2*clhs213*clhs4*clhs418;
    const double clhs587 =     clhs2*clhs213*clhs4*clhs434;
    const double clhs588 =     clhs2*clhs213*clhs4*clhs444;
    const double clhs589 =     clhs2*clhs213*clhs4*clhs460;
    const double clhs590 =     clhs2*clhs213*clhs4*clhs470;
    const double clhs591 =     clhs2*clhs213*clhs4*clhs487;
    const double clhs592 =     clhs2*clhs213*clhs4*clhs497;
    const double clhs593 =     clhs2*clhs213*clhs4*clhs513;
    const double clhs594 =     clhs2*clhs213*clhs4*clhs523;
    const double clhs595 =     clhs2*clhs213*clhs4*clhs539;
    const double clhs596 =     clhs2*clhs213*clhs4*clhs549;
    const double clhs597 =     normalslave(1,1); // NORMALSLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs598 =     clhs2*clhs4*clhs597;
    const double clhs599 =     clhs210*clhs4*clhs597;
    const double clhs600 =     clhs2*clhs210*clhs597;
    const double clhs601 =     clhs213*clhs215*clhs308*clhs4;
    const double clhs602 =     clhs2*clhs213*clhs215*clhs308;
    const double clhs603 =     clhs213*clhs240*clhs313*clhs4;
    const double clhs604 =     clhs2*clhs213*clhs240*clhs313;
    const double clhs605 =     normalslave(1,2); // NORMALSLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs606 =     clhs2*clhs4*clhs605;
    const double clhs607 =     clhs210*clhs4*clhs605;
    const double clhs608 =     clhs2*clhs210*clhs605;
    const double clhs609 =     clhs213*clhs223*clhs308*clhs4;
    const double clhs610 =     clhs2*clhs213*clhs223*clhs308;
    const double clhs611 =     clhs213*clhs244*clhs313*clhs4;
    const double clhs612 =     clhs2*clhs213*clhs244*clhs313;
    const double clhs613 =     clhs2*clhs5;
    const double clhs614 =     normalslave(2,0); // NORMALSLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs615 =     clhs2*clhs210*clhs5;
    const double clhs616 =     clhs2*clhs5*clhs614;
    const double clhs617 =     clhs210*clhs5*clhs614;
    const double clhs618 =     clhs2*clhs210*clhs614;
    const double clhs619 =     clhs2*clhs213*clhs308*clhs5;
    const double clhs620 =     clhs213*clhs231*clhs308*clhs5;
    const double clhs621 =     clhs2*clhs213*clhs231*clhs308;
    const double clhs622 =     clhs2*clhs213*clhs313*clhs5;
    const double clhs623 =     clhs213*clhs248*clhs313*clhs5;
    const double clhs624 =     clhs2*clhs213*clhs248*clhs313;
    const double clhs625 =     clhs2*clhs213*clhs329*clhs5;
    const double clhs626 =     clhs2*clhs213*clhs339*clhs5;
    const double clhs627 =     clhs2*clhs213*clhs355*clhs5;
    const double clhs628 =     clhs2*clhs213*clhs365*clhs5;
    const double clhs629 =     clhs2*clhs213*clhs381*clhs5;
    const double clhs630 =     clhs2*clhs213*clhs391*clhs5;
    const double clhs631 =     clhs2*clhs213*clhs408*clhs5;
    const double clhs632 =     clhs2*clhs213*clhs418*clhs5;
    const double clhs633 =     clhs2*clhs213*clhs434*clhs5;
    const double clhs634 =     clhs2*clhs213*clhs444*clhs5;
    const double clhs635 =     clhs2*clhs213*clhs460*clhs5;
    const double clhs636 =     clhs2*clhs213*clhs470*clhs5;
    const double clhs637 =     clhs2*clhs213*clhs487*clhs5;
    const double clhs638 =     clhs2*clhs213*clhs497*clhs5;
    const double clhs639 =     clhs2*clhs213*clhs5*clhs513;
    const double clhs640 =     clhs2*clhs213*clhs5*clhs523;
    const double clhs641 =     clhs2*clhs213*clhs5*clhs539;
    const double clhs642 =     clhs2*clhs213*clhs5*clhs549;
    const double clhs643 =     normalslave(2,1); // NORMALSLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs644 =     clhs2*clhs5*clhs643;
    const double clhs645 =     clhs210*clhs5*clhs643;
    const double clhs646 =     clhs2*clhs210*clhs643;
    const double clhs647 =     clhs213*clhs216*clhs308*clhs5;
    const double clhs648 =     clhs2*clhs213*clhs216*clhs308;
    const double clhs649 =     clhs213*clhs241*clhs313*clhs5;
    const double clhs650 =     clhs2*clhs213*clhs241*clhs313;
    const double clhs651 =     normalslave(2,2); // NORMALSLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs652 =     clhs2*clhs5*clhs651;
    const double clhs653 =     clhs210*clhs5*clhs651;
    const double clhs654 =     clhs2*clhs210*clhs651;
    const double clhs655 =     clhs213*clhs224*clhs308*clhs5;
    const double clhs656 =     clhs2*clhs213*clhs224*clhs308;
    const double clhs657 =     clhs213*clhs245*clhs313*clhs5;
    const double clhs658 =     clhs2*clhs213*clhs245*clhs313;

    lhs(0,0)=clhs1*clhs7;
    lhs(0,1)=clhs7*clhs8;
    lhs(0,2)=clhs7*clhs9;
    lhs(0,3)=clhs10*clhs7;
    lhs(0,4)=clhs11*clhs7;
    lhs(0,5)=clhs12*clhs7;
    lhs(0,6)=clhs13*clhs7;
    lhs(0,7)=clhs14*clhs7;
    lhs(0,8)=clhs15*clhs7;
    lhs(0,9)=clhs0*clhs17 + clhs18*clhs7 + clhs19*clhs23;
    lhs(0,10)=clhs0*clhs25 + clhs19*clhs30 + clhs26*clhs7;
    lhs(0,11)=clhs0*clhs32 + clhs19*clhs37 + clhs33*clhs7;
    lhs(0,12)=clhs0*clhs39 + clhs19*clhs44 + clhs40*clhs7;
    lhs(0,13)=clhs0*clhs46 + clhs19*clhs51 + clhs47*clhs7;
    lhs(0,14)=clhs0*clhs53 + clhs19*clhs58 + clhs54*clhs7;
    lhs(0,15)=clhs0*clhs60 + clhs19*clhs65 + clhs61*clhs7;
    lhs(0,16)=clhs0*clhs67 + clhs19*clhs72 + clhs68*clhs7;
    lhs(0,17)=clhs0*clhs74 + clhs19*clhs79 + clhs7*clhs75;
    lhs(0,18)=clhs80;
    lhs(0,19)=0;
    lhs(0,20)=0;
    lhs(0,21)=clhs81;
    lhs(0,22)=0;
    lhs(0,23)=0;
    lhs(0,24)=clhs82;
    lhs(0,25)=0;
    lhs(0,26)=0;
    lhs(1,0)=clhs1*clhs84;
    lhs(1,1)=clhs8*clhs84;
    lhs(1,2)=clhs84*clhs9;
    lhs(1,3)=clhs10*clhs84;
    lhs(1,4)=clhs11*clhs84;
    lhs(1,5)=clhs12*clhs84;
    lhs(1,6)=clhs13*clhs84;
    lhs(1,7)=clhs14*clhs84;
    lhs(1,8)=clhs15*clhs84;
    lhs(1,9)=clhs0*clhs85 + clhs18*clhs84 + clhs19*clhs86;
    lhs(1,10)=clhs0*clhs87 + clhs19*clhs88 + clhs26*clhs84;
    lhs(1,11)=clhs0*clhs89 + clhs19*clhs90 + clhs33*clhs84;
    lhs(1,12)=clhs0*clhs91 + clhs19*clhs92 + clhs40*clhs84;
    lhs(1,13)=clhs0*clhs93 + clhs19*clhs94 + clhs47*clhs84;
    lhs(1,14)=clhs0*clhs95 + clhs19*clhs96 + clhs54*clhs84;
    lhs(1,15)=clhs0*clhs97 + clhs19*clhs98 + clhs61*clhs84;
    lhs(1,16)=clhs0*clhs99 + clhs100*clhs19 + clhs68*clhs84;
    lhs(1,17)=clhs0*clhs101 + clhs102*clhs19 + clhs75*clhs84;
    lhs(1,18)=0;
    lhs(1,19)=clhs80;
    lhs(1,20)=0;
    lhs(1,21)=0;
    lhs(1,22)=clhs81;
    lhs(1,23)=0;
    lhs(1,24)=0;
    lhs(1,25)=clhs82;
    lhs(1,26)=0;
    lhs(2,0)=clhs1*clhs104;
    lhs(2,1)=clhs104*clhs8;
    lhs(2,2)=clhs104*clhs9;
    lhs(2,3)=clhs10*clhs104;
    lhs(2,4)=clhs104*clhs11;
    lhs(2,5)=clhs104*clhs12;
    lhs(2,6)=clhs104*clhs13;
    lhs(2,7)=clhs104*clhs14;
    lhs(2,8)=clhs104*clhs15;
    lhs(2,9)=clhs0*clhs105 + clhs104*clhs18 + clhs106*clhs19;
    lhs(2,10)=clhs0*clhs107 + clhs104*clhs26 + clhs108*clhs19;
    lhs(2,11)=clhs0*clhs109 + clhs104*clhs33 + clhs110*clhs19;
    lhs(2,12)=clhs0*clhs111 + clhs104*clhs40 + clhs112*clhs19;
    lhs(2,13)=clhs0*clhs113 + clhs104*clhs47 + clhs114*clhs19;
    lhs(2,14)=clhs0*clhs115 + clhs104*clhs54 + clhs116*clhs19;
    lhs(2,15)=clhs0*clhs117 + clhs104*clhs61 + clhs118*clhs19;
    lhs(2,16)=clhs0*clhs119 + clhs104*clhs68 + clhs120*clhs19;
    lhs(2,17)=clhs0*clhs121 + clhs104*clhs75 + clhs122*clhs19;
    lhs(2,18)=0;
    lhs(2,19)=0;
    lhs(2,20)=clhs80;
    lhs(2,21)=0;
    lhs(2,22)=0;
    lhs(2,23)=clhs81;
    lhs(2,24)=0;
    lhs(2,25)=0;
    lhs(2,26)=clhs82;
    lhs(3,0)=clhs124*clhs7;
    lhs(3,1)=clhs125*clhs7;
    lhs(3,2)=clhs126*clhs7;
    lhs(3,3)=clhs127*clhs7;
    lhs(3,4)=clhs128*clhs7;
    lhs(3,5)=clhs129*clhs7;
    lhs(3,6)=clhs130*clhs7;
    lhs(3,7)=clhs131*clhs7;
    lhs(3,8)=clhs132*clhs7;
    lhs(3,9)=clhs123*clhs17 + clhs133*clhs7 + clhs134*clhs23;
    lhs(3,10)=clhs123*clhs25 + clhs134*clhs30 + clhs135*clhs7;
    lhs(3,11)=clhs123*clhs32 + clhs134*clhs37 + clhs136*clhs7;
    lhs(3,12)=clhs123*clhs39 + clhs134*clhs44 + clhs137*clhs7;
    lhs(3,13)=clhs123*clhs46 + clhs134*clhs51 + clhs138*clhs7;
    lhs(3,14)=clhs123*clhs53 + clhs134*clhs58 + clhs139*clhs7;
    lhs(3,15)=clhs123*clhs60 + clhs134*clhs65 + clhs140*clhs7;
    lhs(3,16)=clhs123*clhs67 + clhs134*clhs72 + clhs141*clhs7;
    lhs(3,17)=clhs123*clhs74 + clhs134*clhs79 + clhs142*clhs7;
    lhs(3,18)=clhs143;
    lhs(3,19)=0;
    lhs(3,20)=0;
    lhs(3,21)=clhs144;
    lhs(3,22)=0;
    lhs(3,23)=0;
    lhs(3,24)=clhs145;
    lhs(3,25)=0;
    lhs(3,26)=0;
    lhs(4,0)=clhs124*clhs84;
    lhs(4,1)=clhs125*clhs84;
    lhs(4,2)=clhs126*clhs84;
    lhs(4,3)=clhs127*clhs84;
    lhs(4,4)=clhs128*clhs84;
    lhs(4,5)=clhs129*clhs84;
    lhs(4,6)=clhs130*clhs84;
    lhs(4,7)=clhs131*clhs84;
    lhs(4,8)=clhs132*clhs84;
    lhs(4,9)=clhs123*clhs85 + clhs133*clhs84 + clhs134*clhs86;
    lhs(4,10)=clhs123*clhs87 + clhs134*clhs88 + clhs135*clhs84;
    lhs(4,11)=clhs123*clhs89 + clhs134*clhs90 + clhs136*clhs84;
    lhs(4,12)=clhs123*clhs91 + clhs134*clhs92 + clhs137*clhs84;
    lhs(4,13)=clhs123*clhs93 + clhs134*clhs94 + clhs138*clhs84;
    lhs(4,14)=clhs123*clhs95 + clhs134*clhs96 + clhs139*clhs84;
    lhs(4,15)=clhs123*clhs97 + clhs134*clhs98 + clhs140*clhs84;
    lhs(4,16)=clhs100*clhs134 + clhs123*clhs99 + clhs141*clhs84;
    lhs(4,17)=clhs101*clhs123 + clhs102*clhs134 + clhs142*clhs84;
    lhs(4,18)=0;
    lhs(4,19)=clhs143;
    lhs(4,20)=0;
    lhs(4,21)=0;
    lhs(4,22)=clhs144;
    lhs(4,23)=0;
    lhs(4,24)=0;
    lhs(4,25)=clhs145;
    lhs(4,26)=0;
    lhs(5,0)=clhs104*clhs124;
    lhs(5,1)=clhs104*clhs125;
    lhs(5,2)=clhs104*clhs126;
    lhs(5,3)=clhs104*clhs127;
    lhs(5,4)=clhs104*clhs128;
    lhs(5,5)=clhs104*clhs129;
    lhs(5,6)=clhs104*clhs130;
    lhs(5,7)=clhs104*clhs131;
    lhs(5,8)=clhs104*clhs132;
    lhs(5,9)=clhs104*clhs133 + clhs105*clhs123 + clhs106*clhs134;
    lhs(5,10)=clhs104*clhs135 + clhs107*clhs123 + clhs108*clhs134;
    lhs(5,11)=clhs104*clhs136 + clhs109*clhs123 + clhs110*clhs134;
    lhs(5,12)=clhs104*clhs137 + clhs111*clhs123 + clhs112*clhs134;
    lhs(5,13)=clhs104*clhs138 + clhs113*clhs123 + clhs114*clhs134;
    lhs(5,14)=clhs104*clhs139 + clhs115*clhs123 + clhs116*clhs134;
    lhs(5,15)=clhs104*clhs140 + clhs117*clhs123 + clhs118*clhs134;
    lhs(5,16)=clhs104*clhs141 + clhs119*clhs123 + clhs120*clhs134;
    lhs(5,17)=clhs104*clhs142 + clhs121*clhs123 + clhs122*clhs134;
    lhs(5,18)=0;
    lhs(5,19)=0;
    lhs(5,20)=clhs143;
    lhs(5,21)=0;
    lhs(5,22)=0;
    lhs(5,23)=clhs144;
    lhs(5,24)=0;
    lhs(5,25)=0;
    lhs(5,26)=clhs145;
    lhs(6,0)=clhs147*clhs7;
    lhs(6,1)=clhs148*clhs7;
    lhs(6,2)=clhs149*clhs7;
    lhs(6,3)=clhs150*clhs7;
    lhs(6,4)=clhs151*clhs7;
    lhs(6,5)=clhs152*clhs7;
    lhs(6,6)=clhs153*clhs7;
    lhs(6,7)=clhs154*clhs7;
    lhs(6,8)=clhs155*clhs7;
    lhs(6,9)=clhs146*clhs17 + clhs156*clhs7 + clhs157*clhs23;
    lhs(6,10)=clhs146*clhs25 + clhs157*clhs30 + clhs158*clhs7;
    lhs(6,11)=clhs146*clhs32 + clhs157*clhs37 + clhs159*clhs7;
    lhs(6,12)=clhs146*clhs39 + clhs157*clhs44 + clhs160*clhs7;
    lhs(6,13)=clhs146*clhs46 + clhs157*clhs51 + clhs161*clhs7;
    lhs(6,14)=clhs146*clhs53 + clhs157*clhs58 + clhs162*clhs7;
    lhs(6,15)=clhs146*clhs60 + clhs157*clhs65 + clhs163*clhs7;
    lhs(6,16)=clhs146*clhs67 + clhs157*clhs72 + clhs164*clhs7;
    lhs(6,17)=clhs146*clhs74 + clhs157*clhs79 + clhs165*clhs7;
    lhs(6,18)=clhs166;
    lhs(6,19)=0;
    lhs(6,20)=0;
    lhs(6,21)=clhs167;
    lhs(6,22)=0;
    lhs(6,23)=0;
    lhs(6,24)=clhs168;
    lhs(6,25)=0;
    lhs(6,26)=0;
    lhs(7,0)=clhs147*clhs84;
    lhs(7,1)=clhs148*clhs84;
    lhs(7,2)=clhs149*clhs84;
    lhs(7,3)=clhs150*clhs84;
    lhs(7,4)=clhs151*clhs84;
    lhs(7,5)=clhs152*clhs84;
    lhs(7,6)=clhs153*clhs84;
    lhs(7,7)=clhs154*clhs84;
    lhs(7,8)=clhs155*clhs84;
    lhs(7,9)=clhs146*clhs85 + clhs156*clhs84 + clhs157*clhs86;
    lhs(7,10)=clhs146*clhs87 + clhs157*clhs88 + clhs158*clhs84;
    lhs(7,11)=clhs146*clhs89 + clhs157*clhs90 + clhs159*clhs84;
    lhs(7,12)=clhs146*clhs91 + clhs157*clhs92 + clhs160*clhs84;
    lhs(7,13)=clhs146*clhs93 + clhs157*clhs94 + clhs161*clhs84;
    lhs(7,14)=clhs146*clhs95 + clhs157*clhs96 + clhs162*clhs84;
    lhs(7,15)=clhs146*clhs97 + clhs157*clhs98 + clhs163*clhs84;
    lhs(7,16)=clhs100*clhs157 + clhs146*clhs99 + clhs164*clhs84;
    lhs(7,17)=clhs101*clhs146 + clhs102*clhs157 + clhs165*clhs84;
    lhs(7,18)=0;
    lhs(7,19)=clhs166;
    lhs(7,20)=0;
    lhs(7,21)=0;
    lhs(7,22)=clhs167;
    lhs(7,23)=0;
    lhs(7,24)=0;
    lhs(7,25)=clhs168;
    lhs(7,26)=0;
    lhs(8,0)=clhs104*clhs147;
    lhs(8,1)=clhs104*clhs148;
    lhs(8,2)=clhs104*clhs149;
    lhs(8,3)=clhs104*clhs150;
    lhs(8,4)=clhs104*clhs151;
    lhs(8,5)=clhs104*clhs152;
    lhs(8,6)=clhs104*clhs153;
    lhs(8,7)=clhs104*clhs154;
    lhs(8,8)=clhs104*clhs155;
    lhs(8,9)=clhs104*clhs156 + clhs105*clhs146 + clhs106*clhs157;
    lhs(8,10)=clhs104*clhs158 + clhs107*clhs146 + clhs108*clhs157;
    lhs(8,11)=clhs104*clhs159 + clhs109*clhs146 + clhs110*clhs157;
    lhs(8,12)=clhs104*clhs160 + clhs111*clhs146 + clhs112*clhs157;
    lhs(8,13)=clhs104*clhs161 + clhs113*clhs146 + clhs114*clhs157;
    lhs(8,14)=clhs104*clhs162 + clhs115*clhs146 + clhs116*clhs157;
    lhs(8,15)=clhs104*clhs163 + clhs117*clhs146 + clhs118*clhs157;
    lhs(8,16)=clhs104*clhs164 + clhs119*clhs146 + clhs120*clhs157;
    lhs(8,17)=clhs104*clhs165 + clhs121*clhs146 + clhs122*clhs157;
    lhs(8,18)=0;
    lhs(8,19)=0;
    lhs(8,20)=clhs166;
    lhs(8,21)=0;
    lhs(8,22)=0;
    lhs(8,23)=clhs167;
    lhs(8,24)=0;
    lhs(8,25)=0;
    lhs(8,26)=clhs168;
    lhs(9,0)=0;
    lhs(9,1)=0;
    lhs(9,2)=0;
    lhs(9,3)=0;
    lhs(9,4)=0;
    lhs(9,5)=0;
    lhs(9,6)=0;
    lhs(9,7)=0;
    lhs(9,8)=0;
    lhs(9,9)=-N1[0]*clhs169;
    lhs(9,10)=-N1[0]*clhs170;
    lhs(9,11)=-N1[0]*clhs171;
    lhs(9,12)=-N1[0]*clhs172;
    lhs(9,13)=-N1[0]*clhs173;
    lhs(9,14)=-N1[0]*clhs174;
    lhs(9,15)=-N1[0]*clhs175;
    lhs(9,16)=-N1[0]*clhs176;
    lhs(9,17)=-N1[0]*clhs177;
    lhs(9,18)=clhs179;
    lhs(9,19)=0;
    lhs(9,20)=0;
    lhs(9,21)=clhs180;
    lhs(9,22)=0;
    lhs(9,23)=0;
    lhs(9,24)=clhs181;
    lhs(9,25)=0;
    lhs(9,26)=0;
    lhs(10,0)=0;
    lhs(10,1)=0;
    lhs(10,2)=0;
    lhs(10,3)=0;
    lhs(10,4)=0;
    lhs(10,5)=0;
    lhs(10,6)=0;
    lhs(10,7)=0;
    lhs(10,8)=0;
    lhs(10,9)=-N1[0]*clhs182;
    lhs(10,10)=-N1[0]*clhs183;
    lhs(10,11)=-N1[0]*clhs184;
    lhs(10,12)=-N1[0]*clhs185;
    lhs(10,13)=-N1[0]*clhs186;
    lhs(10,14)=-N1[0]*clhs187;
    lhs(10,15)=-N1[0]*clhs188;
    lhs(10,16)=-N1[0]*clhs189;
    lhs(10,17)=-N1[0]*clhs190;
    lhs(10,18)=0;
    lhs(10,19)=clhs179;
    lhs(10,20)=0;
    lhs(10,21)=0;
    lhs(10,22)=clhs180;
    lhs(10,23)=0;
    lhs(10,24)=0;
    lhs(10,25)=clhs181;
    lhs(10,26)=0;
    lhs(11,0)=0;
    lhs(11,1)=0;
    lhs(11,2)=0;
    lhs(11,3)=0;
    lhs(11,4)=0;
    lhs(11,5)=0;
    lhs(11,6)=0;
    lhs(11,7)=0;
    lhs(11,8)=0;
    lhs(11,9)=-N1[0]*clhs191;
    lhs(11,10)=-N1[0]*clhs192;
    lhs(11,11)=-N1[0]*clhs193;
    lhs(11,12)=-N1[0]*clhs194;
    lhs(11,13)=-N1[0]*clhs195;
    lhs(11,14)=-N1[0]*clhs196;
    lhs(11,15)=-N1[0]*clhs197;
    lhs(11,16)=-N1[0]*clhs198;
    lhs(11,17)=-N1[0]*clhs199;
    lhs(11,18)=0;
    lhs(11,19)=0;
    lhs(11,20)=clhs179;
    lhs(11,21)=0;
    lhs(11,22)=0;
    lhs(11,23)=clhs180;
    lhs(11,24)=0;
    lhs(11,25)=0;
    lhs(11,26)=clhs181;
    lhs(12,0)=0;
    lhs(12,1)=0;
    lhs(12,2)=0;
    lhs(12,3)=0;
    lhs(12,4)=0;
    lhs(12,5)=0;
    lhs(12,6)=0;
    lhs(12,7)=0;
    lhs(12,8)=0;
    lhs(12,9)=-N1[1]*clhs169;
    lhs(12,10)=-N1[1]*clhs170;
    lhs(12,11)=-N1[1]*clhs171;
    lhs(12,12)=-N1[1]*clhs172;
    lhs(12,13)=-N1[1]*clhs173;
    lhs(12,14)=-N1[1]*clhs174;
    lhs(12,15)=-N1[1]*clhs175;
    lhs(12,16)=-N1[1]*clhs176;
    lhs(12,17)=-N1[1]*clhs177;
    lhs(12,18)=clhs201;
    lhs(12,19)=0;
    lhs(12,20)=0;
    lhs(12,21)=clhs202;
    lhs(12,22)=0;
    lhs(12,23)=0;
    lhs(12,24)=clhs203;
    lhs(12,25)=0;
    lhs(12,26)=0;
    lhs(13,0)=0;
    lhs(13,1)=0;
    lhs(13,2)=0;
    lhs(13,3)=0;
    lhs(13,4)=0;
    lhs(13,5)=0;
    lhs(13,6)=0;
    lhs(13,7)=0;
    lhs(13,8)=0;
    lhs(13,9)=-N1[1]*clhs182;
    lhs(13,10)=-N1[1]*clhs183;
    lhs(13,11)=-N1[1]*clhs184;
    lhs(13,12)=-N1[1]*clhs185;
    lhs(13,13)=-N1[1]*clhs186;
    lhs(13,14)=-N1[1]*clhs187;
    lhs(13,15)=-N1[1]*clhs188;
    lhs(13,16)=-N1[1]*clhs189;
    lhs(13,17)=-N1[1]*clhs190;
    lhs(13,18)=0;
    lhs(13,19)=clhs201;
    lhs(13,20)=0;
    lhs(13,21)=0;
    lhs(13,22)=clhs202;
    lhs(13,23)=0;
    lhs(13,24)=0;
    lhs(13,25)=clhs203;
    lhs(13,26)=0;
    lhs(14,0)=0;
    lhs(14,1)=0;
    lhs(14,2)=0;
    lhs(14,3)=0;
    lhs(14,4)=0;
    lhs(14,5)=0;
    lhs(14,6)=0;
    lhs(14,7)=0;
    lhs(14,8)=0;
    lhs(14,9)=-N1[1]*clhs191;
    lhs(14,10)=-N1[1]*clhs192;
    lhs(14,11)=-N1[1]*clhs193;
    lhs(14,12)=-N1[1]*clhs194;
    lhs(14,13)=-N1[1]*clhs195;
    lhs(14,14)=-N1[1]*clhs196;
    lhs(14,15)=-N1[1]*clhs197;
    lhs(14,16)=-N1[1]*clhs198;
    lhs(14,17)=-N1[1]*clhs199;
    lhs(14,18)=0;
    lhs(14,19)=0;
    lhs(14,20)=clhs201;
    lhs(14,21)=0;
    lhs(14,22)=0;
    lhs(14,23)=clhs202;
    lhs(14,24)=0;
    lhs(14,25)=0;
    lhs(14,26)=clhs203;
    lhs(15,0)=0;
    lhs(15,1)=0;
    lhs(15,2)=0;
    lhs(15,3)=0;
    lhs(15,4)=0;
    lhs(15,5)=0;
    lhs(15,6)=0;
    lhs(15,7)=0;
    lhs(15,8)=0;
    lhs(15,9)=-N1[2]*clhs169;
    lhs(15,10)=-N1[2]*clhs170;
    lhs(15,11)=-N1[2]*clhs171;
    lhs(15,12)=-N1[2]*clhs172;
    lhs(15,13)=-N1[2]*clhs173;
    lhs(15,14)=-N1[2]*clhs174;
    lhs(15,15)=-N1[2]*clhs175;
    lhs(15,16)=-N1[2]*clhs176;
    lhs(15,17)=-N1[2]*clhs177;
    lhs(15,18)=clhs205;
    lhs(15,19)=0;
    lhs(15,20)=0;
    lhs(15,21)=clhs206;
    lhs(15,22)=0;
    lhs(15,23)=0;
    lhs(15,24)=clhs207;
    lhs(15,25)=0;
    lhs(15,26)=0;
    lhs(16,0)=0;
    lhs(16,1)=0;
    lhs(16,2)=0;
    lhs(16,3)=0;
    lhs(16,4)=0;
    lhs(16,5)=0;
    lhs(16,6)=0;
    lhs(16,7)=0;
    lhs(16,8)=0;
    lhs(16,9)=-N1[2]*clhs182;
    lhs(16,10)=-N1[2]*clhs183;
    lhs(16,11)=-N1[2]*clhs184;
    lhs(16,12)=-N1[2]*clhs185;
    lhs(16,13)=-N1[2]*clhs186;
    lhs(16,14)=-N1[2]*clhs187;
    lhs(16,15)=-N1[2]*clhs188;
    lhs(16,16)=-N1[2]*clhs189;
    lhs(16,17)=-N1[2]*clhs190;
    lhs(16,18)=0;
    lhs(16,19)=clhs205;
    lhs(16,20)=0;
    lhs(16,21)=0;
    lhs(16,22)=clhs206;
    lhs(16,23)=0;
    lhs(16,24)=0;
    lhs(16,25)=clhs207;
    lhs(16,26)=0;
    lhs(17,0)=0;
    lhs(17,1)=0;
    lhs(17,2)=0;
    lhs(17,3)=0;
    lhs(17,4)=0;
    lhs(17,5)=0;
    lhs(17,6)=0;
    lhs(17,7)=0;
    lhs(17,8)=0;
    lhs(17,9)=-N1[2]*clhs191;
    lhs(17,10)=-N1[2]*clhs192;
    lhs(17,11)=-N1[2]*clhs193;
    lhs(17,12)=-N1[2]*clhs194;
    lhs(17,13)=-N1[2]*clhs195;
    lhs(17,14)=-N1[2]*clhs196;
    lhs(17,15)=-N1[2]*clhs197;
    lhs(17,16)=-N1[2]*clhs198;
    lhs(17,17)=-N1[2]*clhs199;
    lhs(17,18)=0;
    lhs(17,19)=0;
    lhs(17,20)=clhs205;
    lhs(17,21)=0;
    lhs(17,22)=0;
    lhs(17,23)=clhs206;
    lhs(17,24)=0;
    lhs(17,25)=0;
    lhs(17,26)=clhs207;
    lhs(18,0)=-clhs208*(clhs209*clhs211 + clhs212*clhs237 + clhs238*clhs250);
    lhs(18,1)=-clhs208*(clhs209*clhs251 + clhs212*clhs255 + clhs238*clhs256);
    lhs(18,2)=-clhs208*(clhs209*clhs257 + clhs212*clhs261 + clhs238*clhs262);
    lhs(18,3)=-clhs208*(clhs209*clhs263 + clhs212*clhs267 + clhs238*clhs268);
    lhs(18,4)=-clhs208*(clhs209*clhs269 + clhs212*clhs273 + clhs238*clhs274);
    lhs(18,5)=-clhs208*(clhs209*clhs275 + clhs212*clhs279 + clhs238*clhs280);
    lhs(18,6)=-clhs208*(clhs209*clhs281 + clhs212*clhs285 + clhs238*clhs286);
    lhs(18,7)=-clhs208*(clhs209*clhs287 + clhs212*clhs291 + clhs238*clhs292);
    lhs(18,8)=-clhs208*(clhs209*clhs293 + clhs212*clhs297 + clhs238*clhs298);
    lhs(18,9)=-clhs16*clhs302 + clhs16*clhs310 + clhs16*clhs315 - clhs20*clhs303 + clhs20*clhs311 + clhs20*clhs316 - clhs299*DeltaNormals[0](0,0) - clhs300*clhs301 + clhs304*clhs309 + clhs312*clhs314 - clhs330*tan1slave(0,0) - clhs340*tan2slave(0,0);
    lhs(18,10)=-clhs24*clhs302 + clhs24*clhs310 + clhs24*clhs315 - clhs27*clhs303 + clhs27*clhs311 + clhs27*clhs316 - clhs299*DeltaNormals[1](0,0) - clhs301*clhs341 + clhs309*clhs342 + clhs314*clhs343 - clhs356*tan1slave(0,0) - clhs366*tan2slave(0,0);
    lhs(18,11)=-clhs299*DeltaNormals[2](0,0) - clhs301*clhs367 - clhs302*clhs31 - clhs303*clhs34 + clhs309*clhs368 + clhs31*clhs310 + clhs31*clhs315 + clhs311*clhs34 + clhs314*clhs369 + clhs316*clhs34 - clhs382*tan1slave(0,0) - clhs392*tan2slave(0,0);
    lhs(18,12)=-clhs299*DeltaNormals[3](0,0) - clhs301*clhs393 - clhs302*clhs38 - clhs303*clhs41 + clhs309*clhs394 + clhs310*clhs38 + clhs311*clhs41 + clhs314*clhs395 + clhs315*clhs38 + clhs316*clhs41 - clhs409*tan1slave(0,0) - clhs419*tan2slave(0,0);
    lhs(18,13)=-clhs299*DeltaNormals[4](0,0) - clhs301*clhs420 - clhs302*clhs45 - clhs303*clhs48 + clhs309*clhs421 + clhs310*clhs45 + clhs311*clhs48 + clhs314*clhs422 + clhs315*clhs45 + clhs316*clhs48 - clhs435*tan1slave(0,0) - clhs445*tan2slave(0,0);
    lhs(18,14)=-clhs299*DeltaNormals[5](0,0) - clhs301*clhs446 - clhs302*clhs52 - clhs303*clhs55 + clhs309*clhs447 + clhs310*clhs52 + clhs311*clhs55 + clhs314*clhs448 + clhs315*clhs52 + clhs316*clhs55 - clhs461*tan1slave(0,0) - clhs471*tan2slave(0,0);
    lhs(18,15)=-clhs299*DeltaNormals[6](0,0) - clhs301*clhs472 - clhs302*clhs59 - clhs303*clhs62 + clhs309*clhs473 + clhs310*clhs59 + clhs311*clhs62 + clhs314*clhs474 + clhs315*clhs59 + clhs316*clhs62 - clhs488*tan1slave(0,0) - clhs498*tan2slave(0,0);
    lhs(18,16)=-clhs299*DeltaNormals[7](0,0) - clhs301*clhs499 - clhs302*clhs66 - clhs303*clhs69 + clhs309*clhs500 + clhs310*clhs66 + clhs311*clhs69 + clhs314*clhs501 + clhs315*clhs66 + clhs316*clhs69 - clhs514*tan1slave(0,0) - clhs524*tan2slave(0,0);
    lhs(18,17)=-clhs299*DeltaNormals[8](0,0) - clhs301*clhs525 - clhs302*clhs73 - clhs303*clhs76 + clhs309*clhs526 + clhs310*clhs73 + clhs311*clhs76 + clhs314*clhs527 + clhs315*clhs73 + clhs316*clhs76 - clhs540*tan1slave(0,0) - clhs550*tan2slave(0,0);
    lhs(18,18)=0;
    lhs(18,19)=0;
    lhs(18,20)=0;
    lhs(18,21)=0;
    lhs(18,22)=0;
    lhs(18,23)=0;
    lhs(18,24)=0;
    lhs(18,25)=0;
    lhs(18,26)=0;
    lhs(19,0)=-clhs208*(clhs211*clhs551 + clhs214*clhs237 + clhs239*clhs250);
    lhs(19,1)=-clhs208*(clhs214*clhs255 + clhs239*clhs256 + clhs251*clhs551);
    lhs(19,2)=-clhs208*(clhs214*clhs261 + clhs239*clhs262 + clhs257*clhs551);
    lhs(19,3)=-clhs208*(clhs214*clhs267 + clhs239*clhs268 + clhs263*clhs551);
    lhs(19,4)=-clhs208*(clhs214*clhs273 + clhs239*clhs274 + clhs269*clhs551);
    lhs(19,5)=-clhs208*(clhs214*clhs279 + clhs239*clhs280 + clhs275*clhs551);
    lhs(19,6)=-clhs208*(clhs214*clhs285 + clhs239*clhs286 + clhs281*clhs551);
    lhs(19,7)=-clhs208*(clhs214*clhs291 + clhs239*clhs292 + clhs287*clhs551);
    lhs(19,8)=-clhs208*(clhs214*clhs297 + clhs239*clhs298 + clhs293*clhs551);
    lhs(19,9)=-clhs16*clhs553 + clhs16*clhs555 + clhs16*clhs557 - clhs20*clhs554 + clhs20*clhs556 + clhs20*clhs558 - clhs299*DeltaNormals[0](0,1) - clhs300*clhs552 + clhs309*clhs323 + clhs314*clhs333 - clhs330*tan1slave(0,1) - clhs340*tan2slave(0,1);
    lhs(19,10)=-clhs24*clhs553 + clhs24*clhs555 + clhs24*clhs557 - clhs27*clhs554 + clhs27*clhs556 + clhs27*clhs558 - clhs299*DeltaNormals[1](0,1) + clhs309*clhs349 + clhs314*clhs359 - clhs341*clhs552 - clhs356*tan1slave(0,1) - clhs366*tan2slave(0,1);
    lhs(19,11)=-clhs299*DeltaNormals[2](0,1) + clhs309*clhs375 - clhs31*clhs553 + clhs31*clhs555 + clhs31*clhs557 + clhs314*clhs385 - clhs34*clhs554 + clhs34*clhs556 + clhs34*clhs558 - clhs367*clhs552 - clhs382*tan1slave(0,1) - clhs392*tan2slave(0,1);
    lhs(19,12)=-clhs299*DeltaNormals[3](0,1) + clhs309*clhs402 + clhs314*clhs412 - clhs38*clhs553 + clhs38*clhs555 + clhs38*clhs557 - clhs393*clhs552 - clhs409*tan1slave(0,1) - clhs41*clhs554 + clhs41*clhs556 + clhs41*clhs558 - clhs419*tan2slave(0,1);
    lhs(19,13)=-clhs299*DeltaNormals[4](0,1) + clhs309*clhs428 + clhs314*clhs438 - clhs420*clhs552 - clhs435*tan1slave(0,1) - clhs445*tan2slave(0,1) - clhs45*clhs553 + clhs45*clhs555 + clhs45*clhs557 - clhs48*clhs554 + clhs48*clhs556 + clhs48*clhs558;
    lhs(19,14)=-clhs299*DeltaNormals[5](0,1) + clhs309*clhs454 + clhs314*clhs464 - clhs446*clhs552 - clhs461*tan1slave(0,1) - clhs471*tan2slave(0,1) - clhs52*clhs553 + clhs52*clhs555 + clhs52*clhs557 - clhs55*clhs554 + clhs55*clhs556 + clhs55*clhs558;
    lhs(19,15)=-clhs299*DeltaNormals[6](0,1) + clhs309*clhs481 + clhs314*clhs491 - clhs472*clhs552 - clhs488*tan1slave(0,1) - clhs498*tan2slave(0,1) - clhs553*clhs59 - clhs554*clhs62 + clhs555*clhs59 + clhs556*clhs62 + clhs557*clhs59 + clhs558*clhs62;
    lhs(19,16)=-clhs299*DeltaNormals[7](0,1) + clhs309*clhs507 + clhs314*clhs517 - clhs499*clhs552 - clhs514*tan1slave(0,1) - clhs524*tan2slave(0,1) - clhs553*clhs66 - clhs554*clhs69 + clhs555*clhs66 + clhs556*clhs69 + clhs557*clhs66 + clhs558*clhs69;
    lhs(19,17)=-clhs299*DeltaNormals[8](0,1) + clhs309*clhs533 + clhs314*clhs543 - clhs525*clhs552 - clhs540*tan1slave(0,1) - clhs550*tan2slave(0,1) - clhs553*clhs73 - clhs554*clhs76 + clhs555*clhs73 + clhs556*clhs76 + clhs557*clhs73 + clhs558*clhs76;
    lhs(19,18)=0;
    lhs(19,19)=0;
    lhs(19,20)=0;
    lhs(19,21)=0;
    lhs(19,22)=0;
    lhs(19,23)=0;
    lhs(19,24)=0;
    lhs(19,25)=0;
    lhs(19,26)=0;
    lhs(20,0)=-clhs208*(clhs211*clhs559 + clhs222*clhs237 + clhs243*clhs250);
    lhs(20,1)=-clhs208*(clhs222*clhs255 + clhs243*clhs256 + clhs251*clhs559);
    lhs(20,2)=-clhs208*(clhs222*clhs261 + clhs243*clhs262 + clhs257*clhs559);
    lhs(20,3)=-clhs208*(clhs222*clhs267 + clhs243*clhs268 + clhs263*clhs559);
    lhs(20,4)=-clhs208*(clhs222*clhs273 + clhs243*clhs274 + clhs269*clhs559);
    lhs(20,5)=-clhs208*(clhs222*clhs279 + clhs243*clhs280 + clhs275*clhs559);
    lhs(20,6)=-clhs208*(clhs222*clhs285 + clhs243*clhs286 + clhs281*clhs559);
    lhs(20,7)=-clhs208*(clhs222*clhs291 + clhs243*clhs292 + clhs287*clhs559);
    lhs(20,8)=-clhs208*(clhs222*clhs297 + clhs243*clhs298 + clhs293*clhs559);
    lhs(20,9)=-clhs16*clhs561 + clhs16*clhs563 + clhs16*clhs565 - clhs20*clhs562 + clhs20*clhs564 + clhs20*clhs566 - clhs299*DeltaNormals[0](0,2) - clhs300*clhs560 + clhs309*clhs326 + clhs314*clhs336 - clhs330*tan1slave(0,2) - clhs340*tan2slave(0,2);
    lhs(20,10)=-clhs24*clhs561 + clhs24*clhs563 + clhs24*clhs565 - clhs27*clhs562 + clhs27*clhs564 + clhs27*clhs566 - clhs299*DeltaNormals[1](0,2) + clhs309*clhs352 + clhs314*clhs362 - clhs341*clhs560 - clhs356*tan1slave(0,2) - clhs366*tan2slave(0,2);
    lhs(20,11)=-clhs299*DeltaNormals[2](0,2) + clhs309*clhs378 - clhs31*clhs561 + clhs31*clhs563 + clhs31*clhs565 + clhs314*clhs388 - clhs34*clhs562 + clhs34*clhs564 + clhs34*clhs566 - clhs367*clhs560 - clhs382*tan1slave(0,2) - clhs392*tan2slave(0,2);
    lhs(20,12)=-clhs299*DeltaNormals[3](0,2) + clhs309*clhs405 + clhs314*clhs415 - clhs38*clhs561 + clhs38*clhs563 + clhs38*clhs565 - clhs393*clhs560 - clhs409*tan1slave(0,2) - clhs41*clhs562 + clhs41*clhs564 + clhs41*clhs566 - clhs419*tan2slave(0,2);
    lhs(20,13)=-clhs299*DeltaNormals[4](0,2) + clhs309*clhs431 + clhs314*clhs441 - clhs420*clhs560 - clhs435*tan1slave(0,2) - clhs445*tan2slave(0,2) - clhs45*clhs561 + clhs45*clhs563 + clhs45*clhs565 - clhs48*clhs562 + clhs48*clhs564 + clhs48*clhs566;
    lhs(20,14)=-clhs299*DeltaNormals[5](0,2) + clhs309*clhs457 + clhs314*clhs467 - clhs446*clhs560 - clhs461*tan1slave(0,2) - clhs471*tan2slave(0,2) - clhs52*clhs561 + clhs52*clhs563 + clhs52*clhs565 - clhs55*clhs562 + clhs55*clhs564 + clhs55*clhs566;
    lhs(20,15)=-clhs299*DeltaNormals[6](0,2) + clhs309*clhs484 + clhs314*clhs494 - clhs472*clhs560 - clhs488*tan1slave(0,2) - clhs498*tan2slave(0,2) - clhs561*clhs59 - clhs562*clhs62 + clhs563*clhs59 + clhs564*clhs62 + clhs565*clhs59 + clhs566*clhs62;
    lhs(20,16)=-clhs299*DeltaNormals[7](0,2) + clhs309*clhs510 + clhs314*clhs520 - clhs499*clhs560 - clhs514*tan1slave(0,2) - clhs524*tan2slave(0,2) - clhs561*clhs66 - clhs562*clhs69 + clhs563*clhs66 + clhs564*clhs69 + clhs565*clhs66 + clhs566*clhs69;
    lhs(20,17)=-clhs299*DeltaNormals[8](0,2) + clhs309*clhs536 + clhs314*clhs546 - clhs525*clhs560 - clhs540*tan1slave(0,2) - clhs550*tan2slave(0,2) - clhs561*clhs73 - clhs562*clhs76 + clhs563*clhs73 + clhs564*clhs76 + clhs565*clhs73 + clhs566*clhs76;
    lhs(20,18)=0;
    lhs(20,19)=0;
    lhs(20,20)=0;
    lhs(20,21)=0;
    lhs(20,22)=0;
    lhs(20,23)=0;
    lhs(20,24)=0;
    lhs(20,25)=0;
    lhs(20,26)=0;
    lhs(21,0)=-clhs567*(clhs211*clhs568 + clhs230*clhs237 + clhs247*clhs250);
    lhs(21,1)=-clhs567*(clhs230*clhs255 + clhs247*clhs256 + clhs251*clhs568);
    lhs(21,2)=-clhs567*(clhs230*clhs261 + clhs247*clhs262 + clhs257*clhs568);
    lhs(21,3)=-clhs567*(clhs230*clhs267 + clhs247*clhs268 + clhs263*clhs568);
    lhs(21,4)=-clhs567*(clhs230*clhs273 + clhs247*clhs274 + clhs269*clhs568);
    lhs(21,5)=-clhs567*(clhs230*clhs279 + clhs247*clhs280 + clhs275*clhs568);
    lhs(21,6)=-clhs567*(clhs230*clhs285 + clhs247*clhs286 + clhs281*clhs568);
    lhs(21,7)=-clhs567*(clhs230*clhs291 + clhs247*clhs292 + clhs287*clhs568);
    lhs(21,8)=-clhs567*(clhs230*clhs297 + clhs247*clhs298 + clhs293*clhs568);
    lhs(21,9)=-clhs16*clhs571 + clhs16*clhs574 + clhs16*clhs577 - clhs21*clhs572 + clhs21*clhs575 + clhs21*clhs578 - clhs300*clhs570 + clhs321*clhs573 + clhs331*clhs576 - clhs569*DeltaNormals[0](1,0) - clhs579*tan1slave(1,0) - clhs580*tan2slave(1,0);
    lhs(21,10)=-clhs24*clhs571 + clhs24*clhs574 + clhs24*clhs577 - clhs28*clhs572 + clhs28*clhs575 + clhs28*clhs578 - clhs341*clhs570 + clhs347*clhs573 + clhs357*clhs576 - clhs569*DeltaNormals[1](1,0) - clhs581*tan1slave(1,0) - clhs582*tan2slave(1,0);
    lhs(21,11)=-clhs31*clhs571 + clhs31*clhs574 + clhs31*clhs577 - clhs35*clhs572 + clhs35*clhs575 + clhs35*clhs578 - clhs367*clhs570 + clhs373*clhs573 + clhs383*clhs576 - clhs569*DeltaNormals[2](1,0) - clhs583*tan1slave(1,0) - clhs584*tan2slave(1,0);
    lhs(21,12)=-clhs38*clhs571 + clhs38*clhs574 + clhs38*clhs577 - clhs393*clhs570 + clhs400*clhs573 + clhs410*clhs576 - clhs42*clhs572 + clhs42*clhs575 + clhs42*clhs578 - clhs569*DeltaNormals[3](1,0) - clhs585*tan1slave(1,0) - clhs586*tan2slave(1,0);
    lhs(21,13)=-clhs420*clhs570 + clhs426*clhs573 + clhs436*clhs576 - clhs45*clhs571 + clhs45*clhs574 + clhs45*clhs577 - clhs49*clhs572 + clhs49*clhs575 + clhs49*clhs578 - clhs569*DeltaNormals[4](1,0) - clhs587*tan1slave(1,0) - clhs588*tan2slave(1,0);
    lhs(21,14)=-clhs446*clhs570 + clhs452*clhs573 + clhs462*clhs576 - clhs52*clhs571 + clhs52*clhs574 + clhs52*clhs577 - clhs56*clhs572 + clhs56*clhs575 + clhs56*clhs578 - clhs569*DeltaNormals[5](1,0) - clhs589*tan1slave(1,0) - clhs590*tan2slave(1,0);
    lhs(21,15)=-clhs472*clhs570 + clhs479*clhs573 + clhs489*clhs576 - clhs569*DeltaNormals[6](1,0) - clhs571*clhs59 - clhs572*clhs63 + clhs574*clhs59 + clhs575*clhs63 + clhs577*clhs59 + clhs578*clhs63 - clhs591*tan1slave(1,0) - clhs592*tan2slave(1,0);
    lhs(21,16)=-clhs499*clhs570 + clhs505*clhs573 + clhs515*clhs576 - clhs569*DeltaNormals[7](1,0) - clhs571*clhs66 - clhs572*clhs70 + clhs574*clhs66 + clhs575*clhs70 + clhs577*clhs66 + clhs578*clhs70 - clhs593*tan1slave(1,0) - clhs594*tan2slave(1,0);
    lhs(21,17)=-clhs525*clhs570 + clhs531*clhs573 + clhs541*clhs576 - clhs569*DeltaNormals[8](1,0) - clhs571*clhs73 - clhs572*clhs77 + clhs574*clhs73 + clhs575*clhs77 + clhs577*clhs73 + clhs578*clhs77 - clhs595*tan1slave(1,0) - clhs596*tan2slave(1,0);
    lhs(21,18)=0;
    lhs(21,19)=0;
    lhs(21,20)=0;
    lhs(21,21)=0;
    lhs(21,22)=0;
    lhs(21,23)=0;
    lhs(21,24)=0;
    lhs(21,25)=0;
    lhs(21,26)=0;
    lhs(22,0)=-clhs567*(clhs211*clhs597 + clhs215*clhs237 + clhs240*clhs250);
    lhs(22,1)=-clhs567*(clhs215*clhs255 + clhs240*clhs256 + clhs251*clhs597);
    lhs(22,2)=-clhs567*(clhs215*clhs261 + clhs240*clhs262 + clhs257*clhs597);
    lhs(22,3)=-clhs567*(clhs215*clhs267 + clhs240*clhs268 + clhs263*clhs597);
    lhs(22,4)=-clhs567*(clhs215*clhs273 + clhs240*clhs274 + clhs269*clhs597);
    lhs(22,5)=-clhs567*(clhs215*clhs279 + clhs240*clhs280 + clhs275*clhs597);
    lhs(22,6)=-clhs567*(clhs215*clhs285 + clhs240*clhs286 + clhs281*clhs597);
    lhs(22,7)=-clhs567*(clhs215*clhs291 + clhs240*clhs292 + clhs287*clhs597);
    lhs(22,8)=-clhs567*(clhs215*clhs297 + clhs240*clhs298 + clhs293*clhs597);
    lhs(22,9)=-clhs16*clhs599 + clhs16*clhs601 + clhs16*clhs603 - clhs21*clhs600 + clhs21*clhs602 + clhs21*clhs604 - clhs300*clhs598 + clhs324*clhs573 + clhs334*clhs576 - clhs569*DeltaNormals[0](1,1) - clhs579*tan1slave(1,1) - clhs580*tan2slave(1,1);
    lhs(22,10)=-clhs24*clhs599 + clhs24*clhs601 + clhs24*clhs603 - clhs28*clhs600 + clhs28*clhs602 + clhs28*clhs604 - clhs341*clhs598 + clhs350*clhs573 + clhs360*clhs576 - clhs569*DeltaNormals[1](1,1) - clhs581*tan1slave(1,1) - clhs582*tan2slave(1,1);
    lhs(22,11)=-clhs31*clhs599 + clhs31*clhs601 + clhs31*clhs603 - clhs35*clhs600 + clhs35*clhs602 + clhs35*clhs604 - clhs367*clhs598 + clhs376*clhs573 + clhs386*clhs576 - clhs569*DeltaNormals[2](1,1) - clhs583*tan1slave(1,1) - clhs584*tan2slave(1,1);
    lhs(22,12)=-clhs38*clhs599 + clhs38*clhs601 + clhs38*clhs603 - clhs393*clhs598 + clhs403*clhs573 + clhs413*clhs576 - clhs42*clhs600 + clhs42*clhs602 + clhs42*clhs604 - clhs569*DeltaNormals[3](1,1) - clhs585*tan1slave(1,1) - clhs586*tan2slave(1,1);
    lhs(22,13)=-clhs420*clhs598 + clhs429*clhs573 + clhs439*clhs576 - clhs45*clhs599 + clhs45*clhs601 + clhs45*clhs603 - clhs49*clhs600 + clhs49*clhs602 + clhs49*clhs604 - clhs569*DeltaNormals[4](1,1) - clhs587*tan1slave(1,1) - clhs588*tan2slave(1,1);
    lhs(22,14)=-clhs446*clhs598 + clhs455*clhs573 + clhs465*clhs576 - clhs52*clhs599 + clhs52*clhs601 + clhs52*clhs603 - clhs56*clhs600 + clhs56*clhs602 + clhs56*clhs604 - clhs569*DeltaNormals[5](1,1) - clhs589*tan1slave(1,1) - clhs590*tan2slave(1,1);
    lhs(22,15)=-clhs472*clhs598 + clhs482*clhs573 + clhs492*clhs576 - clhs569*DeltaNormals[6](1,1) - clhs59*clhs599 + clhs59*clhs601 + clhs59*clhs603 - clhs591*tan1slave(1,1) - clhs592*tan2slave(1,1) - clhs600*clhs63 + clhs602*clhs63 + clhs604*clhs63;
    lhs(22,16)=-clhs499*clhs598 + clhs508*clhs573 + clhs518*clhs576 - clhs569*DeltaNormals[7](1,1) - clhs593*tan1slave(1,1) - clhs594*tan2slave(1,1) - clhs599*clhs66 - clhs600*clhs70 + clhs601*clhs66 + clhs602*clhs70 + clhs603*clhs66 + clhs604*clhs70;
    lhs(22,17)=-clhs525*clhs598 + clhs534*clhs573 + clhs544*clhs576 - clhs569*DeltaNormals[8](1,1) - clhs595*tan1slave(1,1) - clhs596*tan2slave(1,1) - clhs599*clhs73 - clhs600*clhs77 + clhs601*clhs73 + clhs602*clhs77 + clhs603*clhs73 + clhs604*clhs77;
    lhs(22,18)=0;
    lhs(22,19)=0;
    lhs(22,20)=0;
    lhs(22,21)=0;
    lhs(22,22)=0;
    lhs(22,23)=0;
    lhs(22,24)=0;
    lhs(22,25)=0;
    lhs(22,26)=0;
    lhs(23,0)=-clhs567*(clhs211*clhs605 + clhs223*clhs237 + clhs244*clhs250);
    lhs(23,1)=-clhs567*(clhs223*clhs255 + clhs244*clhs256 + clhs251*clhs605);
    lhs(23,2)=-clhs567*(clhs223*clhs261 + clhs244*clhs262 + clhs257*clhs605);
    lhs(23,3)=-clhs567*(clhs223*clhs267 + clhs244*clhs268 + clhs263*clhs605);
    lhs(23,4)=-clhs567*(clhs223*clhs273 + clhs244*clhs274 + clhs269*clhs605);
    lhs(23,5)=-clhs567*(clhs223*clhs279 + clhs244*clhs280 + clhs275*clhs605);
    lhs(23,6)=-clhs567*(clhs223*clhs285 + clhs244*clhs286 + clhs281*clhs605);
    lhs(23,7)=-clhs567*(clhs223*clhs291 + clhs244*clhs292 + clhs287*clhs605);
    lhs(23,8)=-clhs567*(clhs223*clhs297 + clhs244*clhs298 + clhs293*clhs605);
    lhs(23,9)=-clhs16*clhs607 + clhs16*clhs609 + clhs16*clhs611 - clhs21*clhs608 + clhs21*clhs610 + clhs21*clhs612 - clhs300*clhs606 + clhs327*clhs573 + clhs337*clhs576 - clhs569*DeltaNormals[0](1,2) - clhs579*tan1slave(1,2) - clhs580*tan2slave(1,2);
    lhs(23,10)=-clhs24*clhs607 + clhs24*clhs609 + clhs24*clhs611 - clhs28*clhs608 + clhs28*clhs610 + clhs28*clhs612 - clhs341*clhs606 + clhs353*clhs573 + clhs363*clhs576 - clhs569*DeltaNormals[1](1,2) - clhs581*tan1slave(1,2) - clhs582*tan2slave(1,2);
    lhs(23,11)=-clhs31*clhs607 + clhs31*clhs609 + clhs31*clhs611 - clhs35*clhs608 + clhs35*clhs610 + clhs35*clhs612 - clhs367*clhs606 + clhs379*clhs573 + clhs389*clhs576 - clhs569*DeltaNormals[2](1,2) - clhs583*tan1slave(1,2) - clhs584*tan2slave(1,2);
    lhs(23,12)=-clhs38*clhs607 + clhs38*clhs609 + clhs38*clhs611 - clhs393*clhs606 + clhs406*clhs573 + clhs416*clhs576 - clhs42*clhs608 + clhs42*clhs610 + clhs42*clhs612 - clhs569*DeltaNormals[3](1,2) - clhs585*tan1slave(1,2) - clhs586*tan2slave(1,2);
    lhs(23,13)=-clhs420*clhs606 + clhs432*clhs573 + clhs442*clhs576 - clhs45*clhs607 + clhs45*clhs609 + clhs45*clhs611 - clhs49*clhs608 + clhs49*clhs610 + clhs49*clhs612 - clhs569*DeltaNormals[4](1,2) - clhs587*tan1slave(1,2) - clhs588*tan2slave(1,2);
    lhs(23,14)=-clhs446*clhs606 + clhs458*clhs573 + clhs468*clhs576 - clhs52*clhs607 + clhs52*clhs609 + clhs52*clhs611 - clhs56*clhs608 + clhs56*clhs610 + clhs56*clhs612 - clhs569*DeltaNormals[5](1,2) - clhs589*tan1slave(1,2) - clhs590*tan2slave(1,2);
    lhs(23,15)=-clhs472*clhs606 + clhs485*clhs573 + clhs495*clhs576 - clhs569*DeltaNormals[6](1,2) - clhs59*clhs607 + clhs59*clhs609 + clhs59*clhs611 - clhs591*tan1slave(1,2) - clhs592*tan2slave(1,2) - clhs608*clhs63 + clhs610*clhs63 + clhs612*clhs63;
    lhs(23,16)=-clhs499*clhs606 + clhs511*clhs573 + clhs521*clhs576 - clhs569*DeltaNormals[7](1,2) - clhs593*tan1slave(1,2) - clhs594*tan2slave(1,2) - clhs607*clhs66 - clhs608*clhs70 + clhs609*clhs66 + clhs610*clhs70 + clhs611*clhs66 + clhs612*clhs70;
    lhs(23,17)=-clhs525*clhs606 + clhs537*clhs573 + clhs547*clhs576 - clhs569*DeltaNormals[8](1,2) - clhs595*tan1slave(1,2) - clhs596*tan2slave(1,2) - clhs607*clhs73 - clhs608*clhs77 + clhs609*clhs73 + clhs610*clhs77 + clhs611*clhs73 + clhs612*clhs77;
    lhs(23,18)=0;
    lhs(23,19)=0;
    lhs(23,20)=0;
    lhs(23,21)=0;
    lhs(23,22)=0;
    lhs(23,23)=0;
    lhs(23,24)=0;
    lhs(23,25)=0;
    lhs(23,26)=0;
    lhs(24,0)=-clhs613*(clhs211*clhs614 + clhs231*clhs237 + clhs248*clhs250);
    lhs(24,1)=-clhs613*(clhs231*clhs255 + clhs248*clhs256 + clhs251*clhs614);
    lhs(24,2)=-clhs613*(clhs231*clhs261 + clhs248*clhs262 + clhs257*clhs614);
    lhs(24,3)=-clhs613*(clhs231*clhs267 + clhs248*clhs268 + clhs263*clhs614);
    lhs(24,4)=-clhs613*(clhs231*clhs273 + clhs248*clhs274 + clhs269*clhs614);
    lhs(24,5)=-clhs613*(clhs231*clhs279 + clhs248*clhs280 + clhs275*clhs614);
    lhs(24,6)=-clhs613*(clhs231*clhs285 + clhs248*clhs286 + clhs281*clhs614);
    lhs(24,7)=-clhs613*(clhs231*clhs291 + clhs248*clhs292 + clhs287*clhs614);
    lhs(24,8)=-clhs613*(clhs231*clhs297 + clhs248*clhs298 + clhs293*clhs614);
    lhs(24,9)=-clhs16*clhs617 + clhs16*clhs620 + clhs16*clhs623 - clhs22*clhs618 + clhs22*clhs621 + clhs22*clhs624 - clhs300*clhs616 + clhs322*clhs619 + clhs332*clhs622 - clhs615*DeltaNormals[0](2,0) - clhs625*tan1slave(2,0) - clhs626*tan2slave(2,0);
    lhs(24,10)=-clhs24*clhs617 + clhs24*clhs620 + clhs24*clhs623 - clhs29*clhs618 + clhs29*clhs621 + clhs29*clhs624 - clhs341*clhs616 + clhs348*clhs619 + clhs358*clhs622 - clhs615*DeltaNormals[1](2,0) - clhs627*tan1slave(2,0) - clhs628*tan2slave(2,0);
    lhs(24,11)=-clhs31*clhs617 + clhs31*clhs620 + clhs31*clhs623 - clhs36*clhs618 + clhs36*clhs621 + clhs36*clhs624 - clhs367*clhs616 + clhs374*clhs619 + clhs384*clhs622 - clhs615*DeltaNormals[2](2,0) - clhs629*tan1slave(2,0) - clhs630*tan2slave(2,0);
    lhs(24,12)=-clhs38*clhs617 + clhs38*clhs620 + clhs38*clhs623 - clhs393*clhs616 + clhs401*clhs619 + clhs411*clhs622 - clhs43*clhs618 + clhs43*clhs621 + clhs43*clhs624 - clhs615*DeltaNormals[3](2,0) - clhs631*tan1slave(2,0) - clhs632*tan2slave(2,0);
    lhs(24,13)=-clhs420*clhs616 + clhs427*clhs619 + clhs437*clhs622 - clhs45*clhs617 + clhs45*clhs620 + clhs45*clhs623 - clhs50*clhs618 + clhs50*clhs621 + clhs50*clhs624 - clhs615*DeltaNormals[4](2,0) - clhs633*tan1slave(2,0) - clhs634*tan2slave(2,0);
    lhs(24,14)=-clhs446*clhs616 + clhs453*clhs619 + clhs463*clhs622 - clhs52*clhs617 + clhs52*clhs620 + clhs52*clhs623 - clhs57*clhs618 + clhs57*clhs621 + clhs57*clhs624 - clhs615*DeltaNormals[5](2,0) - clhs635*tan1slave(2,0) - clhs636*tan2slave(2,0);
    lhs(24,15)=-clhs472*clhs616 + clhs480*clhs619 + clhs490*clhs622 - clhs59*clhs617 + clhs59*clhs620 + clhs59*clhs623 - clhs615*DeltaNormals[6](2,0) - clhs618*clhs64 + clhs621*clhs64 + clhs624*clhs64 - clhs637*tan1slave(2,0) - clhs638*tan2slave(2,0);
    lhs(24,16)=-clhs499*clhs616 + clhs506*clhs619 + clhs516*clhs622 - clhs615*DeltaNormals[7](2,0) - clhs617*clhs66 - clhs618*clhs71 + clhs620*clhs66 + clhs621*clhs71 + clhs623*clhs66 + clhs624*clhs71 - clhs639*tan1slave(2,0) - clhs640*tan2slave(2,0);
    lhs(24,17)=-clhs525*clhs616 + clhs532*clhs619 + clhs542*clhs622 - clhs615*DeltaNormals[8](2,0) - clhs617*clhs73 - clhs618*clhs78 + clhs620*clhs73 + clhs621*clhs78 + clhs623*clhs73 + clhs624*clhs78 - clhs641*tan1slave(2,0) - clhs642*tan2slave(2,0);
    lhs(24,18)=0;
    lhs(24,19)=0;
    lhs(24,20)=0;
    lhs(24,21)=0;
    lhs(24,22)=0;
    lhs(24,23)=0;
    lhs(24,24)=0;
    lhs(24,25)=0;
    lhs(24,26)=0;
    lhs(25,0)=-clhs613*(clhs211*clhs643 + clhs216*clhs237 + clhs241*clhs250);
    lhs(25,1)=-clhs613*(clhs216*clhs255 + clhs241*clhs256 + clhs251*clhs643);
    lhs(25,2)=-clhs613*(clhs216*clhs261 + clhs241*clhs262 + clhs257*clhs643);
    lhs(25,3)=-clhs613*(clhs216*clhs267 + clhs241*clhs268 + clhs263*clhs643);
    lhs(25,4)=-clhs613*(clhs216*clhs273 + clhs241*clhs274 + clhs269*clhs643);
    lhs(25,5)=-clhs613*(clhs216*clhs279 + clhs241*clhs280 + clhs275*clhs643);
    lhs(25,6)=-clhs613*(clhs216*clhs285 + clhs241*clhs286 + clhs281*clhs643);
    lhs(25,7)=-clhs613*(clhs216*clhs291 + clhs241*clhs292 + clhs287*clhs643);
    lhs(25,8)=-clhs613*(clhs216*clhs297 + clhs241*clhs298 + clhs293*clhs643);
    lhs(25,9)=-clhs16*clhs645 + clhs16*clhs647 + clhs16*clhs649 - clhs22*clhs646 + clhs22*clhs648 + clhs22*clhs650 - clhs300*clhs644 + clhs325*clhs619 + clhs335*clhs622 - clhs615*DeltaNormals[0](2,1) - clhs625*tan1slave(2,1) - clhs626*tan2slave(2,1);
    lhs(25,10)=-clhs24*clhs645 + clhs24*clhs647 + clhs24*clhs649 - clhs29*clhs646 + clhs29*clhs648 + clhs29*clhs650 - clhs341*clhs644 + clhs351*clhs619 + clhs361*clhs622 - clhs615*DeltaNormals[1](2,1) - clhs627*tan1slave(2,1) - clhs628*tan2slave(2,1);
    lhs(25,11)=-clhs31*clhs645 + clhs31*clhs647 + clhs31*clhs649 - clhs36*clhs646 + clhs36*clhs648 + clhs36*clhs650 - clhs367*clhs644 + clhs377*clhs619 + clhs387*clhs622 - clhs615*DeltaNormals[2](2,1) - clhs629*tan1slave(2,1) - clhs630*tan2slave(2,1);
    lhs(25,12)=-clhs38*clhs645 + clhs38*clhs647 + clhs38*clhs649 - clhs393*clhs644 + clhs404*clhs619 + clhs414*clhs622 - clhs43*clhs646 + clhs43*clhs648 + clhs43*clhs650 - clhs615*DeltaNormals[3](2,1) - clhs631*tan1slave(2,1) - clhs632*tan2slave(2,1);
    lhs(25,13)=-clhs420*clhs644 + clhs430*clhs619 + clhs440*clhs622 - clhs45*clhs645 + clhs45*clhs647 + clhs45*clhs649 - clhs50*clhs646 + clhs50*clhs648 + clhs50*clhs650 - clhs615*DeltaNormals[4](2,1) - clhs633*tan1slave(2,1) - clhs634*tan2slave(2,1);
    lhs(25,14)=-clhs446*clhs644 + clhs456*clhs619 + clhs466*clhs622 - clhs52*clhs645 + clhs52*clhs647 + clhs52*clhs649 - clhs57*clhs646 + clhs57*clhs648 + clhs57*clhs650 - clhs615*DeltaNormals[5](2,1) - clhs635*tan1slave(2,1) - clhs636*tan2slave(2,1);
    lhs(25,15)=-clhs472*clhs644 + clhs483*clhs619 + clhs493*clhs622 - clhs59*clhs645 + clhs59*clhs647 + clhs59*clhs649 - clhs615*DeltaNormals[6](2,1) - clhs637*tan1slave(2,1) - clhs638*tan2slave(2,1) - clhs64*clhs646 + clhs64*clhs648 + clhs64*clhs650;
    lhs(25,16)=-clhs499*clhs644 + clhs509*clhs619 + clhs519*clhs622 - clhs615*DeltaNormals[7](2,1) - clhs639*tan1slave(2,1) - clhs640*tan2slave(2,1) - clhs645*clhs66 - clhs646*clhs71 + clhs647*clhs66 + clhs648*clhs71 + clhs649*clhs66 + clhs650*clhs71;
    lhs(25,17)=-clhs525*clhs644 + clhs535*clhs619 + clhs545*clhs622 - clhs615*DeltaNormals[8](2,1) - clhs641*tan1slave(2,1) - clhs642*tan2slave(2,1) - clhs645*clhs73 - clhs646*clhs78 + clhs647*clhs73 + clhs648*clhs78 + clhs649*clhs73 + clhs650*clhs78;
    lhs(25,18)=0;
    lhs(25,19)=0;
    lhs(25,20)=0;
    lhs(25,21)=0;
    lhs(25,22)=0;
    lhs(25,23)=0;
    lhs(25,24)=0;
    lhs(25,25)=0;
    lhs(25,26)=0;
    lhs(26,0)=-clhs613*(clhs211*clhs651 + clhs224*clhs237 + clhs245*clhs250);
    lhs(26,1)=-clhs613*(clhs224*clhs255 + clhs245*clhs256 + clhs251*clhs651);
    lhs(26,2)=-clhs613*(clhs224*clhs261 + clhs245*clhs262 + clhs257*clhs651);
    lhs(26,3)=-clhs613*(clhs224*clhs267 + clhs245*clhs268 + clhs263*clhs651);
    lhs(26,4)=-clhs613*(clhs224*clhs273 + clhs245*clhs274 + clhs269*clhs651);
    lhs(26,5)=-clhs613*(clhs224*clhs279 + clhs245*clhs280 + clhs275*clhs651);
    lhs(26,6)=-clhs613*(clhs224*clhs285 + clhs245*clhs286 + clhs281*clhs651);
    lhs(26,7)=-clhs613*(clhs224*clhs291 + clhs245*clhs292 + clhs287*clhs651);
    lhs(26,8)=-clhs613*(clhs224*clhs297 + clhs245*clhs298 + clhs293*clhs651);
    lhs(26,9)=-clhs16*clhs653 + clhs16*clhs655 + clhs16*clhs657 - clhs22*clhs654 + clhs22*clhs656 + clhs22*clhs658 - clhs300*clhs652 + clhs328*clhs619 + clhs338*clhs622 - clhs615*DeltaNormals[0](2,2) - clhs625*tan1slave(2,2) - clhs626*tan2slave(2,2);
    lhs(26,10)=-clhs24*clhs653 + clhs24*clhs655 + clhs24*clhs657 - clhs29*clhs654 + clhs29*clhs656 + clhs29*clhs658 - clhs341*clhs652 + clhs354*clhs619 + clhs364*clhs622 - clhs615*DeltaNormals[1](2,2) - clhs627*tan1slave(2,2) - clhs628*tan2slave(2,2);
    lhs(26,11)=-clhs31*clhs653 + clhs31*clhs655 + clhs31*clhs657 - clhs36*clhs654 + clhs36*clhs656 + clhs36*clhs658 - clhs367*clhs652 + clhs380*clhs619 + clhs390*clhs622 - clhs615*DeltaNormals[2](2,2) - clhs629*tan1slave(2,2) - clhs630*tan2slave(2,2);
    lhs(26,12)=-clhs38*clhs653 + clhs38*clhs655 + clhs38*clhs657 - clhs393*clhs652 + clhs407*clhs619 + clhs417*clhs622 - clhs43*clhs654 + clhs43*clhs656 + clhs43*clhs658 - clhs615*DeltaNormals[3](2,2) - clhs631*tan1slave(2,2) - clhs632*tan2slave(2,2);
    lhs(26,13)=-clhs420*clhs652 + clhs433*clhs619 + clhs443*clhs622 - clhs45*clhs653 + clhs45*clhs655 + clhs45*clhs657 - clhs50*clhs654 + clhs50*clhs656 + clhs50*clhs658 - clhs615*DeltaNormals[4](2,2) - clhs633*tan1slave(2,2) - clhs634*tan2slave(2,2);
    lhs(26,14)=-clhs446*clhs652 + clhs459*clhs619 + clhs469*clhs622 - clhs52*clhs653 + clhs52*clhs655 + clhs52*clhs657 - clhs57*clhs654 + clhs57*clhs656 + clhs57*clhs658 - clhs615*DeltaNormals[5](2,2) - clhs635*tan1slave(2,2) - clhs636*tan2slave(2,2);
    lhs(26,15)=-clhs472*clhs652 + clhs486*clhs619 + clhs496*clhs622 - clhs59*clhs653 + clhs59*clhs655 + clhs59*clhs657 - clhs615*DeltaNormals[6](2,2) - clhs637*tan1slave(2,2) - clhs638*tan2slave(2,2) - clhs64*clhs654 + clhs64*clhs656 + clhs64*clhs658;
    lhs(26,16)=-clhs499*clhs652 + clhs512*clhs619 + clhs522*clhs622 - clhs615*DeltaNormals[7](2,2) - clhs639*tan1slave(2,2) - clhs640*tan2slave(2,2) - clhs653*clhs66 - clhs654*clhs71 + clhs655*clhs66 + clhs656*clhs71 + clhs657*clhs66 + clhs658*clhs71;
    lhs(26,17)=-clhs525*clhs652 + clhs538*clhs619 + clhs548*clhs622 - clhs615*DeltaNormals[8](2,2) - clhs641*tan1slave(2,2) - clhs642*tan2slave(2,2) - clhs653*clhs73 - clhs654*clhs78 + clhs655*clhs73 + clhs656*clhs78 + clhs657*clhs73 + clhs658*clhs78;
    lhs(26,18)=0;
    lhs(26,19)=0;
    lhs(26,20)=0;
    lhs(26,21)=0;
    lhs(26,22)=0;
    lhs(26,23)=0;
    lhs(26,24)=0;
    lhs(26,25)=0;
    lhs(26,26)=0;

    
    return lhs;
}

    /***********************************************************************************/
    /***********************************************************************************/
    
    static inline bounded_matrix<double,27,27> ComputeGaussPointLHS(
        const array_1d<double,3> N1, 
        const array_1d<double,3> N2, 
        const array_1d<double,3> Phi, 
        const double detJ, 
        const double mu, 
        const ContactData<3,3>& rContactData
        )
{
    bounded_matrix<double,27,27> lhs;
    
    const double integration_point_gap = inner_prod(rContactData.Gaps,N1);
    const bounded_matrix<double, 3,3> normalslave = rContactData.Normal_s;
    const bounded_matrix<double, 3,3> tan1slave   = rContactData.Tangent_xi_s;
    const bounded_matrix<double, 3,3> tan2slave   = rContactData.Tangent_eta_s;
    const bounded_matrix<double, 3,3> lm          = rContactData.LagrangeMultipliers;
    
    const std::vector<double> DeltaJs = rContactData.DeltaJ_s;
    const std::vector<double> DeltaGap = rContactData.DeltaGap;
    const std::vector<array_1d<double,3>> DeltaPhi = rContactData.DeltaPhi;
    const std::vector<array_1d<double,3>> DeltaN2  = rContactData.DeltaN2;
    const std::vector<bounded_matrix<double, 3, 3>> DeltaNormals     = rContactData.Delta_Normal_s;
    const std::vector<bounded_matrix<double, 3, 3>> Deltatangentxis  = rContactData.Delta_Tangent_xi_s;
    const std::vector<bounded_matrix<double, 3, 3>> Deltatangentetas = rContactData.Delta_Tangent_eta_s;

    const array_1d<double, 2> Ctan = rContactData.Ctan;
    const std::vector<array_1d<double, 2>> DeltaCtan = rContactData.DeltaCtan;
    
    const double clhs0 =     N2[0]; // N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
    const double clhs1 =     DeltaN2[9][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
    const double clhs2 =     detJ; // DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs3 =     Phi[0]; // PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs4 =     Phi[1]; // PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs5 =     Phi[2]; // PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs6 =     clhs3*lm(0,0) + clhs4*lm(1,0) + clhs5*lm(2,0);
    const double clhs7 =     clhs2*clhs6;
    const double clhs8 =     DeltaN2[10][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
    const double clhs9 =     DeltaN2[11][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
    const double clhs10 =     DeltaN2[12][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
    const double clhs11 =     DeltaN2[13][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
    const double clhs12 =     DeltaN2[14][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
    const double clhs13 =     DeltaN2[15][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
    const double clhs14 =     DeltaN2[16][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
    const double clhs15 =     DeltaN2[17][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
    const double clhs16 =     DeltaJs[0]; // DERIVATIVE(DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs17 =     clhs16*clhs6;
    const double clhs18 =     DeltaN2[0][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
    const double clhs19 =     clhs0*clhs2;
    const double clhs20 =     DeltaPhi[0][0]; // DERIVATIVE(PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs21 =     DeltaPhi[0][1]; // DERIVATIVE(PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs22 =     DeltaPhi[0][2]; // DERIVATIVE(PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,0))
    const double clhs23 =     clhs20*lm(0,0) + clhs21*lm(1,0) + clhs22*lm(2,0);
    const double clhs24 =     DeltaJs[1]; // DERIVATIVE(DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs25 =     clhs24*clhs6;
    const double clhs26 =     DeltaN2[1][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
    const double clhs27 =     DeltaPhi[1][0]; // DERIVATIVE(PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs28 =     DeltaPhi[1][1]; // DERIVATIVE(PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs29 =     DeltaPhi[1][2]; // DERIVATIVE(PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,1))
    const double clhs30 =     clhs27*lm(0,0) + clhs28*lm(1,0) + clhs29*lm(2,0);
    const double clhs31 =     DeltaJs[2]; // DERIVATIVE(DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs32 =     clhs31*clhs6;
    const double clhs33 =     DeltaN2[2][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
    const double clhs34 =     DeltaPhi[2][0]; // DERIVATIVE(PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs35 =     DeltaPhi[2][1]; // DERIVATIVE(PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs36 =     DeltaPhi[2][2]; // DERIVATIVE(PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(0,2))
    const double clhs37 =     clhs34*lm(0,0) + clhs35*lm(1,0) + clhs36*lm(2,0);
    const double clhs38 =     DeltaJs[3]; // DERIVATIVE(DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs39 =     clhs38*clhs6;
    const double clhs40 =     DeltaN2[3][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
    const double clhs41 =     DeltaPhi[3][0]; // DERIVATIVE(PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs42 =     DeltaPhi[3][1]; // DERIVATIVE(PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs43 =     DeltaPhi[3][2]; // DERIVATIVE(PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,0))
    const double clhs44 =     clhs41*lm(0,0) + clhs42*lm(1,0) + clhs43*lm(2,0);
    const double clhs45 =     DeltaJs[4]; // DERIVATIVE(DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs46 =     clhs45*clhs6;
    const double clhs47 =     DeltaN2[4][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
    const double clhs48 =     DeltaPhi[4][0]; // DERIVATIVE(PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs49 =     DeltaPhi[4][1]; // DERIVATIVE(PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs50 =     DeltaPhi[4][2]; // DERIVATIVE(PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,1))
    const double clhs51 =     clhs48*lm(0,0) + clhs49*lm(1,0) + clhs50*lm(2,0);
    const double clhs52 =     DeltaJs[5]; // DERIVATIVE(DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs53 =     clhs52*clhs6;
    const double clhs54 =     DeltaN2[5][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
    const double clhs55 =     DeltaPhi[5][0]; // DERIVATIVE(PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs56 =     DeltaPhi[5][1]; // DERIVATIVE(PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs57 =     DeltaPhi[5][2]; // DERIVATIVE(PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(1,2))
    const double clhs58 =     clhs55*lm(0,0) + clhs56*lm(1,0) + clhs57*lm(2,0);
    const double clhs59 =     DeltaJs[6]; // DERIVATIVE(DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs60 =     clhs59*clhs6;
    const double clhs61 =     DeltaN2[6][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
    const double clhs62 =     DeltaPhi[6][0]; // DERIVATIVE(PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs63 =     DeltaPhi[6][1]; // DERIVATIVE(PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs64 =     DeltaPhi[6][2]; // DERIVATIVE(PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,0))
    const double clhs65 =     clhs62*lm(0,0) + clhs63*lm(1,0) + clhs64*lm(2,0);
    const double clhs66 =     DeltaJs[7]; // DERIVATIVE(DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs67 =     clhs6*clhs66;
    const double clhs68 =     DeltaN2[7][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
    const double clhs69 =     DeltaPhi[7][0]; // DERIVATIVE(PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs70 =     DeltaPhi[7][1]; // DERIVATIVE(PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs71 =     DeltaPhi[7][2]; // DERIVATIVE(PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,1))
    const double clhs72 =     clhs69*lm(0,0) + clhs70*lm(1,0) + clhs71*lm(2,0);
    const double clhs73 =     DeltaJs[8]; // DERIVATIVE(DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs74 =     clhs6*clhs73;
    const double clhs75 =     DeltaN2[8][0]; // DERIVATIVE(N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
    const double clhs76 =     DeltaPhi[8][0]; // DERIVATIVE(PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs77 =     DeltaPhi[8][1]; // DERIVATIVE(PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs78 =     DeltaPhi[8][2]; // DERIVATIVE(PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2)), U1(2,2))
    const double clhs79 =     clhs76*lm(0,0) + clhs77*lm(1,0) + clhs78*lm(2,0);
    const double clhs80 =     clhs19*clhs3;
    const double clhs81 =     clhs19*clhs4;
    const double clhs82 =     clhs19*clhs5;
    const double clhs83 =     clhs3*lm(0,1) + clhs4*lm(1,1) + clhs5*lm(2,1);
    const double clhs84 =     clhs2*clhs83;
    const double clhs85 =     clhs16*clhs83;
    const double clhs86 =     clhs20*lm(0,1) + clhs21*lm(1,1) + clhs22*lm(2,1);
    const double clhs87 =     clhs24*clhs83;
    const double clhs88 =     clhs27*lm(0,1) + clhs28*lm(1,1) + clhs29*lm(2,1);
    const double clhs89 =     clhs31*clhs83;
    const double clhs90 =     clhs34*lm(0,1) + clhs35*lm(1,1) + clhs36*lm(2,1);
    const double clhs91 =     clhs38*clhs83;
    const double clhs92 =     clhs41*lm(0,1) + clhs42*lm(1,1) + clhs43*lm(2,1);
    const double clhs93 =     clhs45*clhs83;
    const double clhs94 =     clhs48*lm(0,1) + clhs49*lm(1,1) + clhs50*lm(2,1);
    const double clhs95 =     clhs52*clhs83;
    const double clhs96 =     clhs55*lm(0,1) + clhs56*lm(1,1) + clhs57*lm(2,1);
    const double clhs97 =     clhs59*clhs83;
    const double clhs98 =     clhs62*lm(0,1) + clhs63*lm(1,1) + clhs64*lm(2,1);
    const double clhs99 =     clhs66*clhs83;
    const double clhs100 =     clhs69*lm(0,1) + clhs70*lm(1,1) + clhs71*lm(2,1);
    const double clhs101 =     clhs73*clhs83;
    const double clhs102 =     clhs76*lm(0,1) + clhs77*lm(1,1) + clhs78*lm(2,1);
    const double clhs103 =     clhs3*lm(0,2) + clhs4*lm(1,2) + clhs5*lm(2,2);
    const double clhs104 =     clhs103*clhs2;
    const double clhs105 =     clhs103*clhs16;
    const double clhs106 =     clhs20*lm(0,2) + clhs21*lm(1,2) + clhs22*lm(2,2);
    const double clhs107 =     clhs103*clhs24;
    const double clhs108 =     clhs27*lm(0,2) + clhs28*lm(1,2) + clhs29*lm(2,2);
    const double clhs109 =     clhs103*clhs31;
    const double clhs110 =     clhs34*lm(0,2) + clhs35*lm(1,2) + clhs36*lm(2,2);
    const double clhs111 =     clhs103*clhs38;
    const double clhs112 =     clhs41*lm(0,2) + clhs42*lm(1,2) + clhs43*lm(2,2);
    const double clhs113 =     clhs103*clhs45;
    const double clhs114 =     clhs48*lm(0,2) + clhs49*lm(1,2) + clhs50*lm(2,2);
    const double clhs115 =     clhs103*clhs52;
    const double clhs116 =     clhs55*lm(0,2) + clhs56*lm(1,2) + clhs57*lm(2,2);
    const double clhs117 =     clhs103*clhs59;
    const double clhs118 =     clhs62*lm(0,2) + clhs63*lm(1,2) + clhs64*lm(2,2);
    const double clhs119 =     clhs103*clhs66;
    const double clhs120 =     clhs69*lm(0,2) + clhs70*lm(1,2) + clhs71*lm(2,2);
    const double clhs121 =     clhs103*clhs73;
    const double clhs122 =     clhs76*lm(0,2) + clhs77*lm(1,2) + clhs78*lm(2,2);
    const double clhs123 =     N2[1]; // N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
    const double clhs124 =     DeltaN2[9][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
    const double clhs125 =     DeltaN2[10][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
    const double clhs126 =     DeltaN2[11][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
    const double clhs127 =     DeltaN2[12][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
    const double clhs128 =     DeltaN2[13][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
    const double clhs129 =     DeltaN2[14][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
    const double clhs130 =     DeltaN2[15][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
    const double clhs131 =     DeltaN2[16][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
    const double clhs132 =     DeltaN2[17][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
    const double clhs133 =     DeltaN2[0][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
    const double clhs134 =     clhs123*clhs2;
    const double clhs135 =     DeltaN2[1][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
    const double clhs136 =     DeltaN2[2][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
    const double clhs137 =     DeltaN2[3][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
    const double clhs138 =     DeltaN2[4][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
    const double clhs139 =     DeltaN2[5][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
    const double clhs140 =     DeltaN2[6][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
    const double clhs141 =     DeltaN2[7][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
    const double clhs142 =     DeltaN2[8][1]; // DERIVATIVE(N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
    const double clhs143 =     clhs134*clhs3;
    const double clhs144 =     clhs134*clhs4;
    const double clhs145 =     clhs134*clhs5;
    const double clhs146 =     N2[2]; // N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
    const double clhs147 =     DeltaN2[9][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
    const double clhs148 =     DeltaN2[10][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
    const double clhs149 =     DeltaN2[11][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
    const double clhs150 =     DeltaN2[12][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
    const double clhs151 =     DeltaN2[13][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
    const double clhs152 =     DeltaN2[14][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
    const double clhs153 =     DeltaN2[15][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
    const double clhs154 =     DeltaN2[16][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
    const double clhs155 =     DeltaN2[17][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
    const double clhs156 =     DeltaN2[0][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
    const double clhs157 =     clhs146*clhs2;
    const double clhs158 =     DeltaN2[1][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
    const double clhs159 =     DeltaN2[2][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
    const double clhs160 =     DeltaN2[3][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
    const double clhs161 =     DeltaN2[4][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
    const double clhs162 =     DeltaN2[5][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
    const double clhs163 =     DeltaN2[6][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
    const double clhs164 =     DeltaN2[7][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
    const double clhs165 =     DeltaN2[8][2]; // DERIVATIVE(N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
    const double clhs166 =     clhs157*clhs3;
    const double clhs167 =     clhs157*clhs4;
    const double clhs168 =     clhs157*clhs5;
    const double clhs169 =     clhs17 + clhs2*clhs23;
    const double clhs170 =     clhs2*clhs30 + clhs25;
    const double clhs171 =     clhs2*clhs37 + clhs32;
    const double clhs172 =     clhs2*clhs44 + clhs39;
    const double clhs173 =     clhs2*clhs51 + clhs46;
    const double clhs174 =     clhs2*clhs58 + clhs53;
    const double clhs175 =     clhs2*clhs65 + clhs60;
    const double clhs176 =     clhs2*clhs72 + clhs67;
    const double clhs177 =     clhs2*clhs79 + clhs74;
    const double clhs178 =     N1[0]*clhs2;
    const double clhs179 =     -clhs178*clhs3;
    const double clhs180 =     -clhs178*clhs4;
    const double clhs181 =     -clhs178*clhs5;
    const double clhs182 =     clhs2*clhs86 + clhs85;
    const double clhs183 =     clhs2*clhs88 + clhs87;
    const double clhs184 =     clhs2*clhs90 + clhs89;
    const double clhs185 =     clhs2*clhs92 + clhs91;
    const double clhs186 =     clhs2*clhs94 + clhs93;
    const double clhs187 =     clhs2*clhs96 + clhs95;
    const double clhs188 =     clhs2*clhs98 + clhs97;
    const double clhs189 =     clhs100*clhs2 + clhs99;
    const double clhs190 =     clhs101 + clhs102*clhs2;
    const double clhs191 =     clhs105 + clhs106*clhs2;
    const double clhs192 =     clhs107 + clhs108*clhs2;
    const double clhs193 =     clhs109 + clhs110*clhs2;
    const double clhs194 =     clhs111 + clhs112*clhs2;
    const double clhs195 =     clhs113 + clhs114*clhs2;
    const double clhs196 =     clhs115 + clhs116*clhs2;
    const double clhs197 =     clhs117 + clhs118*clhs2;
    const double clhs198 =     clhs119 + clhs120*clhs2;
    const double clhs199 =     clhs121 + clhs122*clhs2;
    const double clhs200 =     N1[1]*clhs2;
    const double clhs201 =     -clhs200*clhs3;
    const double clhs202 =     -clhs200*clhs4;
    const double clhs203 =     -clhs200*clhs5;
    const double clhs204 =     N1[2]*clhs2;
    const double clhs205 =     -clhs204*clhs3;
    const double clhs206 =     -clhs204*clhs4;
    const double clhs207 =     -clhs204*clhs5;
    const double clhs208 =     clhs2*clhs3;
    const double clhs209 =     normalslave(0,0); // NORMALSLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs210 =     integration_point_gap; // GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
    const double clhs211 =     DeltaGap[9]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,0))
    const double clhs212 =     tan1slave(0,0); // TAN1SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs213 =     Ctan[0]; // CTANG[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2))
    const double clhs214 =     DeltaCtan[9][0]; // DERIVATIVE(CTANG[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), U2(0,0))
    const double clhs215 =     tan2slave(0,0); // TAN2SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs216 =     Ctan[1]; // CTANG[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2))
    const double clhs217 =     DeltaCtan[9][1]; // DERIVATIVE(CTANG[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), U2(0,0))
    const double clhs218 =     DeltaGap[10]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,1))
    const double clhs219 =     DeltaCtan[10][0]; // DERIVATIVE(CTANG[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), U2(0,1))
    const double clhs220 =     DeltaCtan[10][1]; // DERIVATIVE(CTANG[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), U2(0,1))
    const double clhs221 =     DeltaGap[11]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(0,2))
    const double clhs222 =     DeltaCtan[11][0]; // DERIVATIVE(CTANG[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), U2(0,2))
    const double clhs223 =     DeltaCtan[11][1]; // DERIVATIVE(CTANG[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), U2(0,2))
    const double clhs224 =     DeltaGap[12]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,0))
    const double clhs225 =     DeltaCtan[12][0]; // DERIVATIVE(CTANG[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), U2(1,0))
    const double clhs226 =     DeltaCtan[12][1]; // DERIVATIVE(CTANG[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), U2(1,0))
    const double clhs227 =     DeltaGap[13]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,1))
    const double clhs228 =     DeltaCtan[13][0]; // DERIVATIVE(CTANG[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), U2(1,1))
    const double clhs229 =     DeltaCtan[13][1]; // DERIVATIVE(CTANG[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), U2(1,1))
    const double clhs230 =     DeltaGap[14]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(1,2))
    const double clhs231 =     DeltaCtan[14][0]; // DERIVATIVE(CTANG[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), U2(1,2))
    const double clhs232 =     DeltaCtan[14][1]; // DERIVATIVE(CTANG[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), U2(1,2))
    const double clhs233 =     DeltaGap[15]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,0))
    const double clhs234 =     DeltaCtan[15][0]; // DERIVATIVE(CTANG[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), U2(2,0))
    const double clhs235 =     DeltaCtan[15][1]; // DERIVATIVE(CTANG[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), U2(2,0))
    const double clhs236 =     DeltaGap[16]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,1))
    const double clhs237 =     DeltaCtan[16][0]; // DERIVATIVE(CTANG[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), U2(2,1))
    const double clhs238 =     DeltaCtan[16][1]; // DERIVATIVE(CTANG[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), U2(2,1))
    const double clhs239 =     DeltaGap[17]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U2(2,2))
    const double clhs240 =     DeltaCtan[17][0]; // DERIVATIVE(CTANG[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), U2(2,2))
    const double clhs241 =     DeltaCtan[17][1]; // DERIVATIVE(CTANG[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), U2(2,2))
    const double clhs242 =     clhs2*clhs210*clhs3;
    const double clhs243 =     DeltaGap[0]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,0))
    const double clhs244 =     clhs2*clhs209*clhs3;
    const double clhs245 =     clhs209*clhs210*clhs3;
    const double clhs246 =     clhs2*clhs209*clhs210;
    const double clhs247 =     clhs2*clhs213*clhs3;
    const double clhs248 =     clhs212*clhs213*clhs3;
    const double clhs249 =     clhs2*clhs212*clhs213;
    const double clhs250 =     clhs2*clhs216*clhs3;
    const double clhs251 =     clhs215*clhs216*clhs3;
    const double clhs252 =     clhs2*clhs215*clhs216;
    const double clhs253 =     DeltaCtan[0][0]; // DERIVATIVE(CTANG[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), U1(0,0))
    const double clhs254 =     clhs2*clhs212*clhs3;
    const double clhs255 =     DeltaCtan[0][1]; // DERIVATIVE(CTANG[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), U1(0,0))
    const double clhs256 =     clhs2*clhs215*clhs3;
    const double clhs257 =     DeltaGap[1]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,1))
    const double clhs258 =     DeltaCtan[1][0]; // DERIVATIVE(CTANG[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), U1(0,1))
    const double clhs259 =     DeltaCtan[1][1]; // DERIVATIVE(CTANG[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), U1(0,1))
    const double clhs260 =     DeltaGap[2]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(0,2))
    const double clhs261 =     DeltaCtan[2][0]; // DERIVATIVE(CTANG[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), U1(0,2))
    const double clhs262 =     DeltaCtan[2][1]; // DERIVATIVE(CTANG[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), U1(0,2))
    const double clhs263 =     DeltaGap[3]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,0))
    const double clhs264 =     DeltaCtan[3][0]; // DERIVATIVE(CTANG[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), U1(1,0))
    const double clhs265 =     DeltaCtan[3][1]; // DERIVATIVE(CTANG[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), U1(1,0))
    const double clhs266 =     DeltaGap[4]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,1))
    const double clhs267 =     DeltaCtan[4][0]; // DERIVATIVE(CTANG[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), U1(1,1))
    const double clhs268 =     DeltaCtan[4][1]; // DERIVATIVE(CTANG[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), U1(1,1))
    const double clhs269 =     DeltaGap[5]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(1,2))
    const double clhs270 =     DeltaCtan[5][0]; // DERIVATIVE(CTANG[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), U1(1,2))
    const double clhs271 =     DeltaCtan[5][1]; // DERIVATIVE(CTANG[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), U1(1,2))
    const double clhs272 =     DeltaGap[6]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,0))
    const double clhs273 =     DeltaCtan[6][0]; // DERIVATIVE(CTANG[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), U1(2,0))
    const double clhs274 =     DeltaCtan[6][1]; // DERIVATIVE(CTANG[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), U1(2,0))
    const double clhs275 =     DeltaGap[7]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,1))
    const double clhs276 =     DeltaCtan[7][0]; // DERIVATIVE(CTANG[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), U1(2,1))
    const double clhs277 =     DeltaCtan[7][1]; // DERIVATIVE(CTANG[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), U1(2,1))
    const double clhs278 =     DeltaGap[8]; // DERIVATIVE(GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2)), U1(2,2))
    const double clhs279 =     DeltaCtan[8][0]; // DERIVATIVE(CTANG[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), U1(2,2))
    const double clhs280 =     DeltaCtan[8][1]; // DERIVATIVE(CTANG[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), U1(2,2))
    const double clhs281 =     DeltaCtan[18][0]; // DERIVATIVE(CTANG[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), LM(0,0))
    const double clhs282 =     DeltaCtan[18][1]; // DERIVATIVE(CTANG[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), LM(0,0))
    const double clhs283 =     DeltaCtan[19][0]; // DERIVATIVE(CTANG[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), LM(0,1))
    const double clhs284 =     DeltaCtan[19][1]; // DERIVATIVE(CTANG[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), LM(0,1))
    const double clhs285 =     DeltaCtan[20][0]; // DERIVATIVE(CTANG[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), LM(0,2))
    const double clhs286 =     DeltaCtan[20][1]; // DERIVATIVE(CTANG[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), LM(0,2))
    const double clhs287 =     DeltaCtan[21][0]; // DERIVATIVE(CTANG[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), LM(1,0))
    const double clhs288 =     DeltaCtan[21][1]; // DERIVATIVE(CTANG[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), LM(1,0))
    const double clhs289 =     DeltaCtan[22][0]; // DERIVATIVE(CTANG[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), LM(1,1))
    const double clhs290 =     DeltaCtan[22][1]; // DERIVATIVE(CTANG[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), LM(1,1))
    const double clhs291 =     DeltaCtan[23][0]; // DERIVATIVE(CTANG[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), LM(1,2))
    const double clhs292 =     DeltaCtan[23][1]; // DERIVATIVE(CTANG[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), LM(1,2))
    const double clhs293 =     DeltaCtan[24][0]; // DERIVATIVE(CTANG[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), LM(2,0))
    const double clhs294 =     DeltaCtan[24][1]; // DERIVATIVE(CTANG[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), LM(2,0))
    const double clhs295 =     DeltaCtan[25][0]; // DERIVATIVE(CTANG[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), LM(2,1))
    const double clhs296 =     DeltaCtan[25][1]; // DERIVATIVE(CTANG[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), LM(2,1))
    const double clhs297 =     DeltaCtan[26][0]; // DERIVATIVE(CTANG[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), LM(2,2))
    const double clhs298 =     DeltaCtan[26][1]; // DERIVATIVE(CTANG[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2)), LM(2,2))
    const double clhs299 =     normalslave(0,1); // NORMALSLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs300 =     tan1slave(0,1); // TAN1SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs301 =     tan2slave(0,1); // TAN2SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs302 =     clhs2*clhs299*clhs3;
    const double clhs303 =     clhs210*clhs299*clhs3;
    const double clhs304 =     clhs2*clhs210*clhs299;
    const double clhs305 =     clhs213*clhs3*clhs300;
    const double clhs306 =     clhs2*clhs213*clhs300;
    const double clhs307 =     clhs216*clhs3*clhs301;
    const double clhs308 =     clhs2*clhs216*clhs301;
    const double clhs309 =     clhs2*clhs3*clhs300;
    const double clhs310 =     clhs2*clhs3*clhs301;
    const double clhs311 =     normalslave(0,2); // NORMALSLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs312 =     tan1slave(0,2); // TAN1SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs313 =     tan2slave(0,2); // TAN2SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs314 =     clhs2*clhs3*clhs311;
    const double clhs315 =     clhs210*clhs3*clhs311;
    const double clhs316 =     clhs2*clhs210*clhs311;
    const double clhs317 =     clhs213*clhs3*clhs312;
    const double clhs318 =     clhs2*clhs213*clhs312;
    const double clhs319 =     clhs216*clhs3*clhs313;
    const double clhs320 =     clhs2*clhs216*clhs313;
    const double clhs321 =     clhs2*clhs3*clhs312;
    const double clhs322 =     clhs2*clhs3*clhs313;
    const double clhs323 =     clhs2*clhs4;
    const double clhs324 =     normalslave(1,0); // NORMALSLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs325 =     tan1slave(1,0); // TAN1SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs326 =     tan2slave(1,0); // TAN2SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs327 =     clhs2*clhs210*clhs4;
    const double clhs328 =     clhs2*clhs324*clhs4;
    const double clhs329 =     clhs210*clhs324*clhs4;
    const double clhs330 =     clhs2*clhs210*clhs324;
    const double clhs331 =     clhs2*clhs213*clhs4;
    const double clhs332 =     clhs213*clhs325*clhs4;
    const double clhs333 =     clhs2*clhs213*clhs325;
    const double clhs334 =     clhs2*clhs216*clhs4;
    const double clhs335 =     clhs216*clhs326*clhs4;
    const double clhs336 =     clhs2*clhs216*clhs326;
    const double clhs337 =     clhs2*clhs325*clhs4;
    const double clhs338 =     clhs2*clhs326*clhs4;
    const double clhs339 =     normalslave(1,1); // NORMALSLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs340 =     tan1slave(1,1); // TAN1SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs341 =     tan2slave(1,1); // TAN2SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs342 =     clhs2*clhs339*clhs4;
    const double clhs343 =     clhs210*clhs339*clhs4;
    const double clhs344 =     clhs2*clhs210*clhs339;
    const double clhs345 =     clhs213*clhs340*clhs4;
    const double clhs346 =     clhs2*clhs213*clhs340;
    const double clhs347 =     clhs216*clhs341*clhs4;
    const double clhs348 =     clhs2*clhs216*clhs341;
    const double clhs349 =     clhs2*clhs340*clhs4;
    const double clhs350 =     clhs2*clhs341*clhs4;
    const double clhs351 =     normalslave(1,2); // NORMALSLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs352 =     tan1slave(1,2); // TAN1SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs353 =     tan2slave(1,2); // TAN2SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs354 =     clhs2*clhs351*clhs4;
    const double clhs355 =     clhs210*clhs351*clhs4;
    const double clhs356 =     clhs2*clhs210*clhs351;
    const double clhs357 =     clhs213*clhs352*clhs4;
    const double clhs358 =     clhs2*clhs213*clhs352;
    const double clhs359 =     clhs216*clhs353*clhs4;
    const double clhs360 =     clhs2*clhs216*clhs353;
    const double clhs361 =     clhs2*clhs352*clhs4;
    const double clhs362 =     clhs2*clhs353*clhs4;
    const double clhs363 =     clhs2*clhs5;
    const double clhs364 =     normalslave(2,0); // NORMALSLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs365 =     tan1slave(2,0); // TAN1SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs366 =     tan2slave(2,0); // TAN2SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs367 =     clhs2*clhs210*clhs5;
    const double clhs368 =     clhs2*clhs364*clhs5;
    const double clhs369 =     clhs210*clhs364*clhs5;
    const double clhs370 =     clhs2*clhs210*clhs364;
    const double clhs371 =     clhs2*clhs213*clhs5;
    const double clhs372 =     clhs213*clhs365*clhs5;
    const double clhs373 =     clhs2*clhs213*clhs365;
    const double clhs374 =     clhs2*clhs216*clhs5;
    const double clhs375 =     clhs216*clhs366*clhs5;
    const double clhs376 =     clhs2*clhs216*clhs366;
    const double clhs377 =     clhs2*clhs365*clhs5;
    const double clhs378 =     clhs2*clhs366*clhs5;
    const double clhs379 =     normalslave(2,1); // NORMALSLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs380 =     tan1slave(2,1); // TAN1SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs381 =     tan2slave(2,1); // TAN2SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs382 =     clhs2*clhs379*clhs5;
    const double clhs383 =     clhs210*clhs379*clhs5;
    const double clhs384 =     clhs2*clhs210*clhs379;
    const double clhs385 =     clhs213*clhs380*clhs5;
    const double clhs386 =     clhs2*clhs213*clhs380;
    const double clhs387 =     clhs216*clhs381*clhs5;
    const double clhs388 =     clhs2*clhs216*clhs381;
    const double clhs389 =     clhs2*clhs380*clhs5;
    const double clhs390 =     clhs2*clhs381*clhs5;
    const double clhs391 =     normalslave(2,2); // NORMALSLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs392 =     tan1slave(2,2); // TAN1SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs393 =     tan2slave(2,2); // TAN2SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double clhs394 =     clhs2*clhs391*clhs5;
    const double clhs395 =     clhs210*clhs391*clhs5;
    const double clhs396 =     clhs2*clhs210*clhs391;
    const double clhs397 =     clhs213*clhs392*clhs5;
    const double clhs398 =     clhs2*clhs213*clhs392;
    const double clhs399 =     clhs216*clhs393*clhs5;
    const double clhs400 =     clhs2*clhs216*clhs393;
    const double clhs401 =     clhs2*clhs392*clhs5;
    const double clhs402 =     clhs2*clhs393*clhs5;

    lhs(0,0)=clhs1*clhs7;
    lhs(0,1)=clhs7*clhs8;
    lhs(0,2)=clhs7*clhs9;
    lhs(0,3)=clhs10*clhs7;
    lhs(0,4)=clhs11*clhs7;
    lhs(0,5)=clhs12*clhs7;
    lhs(0,6)=clhs13*clhs7;
    lhs(0,7)=clhs14*clhs7;
    lhs(0,8)=clhs15*clhs7;
    lhs(0,9)=clhs0*clhs17 + clhs18*clhs7 + clhs19*clhs23;
    lhs(0,10)=clhs0*clhs25 + clhs19*clhs30 + clhs26*clhs7;
    lhs(0,11)=clhs0*clhs32 + clhs19*clhs37 + clhs33*clhs7;
    lhs(0,12)=clhs0*clhs39 + clhs19*clhs44 + clhs40*clhs7;
    lhs(0,13)=clhs0*clhs46 + clhs19*clhs51 + clhs47*clhs7;
    lhs(0,14)=clhs0*clhs53 + clhs19*clhs58 + clhs54*clhs7;
    lhs(0,15)=clhs0*clhs60 + clhs19*clhs65 + clhs61*clhs7;
    lhs(0,16)=clhs0*clhs67 + clhs19*clhs72 + clhs68*clhs7;
    lhs(0,17)=clhs0*clhs74 + clhs19*clhs79 + clhs7*clhs75;
    lhs(0,18)=clhs80;
    lhs(0,19)=0;
    lhs(0,20)=0;
    lhs(0,21)=clhs81;
    lhs(0,22)=0;
    lhs(0,23)=0;
    lhs(0,24)=clhs82;
    lhs(0,25)=0;
    lhs(0,26)=0;
    lhs(1,0)=clhs1*clhs84;
    lhs(1,1)=clhs8*clhs84;
    lhs(1,2)=clhs84*clhs9;
    lhs(1,3)=clhs10*clhs84;
    lhs(1,4)=clhs11*clhs84;
    lhs(1,5)=clhs12*clhs84;
    lhs(1,6)=clhs13*clhs84;
    lhs(1,7)=clhs14*clhs84;
    lhs(1,8)=clhs15*clhs84;
    lhs(1,9)=clhs0*clhs85 + clhs18*clhs84 + clhs19*clhs86;
    lhs(1,10)=clhs0*clhs87 + clhs19*clhs88 + clhs26*clhs84;
    lhs(1,11)=clhs0*clhs89 + clhs19*clhs90 + clhs33*clhs84;
    lhs(1,12)=clhs0*clhs91 + clhs19*clhs92 + clhs40*clhs84;
    lhs(1,13)=clhs0*clhs93 + clhs19*clhs94 + clhs47*clhs84;
    lhs(1,14)=clhs0*clhs95 + clhs19*clhs96 + clhs54*clhs84;
    lhs(1,15)=clhs0*clhs97 + clhs19*clhs98 + clhs61*clhs84;
    lhs(1,16)=clhs0*clhs99 + clhs100*clhs19 + clhs68*clhs84;
    lhs(1,17)=clhs0*clhs101 + clhs102*clhs19 + clhs75*clhs84;
    lhs(1,18)=0;
    lhs(1,19)=clhs80;
    lhs(1,20)=0;
    lhs(1,21)=0;
    lhs(1,22)=clhs81;
    lhs(1,23)=0;
    lhs(1,24)=0;
    lhs(1,25)=clhs82;
    lhs(1,26)=0;
    lhs(2,0)=clhs1*clhs104;
    lhs(2,1)=clhs104*clhs8;
    lhs(2,2)=clhs104*clhs9;
    lhs(2,3)=clhs10*clhs104;
    lhs(2,4)=clhs104*clhs11;
    lhs(2,5)=clhs104*clhs12;
    lhs(2,6)=clhs104*clhs13;
    lhs(2,7)=clhs104*clhs14;
    lhs(2,8)=clhs104*clhs15;
    lhs(2,9)=clhs0*clhs105 + clhs104*clhs18 + clhs106*clhs19;
    lhs(2,10)=clhs0*clhs107 + clhs104*clhs26 + clhs108*clhs19;
    lhs(2,11)=clhs0*clhs109 + clhs104*clhs33 + clhs110*clhs19;
    lhs(2,12)=clhs0*clhs111 + clhs104*clhs40 + clhs112*clhs19;
    lhs(2,13)=clhs0*clhs113 + clhs104*clhs47 + clhs114*clhs19;
    lhs(2,14)=clhs0*clhs115 + clhs104*clhs54 + clhs116*clhs19;
    lhs(2,15)=clhs0*clhs117 + clhs104*clhs61 + clhs118*clhs19;
    lhs(2,16)=clhs0*clhs119 + clhs104*clhs68 + clhs120*clhs19;
    lhs(2,17)=clhs0*clhs121 + clhs104*clhs75 + clhs122*clhs19;
    lhs(2,18)=0;
    lhs(2,19)=0;
    lhs(2,20)=clhs80;
    lhs(2,21)=0;
    lhs(2,22)=0;
    lhs(2,23)=clhs81;
    lhs(2,24)=0;
    lhs(2,25)=0;
    lhs(2,26)=clhs82;
    lhs(3,0)=clhs124*clhs7;
    lhs(3,1)=clhs125*clhs7;
    lhs(3,2)=clhs126*clhs7;
    lhs(3,3)=clhs127*clhs7;
    lhs(3,4)=clhs128*clhs7;
    lhs(3,5)=clhs129*clhs7;
    lhs(3,6)=clhs130*clhs7;
    lhs(3,7)=clhs131*clhs7;
    lhs(3,8)=clhs132*clhs7;
    lhs(3,9)=clhs123*clhs17 + clhs133*clhs7 + clhs134*clhs23;
    lhs(3,10)=clhs123*clhs25 + clhs134*clhs30 + clhs135*clhs7;
    lhs(3,11)=clhs123*clhs32 + clhs134*clhs37 + clhs136*clhs7;
    lhs(3,12)=clhs123*clhs39 + clhs134*clhs44 + clhs137*clhs7;
    lhs(3,13)=clhs123*clhs46 + clhs134*clhs51 + clhs138*clhs7;
    lhs(3,14)=clhs123*clhs53 + clhs134*clhs58 + clhs139*clhs7;
    lhs(3,15)=clhs123*clhs60 + clhs134*clhs65 + clhs140*clhs7;
    lhs(3,16)=clhs123*clhs67 + clhs134*clhs72 + clhs141*clhs7;
    lhs(3,17)=clhs123*clhs74 + clhs134*clhs79 + clhs142*clhs7;
    lhs(3,18)=clhs143;
    lhs(3,19)=0;
    lhs(3,20)=0;
    lhs(3,21)=clhs144;
    lhs(3,22)=0;
    lhs(3,23)=0;
    lhs(3,24)=clhs145;
    lhs(3,25)=0;
    lhs(3,26)=0;
    lhs(4,0)=clhs124*clhs84;
    lhs(4,1)=clhs125*clhs84;
    lhs(4,2)=clhs126*clhs84;
    lhs(4,3)=clhs127*clhs84;
    lhs(4,4)=clhs128*clhs84;
    lhs(4,5)=clhs129*clhs84;
    lhs(4,6)=clhs130*clhs84;
    lhs(4,7)=clhs131*clhs84;
    lhs(4,8)=clhs132*clhs84;
    lhs(4,9)=clhs123*clhs85 + clhs133*clhs84 + clhs134*clhs86;
    lhs(4,10)=clhs123*clhs87 + clhs134*clhs88 + clhs135*clhs84;
    lhs(4,11)=clhs123*clhs89 + clhs134*clhs90 + clhs136*clhs84;
    lhs(4,12)=clhs123*clhs91 + clhs134*clhs92 + clhs137*clhs84;
    lhs(4,13)=clhs123*clhs93 + clhs134*clhs94 + clhs138*clhs84;
    lhs(4,14)=clhs123*clhs95 + clhs134*clhs96 + clhs139*clhs84;
    lhs(4,15)=clhs123*clhs97 + clhs134*clhs98 + clhs140*clhs84;
    lhs(4,16)=clhs100*clhs134 + clhs123*clhs99 + clhs141*clhs84;
    lhs(4,17)=clhs101*clhs123 + clhs102*clhs134 + clhs142*clhs84;
    lhs(4,18)=0;
    lhs(4,19)=clhs143;
    lhs(4,20)=0;
    lhs(4,21)=0;
    lhs(4,22)=clhs144;
    lhs(4,23)=0;
    lhs(4,24)=0;
    lhs(4,25)=clhs145;
    lhs(4,26)=0;
    lhs(5,0)=clhs104*clhs124;
    lhs(5,1)=clhs104*clhs125;
    lhs(5,2)=clhs104*clhs126;
    lhs(5,3)=clhs104*clhs127;
    lhs(5,4)=clhs104*clhs128;
    lhs(5,5)=clhs104*clhs129;
    lhs(5,6)=clhs104*clhs130;
    lhs(5,7)=clhs104*clhs131;
    lhs(5,8)=clhs104*clhs132;
    lhs(5,9)=clhs104*clhs133 + clhs105*clhs123 + clhs106*clhs134;
    lhs(5,10)=clhs104*clhs135 + clhs107*clhs123 + clhs108*clhs134;
    lhs(5,11)=clhs104*clhs136 + clhs109*clhs123 + clhs110*clhs134;
    lhs(5,12)=clhs104*clhs137 + clhs111*clhs123 + clhs112*clhs134;
    lhs(5,13)=clhs104*clhs138 + clhs113*clhs123 + clhs114*clhs134;
    lhs(5,14)=clhs104*clhs139 + clhs115*clhs123 + clhs116*clhs134;
    lhs(5,15)=clhs104*clhs140 + clhs117*clhs123 + clhs118*clhs134;
    lhs(5,16)=clhs104*clhs141 + clhs119*clhs123 + clhs120*clhs134;
    lhs(5,17)=clhs104*clhs142 + clhs121*clhs123 + clhs122*clhs134;
    lhs(5,18)=0;
    lhs(5,19)=0;
    lhs(5,20)=clhs143;
    lhs(5,21)=0;
    lhs(5,22)=0;
    lhs(5,23)=clhs144;
    lhs(5,24)=0;
    lhs(5,25)=0;
    lhs(5,26)=clhs145;
    lhs(6,0)=clhs147*clhs7;
    lhs(6,1)=clhs148*clhs7;
    lhs(6,2)=clhs149*clhs7;
    lhs(6,3)=clhs150*clhs7;
    lhs(6,4)=clhs151*clhs7;
    lhs(6,5)=clhs152*clhs7;
    lhs(6,6)=clhs153*clhs7;
    lhs(6,7)=clhs154*clhs7;
    lhs(6,8)=clhs155*clhs7;
    lhs(6,9)=clhs146*clhs17 + clhs156*clhs7 + clhs157*clhs23;
    lhs(6,10)=clhs146*clhs25 + clhs157*clhs30 + clhs158*clhs7;
    lhs(6,11)=clhs146*clhs32 + clhs157*clhs37 + clhs159*clhs7;
    lhs(6,12)=clhs146*clhs39 + clhs157*clhs44 + clhs160*clhs7;
    lhs(6,13)=clhs146*clhs46 + clhs157*clhs51 + clhs161*clhs7;
    lhs(6,14)=clhs146*clhs53 + clhs157*clhs58 + clhs162*clhs7;
    lhs(6,15)=clhs146*clhs60 + clhs157*clhs65 + clhs163*clhs7;
    lhs(6,16)=clhs146*clhs67 + clhs157*clhs72 + clhs164*clhs7;
    lhs(6,17)=clhs146*clhs74 + clhs157*clhs79 + clhs165*clhs7;
    lhs(6,18)=clhs166;
    lhs(6,19)=0;
    lhs(6,20)=0;
    lhs(6,21)=clhs167;
    lhs(6,22)=0;
    lhs(6,23)=0;
    lhs(6,24)=clhs168;
    lhs(6,25)=0;
    lhs(6,26)=0;
    lhs(7,0)=clhs147*clhs84;
    lhs(7,1)=clhs148*clhs84;
    lhs(7,2)=clhs149*clhs84;
    lhs(7,3)=clhs150*clhs84;
    lhs(7,4)=clhs151*clhs84;
    lhs(7,5)=clhs152*clhs84;
    lhs(7,6)=clhs153*clhs84;
    lhs(7,7)=clhs154*clhs84;
    lhs(7,8)=clhs155*clhs84;
    lhs(7,9)=clhs146*clhs85 + clhs156*clhs84 + clhs157*clhs86;
    lhs(7,10)=clhs146*clhs87 + clhs157*clhs88 + clhs158*clhs84;
    lhs(7,11)=clhs146*clhs89 + clhs157*clhs90 + clhs159*clhs84;
    lhs(7,12)=clhs146*clhs91 + clhs157*clhs92 + clhs160*clhs84;
    lhs(7,13)=clhs146*clhs93 + clhs157*clhs94 + clhs161*clhs84;
    lhs(7,14)=clhs146*clhs95 + clhs157*clhs96 + clhs162*clhs84;
    lhs(7,15)=clhs146*clhs97 + clhs157*clhs98 + clhs163*clhs84;
    lhs(7,16)=clhs100*clhs157 + clhs146*clhs99 + clhs164*clhs84;
    lhs(7,17)=clhs101*clhs146 + clhs102*clhs157 + clhs165*clhs84;
    lhs(7,18)=0;
    lhs(7,19)=clhs166;
    lhs(7,20)=0;
    lhs(7,21)=0;
    lhs(7,22)=clhs167;
    lhs(7,23)=0;
    lhs(7,24)=0;
    lhs(7,25)=clhs168;
    lhs(7,26)=0;
    lhs(8,0)=clhs104*clhs147;
    lhs(8,1)=clhs104*clhs148;
    lhs(8,2)=clhs104*clhs149;
    lhs(8,3)=clhs104*clhs150;
    lhs(8,4)=clhs104*clhs151;
    lhs(8,5)=clhs104*clhs152;
    lhs(8,6)=clhs104*clhs153;
    lhs(8,7)=clhs104*clhs154;
    lhs(8,8)=clhs104*clhs155;
    lhs(8,9)=clhs104*clhs156 + clhs105*clhs146 + clhs106*clhs157;
    lhs(8,10)=clhs104*clhs158 + clhs107*clhs146 + clhs108*clhs157;
    lhs(8,11)=clhs104*clhs159 + clhs109*clhs146 + clhs110*clhs157;
    lhs(8,12)=clhs104*clhs160 + clhs111*clhs146 + clhs112*clhs157;
    lhs(8,13)=clhs104*clhs161 + clhs113*clhs146 + clhs114*clhs157;
    lhs(8,14)=clhs104*clhs162 + clhs115*clhs146 + clhs116*clhs157;
    lhs(8,15)=clhs104*clhs163 + clhs117*clhs146 + clhs118*clhs157;
    lhs(8,16)=clhs104*clhs164 + clhs119*clhs146 + clhs120*clhs157;
    lhs(8,17)=clhs104*clhs165 + clhs121*clhs146 + clhs122*clhs157;
    lhs(8,18)=0;
    lhs(8,19)=0;
    lhs(8,20)=clhs166;
    lhs(8,21)=0;
    lhs(8,22)=0;
    lhs(8,23)=clhs167;
    lhs(8,24)=0;
    lhs(8,25)=0;
    lhs(8,26)=clhs168;
    lhs(9,0)=0;
    lhs(9,1)=0;
    lhs(9,2)=0;
    lhs(9,3)=0;
    lhs(9,4)=0;
    lhs(9,5)=0;
    lhs(9,6)=0;
    lhs(9,7)=0;
    lhs(9,8)=0;
    lhs(9,9)=-N1[0]*clhs169;
    lhs(9,10)=-N1[0]*clhs170;
    lhs(9,11)=-N1[0]*clhs171;
    lhs(9,12)=-N1[0]*clhs172;
    lhs(9,13)=-N1[0]*clhs173;
    lhs(9,14)=-N1[0]*clhs174;
    lhs(9,15)=-N1[0]*clhs175;
    lhs(9,16)=-N1[0]*clhs176;
    lhs(9,17)=-N1[0]*clhs177;
    lhs(9,18)=clhs179;
    lhs(9,19)=0;
    lhs(9,20)=0;
    lhs(9,21)=clhs180;
    lhs(9,22)=0;
    lhs(9,23)=0;
    lhs(9,24)=clhs181;
    lhs(9,25)=0;
    lhs(9,26)=0;
    lhs(10,0)=0;
    lhs(10,1)=0;
    lhs(10,2)=0;
    lhs(10,3)=0;
    lhs(10,4)=0;
    lhs(10,5)=0;
    lhs(10,6)=0;
    lhs(10,7)=0;
    lhs(10,8)=0;
    lhs(10,9)=-N1[0]*clhs182;
    lhs(10,10)=-N1[0]*clhs183;
    lhs(10,11)=-N1[0]*clhs184;
    lhs(10,12)=-N1[0]*clhs185;
    lhs(10,13)=-N1[0]*clhs186;
    lhs(10,14)=-N1[0]*clhs187;
    lhs(10,15)=-N1[0]*clhs188;
    lhs(10,16)=-N1[0]*clhs189;
    lhs(10,17)=-N1[0]*clhs190;
    lhs(10,18)=0;
    lhs(10,19)=clhs179;
    lhs(10,20)=0;
    lhs(10,21)=0;
    lhs(10,22)=clhs180;
    lhs(10,23)=0;
    lhs(10,24)=0;
    lhs(10,25)=clhs181;
    lhs(10,26)=0;
    lhs(11,0)=0;
    lhs(11,1)=0;
    lhs(11,2)=0;
    lhs(11,3)=0;
    lhs(11,4)=0;
    lhs(11,5)=0;
    lhs(11,6)=0;
    lhs(11,7)=0;
    lhs(11,8)=0;
    lhs(11,9)=-N1[0]*clhs191;
    lhs(11,10)=-N1[0]*clhs192;
    lhs(11,11)=-N1[0]*clhs193;
    lhs(11,12)=-N1[0]*clhs194;
    lhs(11,13)=-N1[0]*clhs195;
    lhs(11,14)=-N1[0]*clhs196;
    lhs(11,15)=-N1[0]*clhs197;
    lhs(11,16)=-N1[0]*clhs198;
    lhs(11,17)=-N1[0]*clhs199;
    lhs(11,18)=0;
    lhs(11,19)=0;
    lhs(11,20)=clhs179;
    lhs(11,21)=0;
    lhs(11,22)=0;
    lhs(11,23)=clhs180;
    lhs(11,24)=0;
    lhs(11,25)=0;
    lhs(11,26)=clhs181;
    lhs(12,0)=0;
    lhs(12,1)=0;
    lhs(12,2)=0;
    lhs(12,3)=0;
    lhs(12,4)=0;
    lhs(12,5)=0;
    lhs(12,6)=0;
    lhs(12,7)=0;
    lhs(12,8)=0;
    lhs(12,9)=-N1[1]*clhs169;
    lhs(12,10)=-N1[1]*clhs170;
    lhs(12,11)=-N1[1]*clhs171;
    lhs(12,12)=-N1[1]*clhs172;
    lhs(12,13)=-N1[1]*clhs173;
    lhs(12,14)=-N1[1]*clhs174;
    lhs(12,15)=-N1[1]*clhs175;
    lhs(12,16)=-N1[1]*clhs176;
    lhs(12,17)=-N1[1]*clhs177;
    lhs(12,18)=clhs201;
    lhs(12,19)=0;
    lhs(12,20)=0;
    lhs(12,21)=clhs202;
    lhs(12,22)=0;
    lhs(12,23)=0;
    lhs(12,24)=clhs203;
    lhs(12,25)=0;
    lhs(12,26)=0;
    lhs(13,0)=0;
    lhs(13,1)=0;
    lhs(13,2)=0;
    lhs(13,3)=0;
    lhs(13,4)=0;
    lhs(13,5)=0;
    lhs(13,6)=0;
    lhs(13,7)=0;
    lhs(13,8)=0;
    lhs(13,9)=-N1[1]*clhs182;
    lhs(13,10)=-N1[1]*clhs183;
    lhs(13,11)=-N1[1]*clhs184;
    lhs(13,12)=-N1[1]*clhs185;
    lhs(13,13)=-N1[1]*clhs186;
    lhs(13,14)=-N1[1]*clhs187;
    lhs(13,15)=-N1[1]*clhs188;
    lhs(13,16)=-N1[1]*clhs189;
    lhs(13,17)=-N1[1]*clhs190;
    lhs(13,18)=0;
    lhs(13,19)=clhs201;
    lhs(13,20)=0;
    lhs(13,21)=0;
    lhs(13,22)=clhs202;
    lhs(13,23)=0;
    lhs(13,24)=0;
    lhs(13,25)=clhs203;
    lhs(13,26)=0;
    lhs(14,0)=0;
    lhs(14,1)=0;
    lhs(14,2)=0;
    lhs(14,3)=0;
    lhs(14,4)=0;
    lhs(14,5)=0;
    lhs(14,6)=0;
    lhs(14,7)=0;
    lhs(14,8)=0;
    lhs(14,9)=-N1[1]*clhs191;
    lhs(14,10)=-N1[1]*clhs192;
    lhs(14,11)=-N1[1]*clhs193;
    lhs(14,12)=-N1[1]*clhs194;
    lhs(14,13)=-N1[1]*clhs195;
    lhs(14,14)=-N1[1]*clhs196;
    lhs(14,15)=-N1[1]*clhs197;
    lhs(14,16)=-N1[1]*clhs198;
    lhs(14,17)=-N1[1]*clhs199;
    lhs(14,18)=0;
    lhs(14,19)=0;
    lhs(14,20)=clhs201;
    lhs(14,21)=0;
    lhs(14,22)=0;
    lhs(14,23)=clhs202;
    lhs(14,24)=0;
    lhs(14,25)=0;
    lhs(14,26)=clhs203;
    lhs(15,0)=0;
    lhs(15,1)=0;
    lhs(15,2)=0;
    lhs(15,3)=0;
    lhs(15,4)=0;
    lhs(15,5)=0;
    lhs(15,6)=0;
    lhs(15,7)=0;
    lhs(15,8)=0;
    lhs(15,9)=-N1[2]*clhs169;
    lhs(15,10)=-N1[2]*clhs170;
    lhs(15,11)=-N1[2]*clhs171;
    lhs(15,12)=-N1[2]*clhs172;
    lhs(15,13)=-N1[2]*clhs173;
    lhs(15,14)=-N1[2]*clhs174;
    lhs(15,15)=-N1[2]*clhs175;
    lhs(15,16)=-N1[2]*clhs176;
    lhs(15,17)=-N1[2]*clhs177;
    lhs(15,18)=clhs205;
    lhs(15,19)=0;
    lhs(15,20)=0;
    lhs(15,21)=clhs206;
    lhs(15,22)=0;
    lhs(15,23)=0;
    lhs(15,24)=clhs207;
    lhs(15,25)=0;
    lhs(15,26)=0;
    lhs(16,0)=0;
    lhs(16,1)=0;
    lhs(16,2)=0;
    lhs(16,3)=0;
    lhs(16,4)=0;
    lhs(16,5)=0;
    lhs(16,6)=0;
    lhs(16,7)=0;
    lhs(16,8)=0;
    lhs(16,9)=-N1[2]*clhs182;
    lhs(16,10)=-N1[2]*clhs183;
    lhs(16,11)=-N1[2]*clhs184;
    lhs(16,12)=-N1[2]*clhs185;
    lhs(16,13)=-N1[2]*clhs186;
    lhs(16,14)=-N1[2]*clhs187;
    lhs(16,15)=-N1[2]*clhs188;
    lhs(16,16)=-N1[2]*clhs189;
    lhs(16,17)=-N1[2]*clhs190;
    lhs(16,18)=0;
    lhs(16,19)=clhs205;
    lhs(16,20)=0;
    lhs(16,21)=0;
    lhs(16,22)=clhs206;
    lhs(16,23)=0;
    lhs(16,24)=0;
    lhs(16,25)=clhs207;
    lhs(16,26)=0;
    lhs(17,0)=0;
    lhs(17,1)=0;
    lhs(17,2)=0;
    lhs(17,3)=0;
    lhs(17,4)=0;
    lhs(17,5)=0;
    lhs(17,6)=0;
    lhs(17,7)=0;
    lhs(17,8)=0;
    lhs(17,9)=-N1[2]*clhs191;
    lhs(17,10)=-N1[2]*clhs192;
    lhs(17,11)=-N1[2]*clhs193;
    lhs(17,12)=-N1[2]*clhs194;
    lhs(17,13)=-N1[2]*clhs195;
    lhs(17,14)=-N1[2]*clhs196;
    lhs(17,15)=-N1[2]*clhs197;
    lhs(17,16)=-N1[2]*clhs198;
    lhs(17,17)=-N1[2]*clhs199;
    lhs(17,18)=0;
    lhs(17,19)=0;
    lhs(17,20)=clhs205;
    lhs(17,21)=0;
    lhs(17,22)=0;
    lhs(17,23)=clhs206;
    lhs(17,24)=0;
    lhs(17,25)=0;
    lhs(17,26)=clhs207;
    lhs(18,0)=clhs208*(-clhs209*clhs211 + clhs212*clhs214 + clhs215*clhs217);
    lhs(18,1)=clhs208*(-clhs209*clhs218 + clhs212*clhs219 + clhs215*clhs220);
    lhs(18,2)=clhs208*(-clhs209*clhs221 + clhs212*clhs222 + clhs215*clhs223);
    lhs(18,3)=clhs208*(-clhs209*clhs224 + clhs212*clhs225 + clhs215*clhs226);
    lhs(18,4)=clhs208*(-clhs209*clhs227 + clhs212*clhs228 + clhs215*clhs229);
    lhs(18,5)=clhs208*(-clhs209*clhs230 + clhs212*clhs231 + clhs215*clhs232);
    lhs(18,6)=clhs208*(-clhs209*clhs233 + clhs212*clhs234 + clhs215*clhs235);
    lhs(18,7)=clhs208*(-clhs209*clhs236 + clhs212*clhs237 + clhs215*clhs238);
    lhs(18,8)=clhs208*(-clhs209*clhs239 + clhs212*clhs240 + clhs215*clhs241);
    lhs(18,9)=-clhs16*clhs245 + clhs16*clhs248 + clhs16*clhs251 - clhs20*clhs246 + clhs20*clhs249 + clhs20*clhs252 - clhs242*DeltaNormals[0](0,0) - clhs243*clhs244 + clhs247*Deltatangentxis[0](0,0) + clhs250*Deltatangentetas[0](0,0) + clhs253*clhs254 + clhs255*clhs256;
    lhs(18,10)=-clhs24*clhs245 + clhs24*clhs248 + clhs24*clhs251 - clhs242*DeltaNormals[1](0,0) - clhs244*clhs257 - clhs246*clhs27 + clhs247*Deltatangentxis[1](0,0) + clhs249*clhs27 + clhs250*Deltatangentetas[1](0,0) + clhs252*clhs27 + clhs254*clhs258 + clhs256*clhs259;
    lhs(18,11)=-clhs242*DeltaNormals[2](0,0) - clhs244*clhs260 - clhs245*clhs31 - clhs246*clhs34 + clhs247*Deltatangentxis[2](0,0) + clhs248*clhs31 + clhs249*clhs34 + clhs250*Deltatangentetas[2](0,0) + clhs251*clhs31 + clhs252*clhs34 + clhs254*clhs261 + clhs256*clhs262;
    lhs(18,12)=-clhs242*DeltaNormals[3](0,0) - clhs244*clhs263 - clhs245*clhs38 - clhs246*clhs41 + clhs247*Deltatangentxis[3](0,0) + clhs248*clhs38 + clhs249*clhs41 + clhs250*Deltatangentetas[3](0,0) + clhs251*clhs38 + clhs252*clhs41 + clhs254*clhs264 + clhs256*clhs265;
    lhs(18,13)=-clhs242*DeltaNormals[4](0,0) - clhs244*clhs266 - clhs245*clhs45 - clhs246*clhs48 + clhs247*Deltatangentxis[4](0,0) + clhs248*clhs45 + clhs249*clhs48 + clhs250*Deltatangentetas[4](0,0) + clhs251*clhs45 + clhs252*clhs48 + clhs254*clhs267 + clhs256*clhs268;
    lhs(18,14)=-clhs242*DeltaNormals[5](0,0) - clhs244*clhs269 - clhs245*clhs52 - clhs246*clhs55 + clhs247*Deltatangentxis[5](0,0) + clhs248*clhs52 + clhs249*clhs55 + clhs250*Deltatangentetas[5](0,0) + clhs251*clhs52 + clhs252*clhs55 + clhs254*clhs270 + clhs256*clhs271;
    lhs(18,15)=-clhs242*DeltaNormals[6](0,0) - clhs244*clhs272 - clhs245*clhs59 - clhs246*clhs62 + clhs247*Deltatangentxis[6](0,0) + clhs248*clhs59 + clhs249*clhs62 + clhs250*Deltatangentetas[6](0,0) + clhs251*clhs59 + clhs252*clhs62 + clhs254*clhs273 + clhs256*clhs274;
    lhs(18,16)=-clhs242*DeltaNormals[7](0,0) - clhs244*clhs275 - clhs245*clhs66 - clhs246*clhs69 + clhs247*Deltatangentxis[7](0,0) + clhs248*clhs66 + clhs249*clhs69 + clhs250*Deltatangentetas[7](0,0) + clhs251*clhs66 + clhs252*clhs69 + clhs254*clhs276 + clhs256*clhs277;
    lhs(18,17)=-clhs242*DeltaNormals[8](0,0) - clhs244*clhs278 - clhs245*clhs73 - clhs246*clhs76 + clhs247*Deltatangentxis[8](0,0) + clhs248*clhs73 + clhs249*clhs76 + clhs250*Deltatangentetas[8](0,0) + clhs251*clhs73 + clhs252*clhs76 + clhs254*clhs279 + clhs256*clhs280;
    lhs(18,18)=clhs208*(clhs212*clhs281 + clhs215*clhs282);
    lhs(18,19)=clhs208*(clhs212*clhs283 + clhs215*clhs284);
    lhs(18,20)=clhs208*(clhs212*clhs285 + clhs215*clhs286);
    lhs(18,21)=clhs208*(clhs212*clhs287 + clhs215*clhs288);
    lhs(18,22)=clhs208*(clhs212*clhs289 + clhs215*clhs290);
    lhs(18,23)=clhs208*(clhs212*clhs291 + clhs215*clhs292);
    lhs(18,24)=clhs208*(clhs212*clhs293 + clhs215*clhs294);
    lhs(18,25)=clhs208*(clhs212*clhs295 + clhs215*clhs296);
    lhs(18,26)=clhs208*(clhs212*clhs297 + clhs215*clhs298);
    lhs(19,0)=clhs208*(-clhs211*clhs299 + clhs214*clhs300 + clhs217*clhs301);
    lhs(19,1)=clhs208*(-clhs218*clhs299 + clhs219*clhs300 + clhs220*clhs301);
    lhs(19,2)=clhs208*(-clhs221*clhs299 + clhs222*clhs300 + clhs223*clhs301);
    lhs(19,3)=clhs208*(-clhs224*clhs299 + clhs225*clhs300 + clhs226*clhs301);
    lhs(19,4)=clhs208*(-clhs227*clhs299 + clhs228*clhs300 + clhs229*clhs301);
    lhs(19,5)=clhs208*(-clhs230*clhs299 + clhs231*clhs300 + clhs232*clhs301);
    lhs(19,6)=clhs208*(-clhs233*clhs299 + clhs234*clhs300 + clhs235*clhs301);
    lhs(19,7)=clhs208*(-clhs236*clhs299 + clhs237*clhs300 + clhs238*clhs301);
    lhs(19,8)=clhs208*(-clhs239*clhs299 + clhs240*clhs300 + clhs241*clhs301);
    lhs(19,9)=-clhs16*clhs303 + clhs16*clhs305 + clhs16*clhs307 - clhs20*clhs304 + clhs20*clhs306 + clhs20*clhs308 - clhs242*DeltaNormals[0](0,1) - clhs243*clhs302 + clhs247*Deltatangentxis[0](0,1) + clhs250*Deltatangentetas[0](0,1) + clhs253*clhs309 + clhs255*clhs310;
    lhs(19,10)=-clhs24*clhs303 + clhs24*clhs305 + clhs24*clhs307 - clhs242*DeltaNormals[1](0,1) + clhs247*Deltatangentxis[1](0,1) + clhs250*Deltatangentetas[1](0,1) - clhs257*clhs302 + clhs258*clhs309 + clhs259*clhs310 - clhs27*clhs304 + clhs27*clhs306 + clhs27*clhs308;
    lhs(19,11)=-clhs242*DeltaNormals[2](0,1) + clhs247*Deltatangentxis[2](0,1) + clhs250*Deltatangentetas[2](0,1) - clhs260*clhs302 + clhs261*clhs309 + clhs262*clhs310 - clhs303*clhs31 - clhs304*clhs34 + clhs305*clhs31 + clhs306*clhs34 + clhs307*clhs31 + clhs308*clhs34;
    lhs(19,12)=-clhs242*DeltaNormals[3](0,1) + clhs247*Deltatangentxis[3](0,1) + clhs250*Deltatangentetas[3](0,1) - clhs263*clhs302 + clhs264*clhs309 + clhs265*clhs310 - clhs303*clhs38 - clhs304*clhs41 + clhs305*clhs38 + clhs306*clhs41 + clhs307*clhs38 + clhs308*clhs41;
    lhs(19,13)=-clhs242*DeltaNormals[4](0,1) + clhs247*Deltatangentxis[4](0,1) + clhs250*Deltatangentetas[4](0,1) - clhs266*clhs302 + clhs267*clhs309 + clhs268*clhs310 - clhs303*clhs45 - clhs304*clhs48 + clhs305*clhs45 + clhs306*clhs48 + clhs307*clhs45 + clhs308*clhs48;
    lhs(19,14)=-clhs242*DeltaNormals[5](0,1) + clhs247*Deltatangentxis[5](0,1) + clhs250*Deltatangentetas[5](0,1) - clhs269*clhs302 + clhs270*clhs309 + clhs271*clhs310 - clhs303*clhs52 - clhs304*clhs55 + clhs305*clhs52 + clhs306*clhs55 + clhs307*clhs52 + clhs308*clhs55;
    lhs(19,15)=-clhs242*DeltaNormals[6](0,1) + clhs247*Deltatangentxis[6](0,1) + clhs250*Deltatangentetas[6](0,1) - clhs272*clhs302 + clhs273*clhs309 + clhs274*clhs310 - clhs303*clhs59 - clhs304*clhs62 + clhs305*clhs59 + clhs306*clhs62 + clhs307*clhs59 + clhs308*clhs62;
    lhs(19,16)=-clhs242*DeltaNormals[7](0,1) + clhs247*Deltatangentxis[7](0,1) + clhs250*Deltatangentetas[7](0,1) - clhs275*clhs302 + clhs276*clhs309 + clhs277*clhs310 - clhs303*clhs66 - clhs304*clhs69 + clhs305*clhs66 + clhs306*clhs69 + clhs307*clhs66 + clhs308*clhs69;
    lhs(19,17)=-clhs242*DeltaNormals[8](0,1) + clhs247*Deltatangentxis[8](0,1) + clhs250*Deltatangentetas[8](0,1) - clhs278*clhs302 + clhs279*clhs309 + clhs280*clhs310 - clhs303*clhs73 - clhs304*clhs76 + clhs305*clhs73 + clhs306*clhs76 + clhs307*clhs73 + clhs308*clhs76;
    lhs(19,18)=clhs208*(clhs281*clhs300 + clhs282*clhs301);
    lhs(19,19)=clhs208*(clhs283*clhs300 + clhs284*clhs301);
    lhs(19,20)=clhs208*(clhs285*clhs300 + clhs286*clhs301);
    lhs(19,21)=clhs208*(clhs287*clhs300 + clhs288*clhs301);
    lhs(19,22)=clhs208*(clhs289*clhs300 + clhs290*clhs301);
    lhs(19,23)=clhs208*(clhs291*clhs300 + clhs292*clhs301);
    lhs(19,24)=clhs208*(clhs293*clhs300 + clhs294*clhs301);
    lhs(19,25)=clhs208*(clhs295*clhs300 + clhs296*clhs301);
    lhs(19,26)=clhs208*(clhs297*clhs300 + clhs298*clhs301);
    lhs(20,0)=clhs208*(-clhs211*clhs311 + clhs214*clhs312 + clhs217*clhs313);
    lhs(20,1)=clhs208*(-clhs218*clhs311 + clhs219*clhs312 + clhs220*clhs313);
    lhs(20,2)=clhs208*(-clhs221*clhs311 + clhs222*clhs312 + clhs223*clhs313);
    lhs(20,3)=clhs208*(-clhs224*clhs311 + clhs225*clhs312 + clhs226*clhs313);
    lhs(20,4)=clhs208*(-clhs227*clhs311 + clhs228*clhs312 + clhs229*clhs313);
    lhs(20,5)=clhs208*(-clhs230*clhs311 + clhs231*clhs312 + clhs232*clhs313);
    lhs(20,6)=clhs208*(-clhs233*clhs311 + clhs234*clhs312 + clhs235*clhs313);
    lhs(20,7)=clhs208*(-clhs236*clhs311 + clhs237*clhs312 + clhs238*clhs313);
    lhs(20,8)=clhs208*(-clhs239*clhs311 + clhs240*clhs312 + clhs241*clhs313);
    lhs(20,9)=-clhs16*clhs315 + clhs16*clhs317 + clhs16*clhs319 - clhs20*clhs316 + clhs20*clhs318 + clhs20*clhs320 - clhs242*DeltaNormals[0](0,2) - clhs243*clhs314 + clhs247*Deltatangentxis[0](0,2) + clhs250*Deltatangentetas[0](0,2) + clhs253*clhs321 + clhs255*clhs322;
    lhs(20,10)=-clhs24*clhs315 + clhs24*clhs317 + clhs24*clhs319 - clhs242*DeltaNormals[1](0,2) + clhs247*Deltatangentxis[1](0,2) + clhs250*Deltatangentetas[1](0,2) - clhs257*clhs314 + clhs258*clhs321 + clhs259*clhs322 - clhs27*clhs316 + clhs27*clhs318 + clhs27*clhs320;
    lhs(20,11)=-clhs242*DeltaNormals[2](0,2) + clhs247*Deltatangentxis[2](0,2) + clhs250*Deltatangentetas[2](0,2) - clhs260*clhs314 + clhs261*clhs321 + clhs262*clhs322 - clhs31*clhs315 + clhs31*clhs317 + clhs31*clhs319 - clhs316*clhs34 + clhs318*clhs34 + clhs320*clhs34;
    lhs(20,12)=-clhs242*DeltaNormals[3](0,2) + clhs247*Deltatangentxis[3](0,2) + clhs250*Deltatangentetas[3](0,2) - clhs263*clhs314 + clhs264*clhs321 + clhs265*clhs322 - clhs315*clhs38 - clhs316*clhs41 + clhs317*clhs38 + clhs318*clhs41 + clhs319*clhs38 + clhs320*clhs41;
    lhs(20,13)=-clhs242*DeltaNormals[4](0,2) + clhs247*Deltatangentxis[4](0,2) + clhs250*Deltatangentetas[4](0,2) - clhs266*clhs314 + clhs267*clhs321 + clhs268*clhs322 - clhs315*clhs45 - clhs316*clhs48 + clhs317*clhs45 + clhs318*clhs48 + clhs319*clhs45 + clhs320*clhs48;
    lhs(20,14)=-clhs242*DeltaNormals[5](0,2) + clhs247*Deltatangentxis[5](0,2) + clhs250*Deltatangentetas[5](0,2) - clhs269*clhs314 + clhs270*clhs321 + clhs271*clhs322 - clhs315*clhs52 - clhs316*clhs55 + clhs317*clhs52 + clhs318*clhs55 + clhs319*clhs52 + clhs320*clhs55;
    lhs(20,15)=-clhs242*DeltaNormals[6](0,2) + clhs247*Deltatangentxis[6](0,2) + clhs250*Deltatangentetas[6](0,2) - clhs272*clhs314 + clhs273*clhs321 + clhs274*clhs322 - clhs315*clhs59 - clhs316*clhs62 + clhs317*clhs59 + clhs318*clhs62 + clhs319*clhs59 + clhs320*clhs62;
    lhs(20,16)=-clhs242*DeltaNormals[7](0,2) + clhs247*Deltatangentxis[7](0,2) + clhs250*Deltatangentetas[7](0,2) - clhs275*clhs314 + clhs276*clhs321 + clhs277*clhs322 - clhs315*clhs66 - clhs316*clhs69 + clhs317*clhs66 + clhs318*clhs69 + clhs319*clhs66 + clhs320*clhs69;
    lhs(20,17)=-clhs242*DeltaNormals[8](0,2) + clhs247*Deltatangentxis[8](0,2) + clhs250*Deltatangentetas[8](0,2) - clhs278*clhs314 + clhs279*clhs321 + clhs280*clhs322 - clhs315*clhs73 - clhs316*clhs76 + clhs317*clhs73 + clhs318*clhs76 + clhs319*clhs73 + clhs320*clhs76;
    lhs(20,18)=clhs208*(clhs281*clhs312 + clhs282*clhs313);
    lhs(20,19)=clhs208*(clhs283*clhs312 + clhs284*clhs313);
    lhs(20,20)=clhs208*(clhs285*clhs312 + clhs286*clhs313);
    lhs(20,21)=clhs208*(clhs287*clhs312 + clhs288*clhs313);
    lhs(20,22)=clhs208*(clhs289*clhs312 + clhs290*clhs313);
    lhs(20,23)=clhs208*(clhs291*clhs312 + clhs292*clhs313);
    lhs(20,24)=clhs208*(clhs293*clhs312 + clhs294*clhs313);
    lhs(20,25)=clhs208*(clhs295*clhs312 + clhs296*clhs313);
    lhs(20,26)=clhs208*(clhs297*clhs312 + clhs298*clhs313);
    lhs(21,0)=clhs323*(-clhs211*clhs324 + clhs214*clhs325 + clhs217*clhs326);
    lhs(21,1)=clhs323*(-clhs218*clhs324 + clhs219*clhs325 + clhs220*clhs326);
    lhs(21,2)=clhs323*(-clhs221*clhs324 + clhs222*clhs325 + clhs223*clhs326);
    lhs(21,3)=clhs323*(-clhs224*clhs324 + clhs225*clhs325 + clhs226*clhs326);
    lhs(21,4)=clhs323*(-clhs227*clhs324 + clhs228*clhs325 + clhs229*clhs326);
    lhs(21,5)=clhs323*(-clhs230*clhs324 + clhs231*clhs325 + clhs232*clhs326);
    lhs(21,6)=clhs323*(-clhs233*clhs324 + clhs234*clhs325 + clhs235*clhs326);
    lhs(21,7)=clhs323*(-clhs236*clhs324 + clhs237*clhs325 + clhs238*clhs326);
    lhs(21,8)=clhs323*(-clhs239*clhs324 + clhs240*clhs325 + clhs241*clhs326);
    lhs(21,9)=-clhs16*clhs329 + clhs16*clhs332 + clhs16*clhs335 - clhs21*clhs330 + clhs21*clhs333 + clhs21*clhs336 - clhs243*clhs328 + clhs253*clhs337 + clhs255*clhs338 - clhs327*DeltaNormals[0](1,0) + clhs331*Deltatangentxis[0](1,0) + clhs334*Deltatangentetas[0](1,0);
    lhs(21,10)=-clhs24*clhs329 + clhs24*clhs332 + clhs24*clhs335 - clhs257*clhs328 + clhs258*clhs337 + clhs259*clhs338 - clhs28*clhs330 + clhs28*clhs333 + clhs28*clhs336 - clhs327*DeltaNormals[1](1,0) + clhs331*Deltatangentxis[1](1,0) + clhs334*Deltatangentetas[1](1,0);
    lhs(21,11)=-clhs260*clhs328 + clhs261*clhs337 + clhs262*clhs338 - clhs31*clhs329 + clhs31*clhs332 + clhs31*clhs335 - clhs327*DeltaNormals[2](1,0) - clhs330*clhs35 + clhs331*Deltatangentxis[2](1,0) + clhs333*clhs35 + clhs334*Deltatangentetas[2](1,0) + clhs336*clhs35;
    lhs(21,12)=-clhs263*clhs328 + clhs264*clhs337 + clhs265*clhs338 - clhs327*DeltaNormals[3](1,0) - clhs329*clhs38 - clhs330*clhs42 + clhs331*Deltatangentxis[3](1,0) + clhs332*clhs38 + clhs333*clhs42 + clhs334*Deltatangentetas[3](1,0) + clhs335*clhs38 + clhs336*clhs42;
    lhs(21,13)=-clhs266*clhs328 + clhs267*clhs337 + clhs268*clhs338 - clhs327*DeltaNormals[4](1,0) - clhs329*clhs45 - clhs330*clhs49 + clhs331*Deltatangentxis[4](1,0) + clhs332*clhs45 + clhs333*clhs49 + clhs334*Deltatangentetas[4](1,0) + clhs335*clhs45 + clhs336*clhs49;
    lhs(21,14)=-clhs269*clhs328 + clhs270*clhs337 + clhs271*clhs338 - clhs327*DeltaNormals[5](1,0) - clhs329*clhs52 - clhs330*clhs56 + clhs331*Deltatangentxis[5](1,0) + clhs332*clhs52 + clhs333*clhs56 + clhs334*Deltatangentetas[5](1,0) + clhs335*clhs52 + clhs336*clhs56;
    lhs(21,15)=-clhs272*clhs328 + clhs273*clhs337 + clhs274*clhs338 - clhs327*DeltaNormals[6](1,0) - clhs329*clhs59 - clhs330*clhs63 + clhs331*Deltatangentxis[6](1,0) + clhs332*clhs59 + clhs333*clhs63 + clhs334*Deltatangentetas[6](1,0) + clhs335*clhs59 + clhs336*clhs63;
    lhs(21,16)=-clhs275*clhs328 + clhs276*clhs337 + clhs277*clhs338 - clhs327*DeltaNormals[7](1,0) - clhs329*clhs66 - clhs330*clhs70 + clhs331*Deltatangentxis[7](1,0) + clhs332*clhs66 + clhs333*clhs70 + clhs334*Deltatangentetas[7](1,0) + clhs335*clhs66 + clhs336*clhs70;
    lhs(21,17)=-clhs278*clhs328 + clhs279*clhs337 + clhs280*clhs338 - clhs327*DeltaNormals[8](1,0) - clhs329*clhs73 - clhs330*clhs77 + clhs331*Deltatangentxis[8](1,0) + clhs332*clhs73 + clhs333*clhs77 + clhs334*Deltatangentetas[8](1,0) + clhs335*clhs73 + clhs336*clhs77;
    lhs(21,18)=clhs323*(clhs281*clhs325 + clhs282*clhs326);
    lhs(21,19)=clhs323*(clhs283*clhs325 + clhs284*clhs326);
    lhs(21,20)=clhs323*(clhs285*clhs325 + clhs286*clhs326);
    lhs(21,21)=clhs323*(clhs287*clhs325 + clhs288*clhs326);
    lhs(21,22)=clhs323*(clhs289*clhs325 + clhs290*clhs326);
    lhs(21,23)=clhs323*(clhs291*clhs325 + clhs292*clhs326);
    lhs(21,24)=clhs323*(clhs293*clhs325 + clhs294*clhs326);
    lhs(21,25)=clhs323*(clhs295*clhs325 + clhs296*clhs326);
    lhs(21,26)=clhs323*(clhs297*clhs325 + clhs298*clhs326);
    lhs(22,0)=clhs323*(-clhs211*clhs339 + clhs214*clhs340 + clhs217*clhs341);
    lhs(22,1)=clhs323*(-clhs218*clhs339 + clhs219*clhs340 + clhs220*clhs341);
    lhs(22,2)=clhs323*(-clhs221*clhs339 + clhs222*clhs340 + clhs223*clhs341);
    lhs(22,3)=clhs323*(-clhs224*clhs339 + clhs225*clhs340 + clhs226*clhs341);
    lhs(22,4)=clhs323*(-clhs227*clhs339 + clhs228*clhs340 + clhs229*clhs341);
    lhs(22,5)=clhs323*(-clhs230*clhs339 + clhs231*clhs340 + clhs232*clhs341);
    lhs(22,6)=clhs323*(-clhs233*clhs339 + clhs234*clhs340 + clhs235*clhs341);
    lhs(22,7)=clhs323*(-clhs236*clhs339 + clhs237*clhs340 + clhs238*clhs341);
    lhs(22,8)=clhs323*(-clhs239*clhs339 + clhs240*clhs340 + clhs241*clhs341);
    lhs(22,9)=-clhs16*clhs343 + clhs16*clhs345 + clhs16*clhs347 - clhs21*clhs344 + clhs21*clhs346 + clhs21*clhs348 - clhs243*clhs342 + clhs253*clhs349 + clhs255*clhs350 - clhs327*DeltaNormals[0](1,1) + clhs331*Deltatangentxis[0](1,1) + clhs334*Deltatangentetas[0](1,1);
    lhs(22,10)=-clhs24*clhs343 + clhs24*clhs345 + clhs24*clhs347 - clhs257*clhs342 + clhs258*clhs349 + clhs259*clhs350 - clhs28*clhs344 + clhs28*clhs346 + clhs28*clhs348 - clhs327*DeltaNormals[1](1,1) + clhs331*Deltatangentxis[1](1,1) + clhs334*Deltatangentetas[1](1,1);
    lhs(22,11)=-clhs260*clhs342 + clhs261*clhs349 + clhs262*clhs350 - clhs31*clhs343 + clhs31*clhs345 + clhs31*clhs347 - clhs327*DeltaNormals[2](1,1) + clhs331*Deltatangentxis[2](1,1) + clhs334*Deltatangentetas[2](1,1) - clhs344*clhs35 + clhs346*clhs35 + clhs348*clhs35;
    lhs(22,12)=-clhs263*clhs342 + clhs264*clhs349 + clhs265*clhs350 - clhs327*DeltaNormals[3](1,1) + clhs331*Deltatangentxis[3](1,1) + clhs334*Deltatangentetas[3](1,1) - clhs343*clhs38 - clhs344*clhs42 + clhs345*clhs38 + clhs346*clhs42 + clhs347*clhs38 + clhs348*clhs42;
    lhs(22,13)=-clhs266*clhs342 + clhs267*clhs349 + clhs268*clhs350 - clhs327*DeltaNormals[4](1,1) + clhs331*Deltatangentxis[4](1,1) + clhs334*Deltatangentetas[4](1,1) - clhs343*clhs45 - clhs344*clhs49 + clhs345*clhs45 + clhs346*clhs49 + clhs347*clhs45 + clhs348*clhs49;
    lhs(22,14)=-clhs269*clhs342 + clhs270*clhs349 + clhs271*clhs350 - clhs327*DeltaNormals[5](1,1) + clhs331*Deltatangentxis[5](1,1) + clhs334*Deltatangentetas[5](1,1) - clhs343*clhs52 - clhs344*clhs56 + clhs345*clhs52 + clhs346*clhs56 + clhs347*clhs52 + clhs348*clhs56;
    lhs(22,15)=-clhs272*clhs342 + clhs273*clhs349 + clhs274*clhs350 - clhs327*DeltaNormals[6](1,1) + clhs331*Deltatangentxis[6](1,1) + clhs334*Deltatangentetas[6](1,1) - clhs343*clhs59 - clhs344*clhs63 + clhs345*clhs59 + clhs346*clhs63 + clhs347*clhs59 + clhs348*clhs63;
    lhs(22,16)=-clhs275*clhs342 + clhs276*clhs349 + clhs277*clhs350 - clhs327*DeltaNormals[7](1,1) + clhs331*Deltatangentxis[7](1,1) + clhs334*Deltatangentetas[7](1,1) - clhs343*clhs66 - clhs344*clhs70 + clhs345*clhs66 + clhs346*clhs70 + clhs347*clhs66 + clhs348*clhs70;
    lhs(22,17)=-clhs278*clhs342 + clhs279*clhs349 + clhs280*clhs350 - clhs327*DeltaNormals[8](1,1) + clhs331*Deltatangentxis[8](1,1) + clhs334*Deltatangentetas[8](1,1) - clhs343*clhs73 - clhs344*clhs77 + clhs345*clhs73 + clhs346*clhs77 + clhs347*clhs73 + clhs348*clhs77;
    lhs(22,18)=clhs323*(clhs281*clhs340 + clhs282*clhs341);
    lhs(22,19)=clhs323*(clhs283*clhs340 + clhs284*clhs341);
    lhs(22,20)=clhs323*(clhs285*clhs340 + clhs286*clhs341);
    lhs(22,21)=clhs323*(clhs287*clhs340 + clhs288*clhs341);
    lhs(22,22)=clhs323*(clhs289*clhs340 + clhs290*clhs341);
    lhs(22,23)=clhs323*(clhs291*clhs340 + clhs292*clhs341);
    lhs(22,24)=clhs323*(clhs293*clhs340 + clhs294*clhs341);
    lhs(22,25)=clhs323*(clhs295*clhs340 + clhs296*clhs341);
    lhs(22,26)=clhs323*(clhs297*clhs340 + clhs298*clhs341);
    lhs(23,0)=clhs323*(-clhs211*clhs351 + clhs214*clhs352 + clhs217*clhs353);
    lhs(23,1)=clhs323*(-clhs218*clhs351 + clhs219*clhs352 + clhs220*clhs353);
    lhs(23,2)=clhs323*(-clhs221*clhs351 + clhs222*clhs352 + clhs223*clhs353);
    lhs(23,3)=clhs323*(-clhs224*clhs351 + clhs225*clhs352 + clhs226*clhs353);
    lhs(23,4)=clhs323*(-clhs227*clhs351 + clhs228*clhs352 + clhs229*clhs353);
    lhs(23,5)=clhs323*(-clhs230*clhs351 + clhs231*clhs352 + clhs232*clhs353);
    lhs(23,6)=clhs323*(-clhs233*clhs351 + clhs234*clhs352 + clhs235*clhs353);
    lhs(23,7)=clhs323*(-clhs236*clhs351 + clhs237*clhs352 + clhs238*clhs353);
    lhs(23,8)=clhs323*(-clhs239*clhs351 + clhs240*clhs352 + clhs241*clhs353);
    lhs(23,9)=-clhs16*clhs355 + clhs16*clhs357 + clhs16*clhs359 - clhs21*clhs356 + clhs21*clhs358 + clhs21*clhs360 - clhs243*clhs354 + clhs253*clhs361 + clhs255*clhs362 - clhs327*DeltaNormals[0](1,2) + clhs331*Deltatangentxis[0](1,2) + clhs334*Deltatangentetas[0](1,2);
    lhs(23,10)=-clhs24*clhs355 + clhs24*clhs357 + clhs24*clhs359 - clhs257*clhs354 + clhs258*clhs361 + clhs259*clhs362 - clhs28*clhs356 + clhs28*clhs358 + clhs28*clhs360 - clhs327*DeltaNormals[1](1,2) + clhs331*Deltatangentxis[1](1,2) + clhs334*Deltatangentetas[1](1,2);
    lhs(23,11)=-clhs260*clhs354 + clhs261*clhs361 + clhs262*clhs362 - clhs31*clhs355 + clhs31*clhs357 + clhs31*clhs359 - clhs327*DeltaNormals[2](1,2) + clhs331*Deltatangentxis[2](1,2) + clhs334*Deltatangentetas[2](1,2) - clhs35*clhs356 + clhs35*clhs358 + clhs35*clhs360;
    lhs(23,12)=-clhs263*clhs354 + clhs264*clhs361 + clhs265*clhs362 - clhs327*DeltaNormals[3](1,2) + clhs331*Deltatangentxis[3](1,2) + clhs334*Deltatangentetas[3](1,2) - clhs355*clhs38 - clhs356*clhs42 + clhs357*clhs38 + clhs358*clhs42 + clhs359*clhs38 + clhs360*clhs42;
    lhs(23,13)=-clhs266*clhs354 + clhs267*clhs361 + clhs268*clhs362 - clhs327*DeltaNormals[4](1,2) + clhs331*Deltatangentxis[4](1,2) + clhs334*Deltatangentetas[4](1,2) - clhs355*clhs45 - clhs356*clhs49 + clhs357*clhs45 + clhs358*clhs49 + clhs359*clhs45 + clhs360*clhs49;
    lhs(23,14)=-clhs269*clhs354 + clhs270*clhs361 + clhs271*clhs362 - clhs327*DeltaNormals[5](1,2) + clhs331*Deltatangentxis[5](1,2) + clhs334*Deltatangentetas[5](1,2) - clhs355*clhs52 - clhs356*clhs56 + clhs357*clhs52 + clhs358*clhs56 + clhs359*clhs52 + clhs360*clhs56;
    lhs(23,15)=-clhs272*clhs354 + clhs273*clhs361 + clhs274*clhs362 - clhs327*DeltaNormals[6](1,2) + clhs331*Deltatangentxis[6](1,2) + clhs334*Deltatangentetas[6](1,2) - clhs355*clhs59 - clhs356*clhs63 + clhs357*clhs59 + clhs358*clhs63 + clhs359*clhs59 + clhs360*clhs63;
    lhs(23,16)=-clhs275*clhs354 + clhs276*clhs361 + clhs277*clhs362 - clhs327*DeltaNormals[7](1,2) + clhs331*Deltatangentxis[7](1,2) + clhs334*Deltatangentetas[7](1,2) - clhs355*clhs66 - clhs356*clhs70 + clhs357*clhs66 + clhs358*clhs70 + clhs359*clhs66 + clhs360*clhs70;
    lhs(23,17)=-clhs278*clhs354 + clhs279*clhs361 + clhs280*clhs362 - clhs327*DeltaNormals[8](1,2) + clhs331*Deltatangentxis[8](1,2) + clhs334*Deltatangentetas[8](1,2) - clhs355*clhs73 - clhs356*clhs77 + clhs357*clhs73 + clhs358*clhs77 + clhs359*clhs73 + clhs360*clhs77;
    lhs(23,18)=clhs323*(clhs281*clhs352 + clhs282*clhs353);
    lhs(23,19)=clhs323*(clhs283*clhs352 + clhs284*clhs353);
    lhs(23,20)=clhs323*(clhs285*clhs352 + clhs286*clhs353);
    lhs(23,21)=clhs323*(clhs287*clhs352 + clhs288*clhs353);
    lhs(23,22)=clhs323*(clhs289*clhs352 + clhs290*clhs353);
    lhs(23,23)=clhs323*(clhs291*clhs352 + clhs292*clhs353);
    lhs(23,24)=clhs323*(clhs293*clhs352 + clhs294*clhs353);
    lhs(23,25)=clhs323*(clhs295*clhs352 + clhs296*clhs353);
    lhs(23,26)=clhs323*(clhs297*clhs352 + clhs298*clhs353);
    lhs(24,0)=clhs363*(-clhs211*clhs364 + clhs214*clhs365 + clhs217*clhs366);
    lhs(24,1)=clhs363*(-clhs218*clhs364 + clhs219*clhs365 + clhs220*clhs366);
    lhs(24,2)=clhs363*(-clhs221*clhs364 + clhs222*clhs365 + clhs223*clhs366);
    lhs(24,3)=clhs363*(-clhs224*clhs364 + clhs225*clhs365 + clhs226*clhs366);
    lhs(24,4)=clhs363*(-clhs227*clhs364 + clhs228*clhs365 + clhs229*clhs366);
    lhs(24,5)=clhs363*(-clhs230*clhs364 + clhs231*clhs365 + clhs232*clhs366);
    lhs(24,6)=clhs363*(-clhs233*clhs364 + clhs234*clhs365 + clhs235*clhs366);
    lhs(24,7)=clhs363*(-clhs236*clhs364 + clhs237*clhs365 + clhs238*clhs366);
    lhs(24,8)=clhs363*(-clhs239*clhs364 + clhs240*clhs365 + clhs241*clhs366);
    lhs(24,9)=-clhs16*clhs369 + clhs16*clhs372 + clhs16*clhs375 - clhs22*clhs370 + clhs22*clhs373 + clhs22*clhs376 - clhs243*clhs368 + clhs253*clhs377 + clhs255*clhs378 - clhs367*DeltaNormals[0](2,0) + clhs371*Deltatangentxis[0](2,0) + clhs374*Deltatangentetas[0](2,0);
    lhs(24,10)=-clhs24*clhs369 + clhs24*clhs372 + clhs24*clhs375 - clhs257*clhs368 + clhs258*clhs377 + clhs259*clhs378 - clhs29*clhs370 + clhs29*clhs373 + clhs29*clhs376 - clhs367*DeltaNormals[1](2,0) + clhs371*Deltatangentxis[1](2,0) + clhs374*Deltatangentetas[1](2,0);
    lhs(24,11)=-clhs260*clhs368 + clhs261*clhs377 + clhs262*clhs378 - clhs31*clhs369 + clhs31*clhs372 + clhs31*clhs375 - clhs36*clhs370 + clhs36*clhs373 + clhs36*clhs376 - clhs367*DeltaNormals[2](2,0) + clhs371*Deltatangentxis[2](2,0) + clhs374*Deltatangentetas[2](2,0);
    lhs(24,12)=-clhs263*clhs368 + clhs264*clhs377 + clhs265*clhs378 - clhs367*DeltaNormals[3](2,0) - clhs369*clhs38 - clhs370*clhs43 + clhs371*Deltatangentxis[3](2,0) + clhs372*clhs38 + clhs373*clhs43 + clhs374*Deltatangentetas[3](2,0) + clhs375*clhs38 + clhs376*clhs43;
    lhs(24,13)=-clhs266*clhs368 + clhs267*clhs377 + clhs268*clhs378 - clhs367*DeltaNormals[4](2,0) - clhs369*clhs45 - clhs370*clhs50 + clhs371*Deltatangentxis[4](2,0) + clhs372*clhs45 + clhs373*clhs50 + clhs374*Deltatangentetas[4](2,0) + clhs375*clhs45 + clhs376*clhs50;
    lhs(24,14)=-clhs269*clhs368 + clhs270*clhs377 + clhs271*clhs378 - clhs367*DeltaNormals[5](2,0) - clhs369*clhs52 - clhs370*clhs57 + clhs371*Deltatangentxis[5](2,0) + clhs372*clhs52 + clhs373*clhs57 + clhs374*Deltatangentetas[5](2,0) + clhs375*clhs52 + clhs376*clhs57;
    lhs(24,15)=-clhs272*clhs368 + clhs273*clhs377 + clhs274*clhs378 - clhs367*DeltaNormals[6](2,0) - clhs369*clhs59 - clhs370*clhs64 + clhs371*Deltatangentxis[6](2,0) + clhs372*clhs59 + clhs373*clhs64 + clhs374*Deltatangentetas[6](2,0) + clhs375*clhs59 + clhs376*clhs64;
    lhs(24,16)=-clhs275*clhs368 + clhs276*clhs377 + clhs277*clhs378 - clhs367*DeltaNormals[7](2,0) - clhs369*clhs66 - clhs370*clhs71 + clhs371*Deltatangentxis[7](2,0) + clhs372*clhs66 + clhs373*clhs71 + clhs374*Deltatangentetas[7](2,0) + clhs375*clhs66 + clhs376*clhs71;
    lhs(24,17)=-clhs278*clhs368 + clhs279*clhs377 + clhs280*clhs378 - clhs367*DeltaNormals[8](2,0) - clhs369*clhs73 - clhs370*clhs78 + clhs371*Deltatangentxis[8](2,0) + clhs372*clhs73 + clhs373*clhs78 + clhs374*Deltatangentetas[8](2,0) + clhs375*clhs73 + clhs376*clhs78;
    lhs(24,18)=clhs363*(clhs281*clhs365 + clhs282*clhs366);
    lhs(24,19)=clhs363*(clhs283*clhs365 + clhs284*clhs366);
    lhs(24,20)=clhs363*(clhs285*clhs365 + clhs286*clhs366);
    lhs(24,21)=clhs363*(clhs287*clhs365 + clhs288*clhs366);
    lhs(24,22)=clhs363*(clhs289*clhs365 + clhs290*clhs366);
    lhs(24,23)=clhs363*(clhs291*clhs365 + clhs292*clhs366);
    lhs(24,24)=clhs363*(clhs293*clhs365 + clhs294*clhs366);
    lhs(24,25)=clhs363*(clhs295*clhs365 + clhs296*clhs366);
    lhs(24,26)=clhs363*(clhs297*clhs365 + clhs298*clhs366);
    lhs(25,0)=clhs363*(-clhs211*clhs379 + clhs214*clhs380 + clhs217*clhs381);
    lhs(25,1)=clhs363*(-clhs218*clhs379 + clhs219*clhs380 + clhs220*clhs381);
    lhs(25,2)=clhs363*(-clhs221*clhs379 + clhs222*clhs380 + clhs223*clhs381);
    lhs(25,3)=clhs363*(-clhs224*clhs379 + clhs225*clhs380 + clhs226*clhs381);
    lhs(25,4)=clhs363*(-clhs227*clhs379 + clhs228*clhs380 + clhs229*clhs381);
    lhs(25,5)=clhs363*(-clhs230*clhs379 + clhs231*clhs380 + clhs232*clhs381);
    lhs(25,6)=clhs363*(-clhs233*clhs379 + clhs234*clhs380 + clhs235*clhs381);
    lhs(25,7)=clhs363*(-clhs236*clhs379 + clhs237*clhs380 + clhs238*clhs381);
    lhs(25,8)=clhs363*(-clhs239*clhs379 + clhs240*clhs380 + clhs241*clhs381);
    lhs(25,9)=-clhs16*clhs383 + clhs16*clhs385 + clhs16*clhs387 - clhs22*clhs384 + clhs22*clhs386 + clhs22*clhs388 - clhs243*clhs382 + clhs253*clhs389 + clhs255*clhs390 - clhs367*DeltaNormals[0](2,1) + clhs371*Deltatangentxis[0](2,1) + clhs374*Deltatangentetas[0](2,1);
    lhs(25,10)=-clhs24*clhs383 + clhs24*clhs385 + clhs24*clhs387 - clhs257*clhs382 + clhs258*clhs389 + clhs259*clhs390 - clhs29*clhs384 + clhs29*clhs386 + clhs29*clhs388 - clhs367*DeltaNormals[1](2,1) + clhs371*Deltatangentxis[1](2,1) + clhs374*Deltatangentetas[1](2,1);
    lhs(25,11)=-clhs260*clhs382 + clhs261*clhs389 + clhs262*clhs390 - clhs31*clhs383 + clhs31*clhs385 + clhs31*clhs387 - clhs36*clhs384 + clhs36*clhs386 + clhs36*clhs388 - clhs367*DeltaNormals[2](2,1) + clhs371*Deltatangentxis[2](2,1) + clhs374*Deltatangentetas[2](2,1);
    lhs(25,12)=-clhs263*clhs382 + clhs264*clhs389 + clhs265*clhs390 - clhs367*DeltaNormals[3](2,1) + clhs371*Deltatangentxis[3](2,1) + clhs374*Deltatangentetas[3](2,1) - clhs38*clhs383 + clhs38*clhs385 + clhs38*clhs387 - clhs384*clhs43 + clhs386*clhs43 + clhs388*clhs43;
    lhs(25,13)=-clhs266*clhs382 + clhs267*clhs389 + clhs268*clhs390 - clhs367*DeltaNormals[4](2,1) + clhs371*Deltatangentxis[4](2,1) + clhs374*Deltatangentetas[4](2,1) - clhs383*clhs45 - clhs384*clhs50 + clhs385*clhs45 + clhs386*clhs50 + clhs387*clhs45 + clhs388*clhs50;
    lhs(25,14)=-clhs269*clhs382 + clhs270*clhs389 + clhs271*clhs390 - clhs367*DeltaNormals[5](2,1) + clhs371*Deltatangentxis[5](2,1) + clhs374*Deltatangentetas[5](2,1) - clhs383*clhs52 - clhs384*clhs57 + clhs385*clhs52 + clhs386*clhs57 + clhs387*clhs52 + clhs388*clhs57;
    lhs(25,15)=-clhs272*clhs382 + clhs273*clhs389 + clhs274*clhs390 - clhs367*DeltaNormals[6](2,1) + clhs371*Deltatangentxis[6](2,1) + clhs374*Deltatangentetas[6](2,1) - clhs383*clhs59 - clhs384*clhs64 + clhs385*clhs59 + clhs386*clhs64 + clhs387*clhs59 + clhs388*clhs64;
    lhs(25,16)=-clhs275*clhs382 + clhs276*clhs389 + clhs277*clhs390 - clhs367*DeltaNormals[7](2,1) + clhs371*Deltatangentxis[7](2,1) + clhs374*Deltatangentetas[7](2,1) - clhs383*clhs66 - clhs384*clhs71 + clhs385*clhs66 + clhs386*clhs71 + clhs387*clhs66 + clhs388*clhs71;
    lhs(25,17)=-clhs278*clhs382 + clhs279*clhs389 + clhs280*clhs390 - clhs367*DeltaNormals[8](2,1) + clhs371*Deltatangentxis[8](2,1) + clhs374*Deltatangentetas[8](2,1) - clhs383*clhs73 - clhs384*clhs78 + clhs385*clhs73 + clhs386*clhs78 + clhs387*clhs73 + clhs388*clhs78;
    lhs(25,18)=clhs363*(clhs281*clhs380 + clhs282*clhs381);
    lhs(25,19)=clhs363*(clhs283*clhs380 + clhs284*clhs381);
    lhs(25,20)=clhs363*(clhs285*clhs380 + clhs286*clhs381);
    lhs(25,21)=clhs363*(clhs287*clhs380 + clhs288*clhs381);
    lhs(25,22)=clhs363*(clhs289*clhs380 + clhs290*clhs381);
    lhs(25,23)=clhs363*(clhs291*clhs380 + clhs292*clhs381);
    lhs(25,24)=clhs363*(clhs293*clhs380 + clhs294*clhs381);
    lhs(25,25)=clhs363*(clhs295*clhs380 + clhs296*clhs381);
    lhs(25,26)=clhs363*(clhs297*clhs380 + clhs298*clhs381);
    lhs(26,0)=clhs363*(-clhs211*clhs391 + clhs214*clhs392 + clhs217*clhs393);
    lhs(26,1)=clhs363*(-clhs218*clhs391 + clhs219*clhs392 + clhs220*clhs393);
    lhs(26,2)=clhs363*(-clhs221*clhs391 + clhs222*clhs392 + clhs223*clhs393);
    lhs(26,3)=clhs363*(-clhs224*clhs391 + clhs225*clhs392 + clhs226*clhs393);
    lhs(26,4)=clhs363*(-clhs227*clhs391 + clhs228*clhs392 + clhs229*clhs393);
    lhs(26,5)=clhs363*(-clhs230*clhs391 + clhs231*clhs392 + clhs232*clhs393);
    lhs(26,6)=clhs363*(-clhs233*clhs391 + clhs234*clhs392 + clhs235*clhs393);
    lhs(26,7)=clhs363*(-clhs236*clhs391 + clhs237*clhs392 + clhs238*clhs393);
    lhs(26,8)=clhs363*(-clhs239*clhs391 + clhs240*clhs392 + clhs241*clhs393);
    lhs(26,9)=-clhs16*clhs395 + clhs16*clhs397 + clhs16*clhs399 - clhs22*clhs396 + clhs22*clhs398 + clhs22*clhs400 - clhs243*clhs394 + clhs253*clhs401 + clhs255*clhs402 - clhs367*DeltaNormals[0](2,2) + clhs371*Deltatangentxis[0](2,2) + clhs374*Deltatangentetas[0](2,2);
    lhs(26,10)=-clhs24*clhs395 + clhs24*clhs397 + clhs24*clhs399 - clhs257*clhs394 + clhs258*clhs401 + clhs259*clhs402 - clhs29*clhs396 + clhs29*clhs398 + clhs29*clhs400 - clhs367*DeltaNormals[1](2,2) + clhs371*Deltatangentxis[1](2,2) + clhs374*Deltatangentetas[1](2,2);
    lhs(26,11)=-clhs260*clhs394 + clhs261*clhs401 + clhs262*clhs402 - clhs31*clhs395 + clhs31*clhs397 + clhs31*clhs399 - clhs36*clhs396 + clhs36*clhs398 + clhs36*clhs400 - clhs367*DeltaNormals[2](2,2) + clhs371*Deltatangentxis[2](2,2) + clhs374*Deltatangentetas[2](2,2);
    lhs(26,12)=-clhs263*clhs394 + clhs264*clhs401 + clhs265*clhs402 - clhs367*DeltaNormals[3](2,2) + clhs371*Deltatangentxis[3](2,2) + clhs374*Deltatangentetas[3](2,2) - clhs38*clhs395 + clhs38*clhs397 + clhs38*clhs399 - clhs396*clhs43 + clhs398*clhs43 + clhs400*clhs43;
    lhs(26,13)=-clhs266*clhs394 + clhs267*clhs401 + clhs268*clhs402 - clhs367*DeltaNormals[4](2,2) + clhs371*Deltatangentxis[4](2,2) + clhs374*Deltatangentetas[4](2,2) - clhs395*clhs45 - clhs396*clhs50 + clhs397*clhs45 + clhs398*clhs50 + clhs399*clhs45 + clhs400*clhs50;
    lhs(26,14)=-clhs269*clhs394 + clhs270*clhs401 + clhs271*clhs402 - clhs367*DeltaNormals[5](2,2) + clhs371*Deltatangentxis[5](2,2) + clhs374*Deltatangentetas[5](2,2) - clhs395*clhs52 - clhs396*clhs57 + clhs397*clhs52 + clhs398*clhs57 + clhs399*clhs52 + clhs400*clhs57;
    lhs(26,15)=-clhs272*clhs394 + clhs273*clhs401 + clhs274*clhs402 - clhs367*DeltaNormals[6](2,2) + clhs371*Deltatangentxis[6](2,2) + clhs374*Deltatangentetas[6](2,2) - clhs395*clhs59 - clhs396*clhs64 + clhs397*clhs59 + clhs398*clhs64 + clhs399*clhs59 + clhs400*clhs64;
    lhs(26,16)=-clhs275*clhs394 + clhs276*clhs401 + clhs277*clhs402 - clhs367*DeltaNormals[7](2,2) + clhs371*Deltatangentxis[7](2,2) + clhs374*Deltatangentetas[7](2,2) - clhs395*clhs66 - clhs396*clhs71 + clhs397*clhs66 + clhs398*clhs71 + clhs399*clhs66 + clhs400*clhs71;
    lhs(26,17)=-clhs278*clhs394 + clhs279*clhs401 + clhs280*clhs402 - clhs367*DeltaNormals[8](2,2) + clhs371*Deltatangentxis[8](2,2) + clhs374*Deltatangentetas[8](2,2) - clhs395*clhs73 - clhs396*clhs78 + clhs397*clhs73 + clhs398*clhs78 + clhs399*clhs73 + clhs400*clhs78;
    lhs(26,18)=clhs363*(clhs281*clhs392 + clhs282*clhs393);
    lhs(26,19)=clhs363*(clhs283*clhs392 + clhs284*clhs393);
    lhs(26,20)=clhs363*(clhs285*clhs392 + clhs286*clhs393);
    lhs(26,21)=clhs363*(clhs287*clhs392 + clhs288*clhs393);
    lhs(26,22)=clhs363*(clhs289*clhs392 + clhs290*clhs393);
    lhs(26,23)=clhs363*(clhs291*clhs392 + clhs292*clhs393);
    lhs(26,24)=clhs363*(clhs293*clhs392 + clhs294*clhs393);
    lhs(26,25)=clhs363*(clhs295*clhs392 + clhs296*clhs393);
    lhs(26,26)=clhs363*(clhs297*clhs392 + clhs298*clhs393);

    
    return lhs;
}

    /***********************************************************************************/
    /***********************************************************************************/
    
    static inline array_1d<double,27> ComputeGaussPointFrictionlessRHS(
        const array_1d<double,3> N1, 
        const array_1d<double,3> N2, 
        const array_1d<double,3> Phi, 
        const double detJ, 
        const ContactData<3,3>& rContactData
        )
{
    array_1d<double,27> rhs;
    
    const double integration_point_gap = inner_prod(rContactData.Gaps,N1);
    const bounded_matrix<double, 3,3> normalslave = rContactData.Normal_s;
    const bounded_matrix<double, 3,3> tan1slave   = rContactData.Tangent_xi_s;
    const bounded_matrix<double, 3,3> tan2slave   = rContactData.Tangent_eta_s;
    const bounded_matrix<double, 3,3> lm          = rContactData.LagrangeMultipliers;
    
    const double Dt = rContactData.Dt;
    const bounded_matrix<double, 3,3> v1 = rContactData.v1;
    const bounded_matrix<double, 3,3> v2 = rContactData.v2;
    
    const double crhs0 =     N2[0]; // N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
    const double crhs1 =     detJ; // DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs2 =     Phi[0]; // PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs3 =     Phi[1]; // PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs4 =     Phi[2]; // PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs5 =     crhs2*lm(0,0) + crhs3*lm(1,0) + crhs4*lm(2,0);
    const double crhs6 =     crhs1*crhs5;
    const double crhs7 =     crhs2*lm(0,1) + crhs3*lm(1,1) + crhs4*lm(2,1);
    const double crhs8 =     crhs1*crhs7;
    const double crhs9 =     crhs2*lm(0,2) + crhs3*lm(1,2) + crhs4*lm(2,2);
    const double crhs10 =     crhs1*crhs9;
    const double crhs11 =     N2[1]; // N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
    const double crhs12 =     N2[2]; // N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
    const double crhs13 =     N1[0]*crhs1;
    const double crhs14 =     N1[1]*crhs1;
    const double crhs15 =     N1[2]*crhs1;
    const double crhs16 =     crhs1*crhs2;
    const double crhs17 =     integration_point_gap; // GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
    const double crhs18 =     tan1slave(0,0); // TAN1SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs19 =     1.0/Dt;
    const double crhs20 =     tan1slave(1,0); // TAN1SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs21 =     tan1slave(2,0); // TAN1SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs22 =     N1[0]*(Dt*v1(0,0)) + N1[1]*(Dt*v1(1,0)) + N1[2]*(Dt*v1(2,0)) - crhs0*(Dt*v2(0,0)) - crhs11*(Dt*v2(1,0)) - crhs12*(Dt*v2(2,0));
    const double crhs23 =     tan1slave(0,1); // TAN1SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs24 =     tan1slave(1,1); // TAN1SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs25 =     tan1slave(2,1); // TAN1SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs26 =     N1[0]*(Dt*v1(0,1)) + N1[1]*(Dt*v1(1,1)) + N1[2]*(Dt*v1(2,1)) - crhs0*(Dt*v2(0,1)) - crhs11*(Dt*v2(1,1)) - crhs12*(Dt*v2(2,1));
    const double crhs27 =     tan1slave(0,2); // TAN1SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs28 =     tan1slave(1,2); // TAN1SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs29 =     tan1slave(2,2); // TAN1SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs30 =     N1[0]*(Dt*v1(0,2)) + N1[1]*(Dt*v1(1,2)) + N1[2]*(Dt*v1(2,2)) - crhs0*(Dt*v2(0,2)) - crhs11*(Dt*v2(1,2)) - crhs12*(Dt*v2(2,2));
    const double crhs31 =     crhs19*(crhs22*(N1[0]*crhs18 + N1[1]*crhs20 + N1[2]*crhs21) + crhs26*(N1[0]*crhs23 + N1[1]*crhs24 + N1[2]*crhs25) + crhs30*(N1[0]*crhs27 + N1[1]*crhs28 + N1[2]*crhs29));
    const double crhs32 =     tan2slave(0,0); // TAN2SLAVE(0,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs33 =     tan2slave(1,0); // TAN2SLAVE(1,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs34 =     tan2slave(2,0); // TAN2SLAVE(2,0)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs35 =     tan2slave(0,1); // TAN2SLAVE(0,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs36 =     tan2slave(1,1); // TAN2SLAVE(1,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs37 =     tan2slave(2,1); // TAN2SLAVE(2,1)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs38 =     tan2slave(0,2); // TAN2SLAVE(0,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs39 =     tan2slave(1,2); // TAN2SLAVE(1,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs40 =     tan2slave(2,2); // TAN2SLAVE(2,2)(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs41 =     crhs19*(crhs22*(N1[0]*crhs32 + N1[1]*crhs33 + N1[2]*crhs34) + crhs26*(N1[0]*crhs35 + N1[1]*crhs36 + N1[2]*crhs37) + crhs30*(N1[0]*crhs38 + N1[1]*crhs39 + N1[2]*crhs40));
    const double crhs42 =     crhs1*crhs3;
    const double crhs43 =     crhs1*crhs4;

    rhs[0]=-crhs0*crhs6;
    rhs[1]=-crhs0*crhs8;
    rhs[2]=-crhs0*crhs10;
    rhs[3]=-crhs11*crhs6;
    rhs[4]=-crhs11*crhs8;
    rhs[5]=-crhs10*crhs11;
    rhs[6]=-crhs12*crhs6;
    rhs[7]=-crhs12*crhs8;
    rhs[8]=-crhs10*crhs12;
    rhs[9]=crhs13*crhs5;
    rhs[10]=crhs13*crhs7;
    rhs[11]=crhs13*crhs9;
    rhs[12]=crhs14*crhs5;
    rhs[13]=crhs14*crhs7;
    rhs[14]=crhs14*crhs9;
    rhs[15]=crhs15*crhs5;
    rhs[16]=crhs15*crhs7;
    rhs[17]=crhs15*crhs9;
    rhs[18]=crhs16*(crhs17*normalslave(0,0) - crhs18*crhs31 - crhs32*crhs41);
    rhs[19]=crhs16*(crhs17*normalslave(0,1) - crhs23*crhs31 - crhs35*crhs41);
    rhs[20]=crhs16*(crhs17*normalslave(0,2) - crhs27*crhs31 - crhs38*crhs41);
    rhs[21]=crhs42*(crhs17*normalslave(1,0) - crhs20*crhs31 - crhs33*crhs41);
    rhs[22]=crhs42*(crhs17*normalslave(1,1) - crhs24*crhs31 - crhs36*crhs41);
    rhs[23]=crhs42*(crhs17*normalslave(1,2) - crhs28*crhs31 - crhs39*crhs41);
    rhs[24]=crhs43*(crhs17*normalslave(2,0) - crhs21*crhs31 - crhs34*crhs41);
    rhs[25]=crhs43*(crhs17*normalslave(2,1) - crhs25*crhs31 - crhs37*crhs41);
    rhs[26]=crhs43*(crhs17*normalslave(2,2) - crhs29*crhs31 - crhs40*crhs41);

    
    return rhs;
}

    /***********************************************************************************/
    /***********************************************************************************/
    
    static inline array_1d<double,27> ComputeGaussPointRHS(
        const array_1d<double,3> N1, 
        const array_1d<double,3> N2, 
        const array_1d<double,3> Phi, 
        const double detJ, 
        const double mu, 
        const ContactData<3,3>& rContactData
        )
{
    array_1d<double,27> rhs;
    
    const double integration_point_gap = inner_prod(rContactData.Gaps,N1);
    const bounded_matrix<double, 3,3> normalslave = rContactData.Normal_s;
    const bounded_matrix<double, 3,3> tan1slave   = rContactData.Tangent_xi_s;
    const bounded_matrix<double, 3,3> tan2slave   = rContactData.Tangent_eta_s;
    const bounded_matrix<double, 3,3> lm          = rContactData.LagrangeMultipliers;
    
    const array_1d<double, 2> Ctan = rContactData.Ctan;
    
    const double crhs0 =     N2[0]; // N2[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
    const double crhs1 =     detJ; // DETJ(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs2 =     Phi[0]; // PHI[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs3 =     Phi[1]; // PHI[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs4 =     Phi[2]; // PHI[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2))
    const double crhs5 =     crhs2*lm(0,0) + crhs3*lm(1,0) + crhs4*lm(2,0);
    const double crhs6 =     crhs1*crhs5;
    const double crhs7 =     crhs2*lm(0,1) + crhs3*lm(1,1) + crhs4*lm(2,1);
    const double crhs8 =     crhs1*crhs7;
    const double crhs9 =     crhs2*lm(0,2) + crhs3*lm(1,2) + crhs4*lm(2,2);
    const double crhs10 =     crhs1*crhs9;
    const double crhs11 =     N2[1]; // N2[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
    const double crhs12 =     N2[2]; // N2[2](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
    const double crhs13 =     N1[0]*crhs1;
    const double crhs14 =     N1[1]*crhs1;
    const double crhs15 =     N1[2]*crhs1;
    const double crhs16 =     crhs1*crhs2;
    const double crhs17 =     integration_point_gap; // GAPG(U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2))
    const double crhs18 =     Ctan[0]; // CTANG[0](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2))
    const double crhs19 =     Ctan[1]; // CTANG[1](U1(0,0), U1(0,1), U1(0,2), U1(1,0), U1(1,1), U1(1,2), U1(2,0), U1(2,1), U1(2,2), U2(0,0), U2(0,1), U2(0,2), U2(1,0), U2(1,1), U2(1,2), U2(2,0), U2(2,1), U2(2,2), LM(0,0), LM(0,1), LM(0,2), LM(1,0), LM(1,1), LM(1,2), LM(2,0), LM(2,1), LM(2,2))
    const double crhs20 =     crhs1*crhs3;
    const double crhs21 =     crhs1*crhs4;

    rhs[0]=-crhs0*crhs6;
    rhs[1]=-crhs0*crhs8;
    rhs[2]=-crhs0*crhs10;
    rhs[3]=-crhs11*crhs6;
    rhs[4]=-crhs11*crhs8;
    rhs[5]=-crhs10*crhs11;
    rhs[6]=-crhs12*crhs6;
    rhs[7]=-crhs12*crhs8;
    rhs[8]=-crhs10*crhs12;
    rhs[9]=crhs13*crhs5;
    rhs[10]=crhs13*crhs7;
    rhs[11]=crhs13*crhs9;
    rhs[12]=crhs14*crhs5;
    rhs[13]=crhs14*crhs7;
    rhs[14]=crhs14*crhs9;
    rhs[15]=crhs15*crhs5;
    rhs[16]=crhs15*crhs7;
    rhs[17]=crhs15*crhs9;
    rhs[18]=// tan1slave(0,0)
// tan2slave(0,0)
crhs16*(crhs17*normalslave(0,0) - crhs18*tan1slave(0,0) - crhs19*tan2slave(0,0));
    rhs[19]=// tan1slave(0,1)
// tan2slave(0,1)
crhs16*(crhs17*normalslave(0,1) - crhs18*tan1slave(0,1) - crhs19*tan2slave(0,1));
    rhs[20]=// tan1slave(0,2)
// tan2slave(0,2)
crhs16*(crhs17*normalslave(0,2) - crhs18*tan1slave(0,2) - crhs19*tan2slave(0,2));
    rhs[21]=// tan1slave(1,0)
// tan2slave(1,0)
crhs20*(crhs17*normalslave(1,0) - crhs18*tan1slave(1,0) - crhs19*tan2slave(1,0));
    rhs[22]=// tan1slave(1,1)
// tan2slave(1,1)
crhs20*(crhs17*normalslave(1,1) - crhs18*tan1slave(1,1) - crhs19*tan2slave(1,1));
    rhs[23]=// tan1slave(1,2)
// tan2slave(1,2)
crhs20*(crhs17*normalslave(1,2) - crhs18*tan1slave(1,2) - crhs19*tan2slave(1,2));
    rhs[24]=// tan1slave(2,0)
// tan2slave(2,0)
crhs21*(crhs17*normalslave(2,0) - crhs18*tan1slave(2,0) - crhs19*tan2slave(2,0));
    rhs[25]=// tan1slave(2,1)
// tan2slave(2,1)
crhs21*(crhs17*normalslave(2,1) - crhs18*tan1slave(2,1) - crhs19*tan2slave(2,1));
    rhs[26]=// tan1slave(2,2)
// tan2slave(2,2)
crhs21*(crhs17*normalslave(2,2) - crhs18*tan1slave(2,2) - crhs19*tan2slave(2,2));

    
    return rhs;
}

private:
};// class Contact3D3N3N
}
#endif /* KRATOS_CONTACT3D3N3N defined */
