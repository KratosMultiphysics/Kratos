<?xml version='1.0' encoding='utf-8'?>
<Kratos_Data version="1.2.8">
    <Groups modeltype="GiD">
        <Group id="wall" color="#817623" state="1" type="Generic"/>
        <Group id="velocity" color="#4168fd" state="1" type="Generic"/>
        <Group id="pressure" color="#0a5cc5" state="1" type="Generic"/>
        <Group id="fluid" color="#751ccb" state="1" type="Generic"/>
        <Group id="-AKGSkinMesh2D" color="#34801d" state="1" type="Generic"/>
    </Groups>
    <GroupTypes>
        <Item id="load" pid="Load"/>
        <Item id="BC" pid="BC"/>
        <Item id="fluid" pid="Fluid"/>
        <Item id="generic" pid="Generic"/>
    </GroupTypes>
    <Units>
        <!-- Kratos unit properties -->
    </Units>
    <!-- Kratos general application data -->
    <!-- id= Internal identifier -->
    <!-- pid= Public/User identifier -->
    <!-- icon= Icon identifer -->
    <!-- state= Current state ["normal"|"disabled"|"hidden"|"hiddenAll] -->
    <!-- help= Help text for this item -->
    <!-- dv= Default/current value -->
    <!-- ivalues= Available idValues list => Using ComboBox widget-->
    <!-- values= Available traduction values list => Using ComboBox widget-->
    <!-- Implement a metodology for the link  between data  -->
    <!-- Kratos application data containers -->
    <RootData id="GeneralApplicationData" pid="General application data" help="Helptext" open="1">
        <Container id="ProjectInfo" pid="Project information" class="Tab" help="Project information" open="0" icon="ProjectInfo.gif">
            <Item id="CompanyName" pid="Company name" dv="CIMNE" style="*" help="Company name"/>
            <Item id="ProjectName" pid="Project name" dv="cavity" style="*" help="Project name"/>
            <Item id="ProjectNumber" pid="Project number" style="*" dv="01" help="Project number"/>
            <Item id="ModelName" pid="Model name" dv="cavity2d" style="*" help="Model name"/>
            <Item id="ModelDescription" pid="Model description" dv="" help="Model description"/>
            <Item id="RevisionNumber" pid="Revision number" dv="" help="Revision number"/>
            <Item id="Engineer" pid="Engineer" dv="" help="Engineer"/>
            <Item id="Supervisor" pid="Supervisor" dv="" help="Supervisor"/>
        </Container>
        <Container id="ProjectConfiguration" pid="Project configuration" state="hidden" help="Project configuration" open="1">
            <Item id="KratosPath" pid="Kratos path" dv="D:\Kratos" state="hidden" help="Kratos path"/>
        </Container>
        <Container id="Domain" pid="Domain" help="Helptext" open="1">
            <Item id="SpatialDimension" pid="Spatial dimension" class="nDim" dv="2D" ivalues="2D,3D" values="2D,3D" help="Spatial Dimension"/>
        </Container>
        <Container id="ApplicationTypes" pid="Application types" icon="aplicationTree.gif" help="Application types" open="1">
            <Item id="StructuralAnalysis" pid="Structural analysis" class="application" state="normal" dv="No" ivalues="Yes,No" values="Yes,No" help="Structural analysis" icon="aplicationTree.gif" open="0"/>
            <Item id="Fluid" pid="Fluid" class="application" dv="Yes" ivalues="Yes,No" values="Yes,No" help="Fluid dynamics" icon="aplicationTree.gif"/>
            <Item id="PFEM" pid="PFEM" class="application" dv="No" state="hidden" ivalues="Yes,No" values="Yes,No" help="PFEM" icon="aplicationTree.gif"/>
            <Item id="FluidStructureInteraction" pid="Fluid structure interaction (FSI)" class="application" state="hidden" dv="No" ivalues="Yes,No" values="Yes,No" help="Fluid structure interaction (FSI)" icon="aplicationTree.gif"/>
            <Item id="ConvectionDiffusion" pid="Convection diffusion" class="application" state="hidden" dv="No" ivalues="Yes,No" values="Yes,No" help="Convection diffusion" icon="aplicationTree.gif"/>
        </Container>
    </RootData>
    <RootData id="StructuralAnalysis" pid="Structural simulation" state="hiddenAll" class="application" icon="aplicationTree.gif" help="Structural simulation" open="1">
        <Container id="AnalysisData" pid="Analysis type" class="Tab" help="Analysis Data" open="1">
            <Item id="StructuralType2D" nDim="2D" pid="Structural type" class="strucType" dv="Generic" ivalues="Beams,Solids,Generic" values="Beams,Solids,Generic" help="Structural Type"/>
            <Item id="StructuralType3D" nDim="3D" pid="Structural type" class="strucType" dv="Generic" ivalues="Beams,Truss,Membranes,Shells,Solids,Generic" values="Beams,Truss,Membranes,Shells,Solids,Generic" help="Structural Type"/>
            <Item id="SolutionType" pid="Solution type" class="soluType" dv="Dynamic" ivalues="Static,Dynamic,RelaxedDynamic" values="Static,Dynamic,Relaxed dynamic" help="Solution type"/>
            <Item id="AnalysisType" pid="Analysis type" class="analysType" dv="Non-Linear" ivalues="Linear,Non-Linear" values="Linear,Non-Linear" help="Analysis Type"/>
        </Container>
        <Container id="SolutionStrategy" pid="Solution strategy" help="Solution Strategy" open="1" icon="solstrategy.gif">
            <Item id="ParallelSolutionType" pid="Parallel type" dv="OpenMP" class="PSolutionType" ivalues="OpenMP,MPI" values="OpenMP,MPI" help=""/>
            <Item id="MPINumberOfProcessors" pid="Number of processors" dv="2" PSolutionType="MPI" help="Number of processors"/>
            <Item id="OpenMPNumberOfThreads" pid="Number of threads" dv="2" PSolutionType="OpenMP" help="Number of threads"/>
            <Item id="LinearSolverType" pid="Linear solver type" class="solverType" dv="Direct" ivalues="Direct,Iterative" values="Direct,Iterative" help=""/>
            <Item id="DirectSolverType" pid="Direct solver type" solverType="Direct" dv="SkylineLUFactorization" ivalues="SkylineLUFactorization,SuperLU,ParallelMKLPardiso" values="Skyline LU factorization,Super LU,Parallel MKL Pardiso" help=""/>
            <Item id="IterativeSolverType" pid="Iterative solver type" solverType="Iterative" dv="ConjugateGradient" ivalues="ConjugateGradient,BiConjugateGradientStabilized" values="Conjugate gradient,BiConjugate gradient stabilized" help=""/>
            <Item id="Tolerance" pid="Iterative" solverType="Iterative" dv="1E-6" help=""/>
            <Item id="MaximumIteration" pid="Maximum iteration" solverType="Iterative" dv="5000" help=""/>
            <Item id="PreconditionerType" pid="Preconditioner type" solverType="Iterative" dv="ILU0" ivalues="None,Diagonal,ILU0" values="None,Diagonal,ILU0" help=""/>
            <Container id="Dynamic" pid="Dynamic" class="Tab" soluType="Dynamic,RelaxedDynamic" open="1">
                <Item id="StartTime" pid="Start time" dv="0.01" help=""/>
                <Item id="EndTime" pid="End time" dv="1" help=""/>
                <Item id="DeltaTime" pid="Delta time" dv="0.01" help=""/>
            </Container>
            <Container id="Non-Linear" pid="Non-Linear" class="Tab" analysType="Non-Linear" help="" open="0" icon="nonlinear.gif">
                <Item id="SolutionMethod" pid="Solution method" dv="Newton-Raphson" ivalues="Newton-Raphson,LineSearch,ArcLength" values="Newton-Raphson methods,Newton-Raphson with line search,Arc length methods" help=""/>
                <Item id="ConvergenceCriteria" pid="Convergence criteria" class="convCriteria" dv="Residual" ivalues="Displacement,Residual,DisplacementAndResidual,DisplacementOrResidual" values="Displacement,Residual,Displacement and residual,Displacement or residual" help=""/>
                <Item id="ResidualConvergenceTolerance" pid="Residual convergence tolerance" convCriteria="Residual,DisplacementAndResidual,DisplacementOrResidual" dv="1.0E-3" help="Residual convergence tolerance"/>
                <Item id="ResidualAbsoluteTolerance" pid="Residual absolute tolerance" convCriteria="Residual,DisplacementAndResidual,DisplacementOrResidual" dv="1.0E-6" help="Residual absolute tolerance"/>
                <Item id="DisplacementConvergenceTolerance" pid="Displacement convergence tolerance" convCriteria="Displacement,DisplacementAndResidual,DisplacementOrResidual" dv="1.0E-6" help="Displacement convergence tolerance"/>
                <Item id="DisplacementAbsoluteTolerance" pid="Displacement absolute tolerance" convCriteria="Displacement,DisplacementAndResidual,DisplacementOrResidual" dv="1.0E-9" help="Displacement absolute tolerance"/>
                <Item id="MaximumIterations" pid="Maximum iterations" dv="30" help=""/>
            </Container>
        </Container>
        <Container id="Properties" pid="Properties" class="Properties" idTemplate="PropertiesStruct" icon="propsTreeNew.gif" help="Add a new Property" open="1"/>
        <Container id="Elements" pid="Elements" help="Elements" open="1" icon="femelements.gif">
            <Container id="TotalLagrangian" pid="Total Lagrangian" class="Groups" nDim="2D" GiDEntity="surface" strucType="Solids" idTemplate="TLagrangian" icon="groupsTreeNew.gif" help="Total Lagrangian" open="1"/>
            <Container id="TotalLagrangian3D" pid="Total Lagrangian" nDim="3D" class="Groups" GiDEntity="volume" strucType="Solids" idTemplate="TLagrangian3D" icon="groupsTreeNew.gif" help="Total Lagrangian" open="1"/>
            <Container id="CrisfieldTrussElement" pid="Crisfield truss element" class="Groups" strucType="Truss" idTemplate="TrussTLagrangian" GiDEntity="line" nDim="3D" icon="groupsTreeNew.gif" help="Crisfield truss element" open="1"/>
            <Container id="BeamElement" pid="Beam element" class="Groups" nDim="3D" strucType="Beams" idTemplate="BeamTLagrangian" GiDEntity="line" icon="groupsTreeNew.gif" help="Beam element type" open="1"/>
            <Container id="ShellIsotropic" pid="Shell isotropic" class="Groups" nDim="3D" GiDEntity="surface" strucType="Shells" idTemplate="TLagrangian" icon="groupsTreeNew.gif" help="ShellIsotropic" open="1"/>
            <Container id="ShellAnisotropic" pid="Shell anisotropic" class="Groups" nDim="3D" GiDEntity="surface" strucType="Shells" idTemplate="TLagrangian" icon="groupsTreeNew.gif" help="ShellAnisotropic" open="1"/>
            <Container id="LinearElement" pid="Linear element" class="Groups" nDim="2D" GiDEntity="surface" strucType="Solids" idTemplate="TLagrangian" icon="groupsTreeNew.gif" help="LinearElement" open="1"/>
            <Container id="LinearElement3D" pid="Linear element" class="Groups" strucType="Solids" idTemplate="TLagrangian3D" nDim="3D" GiDEntity="volume" icon="groupsTreeNew.gif" help="LinearElement" open="1"/>
            <Container id="EBST" pid="EBST (formulation)" class="Groups" nDim="3D" GiDEntity="surface" strucType="Shells" idTemplate="TLagrangian" icon="groupsTreeNew.gif" help="Total Lagrangian" open="1"/>
            <Container id="Membrane" pid="Membrane" class="Groups" nDim="3D" GiDEntity="surface" strucType="Membranes" idTemplate="MembraneElement" icon="groupsTreeNew.gif" help="Membrane element type" open="1"/>
        </Container>
        <Container id="Loads" pid="Loads" help="Loads" open="1" icon="loads.gif">
            <Container id="BodyForce" pid="Body force" class="Groups" idTemplate="BodyForce" icon="groupsTreeNew.gif" help="Body forces" open="1"/>
            <Container id="Puntual" pid="Puntual" class="Groups" idTemplate="Puntual" icon="groupsTreeNew.gif" help="Concentrated" open="1"/>
            <Container id="Pressure" pid="Pressure" class="Groups" idTemplate="ShellPressure" nDim="3D" GiDEntity="surface" strucType="Shells,Membranes,Generic" icon="groupsTreeNew.gif" help="Define the positive or negative pressure" open="1"/>
            <Container id="Face" pid="Face" class="Groups" nDim="3D" strucType="Solids" idTemplate="Displacements" icon="groupsTreeNew.gif" help="Face" open="1"/>
        </Container>
        <Container id="Conditions" pid="Conditions" help="Boundary Conditions" open="1" icon="boundarycond.gif">
            <Container id="Displacements" pid="Displacements" class="Groups" idTemplate="Displacements" icon="groupsTreeNew.gif" help="Displacements" open="1" dv="Yes" ivalues="Yes,No" values="Yes,No"/>
            <Container id="Rotations" pid="Rotations" class="Groups" strucType="Beams,Shells" GiDEntity="point,line,surface" idTemplate="Displacements" icon="groupsTreeNew.gif" help="Rotations" open="1"/>
        </Container>
        <Container id="Results" pid="Results" help="Results" open="1" icon="outputresults.gif">
            <Item id="OutputDeltaTime" pid="Output delta time" dv="0.0" help="Output delta time"/>
            <Container id="OnNodes" pid="On nodes" class="Tab" help="On nodes" open="1">
                <Item id="Displacements" pid="Displacements" dv="Yes" ivalues="Yes,No" values="Yes,No" help="Displacements"/>
                <Item id="Forces" pid="Forces" dv="Yes" ivalues="Yes,No" values="Yes,No" help="Forces"/>
                <Item id="Reactions" pid="Reactions" dv="Yes" ivalues="Yes,No" values="Yes,No" help="Stresses"/>
            </Container>
            <Container id="OnGaussPoints" pid="On gauss points" class="Tab" help="On gauss points" open="1">
                <Item id="GreenLagrangeStrainTensor" pid="Green Lagrange strain tensor" dv="Yes" ivalues="Yes,No" values="Yes,No" help="Green Lagrange strain tensor"/>
                <Item id="Rotations" pid="Rotations" dv="Yes" ivalues="Yes,No" values="Yes,No" help="Rotations"/>
                <Item id="PK2StressTensor" pid="2nd Piola - Kirchhoff stress tensor" dv="Yes" ivalues="Yes,No" values="Yes,No" help="2nd Piola - Kirchhoff stress tensor"/>
            </Container>
            <Container id="GiDOptions" pid="Options" class="Tab" help="GiD postprocess otions" open="1">
                <Item id="GiDPostMode" pid="Result format" dv="Binary" ivalues="Ascii,Binary" values="Ascii,Binary" help="GiD result file format"/>
                <Item id="GiDWriteMeshFlag" pid="Write deformed mesh" dv="Yes" ivalues="Yes,No" values="Yes,No" help="Write the GiD deformed or undeformed mesh"/>
                <Item id="GiDWriteConditionsFlag" pid="Write conditions" dv="Yes" ivalues="Yes,No" values="Yes,No" help="Write the conditions or only element to the GiD result file"/>
                <Item id="GiDMultiFileFlag" pid="Result file" dv="Single" ivalues="Single,Multiples" values="Single,Multiples" help="Write one GiD result file or multiplies files"/>
            </Container>
        </Container>
    </RootData>
    <RootData id="Fluid" pid="Fluid" state="normal" class="application" icon="aplicationTree.gif" help="Fluid" open="1">
        <Container id="AnalysisData" pid="Analysis data" class="Tab" help="Analysis data" open="1">
            <Item id="FluidType" pid="Fluid type" class="fluidType" dv="Incompressible" ivalues="Compressible,Incompressible" values="Compressible,Incompressible" help="Fluid type"/>
            <Item id="FluidApproach" pid="Fluid Approach" class="fluidAppr" dv="Eulerian" ivalues="Eulerian,PFEM-Lagrangian" values="Eulerian,PFEM-Lagrangian" help="Fluid approach"/>
            <Item id="FreeSurface" pid="Free surface" class="freeSurf" fluidAppr="Eulerian" fluidType="Incompressible" dv="No" ivalues="Yes,No" values="Yes,No" help="Free surface"/>
            <Item id="SolverTypeCompressible" pid="Solver type" class="fluidSolvTyp" freeSurf="No" fluidType="Compressible" dv="FSSE-ElementBased" ivalues="FSSE-ElementBased" values="Fractional step semi-explicit element based" help="Fractional step"/>
            <Item id="SolverType" pid="Solver type" class="fluidSolvTyp" freeSurf="No" fluidType="Incompressible" fluidAppr="Eulerian" dv="ElementBased" ivalues="Monolithic,ElementBased" values="Monolithic,Fractional step" help="SolverType"/>
            <Item id="SolverTypeFreeSurf" pid="Solver type" class="fluidSolvTyp" freeSurf="Yes" dv="LevelSet" ivalues="LevelSet" values="Fractional step level set" help="SolverType"/>
            <Item id="EnvironmentTemperature" pid="Environment temperature" fluidAppr="Eulerian" fluidType="Incompressible" dv="0.0" help=""/>
            <Item id="TurbulenceModel" pid="Turbulence model" class="TurbulenceModelType" fluidType="Incompressible" fluidSolvTyp="Monolithic,ElementBased" ivalues="Off,Smagorinsky-Lilly,Spalart-Allmaras" dv="Off" values="Off,Smagorinsky-Lilly,Spalart-Allmaras" help="Select the active tubulence model"/>
            <Item id="SmagorinskyConstant" pid="Smagorinsky constant" fluidType="Incompressible" TurbulenceModelType="Smagorinsky-Lilly" dv="0.1" help="The Smagorinsky constant usually has the value: Cs = 0.1 - 0.2 "/>
            <Item id="TurbulentViscosity" pid="Turbulent viscosity" fluidType="Incompressible" TurbulenceModelType="Spalart-Allmaras" dv="0.01" help="Define the turbulent viscosity value"/>
            <Container id="Spalart-AllmarasGroupId2D" pid="Spalart-Allmaras groups" nDim="2D" GiDEntity="point,line" class="Groups" idTemplate="TurbulenceGroupId" fluidType="Incompressible" TurbulenceModelType="Spalart-Allmaras" icon="groupsTreeNew.gif" help="Select the group identifier" open="1"/>
            <Container id="Spalart-AllmarasGroupId3D" pid="Spalart-Allmaras groups" nDim="3D" GiDEntity="point,line,surface" class="Groups" idTemplate="TurbulenceGroupId" fluidType="Incompressible" TurbulenceModelType="Spalart-Allmaras" icon="groupsTreeNew.gif" help="Select the group identifier" open="1"/>
        </Container>
        <Container id="SolutionStrategy" pid="Solution strategy" help="Solution Strategy" open="1" dv="fh" values="">
            <Item id="ParallelSolutionType" pid="Parallel type" dv="OpenMP" class="PSolutionType" ivalues="OpenMP,MPI" values="OpenMP,MPI" help=""/>
            <Item id="MPINumberOfProcessors" pid="Number of processors" dv="2" PSolutionType="MPI" help="Number of processors"/>
            <Item id="OpenMPNumberOfThreads" pid="Number of threads" dv="2" PSolutionType="OpenMP" help="Number of threads"/>
            <Item id="MonolithicLinearSolverType" pid="Linear solver type" class="monolithicLinearSolvTyp" fluidSolvTyp="Monolithic" fluidType="Incompressible" dv="Direct" ivalues="Direct,Iterative" values="Direct,Iterative" help=""/>
            <Item id="MonolithicDirectSolverType" pid="Direct solver type" monolithicLinearSolvTyp="Direct" fluidSolvTyp="Monolithic" fluidType="Incompressible" dv="SuperLU" ivalues="SuperLU,ParallelMKLPardiso" values="Super LU,Parallel MKL Pardiso" help=""/>
            <Item id="MonolithicIterativeSolverType" pid="Iterative solver type" class="monolithiciterativesolvertype" monolithicLinearSolvTyp="Iterative" fluidSolvTyp="Monolithic" fluidType="Incompressible" dv="BiConjugateGradientStabilized" ivalues="BiConjugateGradientStabilized,MixedUP,SuperLUIterativeSolver" values="BiConjugate gradient stabilized,MixedUP,SuperLU iterative solver" help="Iterative solver type options"/>
            <Item id="MonolithicISTolerance" pid="Solver tolerance" fluidSolvTyp="Monolithic" monolithicLinearSolvTyp="Iterative" dv="1E-6" help=""/>
            <Item id="MonolithicISMaximumIteration" pid="Solver maximum iterations" fluidSolvTyp="Monolithic" monolithicLinearSolvTyp="Iterative" dv="5000" help="Monolithic solver maximum iteration numbers"/>
            <Item id="MonolithicMixedUPKrylovSpaceDimension" pid="Krylov space dimension" monolithiciterativesolvertype="MixedUP" fluidSolvTyp="Monolithic" monolithicLinearSolvTyp="Iterative" dv="30" help="Mixed UP Krylov space dimension"/>
            <Item id="MonolithicPreconditionerType" pid="Preconditioner type" monolithicLinearSolvTyp="Iterative" fluidSolvTyp="Monolithic" fluidType="Incompressible" dv="Diagonal" ivalues="None,Diagonal,ILU0" values="None,Diagonal,ILU0" help=""/>
            <Item id="VelocityLinearSolverType" pid="Velocity linear solver type" class="velocityLinearSolvTyp" fluidSolvTyp="PressureSplitting,EdgeBased" fluidType="Incompressible" dv="Direct" ivalues="Direct,Iterative" values="Direct,Iterative" help=""/>
            <Item id="VelocityDirectSolverType" pid="Velocity direct solver type" velocityLinearSolvTyp="Direct" fluidSolvTyp="PressureSplitting,EdgeBased" fluidType="Incompressible" dv="SkylineLUFactorization" ivalues="SkylineLUFactorization,SuperLU,ParallelMKLPardiso" values="Skyline LU factorization,Super LU,Parallel MKL Pardiso" help=""/>
            <Item id="VelocityIterativeSolverType" pid="Velocity iterative solver type" velocityLinearSolvTyp="Iterative" fluidSolvTyp="PressureSplitting,EdgeBased" fluidType="Incompressible" dv="BiConjugateGradientStabilized" ivalues="ConjugateGradient,BiConjugateGradientStabilized,GMRES" values="Conjugate gradient,BiConjugate gradient stabilized,GMRES" help=""/>
            <Item id="VelocityISTolerance" pid="Velocity solver tolerance" fluidSolvTyp="PressureSplitting,EdgeBased" velocityLinearSolvTyp="Iterative" dv="1E-6" help=""/>
            <Item id="VelocityISMaximumIteration" pid="Velocity solver maximum iteration" fluidSolvTyp="PressureSplitting,EdgeBased" velocityLinearSolvTyp="Iterative" dv="5000" help=""/>
            <Item id="VelocityPreconditionerType" pid="Velocity preconditioner type" velocityLinearSolvTyp="Iterative" fluidSolvTyp="PressureSplitting,EdgeBased" fluidType="Incompressible" dv="ILU0" ivalues="None,Diagonal,ILU0" values="None,Diagonal,ILU0" help=""/>
            <Item id="PressureLinearSolverType" pid="Pressure linear solver type" class="pressureLinearSolvTyp" fluidSolvTyp="PressureSplitting,EdgeBased" fluidType="Incompressible" dv="Direct" ivalues="Direct,Iterative" values="Direct,Iterative" help=""/>
            <Item id="PressureDirectSolverType" pid="Pressure direct solver type" pressureLinearSolvTyp="Direct" fluidSolvTyp="PressureSplitting,EdgeBased" fluidType="Incompressible" dv="SkylineLUFactorization" ivalues="SkylineLUFactorization,SuperLU,ParallelMKLPardiso" values="Skyline LU factorization,Super LU,Parallel MKL Pardiso" help=""/>
            <Item id="PressureIterativeSolverType" pid="Pressure iterative solver type" pressureLinearSolvTyp="Iterative" fluidSolvTyp="PressureSplitting,EdgeBased" fluidType="Incompressible" dv="BiConjugateGradientStabilized" ivalues="ConjugateGradient,BiConjugateGradientStabilized" values="Conjugate gradient,BiConjugate gradient stabilized" help=""/>
            <Item id="PressureISTolerance" pid="Pressure solver tolerance" pressureLinearSolvTyp="Iterative" fluidSolvTyp="PressureSplitting,EdgeBased" dv="1E-6" help=""/>
            <Item id="PressureISMaximumIteration" pid="Pressure solver maximum iteration" pressureLinearSolvTyp="Iterative" fluidSolvTyp="PressureSplitting,ElementBased,EdgeBased" dv="5000" help=""/>
            <Item id="PressurePreconditionerType" pid="Pressure preconditioner type" pressureLinearSolvTyp="Iterative" fluidSolvTyp="PressureSplitting,EdgeBased" fluidType="Incompressible" dv="ILU0" ivalues="None,Diagonal,ILU0" values="None,Diagonal,ILU0" help=""/>
            <Item id="LinearSolverTypeCompressible" pid="Linear solver type" class="linearSolvTyp" fluidType="Compressible" dv="Direct" ivalues="Direct,Iterative" values="Direct,Iterative" help=""/>
            <Item id="DirectSolverTypeCompressible" pid="Direct solver type" linearSolvTyp="Direct" fluidType="Compressible" dv="SkylineLUFactorization" ivalues="SkylineLUFactorization,SuperLU,ParallelMKLPardiso" values="Skyline LU factorization,Super LU,Parallel MKL Pardiso" help=""/>
            <Item id="IterativeSolverTypeCompressible" pid="Iterative solver type" linearSolvTyp="Iterative" fluidType="Compressible" dv="ConjugateGradient" ivalues="ConjugateGradient" values="Conjugate gradient" help=""/>
            <Item id="PreconditionerTypeCompressible" pid="Preconditioner type" linearSolvTyp="Iterative" dv="Diagonal" fluidType="Compressible" ivalues="None,Diagonal" values="None,Diagonal" help=""/>
            <Item id="StartTime" pid="Start time" dv="0.0" fluidAppr="Eulerian" help=""/>
            <Item id="EndTime" pid="End time" dv="100" help=""/>
            <Item id="UseAutomaticDeltaTime" pid="Automatic delta time" fluidSolvTyp="ElementBased,Monolithic" fluidAppr="Eulerian" class="deltatimetype" dv="Fixed" ivalues="Fixed,Automatic" values="Fixed,Automatic" help="Select the Delta time option to be used"/>
            <Item id="DeltaTime" deltatimetype="Fixed" pid="Delta time" dv="0.1" help=""/>
            <Item id="TargetCFL" pid="Target CFL" deltatimetype="Automatic" dv="5.0" help=""/>
            <Item id="DivergenceCleareanceStep" pid="Divergence cleareance step" dv="0" fluidAppr="Eulerian" fluidType="Incompressible" help="Define the divergence cleareance step value"/>
            <Item id="MaxVart" pid="Max Δt" dv="0.0" fluidAppr="PFEM-Lagrangian" state="hidden" help="Max time variation"/>
            <Item id="MinVart" pid="Min Δt" dv="0.0" fluidAppr="PFEM-Lagrangian" state="hidden" help="Min time variation"/>
            <Item id="PFEMBodyForceGravity" pid="Gravity value" dv="9.81" fluidAppr="PFEM-Lagrangian" help="Gravity value"/>
            <Container id="Advanced" pid="Advanced" fluidType="Incompressible" help="" open="1">
                <Item id="PredictorCorrector" pid="Predictor corrector" fluidAppr="Eulerian" fluidSolvTyp="ElementBased,EdgeBased" dv="False" ivalues="True,False" values="True,False" help=""/>
                <Item id="RelativeVelocityTolerance" pid="Relative velocity tolerance" fluidAppr="Eulerian" fluidSolvTyp="Monolithic,PressureSplitting,ElementBased,EdgeBased" dv="1E-3" help="Relative velocity tolerance"/>
                <Item id="AbsoluteVelocityTolerance" pid="Absolute velocity tolerance" fluidAppr="Eulerian" fluidSolvTyp="Monolithic,PressureSplitting" dv="1E-6" help="Absolute velocity tolerance"/>
                <Item id="MaximumVelocityIterations" pid="Maximum velocity iterations" fluidAppr="Eulerian" fluidSolvTyp="ElementBased,EdgeBased" dv="4" help=""/>
                <Item id="RelativePressureTolerance" pid="Relative pressure tolerance" fluidAppr="Eulerian" fluidSolvTyp="Monolithic,PressureSplitting,ElementBased,EdgeBased" dv="1E-3" help="Relative pressure tolerance"/>
                <Item id="AbsolutePressureTolerance" pid="Absolute pressure tolerance" fluidAppr="Eulerian" fluidSolvTyp="Monolithic,PressureSplitting" dv="1E-6" help="Absolute pressure tolerance"/>
                <Item id="MaximumPressureIterations" pid="Maximum pressure iterations" fluidAppr="Eulerian" fluidSolvTyp="ElementBased,EdgeBased" dv="3" help=""/>
                <Item id="MaximumIterations" pid="Maximum iterations" fluidAppr="Eulerian" fluidSolvTyp="Monolithic,PressureSplitting" dv="10" help=""/>
                <Item id="TimeOrder" pid="Time order" dv="2" fluidAppr="Eulerian" fluidSolvTyp="ElementBased,EdgeBased" ivalues="1,2" values="1,2" help=""/>
                <Item id="LaplacianForm" pid="Laplacian form" state="hidden" dv="Discrete" fluidAppr="Eulerian" fluidSolvTyp="ElementBased,EdgeBased" ivalues="Continuous,Discrete,DiscreteWithDt" values="Continuous,Discrete,Discrete with dt" help=""/>
                <Item id="DynamicTau" pid="Use dt in stabilization" dv="0.01" fluidAppr="Eulerian" CBState="normal" values="1.0,0.1,0.01,0.001,0.0" help=""/>
                <Item id="OssSwitch" pid="Use orthogonal subscales" dv="0" ivalues="0,1" values="0,1" fluidAppr="Eulerian" help=""/>
                <Item id="RedistanceFrequency" pid="Redistance frequency" fluidAppr="Eulerian" fluidSolvTyp="LevelSet" PSolutionType="OpenMP" dv="5" help="Redistance frequency"/>
                <Item id="ExtrapolationLayers" pid="Extrapolation layers" fluidAppr="Eulerian" fluidSolvTyp="LevelSet" PSolutionType="OpenMP" dv="10" help="Extrapolation layers"/>
                <Item id="StabdtPressureFactor" pid="Stabilized dt pressure factor" fluidAppr="Eulerian" fluidSolvTyp="LevelSet" PSolutionType="OpenMP" dv="1.0" help="Stabilized dt pressure factor"/>
                <Item id="StabdtConvectionFactor" pid="Stabilized convection factor" fluidAppr="Eulerian" fluidSolvTyp="LevelSet" PSolutionType="OpenMP" dv="0.01" help="Stabilized convection factor"/>
                <Item id="WallLawY" pid="Wall law value" fluidSolvTyp="LevelSet" fluidAppr="Eulerian" PSolutionType="OpenMP" dv="0.0001" help="Wall law value"/>
                <Item id="SafetyFactor" pid="Safety factor" fluidSolvTyp="LevelSet" fluidAppr="Eulerian" PSolutionType="OpenMP" dv="0.8" help="Safety factor"/>
                <Item id="NumberOfInitialSteps" pid="Number of initial steps" fluidSolvTyp="LevelSet" fluidAppr="Eulerian" PSolutionType="OpenMP" dv="0.0" help="Number of initial steps"/>
                <Item id="LaplacianCorrectionPressure" pid="Laplacian correction of pressure" fluidAppr="PFEM-Lagrangian" dv="No" ivalues="Yes,No" values="Yes,No" help="Use Laplacian correction of pressure"/>
                <Container id="Boundingbox" pid="Bounding Box" idTemplate="BoundingBox" fluidAppr="PFEM-Lagrangian" class="Tab">
                    <Item id="MaxX" pid="Max X" dv="0.0" help="Max X"/>
                    <Item id="MaxY" pid="Max Y" dv="0.0" help="Max Y" sbi="PickCoordinates" sbp="Pick" sbxp="MaxX,MaxY,MaxZ"/>
                    <Item id="MaxZ" pid="Max Z" dv="0.0" help="Max Z"/>
                    <Item id="MinX" pid="Min X" dv="0.0" help="Min X"/>
                    <Item id="MinY" pid="Min Y" dv="0.0" help="Min Y" sbi="PickCoordinates" sbp="Pick" sbxp="MinX,MinY,MinZ"/>
                    <Item id="MinZ" pid="Min Z" dv="0.0" help="Min Z"/>
                </Container>
            </Container>
            <Container id="LevelSetBodyForce" pid="Body force" fluidSolvTyp="LevelSet" fluidAppr="Eulerian" PSolutionType="OpenMP" help="Body forces" class="Tab" open="1">
                <Item id="GravityValue" pid="Gravity value" dv="9.8" help="Gravity value"/>
                <Item id="Cx" pid="Cx" dv="0.0" help="X Vector"/>
                <Item id="Cy" pid="Cy" dv="0.0" help="Y Vector"/>
                <Item id="Cz" pid="Cz" dv="1.0" nDim="3D" help="Z Vector"/>
            </Container>
            <Container id="PorousZones" pid="Porous zones" fluidSolvTyp="LevelSet" PSolutionType="OpenMP" help="Porous zones" open="1">
                <Item id="UseErgunEquation" pid="Use Ergun equation" dv="No" class="ErgunEquationType" ivalues="Yes,No" values="Yes,No" help="Use Ergun equation"/>
                <Container id="ErgunEquationNo" pid="Zones" class="Groups" ErgunEquationType="No" nDim="3D" GiDEntity="line,surface,volume" fluidSolvTyp="LevelSet" PSolutionType="OpenMP" idTemplate="PorosityDarcy" icon="groupsTreeNew.gif" help="" open="1"/>
                <Container id="ErgunEquationYes" pid="Zones" class="Groups" ErgunEquationType="Yes" nDim="3D" GiDEntity="line,surface,volume" fluidSolvTyp="LevelSet" PSolutionType="OpenMP" idTemplate="PorosityDiameter" icon="groupsTreeNew.gif" help="" open="1"/>
            </Container>
        </Container>
        <Container id="Properties" pid="Properties" class="Properties" idTemplate="PropertiesFluid" icon="propsTreeNew.gif" help="Add a new Property" open="1">
            <Container id="Property1" pid="Property1" class="Property" icon="propsTree.gif" help="Property" open="1">
                <Container id="MainProperties" pid="New property" state="hidden" help="Values">
                    <Item id="ElemType" pid="Property type" dv="" GCV="ElemType" help="Element type" state="hidden"/>
                    <Item id="MatModel" pid="Material model" dv="" GCV="MatModel" help="Material model" state="hidden"/>
                    <Item id="Material" pid="Material" dv="Water" GCV="Materials" help="Material"/>
                    <Item id="Thickness" pid="Thickness" dv="1.0" help="Thickness" state="hidden"/>
                </Container>
            </Container>
        </Container>
        <Container id="Elements" pid="Elements" help="Elements" open="1">
            <Container id="ASGS2D" pid="ASGS" class="Groups" nDim="2D" GiDEntity="surface" fluidAppr="Eulerian" fluidSolvTyp="PressureSplitting" idTemplate="TLagrangian" icon="groupsTreeNew.gif" help="ASGS" open="1"/>
            <Container id="ASGS3D" pid="ASGS" class="Groups" nDim="3D" GiDEntity="volume" fluidAppr="Eulerian" fluidSolvTyp="PressureSplitting" idTemplate="TLagrangian3D" icon="groupsTreeNew.gif" help="ASGS" open="1"/>
            <Container id="Fluid2DMonolithic" pid="Fluid" class="Groups" nDim="2D" GiDEntity="surface" fluidAppr="Eulerian" fluidSolvTyp="Monolithic" idTemplate="TLagrangian" icon="groupsTreeNew.gif" help="Select the fluid 2D element type" open="1"/>
            <Container id="Fluid3DMonolithic" pid="Fluid" class="Groups" nDim="3D" GiDEntity="volume" fluidAppr="Eulerian" fluidSolvTyp="Monolithic" idTemplate="TLagrangian3D" icon="groupsTreeNew.gif" help="Select the fluid 2D element type" open="1"/>
            <Container id="Fluid2D" pid="Fluid" class="Groups" nDim="2D" GiDEntity="surface" fluidAppr="Eulerian" fluidSolvTyp="EdgeBased" idTemplate="TLagrangian" icon="groupsTreeNew.gif" help="Fluid" open="1"/>
            <Container id="Fluid3D" pid="Fluid" class="Groups" nDim="3D" GiDEntity="volume" fluidAppr="Eulerian" fluidSolvTyp="EdgeBased" idTemplate="TLagrangian3D" icon="groupsTreeNew.gif" help="Fluid" open="1"/>
            <Container id="LevelSetFluid2D" pid="Fluid" class="Groups" nDim="2D" GiDEntity="surface" fluidAppr="Eulerian" fluidSolvTyp="LevelSet" idTemplate="TLagrangian" icon="groupsTreeNew.gif" help="Fluid" open="1"/>
            <Container id="LevelSetFluid3D" pid="Fluid" class="Groups" nDim="3D" GiDEntity="volume" fluidAppr="Eulerian" fluidSolvTyp="LevelSet" idTemplate="TLagrangian3D" icon="groupsTreeNew.gif" help="Fluid" open="1"/>
            <Container id="VMS2D" pid="Fluid" class="Groups" nDim="2D" GiDEntity="surface" fluidAppr="Eulerian" fluidSolvTyp="ElementBased" idTemplate="TLagrangian" icon="groupsTreeNew.gif" help="Fluid" open="1">
                <Container id="fluid" pid="fluid" class="Group" icon="groupsTree.gif" help="Total Lagrangian" open="1" active="1">
                    <Container id="Properties" pid="Total Lagrangian" state="hidden" help="Properties">
                        <Item id="ElementType" pid="Element type" dv="Triangle" ivalues="Triangle,Quadrilateral" values="Triangle,Quadrilateral" help="Element Type"/>
                        <Item id="Property" pid="Property" dv="Property1" GCV="Properties" help="Property"/>
                    </Container>
                </Container>
            </Container>
            <Container id="VMS3D" pid="Fluid" class="Groups" nDim="3D" GiDEntity="volume" fluidAppr="Eulerian" fluidSolvTyp="ElementBased" idTemplate="TLagrangian3D" icon="groupsTreeNew.gif" help="Fluid" open="1"/>
            <Container id="PFEM2D" pid="Fluid" class="Groups" nDim="2D" GiDEntity="surface" fluidAppr="PFEM-Lagrangian" idTemplate="TLagrangian" icon="groupsTreeNew.gif" help="Fluid" open="1"/>
            <Container id="PFEM3D" pid="Fluid" class="Groups" nDim="3D" GiDEntity="volume" fluidAppr="PFEM-Lagrangian" idTemplate="TLagrangian3D" icon="groupsTreeNew.gif" help="Fluid" open="1"/>
        </Container>
        <Container id="InitialConditions" pid="Initial conditions" fluidAppr="Eulerian" help="Initial Conditions" open="1">
            <Container id="InitialVelocity" pid="Initial velocity" class="Groups" idTemplate="InitialVelocity" icon="groupsTreeNew.gif" help="Initial Conditions" open="1"/>
            <Container id="InitialTemperature" pid="Initial temperature" fluidType="Compressible" class="Groups" idTemplate="InitialTemperature" icon="groupsTreeNew.gif" help="Initial Conditions" open="1"/>
            <Container id="InitialPressure" pid="Initial pressure" class="Groups" idTemplate="InitialPressure" icon="groupsTreeNew.gif" help="Initial Conditions" open="1"/>
        </Container>
        <Container id="Conditions" pid="Conditions" help="Boundary Conditions" open="1">
            <Container id="InletVelocity" pid="Inlet velocity" class="Groups" fluidAppr="Eulerian" fluidType="Incompressible" idTemplate="InletVelocity" icon="groupsTreeNew.gif" help="Inlet velocity" open="1">
                <Container id="velocity" pid="velocity" class="Group" icon="groupsTree.gif" help="Inlet velocity" open="1" active="1">
                    <Container id="Values" pid="Values" help="Values" open="0">
                        <Item id="Vx" pid="X" dv="1" help="X velocity" state="normal"/>
                        <Item id="Vy" pid="Y" dv="0.0" help="Y velocity" state="normal"/>
                        <Item id="Vz" pid="Z" dv="0.0" nDim="3D" help="Z velocity"/>
                    </Container>
                    <Container id="Activation" pid="Fixity" help="Fixity" open="0">
                        <Item id="Ax" pid="X active" dv="1" ivalues="1,0" values="1,0" help="Fix X velocity"/>
                        <Item id="Ay" pid="Y active" dv="1" ivalues="1,0" values="1,0" help="Fix Y velocity"/>
                        <Item id="Az" pid="Z active" dv="0" nDim="3D" ivalues="1,0" values="1,0" help="Fix Z velocity"/>
                    </Container>
                </Container>
            </Container>
            <Container id="PrescribedVelocity" pid="Prescribed velocity" class="Groups" fluidAppr="Eulerian" fluidType="Compressible" idTemplate="PrescribedVelocity" icon="groupsTreeNew.gif" help="Inlet velocity" open="1"/>
            <Container id="OutletPressure" pid="Outlet pressure" class="Groups" fluidAppr="Eulerian" idTemplate="OutletPressure" GiDEntity="point,line,surface" icon="groupsTreeNew.gif" help="Outlet pressure" open="1">
                <Container id="pressure" pid="pressure" class="Group" icon="groupsTree.gif" help="Outlet pressure" open="1" active="1">
                    <Container id="MainProperties" pid="New property" state="hidden" help="Values">
                        <Item id="FixPressure" pid="Fix pressure" dv="1" ivalues="1,0" values="1,0" help="Fix pressure"/>
                        <Item id="PressureValue" pid="Pressure value" soluType="ElementBased,EdgeBased,LevelSet" dv="0.0" help="Pressure value"/>
                    </Container>
                </Container>
            </Container>
            <Container id="Is-Slip" pid="Is-Slip" class="Groups" fluidAppr="Eulerian" fluidSolvTyp="Monolithic,ElementBased,LevelSet" idTemplate="IsSlip" GiDEntity="point,line,surface" icon="groupsTreeNew.gif" help="Slip" open="1"/>
            <Container id="WallLaw" state="hidden" pid="Wall law" fluidAppr="Eulerian" class="Groups" fluidSolvTyp="ElementBased" idTemplate="WallLaw" GiDEntity="point,line,surface" icon="groupsTreeNew.gif" help="Wall law" open="1"/>
            <Container id="Distance" pid="Distance" class="Groups" fluidAppr="Eulerian" fluidSolvTyp="LevelSet" idTemplate="LevelSetDistance" GiDEntity="line,surface,volume" icon="groupsTreeNew.gif" help="Distance variable for the free surface using level set method" open="1"/>
            <Container id="No-Slip" pid="No-Slip" class="Groups" fluidAppr="Eulerian" fluidSolvTyp="Monolithic,ElementBased,LevelSet,PressureSplitting" idTemplate="NoSlip" icon="groupsTreeNew.gif" help="No-Slip" open="1">
                <Container id="wall" pid="wall" class="Group" icon="groupsTree.gif" help="No Slip" open="1" active="1">
                    <Container id="Values" pid="Values" help="Values" open="0">
                        <Item id="Vx" pid="X" dv="0.0" help="X velocity" state="normal"/>
                        <Item id="Vy" pid="Y" dv="0.0" help="Y velocity" state="normal"/>
                        <Item id="Vz" pid="Z" dv="0.0" nDim="3D" help="Z velocity"/>
                    </Container>
                    <Container id="Activation" pid="Fixity" help="Fixity" open="0">
                        <Item id="Ax" pid="X active" dv="1" ivalues="1,0" values="1,0" help="Fix X velocity"/>
                        <Item id="Ay" pid="Y active" dv="1" ivalues="1,0" values="1,0" help="Fix Y velocity"/>
                        <Item id="Az" pid="Z active" dv="0" nDim="3D" ivalues="1,0" values="1,0" help="Fix Z velocity"/>
                    </Container>
                </Container>
            </Container>
            <Container id="Flag-Variable" pid="Flag-Variable" fluidAppr="Eulerian" class="Groups" fluidSolvTyp="Monolithic,ElementBased,LevelSet,PressureSplitting" idTemplate="FlagVariable" icon="groupsTreeNew.gif" help="Define the flag variable properties" open="1"/>
            <Container id="PFEMWall" pid="Wall/Object" class="Groups" fluidAppr="PFEM-Lagrangian" idTemplate="PFEMwall" icon="groupsTreeNew.gif" GiDEntity="line,surface,volume" help="" open="1"/>
            <Container id="PFEMFluidInlet" pid="Fluid Inlet" class="Groups" fluidAppr="PFEM-Lagrangian" idTemplate="PFEMFluidInlet" icon="groupsTreeNew.gif" GiDEntity="line,surface" help="" open="1"/>
        </Container>
        <Container id="Results" pid="Results" help="Results" open="1">
            <Item id="VolumeOutput" pid="Volume output" dv="Yes" nDim="3D" class="UseCuts" ivalues="Yes,No" values="Yes,No" help="Volume output"/>
            <Item id="OutputDeltaTime" pid="Output delta time" dv="0.1" help="Output delata time"/>
            <Item id="PrintInLayer" pid="Print in layer" dv="Yes" ivalues="Yes,No" values="Yes,No" help="Print in layer"/>
            <Container id="OnNodes" pid="On nodes" class="Tab" help="On nodes" open="1">
                <Item id="Velocity" pid="Velocity" dv="Yes" ivalues="Yes,No" values="Yes,No" help="Velocity"/>
                <Item id="Pressure" pid="Pressure" dv="Yes" ivalues="Yes,No" values="Yes,No" help="Pressure"/>
                <Item id="Reactions" pid="Reactions" dv="Yes" ivalues="Yes,No" values="Yes,No" help="Stresses"/>
                <Item id="Distance" pid="Distance" dv="Yes" ivalues="Yes,No" values="Yes,No" fluidAppr="Eulerian" help="Distance"/>
            </Container>
            <Container id="HistoryOutputOnPoints" pid="History output on points" class="Properties" idTemplate="HistoryOutputOnPoints" help="History output on points" open="1"/>
            <Container id="GiDOptions" pid="Options" class="Tab" help="GiD postprocess options" open="1">
                <Item id="GiDPostMode" pid="Result format" dv="Binary" ivalues="Ascii,Binary" values="Ascii,Binary" help="GiD result file format"/>
                <Item id="GiDWriteMeshFlag" pid="Write deformed mesh" dv="Yes" ivalues="True,False" values="Yes,No" fluidAppr="Eulerian" help="Write the GiD deformed or undeformed mesh"/>
                <Item id="GiDWriteConditionsFlag" pid="Write conditions" dv="Yes" ivalues="True,False" values="Yes,No" fluidAppr="Eulerian" help="Write the conditions or only element to the GiD result file"/>
                <Item id="GiDMultiFileFlag" pid="Result file" dv="Single" ivalues="Single,Multiples" values="Single,Multiples" fluidAppr="Eulerian" help="Write one GiD result file or multiplies files"/>
            </Container>
            <Container id="CutOptions" pid="Cut planes" class="Properties" UseCuts="No" idTemplate="CutProperties" help="Cut plane postprocess options" open="1"/>
            <Container id="DragOptions" pid="Drag calculation" class="Groups" idTemplate="DragProperties" GiDEntity="point,line,surface" help="Drag calculation properties" open="1"/>
        </Container>
    </RootData>
    <RootData id="PFEM" pid="PFEM" state="hiddenAll" class="application" icon="aplicationTree.gif" help="PFEM">
        <Container id="AnalysisData" pid="Analysis data" class="Tab" help="Analysis data" open="1">
            <Item id="FluidType" pid="Fluid type" class="fluidType" dv="Incompressible" ivalues="Compressible,Incompressible" values="Compressible,Incompressible" help="Fluid type"/>
            <Item id="FreeSurface" pid="Free surface" class="freeSurf" fluidType="Incompressible" dv="No" ivalues="Yes,No" values="Yes,No" help="Free surface"/>
        </Container>
        <Container id="SolutionStrategy" pid="Solution strategy" help="Solution Strategy" open="1" dv="fh" values="">
            <Item id="ParallelSolutionType" pid="Parallel type" dv="OpenMP" ivalues="OpenMP,MPI" values="OpenMP,MPI" help=""/>
            <Item id="StartTime" pid="Start time" dv="0.0" help=""/>
            <Item id="EndTime" pid="End time" dv="1" help=""/>
            <Item id="UseAutomaticDeltaTime" pid="Automatic delta time" class="deltatimetype" dv="Fixed" ivalues="Fixed,Automatic" values="Fixed,Automatic" help="Select the Delta time option to be used"/>
            <Item id="DeltaTime" deltatimetype="Fixed" pid="Delta time" dv="0.001" help=""/>
            <Item id="TargetCFL" pid="Target CFL" deltatimetype="Automatic" dv="5.0" help=""/>
            <Container id="Advanced" pid="Advanced" fluidType="Incompressible" class="Tab" help="" open="1">
                <Item id="DynamicTau" pid="Use dt in stabilization" dv="0.01" CBState="normal" values="1.0,0.1,0.01,0.001,0.0" help=""/>
                <Item id="OssSwitch" pid="Use orthogonal subscales" dv="0" ivalues="0,1" values="0,1" help=""/>
            </Container>
        </Container>
        <Container id="Properties" pid="Properties" class="Properties" idTemplate="PropertiesFluid" icon="propsTreeNew.gif" help="Add a new Property" open="1"/>
        <Container id="Elements" pid="Elements" help="Elements" open="1">
            <Container id="Fluid2D" pid="Fluid" class="Groups" nDim="2D" GiDEntity="surface" idTemplate="TLagrangian" icon="groupsTreeNew.gif" help="Fluid" open="1"/>
            <Container id="Fluid3D" pid="Fluid" class="Groups" nDim="3D" GiDEntity="volume" idTemplate="TLagrangian3D" icon="groupsTreeNew.gif" help="Fluid" open="1"/>
        </Container>
        <Container id="Conditions" pid="Conditions" help="Boundary conditions" open="1">
            <Container id="Is-Slip" pid="Is-Slip" class="Groups" idTemplate="IsSlip" GiDEntity="point,line,surface" icon="groupsTreeNew.gif" help="Slip" open="1"/>
            <Container id="Is-Fluid" pid="Is-Fluid" class="Groups" idTemplate="IsSlip" icon="groupsTreeNew.gif" help="Is fluid" open="1"/>
            <Container id="Is-Boundary" pid="Is-Boundary" class="Groups" idTemplate="IsBoundary" icon="groupsTreeNew.gif" help="Is boundary" open="1"/>
        </Container>
        <Container id="Results" pid="Results" help="Results" open="1">
            <Item id="VolumeOutput" pid="Volume output" dv="Yes" nDim="3D" class="UseCuts" ivalues="Yes,No" values="Yes,No" help="Volume output"/>
            <Item id="OutputDeltaTime" pid="Output delta time" dv="0.0" help="Output delata time"/>
            <Item id="PrintInLayer" pid="Print in layer" dv="Yes" ivalues="Yes,No" values="Yes,No" help="Print in layer"/>
            <Container id="OnNodes" pid="On nodes" class="Tab" help="On nodes" open="1">
                <Item id="Velocity" pid="Velocity" dv="Yes" ivalues="Yes,No" values="Yes,No" help="Velocity"/>
                <Item id="Pressure" pid="Pressure" dv="Yes" ivalues="Yes,No" values="Yes,No" help="Pressure"/>
                <Item id="Reactions" pid="Reactions" dv="Yes" ivalues="Yes,No" values="Yes,No" help="Stresses"/>
                <Item id="Distance" pid="Distance" dv="No" ivalues="Yes,No" values="Yes,No" help="Distance"/>
            </Container>
            <Container id="GiDOptions" pid="Options" class="Tab" help="GiD postprocess options" open="1">
                <Item id="GiDPostMode" pid="Result format" dv="Binary" ivalues="Ascii,Binary" values="Ascii,Binary" help="GiD result file format"/>
                <Item id="GiDWriteMeshFlag" pid="Write deformed mesh" dv="Yes" ivalues="True,False" values="Yes,No" help="Write the GiD deformed or undeformed mesh"/>
                <Item id="GiDWriteConditionsFlag" pid="Write conditions" dv="Yes" ivalues="True,False" values="Yes,No" help="Write the conditions or only element to the GiD result file"/>
                <Item id="GiDMultiFileFlag" pid="Result file" dv="Single" ivalues="Single,Multiples" values="Single,Multiples" help="Write one GiD result file or multiplies files"/>
            </Container>
        </Container>
    </RootData>
    <RootData id="FluidStructureInteraction" pid="Fluid structure interaction (FSI)" state="hiddenAll" class="application" icon="aplicationTree.gif" help="Fluid structure interaction (FSI)" open="0">
        <Container id="NotAvailable" pid="Not available" dv="res" help="Developing in process"/>
    </RootData>
    <RootData id="ConvectionDiffusion" pid="Convection diffusion" state="hiddenAll" class="application" icon="aplicationTree.gif" help="Convection diffusion">
        <Container id="NotAvailable" pid="Not available" dv="res" help="Developing in process"/>
    </RootData>
    <RootData id="Curves" pid="Curves" state="hiddenAll" class="Curves" icon="arc.gif" help="Curve definition"/>
    <Templates>
        <Template id="TLagrangian" icon="groupsTree.gif" help="Total Lagrangian">
            <Container id="Properties" pid="Total Lagrangian" state="hidden" help="Properties">
                <Item id="ElementType" pid="Element type" dv="Triangle" ivalues="Triangle,Quadrilateral" values="Triangle,Quadrilateral" help="Element Type"/>
                <Item id="Property" pid="Property" dv="" GCV="Properties" help="Property"/>
            </Container>
        </Template>
        <Template id="TrussTLagrangian" icon="groupsTree.gif" help="Total Lagrangian">
            <Container id="Properties" pid="Total Lagrangian" state="hidden" help="Properties">
                <Item id="ElementType" pid="Element type" dv="Linear" ivalues="Linear" values="Linear" help="Element Type"/>
                <Item id="Property" pid="Property" dv="" GCV="Properties" help="Property"/>
            </Container>
        </Template>
        <Template id="BeamTLagrangian" icon="groupsTree.gif" help="Beam total Lagrangian">
            <Container id="Properties" pid="Total Lagrangian" state="hidden" help="Properties">
                <Item id="ElementType" pid="Element type" dv="Linear" ivalues="Linear" values="Linear" help="Element Type"/>
                <Item id="Property" pid="Property" dv="" GCV="Properties" help="Property"/>
            </Container>
        </Template>
        <Template id="TLagrangian3D" icon="groupsTree.gif" help="Total Lagrangian">
            <Container id="Properties" pid="Total Lagrangian" state="hidden" help="Properties">
                <Item id="ElementType" pid="Element type" dv="Tetrahedra" ivalues="Tetrahedra,Hexahedra" values="Tetrahedra,Hexahedra" help="Element Type"/>
                <Item id="Property" pid="Property" dv="" GCV="Properties" help="Property"/>
            </Container>
        </Template>
        <Template id="MembraneElement" icon="groupsTree.gif" help="Membrane element">
            <Container id="Properties" pid="Properties" state="hidden" help="Properties">
                <Item id="ElementType" pid="Element type" dv="Triangle" ivalues="Triangle" values="Triangle" help="Element Type"/>
                <Item id="Property" pid="Property" dv="" GCV="Properties" help="Property"/>
            </Container>
        </Template>
        <Template id="Displacements" icon="groupsTree.gif" help="Activation">
            <Container id="Activation" pid="Activation" help="Activation">
                <Item id="Ax" pid="X active" dv="1" ivalues="1,0" values="1,0" help="X coordinate"/>
                <Item id="Ay" pid="Y active" dv="1" ivalues="1,0" values="1,0" help="Y coordinate"/>
                <Item id="Az" pid="Z active" dv="0" nDim="3D" ivalues="1,0" values="1,0" help="Z coordinate"/>
            </Container>
            <Container id="Values" pid="Values" help="Values">
                <Item id="Vx" pid="X" dv="0.0" help="X coordinate"/>
                <Item id="Vy" pid="Y" dv="0.0" help="Y coordinate"/>
                <Item id="Vz" pid="Z" dv="0.0" nDim="3D" help="Z coordinate"/>
            </Container>
        </Template>
        <Template id="InletVelocity" icon="groupsTree.gif" help="Inlet velocity">
            <Container id="Values" pid="Values" help="Values">
                <Item id="Vx" pid="X" dv="0.0" help="X velocity"/>
                <Item id="Vy" pid="Y" dv="0.0" help="Y velocity"/>
                <Item id="Vz" pid="Z" dv="0.0" nDim="3D" help="Z velocity"/>
            </Container>
            <Container id="Activation" pid="Fixity" help="Fixity">
                <Item id="Ax" pid="X active" dv="1" ivalues="1,0" values="1,0" help="Fix X velocity"/>
                <Item id="Ay" pid="Y active" dv="1" ivalues="1,0" values="1,0" help="Fix Y velocity"/>
                <Item id="Az" pid="Z active" dv="0" nDim="3D" ivalues="1,0" values="1,0" help="Fix Z velocity"/>
            </Container>
        </Template>
        <Template id="NoSlip" icon="groupsTree.gif" help="No Slip">
            <Container id="Values" pid="Values" help="Values">
                <Item id="Vx" pid="X" dv="0.0" help="X velocity"/>
                <Item id="Vy" pid="Y" dv="0.0" help="Y velocity"/>
                <Item id="Vz" pid="Z" dv="0.0" nDim="3D" help="Z velocity"/>
            </Container>
            <Container id="Activation" pid="Fixity" help="Fixity">
                <Item id="Ax" pid="X active" dv="1" ivalues="1,0" values="1,0" help="Fix X velocity"/>
                <Item id="Ay" pid="Y active" dv="1" ivalues="1,0" values="1,0" help="Fix Y velocity"/>
                <Item id="Az" pid="Z active" dv="0" nDim="3D" ivalues="1,0" values="1,0" help="Fix Z velocity"/>
            </Container>
        </Template>
        <Template id="PFEMwall" icon="groupsTree.gif" help="PFEM Wall">
            <Container id="LinearVelocity" pid="Linear Velocity" help="Linear Velocity">
                <Item id="LVx" pid="X" dv="0.0" help="X velocity"/>
                <Item id="LVy" pid="Y" dv="0.0" help="Y velocity"/>
                <Item id="LVz" pid="Z" dv="0.0" nDim="3D" help="Z velocity"/>
                <Item id="LPeriodAct" pid="Period. Activ." dv="0" ivalues="1,0" values="1,0" help="Z velocity"/>
                <Item id="LPeriod" pid="Periode" dv="0" help="Periodic"/>
            </Container>
            <Container id="AngularVelocity" pid="Angular Velocity" help="Angular Velocity">
                <Item id="AVx" pid="X" dv="0.0" help="X velocity"/>
                <Item id="AVy" pid="Y" dv="0.0" help="Y velocity"/>
                <Item id="AVz" pid="Z" dv="0.0" nDim="3D" help="Z velocity"/>
                <Item id="APeriodAct" pid="Period. Activ." dv="0" ivalues="1,0" values="1,0" help="Z velocity"/>
                <Item id="APeriod" pid="Periode" dv="0" help="Periodic"/>
            </Container>
            <Container id="RotationCenter" pid="Rotation Center" help="Rotation Center">
                <Item id="Gx" pid="X" dv="0.0" help="X velocity"/>
                <Item id="Gy" pid="Y" dv="0.0" help="Y velocity" sbi="PickCoordinates" sbp="Pick" sbxp="Gx,Gy,Gz"/>
                <Item id="Gz" pid="Z" dv="0.0" nDim="3D" help="Z velocity"/>
            </Container>
        </Template>
        <Template id="PFEMFluidInlet" icon="groupsTree.gif" help="Activation">
            <Container id="Values" pid="Velocity" help="Values">
                <Item id="Vx" pid="X" dv="0.0" help="X velocity"/>
                <Item id="Vy" pid="Y" dv="0.0" help="Y velocity"/>
                <Item id="Vz" pid="Z" dv="0.0" nDim="3D" help="Z velocity"/>
            </Container>
            <Container id="Activation" pid="Fixity" help="Fixity">
                <Item id="Ax" pid="X active" dv="1" ivalues="1,0" values="1,0" help="Fix X velocity"/>
                <Item id="Ay" pid="Y active" dv="1" ivalues="1,0" values="1,0" help="Fix Y velocity"/>
                <Item id="Az" pid="Z active" dv="0" nDim="3D" ivalues="1,0" values="1,0" help="Fix Z velocity"/>
            </Container>
        </Template>
        <Template id="Boundingbox" help="Boundingbox">
            <Item id="MaxX" pid="Max X" dv="0.0" help="Max X"/>
            <Item id="MaxY" pid="Max Y" dv="0.0" help="Max Y" sbi="PickCoordinates" sbp="Pick" sbxp="MaxX,MaxY,MaxZ"/>
            <Item id="MaxZ" pid="Max Z" dv="0.0" help="Max Z"/>
            <Item id="MinX" pid="Min X" dv="0.0" help="Min X"/>
            <Item id="MinY" pid="Min Y" dv="0.0" help="Min Y" sbi="PickCoordinates" sbp="Pick" sbxp="MinX,MinY,MinZ"/>
            <Item id="MinZ" pid="Min Z" dv="0.0" help="Min Z"/>
        </Template>
        <Template id="PrescribedVelocity" icon="groupsTree.gif" help="Activation">
            <Container id="Activation" pid="Fix" help="Fix coordinates">
                <Item id="Ax" pid="X fix" dv="1" ivalues="1,0" values="1,0" help="X coordinate"/>
                <Item id="Ay" pid="Y fix" dv="1" ivalues="1,0" values="1,0" help="Y coordinate"/>
                <Item id="Az" pid="Z fix" dv="0" nDim="3D" ivalues="1,0" values="1,0" help="Z coordinate"/>
            </Container>
            <Container id="Values" pid="Values" help="Values">
                <Item id="Vx" pid="X" dv="0.0" help="X Velocity"/>
                <Item id="Vy" pid="Y" dv="0.0" help="Y Velocity"/>
                <Item id="Vz" pid="Z" dv="0.0" nDim="3D" help="Z Velocity"/>
            </Container>
        </Template>
        <Template id="PropertiesStruct" icon="propsTree.gif" help="Property">
            <Container id="MainProperties" pid="New property" state="hidden" help="Values">
                <Item id="ElemType" pid="Property type" dv="Beam" GCV="ElemType" help="Element type"/>
                <Item id="MatModel" pid="Material model" dv="Elastic-Isotropic" GCV="MatModel" help="Material model"/>
                <Item id="Material" pid="Material" dv="" GCV="Materials" help="Material"/>
                <Item id="Thickness" pid="Thickness" dv="1.0" help="Thickness"/>
                <Item id="Area" pid="Area" dv="1.0" help="Cross section area"/>
                <Item id="InertiaIx" pid="Inertia Ix" dv="1.0" help="Moment of inertia Ix"/>
                <Item id="InertiaIy" pid="Inertia Iy" dv="1.0" help="Moment of inertia Iy"/>
            </Container>
        </Template>
        <Template id="PropertiesFluid" icon="propsTree.gif" help="Property">
            <Container id="MainProperties" pid="New property" state="hidden" help="Values">
                <Item id="ElemType" pid="Property type" dv="" GCV="ElemType" help="Element type" state="hidden"/>
                <Item id="MatModel" pid="Material model" dv="" GCV="MatModel" help="Material model" state="hidden"/>
                <Item id="Material" pid="Material" dv="" GCV="Materials" help="Material"/>
                <Item id="Thickness" pid="Thickness" dv="1.0" help="Thickness" state="hidden"/>
            </Container>
        </Template>
        <Template id="BodyForce" icon="groupsTree.gif" help="BodyForce">
            <Container id="MainProperties" pid="Body force" state="hidden" help="Values">
                <Item id="GravityValue" pid="Gravity value" dv="9.8" help="Gravity value"/>
                <Item id="Cx" pid="Cx" dv="0.0" help="X Vector"/>
                <Item id="Cy" pid="Cy" dv="0.0" help="Y Vector"/>
                <Item id="Cz" pid="Cz" dv="1.0" nDim="3D" help="Z Vector"/>
            </Container>
        </Template>
        <Template id="Puntual" icon="groupsTree.gif" help="Puntual">
            <Container id="MainProperties" pid="Puntual" state="hidden" help="Values">
                <Item id="Fx" pid="Fx" dv="0.0" functionDissable="0" help="Fx Vector"/>
                <Item id="Fy" pid="Fy" dv="0.0" functionDissable="0" help="Fy Vector"/>
                <Item id="Fz" pid="Fz" dv="0.0" functionDissable="0" nDim="3D" help="Fz Vector"/>
                <Item id="Mx" pid="Mx" dv="0.0" state="hidden" help="Mx Vector"/>
                <Item id="My" pid="My" dv="0.0" state="hidden" help="My Vector"/>
                <Item id="Mz" pid="Mz" dv="0.0" state="hidden" nDim="3D" help="Mz Vector"/>
            </Container>
        </Template>
        <Template id="OutletPressure" icon="groupsTree.gif" help="Outlet pressure">
            <Container id="MainProperties" pid="New property" state="hidden" help="Values">
                <Item id="FixPressure" pid="Fix pressure" dv="1" ivalues="1,0" values="1,0" help="Fix pressure"/>
                <Item id="PressureValue" pid="Pressure value" soluType="ElementBased,EdgeBased,LevelSet" dv="0.0" help="Pressure value"/>
            </Container>
        </Template>
        <Template id="ShellPressure" icon="groupsTree.gif" help="Define the positive or negative shell pressure">
            <Container id="MainProperties" pid="New property" state="hidden" help="Values">
                <Item id="FixPressure" pid="Fix pressure" dv="1" ivalues="1,0" values="1,0" help="Fix pressure"/>
                <Item id="PressureType" pid="Face type" dv="Positive" ivalues="Positive,Negative" values="Positive,Negative" help="Defines which side of the face that matches the direction of the normal to the surface, positive or negative"/>
                <Item id="PressureValue" pid="Pressure value" dv="0.0" help="Pressure value"/>
            </Container>
        </Template>
        <Template id="InitialVelocity" icon="groupsTree.gif" help="Initial velocity">
            <Container id="Values" pid="Values" help="Values">
                <Item id="Vx" pid="Vx" dv="0.0" help="X initial velocity"/>
                <Item id="Vy" pid="Vy" dv="0.0" help="Y initial velocity"/>
                <Item id="Vz" pid="Vz" dv="0.0" nDim="3D" help="Z initial velocity"/>
            </Container>
        </Template>
        <Template id="InitialTemperature" icon="groupsTree.gif" help="Initial temperature">
            <Container id="MainProperties" pid="New property" state="hidden" help="Values">
                <Item id="InitialTemperature" pid="Temperature" dv="0.0" help=""/>
            </Container>
        </Template>
        <Template id="InitialPressure" icon="groupsTree.gif" help="Initial pressure">
            <Container id="MainProperties" pid="New property" state="hidden" help="Values">
                <Item id="InitialPressure" pid="Pressure" dv="0.0" help=""/>
            </Container>
        </Template>
        <Template id="FlagVariable" icon="groupsTree.gif" help="Flag variable">
            <Container id="MainProperties" pid="New property" state="hidden" help="Values">
                <Item id="Flag" pid="Flag" dv="1" ivalues="1,2" values="1,2" help="Select the flag value"/>
            </Container>
        </Template>
        <Template id="IsSlip" icon="groupsTree.gif" help="Is-Slip conditional data">
            <Container id="MainProperties" pid="New property" state="hidden" help="Values">
                <Item id="Activate" pid="Activate" dv="1" ivalues="1,0" values="1,0" help="Select the activate option value"/>
                <Item id="ConstantValue" pid="Wall law value" dv="0.0" help="Define the value"/>
            </Container>
        </Template>
        <Template id="IsBoundary" icon="groupsTree.gif" help="Is-boundary conditional data">
            <Container id="MainProperties" pid="New property" state="hidden" help="Values">
                <Item id="Activate" pid="Activate" dv="1" ivalues="1,0" values="1,0" help="Select the activate option value"/>
            </Container>
        </Template>
        <Template id="TurbulenceGroupId" icon="groupsTree.gif" help="">
            <Container id="MainProperties" pid="New group" state="hidden" help="Values">
                <Item id="Activate" pid="Activate" dv="1" ivalues="1,0" values="1,0" help="Select the activate option value"/>
            </Container>
        </Template>
        <Template id="WallLaw" icon="groupsTree.gif" help="Wall law nodaI data">
            <Container id="MainProperties" pid="New property" state="hidden" help="Values">
                <Item id="ConstantValue" pid="Value" dv="0.0" help="Define the value"/>
            </Container>
        </Template>
        <Template id="LevelSetDistance" icon="groupsTree.gif" help="Level set distance data">
            <Container id="MainProperties" pid="New property" state="hidden" help="Values">
                <Item id="DistanceValue" pid="Value" dv="-1e-5" help="Define the value"/>
            </Container>
        </Template>
        <Template id="PorosityDiameter" icon="groupsTree.gif" help="Porosity and diameter data">
            <Container id="MainProperties" pid="New property" state="hidden" help="Values">
                <Item id="PorosityValue" pid="Porosity" dv="0.5" help="Define the porosity value"/>
                <Item id="DiameterValue" pid="Diameter" dv="0.03" help="Define the diameter value"/>
            </Container>
        </Template>
        <Template id="PorosityDarcy" icon="groupsTree.gif" help="Porosity and darcy law data">
            <Container id="MainProperties" pid="New property" state="hidden" help="Values">
                <Item id="PorosityValue" pid="Porosity" dv="0.5" help="Define the porosity value"/>
                <Item id="LinearDarcyCoefficient" pid="Linear Darcy coefficient" dv="0.65" help="Define the linear Darcy coefficient value"/>
                <Item id="NonLinearDarcyCoefficient" pid="Nonlinear Darcy coefficient" dv="446.51" help="Define the nonlinear Darcy coefficient value"/>
            </Container>
        </Template>
        <Template id="CutProperties" icon="cutplane.gif" help="Cut properties">
            <Container id="Origin" pid="Origin" help="Origin properties">
                <Item id="OX" pid="X" dv="0.0" help="X coordinate"/>
                <Item id="OY" pid="Y" dv="0.0" help="Y coordinate" sbi="PickCoordinates" sbp="Pick" sbxp="OX,OY,OZ"/>
                <Item id="OZ" pid="Z" dv="0.0" nDim="3D" help="Z coordinate"/>
            </Container>
            <Container id="NormalToPlane" pid="Normal to plane" help="Normal to the plane">
                <Item id="NX" pid="X" dv="0.0" help="X coordinate"/>
                <Item id="NY" pid="Y" dv="0.0" help="Y coordinate"/>
                <Item id="NZ" pid="Z" dv="0.0" nDim="3D" help="Z coordinate"/>
            </Container>
        </Template>
        <Template id="HistoryOutputOnPoints" icon="outputgraph.gif" help="History output on points properties">
            <Container id="HistoryGraph" pid="History graph" help="History graph properties">
                <Item id="Px" pid="X" dv="0.0" help="X coordinate of the output point"/>
                <Item id="Py" pid="Y" dv="0.0" help="Y coordinate of the output point" sbi="PickCoordinates" sbp="Pick" sbxp="Px,Py,Pz"/>
                <Item id="Pz" pid="Z" dv="0.0" nDim="3D" help="Z coordinate of the output point"/>
                <Item id="VariableId2d" pid="Variable" nDim="2D" ivalues="Pressure,Velocity" values="Pressure,Velocity" help="Variable to be plotted for this output point"/>
                <Item id="VariableId3d" pid="Variable" nDim="3D" ivalues="Pressure,Velocity" values="Pressure,Velocity" help="Variable to be plotted for this output point"/>
                <Item id="FileId" pid="Output file" dv="" help="Output file identifier"/>
            </Container>
        </Template>
        <Template id="DragProperties" icon="dragforce.gif" help="Drag calculation properties">
            <Container id="MainProperties" pid="Properties" state="hidden" help="Properties">
                <Item id="OutputFileId" pid="Output file Id" dv="" help="Output file identifier"/>
            </Container>
        </Template>
        <Template id="NewCurveId" pid="Curve Id" help="Curve Identifier">
            <Item id="CurveType" pid="Curve Type" dv="ByPoints" ivalues="ByPoints" help="Type of curve"/>
            <Item id="XVar" pid="X Variable" dv="Time" ivalues="Time,Temperature" help="Type of curve"/>
            <Item id="YVar" pid="Y Variable" dv="YoungModulus" ivalues="YoungModulus,More" help="Type of curve"/>
            <ContainerTable id="Points" pid="Points" dv="0" help="Curve Points">
                <TItem id="1" Xval="0" Yval="0"/>
            </ContainerTable>
        </Template>
    </Templates>
    <GlobalProjectSettings>
        <Item id="ValidateModel" pid="Validate model before calculate" dv="1" widget="check" help=""/>
        <Item id="CheckSpdVersion" pid="Check problem type version" dv="1" widget="check" help=""/>
    </GlobalProjectSettings>
    <ClassConfiguration>
        <Class>nDim,strucType,soluType,analysType,velocityLinearSolvTyp,monolithicLinearSolvTyp,pressureLinearSolvTyp,linearSolvTyp,solverType,fluidSolvTyp,fluidType,fluidAppr,freeSurf,convCriteria,application,deltatimetype,TurbulenceModelType,UseCuts,monolithiciterativesolvertype,PSolutionType,ErgunEquationType</Class>
    </ClassConfiguration>
</Kratos_Data>

