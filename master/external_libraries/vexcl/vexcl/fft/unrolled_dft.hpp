#ifndef VEXCL_FFT_UNROLLED_DFT_HPP
#define VEXCL_FFT_UNROLLED_DFT_HPP

// Autogenerated file, do not edit!
// see https://github.com/neapel/vexcl-genfft

#include <vector>
#include <string>
#include <sstream>

namespace vex {
namespace fft {

static std::vector<size_t> supported_primes() {
    static const size_t p[] = {2,3,5,7,11,13};
    return std::vector<size_t>(p, p + sizeof(p) / sizeof(p[0]));
}

static std::vector<size_t> supported_kernel_sizes() {
    static const size_t s[] = {2,3,4,5,7,8,9,11,13,16,25};
    return std::vector<size_t>(s, s + sizeof(s) / sizeof(s[0]));
}


static inline std::string in_place_dft(size_t n, bool invert) {
    std::ostringstream src;
    switch(n) {
        case 2:
            if (invert) {
                src
                    << "/* Generated by: ./cl_gen_notw.native -n 2 -name dft2 -sign 1 -compact -fma -reorder-insns -reorder-loads -reorder-stores -schedule-for-pipeline -pipeline-latency 4 -standalone */\n"
                    << "/*\n"
                    << " * This function contains 4 FP additions, 0 FP multiplications,\n"
                    << " * (or, 4 additions, 0 multiplications, 0 fused multiply/add),\n"
                    << " * 6 stack variables, 0 constants, and 8 memory accesses\n"
                    << " */\n"
                    << "DEVICE void\n"
                    << "dft2 (real2_t * u0, real2_t * u1)\n"
                    << "{\n"
                    << "    real2_t v0 = *u0;\n"
                    << "    real2_t v1 = *u1;\n"
                    << "    {\n"
                    << "        {\n"
                    << "            real_t T3, T1, T2, T4;\n"
                    << "            T3 = v0.y;\n"
                    << "            T1 = v0.x;\n"
                    << "            T2 = v1.x;\n"
                    << "            T4 = v1.y;\n"
                    << "            v0.x = T1 + T2;\n"
                    << "            v0.y = T3 + T4;\n"
                    << "            v1.y = T3 - T4;\n"
                    << "            v1.x = T1 - T2;\n"
                    << "        }\n"
                    << "    }\n"
                    << "    *u0 = v0;\n"
                    << "    *u1 = v1;\n"
                    << "}\n";
            } else {
                src
                    << "/* Generated by: ./cl_gen_notw.native -n 2 -name dft2 -sign -1 -compact -fma -reorder-insns -reorder-loads -reorder-stores -schedule-for-pipeline -pipeline-latency 4 -standalone */\n"
                    << "/*\n"
                    << " * This function contains 4 FP additions, 0 FP multiplications,\n"
                    << " * (or, 4 additions, 0 multiplications, 0 fused multiply/add),\n"
                    << " * 6 stack variables, 0 constants, and 8 memory accesses\n"
                    << " */\n"
                    << "DEVICE void\n"
                    << "dft2 (real2_t * u0, real2_t * u1)\n"
                    << "{\n"
                    << "    real2_t v0 = *u0;\n"
                    << "    real2_t v1 = *u1;\n"
                    << "    {\n"
                    << "        {\n"
                    << "            real_t T3, T1, T2, T4;\n"
                    << "            T3 = v0.y;\n"
                    << "            T1 = v0.x;\n"
                    << "            T2 = v1.x;\n"
                    << "            T4 = v1.y;\n"
                    << "            v0.x = T1 + T2;\n"
                    << "            v0.y = T3 + T4;\n"
                    << "            v1.y = T3 - T4;\n"
                    << "            v1.x = T1 - T2;\n"
                    << "        }\n"
                    << "    }\n"
                    << "    *u0 = v0;\n"
                    << "    *u1 = v1;\n"
                    << "}\n";
            }
            break;
        case 3:
            if (invert) {
                src
                    << "/* Generated by: ./cl_gen_notw.native -n 3 -name dft3 -sign 1 -compact -fma -reorder-insns -reorder-loads -reorder-stores -schedule-for-pipeline -pipeline-latency 4 -standalone */\n"
                    << "/*\n"
                    << " * This function contains 12 FP additions, 6 FP multiplications,\n"
                    << " * (or, 6 additions, 0 multiplications, 6 fused multiply/add),\n"
                    << " * 17 stack variables, 2 constants, and 12 memory accesses\n"
                    << " */\n"
                    << "DEVICE void\n"
                    << "dft3 (real2_t * u0, real2_t * u1, real2_t * u2)\n"
                    << "{\n"
                    << "    real2_t v0 = *u0;\n"
                    << "    real2_t v1 = *u1;\n"
                    << "    real2_t v2 = *u2;\n"
                    << "    {\n"
                    << "        const real_t KP866025403 =\n"
                    << "            +0.866025403784438646763723170752936183471402627;\n"
                    << "        const real_t KP500000000 =\n"
                    << "            +0.500000000000000000000000000000000000000000000;\n"
                    << "        {\n"
                    << "            real_t T5, T1, T6, T2, T3, T7;\n"
                    << "            T5 = v0.y;\n"
                    << "            T1 = v0.x;\n"
                    << "            T6 = v1.y;\n"
                    << "            T2 = v1.x;\n"
                    << "            T3 = v2.x;\n"
                    << "            T7 = v2.y;\n"
                    << "            {\n"
                    << "                real_t T4, Ta, T8, Tc, Tb, T9;\n"
                    << "                T4 = T2 + T3;\n"
                    << "                Ta = T2 - T3;\n"
                    << "                T8 = T6 + T7;\n"
                    << "                Tc = T7 - T6;\n"
                    << "                Tb = fma (-KP500000000, T4, T1);\n"
                    << "                T9 = fma (-KP500000000, T8, T5);\n"
                    << "                v0.y = T5 + T8;\n"
                    << "                v0.x = T1 + T4;\n"
                    << "                v2.x = fma (-KP866025403, Tc, Tb);\n"
                    << "                v2.y = fma (-KP866025403, Ta, T9);\n"
                    << "                v1.y = fma (KP866025403, Ta, T9);\n"
                    << "                v1.x = fma (KP866025403, Tc, Tb);\n"
                    << "            }\n"
                    << "        }\n"
                    << "    }\n"
                    << "    *u0 = v0;\n"
                    << "    *u1 = v1;\n"
                    << "    *u2 = v2;\n"
                    << "}\n";
            } else {
                src
                    << "/* Generated by: ./cl_gen_notw.native -n 3 -name dft3 -sign -1 -compact -fma -reorder-insns -reorder-loads -reorder-stores -schedule-for-pipeline -pipeline-latency 4 -standalone */\n"
                    << "/*\n"
                    << " * This function contains 12 FP additions, 6 FP multiplications,\n"
                    << " * (or, 6 additions, 0 multiplications, 6 fused multiply/add),\n"
                    << " * 17 stack variables, 2 constants, and 12 memory accesses\n"
                    << " */\n"
                    << "DEVICE void\n"
                    << "dft3 (real2_t * u0, real2_t * u1, real2_t * u2)\n"
                    << "{\n"
                    << "    real2_t v0 = *u0;\n"
                    << "    real2_t v1 = *u1;\n"
                    << "    real2_t v2 = *u2;\n"
                    << "    {\n"
                    << "        const real_t KP866025403 =\n"
                    << "            +0.866025403784438646763723170752936183471402627;\n"
                    << "        const real_t KP500000000 =\n"
                    << "            +0.500000000000000000000000000000000000000000000;\n"
                    << "        {\n"
                    << "            real_t T9, T1, T6, T2, T3, T7;\n"
                    << "            T9 = v0.y;\n"
                    << "            T1 = v0.x;\n"
                    << "            T6 = v1.y;\n"
                    << "            T2 = v1.x;\n"
                    << "            T3 = v2.x;\n"
                    << "            T7 = v2.y;\n"
                    << "            {\n"
                    << "                real_t T4, Tc, T8, Ta, T5, Tb;\n"
                    << "                T4 = T2 + T3;\n"
                    << "                Tc = T3 - T2;\n"
                    << "                T8 = T6 - T7;\n"
                    << "                Ta = T6 + T7;\n"
                    << "                T5 = fma (-KP500000000, T4, T1);\n"
                    << "                Tb = fma (-KP500000000, Ta, T9);\n"
                    << "                v0.y = T9 + Ta;\n"
                    << "                v0.x = T1 + T4;\n"
                    << "                v2.x = fma (-KP866025403, T8, T5);\n"
                    << "                v2.y = fma (-KP866025403, Tc, Tb);\n"
                    << "                v1.y = fma (KP866025403, Tc, Tb);\n"
                    << "                v1.x = fma (KP866025403, T8, T5);\n"
                    << "            }\n"
                    << "        }\n"
                    << "    }\n"
                    << "    *u0 = v0;\n"
                    << "    *u1 = v1;\n"
                    << "    *u2 = v2;\n"
                    << "}\n";
            }
            break;
        case 4:
            if (invert) {
                src
                    << "/* Generated by: ./cl_gen_notw.native -n 4 -name dft4 -sign 1 -compact -fma -reorder-insns -reorder-loads -reorder-stores -schedule-for-pipeline -pipeline-latency 4 -standalone */\n"
                    << "/*\n"
                    << " * This function contains 16 FP additions, 0 FP multiplications,\n"
                    << " * (or, 16 additions, 0 multiplications, 0 fused multiply/add),\n"
                    << " * 16 stack variables, 0 constants, and 16 memory accesses\n"
                    << " */\n"
                    << "DEVICE void\n"
                    << "dft4 (real2_t * u0, real2_t * u1, real2_t * u2, real2_t * u3)\n"
                    << "{\n"
                    << "    real2_t v0 = *u0;\n"
                    << "    real2_t v1 = *u1;\n"
                    << "    real2_t v2 = *u2;\n"
                    << "    real2_t v3 = *u3;\n"
                    << "    {\n"
                    << "        {\n"
                    << "            real_t Tc, T4, Tb, T3, Tf, Ta, T5, Td;\n"
                    << "            {\n"
                    << "                real_t T8, T1, T2, T9;\n"
                    << "                T8 = v0.y;\n"
                    << "                T1 = v0.x;\n"
                    << "                T2 = v2.x;\n"
                    << "                T9 = v2.y;\n"
                    << "                Tc = v1.y;\n"
                    << "                T4 = v1.x;\n"
                    << "                Tb = T1 - T2;\n"
                    << "                T3 = T1 + T2;\n"
                    << "                Tf = T8 + T9;\n"
                    << "                Ta = T8 - T9;\n"
                    << "                T5 = v3.x;\n"
                    << "                Td = v3.y;\n"
                    << "            }\n"
                    << "            {\n"
                    << "                real_t T6, T7, Te, Tg;\n"
                    << "                T6 = T4 + T5;\n"
                    << "                T7 = T4 - T5;\n"
                    << "                Te = Tc - Td;\n"
                    << "                Tg = Tc + Td;\n"
                    << "                v0.x = T3 + T6;\n"
                    << "                v0.y = Tf + Tg;\n"
                    << "                v2.y = Tf - Tg;\n"
                    << "                v2.x = T3 - T6;\n"
                    << "                v3.y = Ta - T7;\n"
                    << "                v3.x = Tb + Te;\n"
                    << "                v1.x = Tb - Te;\n"
                    << "                v1.y = T7 + Ta;\n"
                    << "            }\n"
                    << "        }\n"
                    << "    }\n"
                    << "    *u0 = v0;\n"
                    << "    *u1 = v1;\n"
                    << "    *u2 = v2;\n"
                    << "    *u3 = v3;\n"
                    << "}\n";
            } else {
                src
                    << "/* Generated by: ./cl_gen_notw.native -n 4 -name dft4 -sign -1 -compact -fma -reorder-insns -reorder-loads -reorder-stores -schedule-for-pipeline -pipeline-latency 4 -standalone */\n"
                    << "/*\n"
                    << " * This function contains 16 FP additions, 0 FP multiplications,\n"
                    << " * (or, 16 additions, 0 multiplications, 0 fused multiply/add),\n"
                    << " * 16 stack variables, 0 constants, and 16 memory accesses\n"
                    << " */\n"
                    << "DEVICE void\n"
                    << "dft4 (real2_t * u0, real2_t * u1, real2_t * u2, real2_t * u3)\n"
                    << "{\n"
                    << "    real2_t v0 = *u0;\n"
                    << "    real2_t v1 = *u1;\n"
                    << "    real2_t v2 = *u2;\n"
                    << "    real2_t v3 = *u3;\n"
                    << "    {\n"
                    << "        {\n"
                    << "            real_t Tc, T4, Tb, T3, Tf, T9, T5, Td;\n"
                    << "            {\n"
                    << "                real_t T7, T1, T2, T8;\n"
                    << "                T7 = v0.y;\n"
                    << "                T1 = v0.x;\n"
                    << "                T2 = v2.x;\n"
                    << "                T8 = v2.y;\n"
                    << "                Tc = v1.y;\n"
                    << "                T4 = v1.x;\n"
                    << "                Tb = T1 - T2;\n"
                    << "                T3 = T1 + T2;\n"
                    << "                Tf = T7 + T8;\n"
                    << "                T9 = T7 - T8;\n"
                    << "                T5 = v3.x;\n"
                    << "                Td = v3.y;\n"
                    << "            }\n"
                    << "            {\n"
                    << "                real_t T6, Ta, Te, Tg;\n"
                    << "                T6 = T4 + T5;\n"
                    << "                Ta = T4 - T5;\n"
                    << "                Te = Tc - Td;\n"
                    << "                Tg = Tc + Td;\n"
                    << "                v0.x = T3 + T6;\n"
                    << "                v0.y = Tf + Tg;\n"
                    << "                v2.y = Tf - Tg;\n"
                    << "                v2.x = T3 - T6;\n"
                    << "                v3.y = Ta + T9;\n"
                    << "                v3.x = Tb - Te;\n"
                    << "                v1.x = Tb + Te;\n"
                    << "                v1.y = T9 - Ta;\n"
                    << "            }\n"
                    << "        }\n"
                    << "    }\n"
                    << "    *u0 = v0;\n"
                    << "    *u1 = v1;\n"
                    << "    *u2 = v2;\n"
                    << "    *u3 = v3;\n"
                    << "}\n";
            }
            break;
        case 5:
            if (invert) {
                src
                    << "/* Generated by: ./cl_gen_notw.native -n 5 -name dft5 -sign 1 -compact -fma -reorder-insns -reorder-loads -reorder-stores -schedule-for-pipeline -pipeline-latency 4 -standalone */\n"
                    << "/*\n"
                    << " * This function contains 32 FP additions, 18 FP multiplications,\n"
                    << " * (or, 14 additions, 0 multiplications, 18 fused multiply/add),\n"
                    << " * 41 stack variables, 4 constants, and 20 memory accesses\n"
                    << " */\n"
                    << "DEVICE void\n"
                    << "dft5 (real2_t * u0, real2_t * u1, real2_t * u2, real2_t * u3, real2_t * u4)\n"
                    << "{\n"
                    << "    real2_t v0 = *u0;\n"
                    << "    real2_t v1 = *u1;\n"
                    << "    real2_t v2 = *u2;\n"
                    << "    real2_t v3 = *u3;\n"
                    << "    real2_t v4 = *u4;\n"
                    << "    {\n"
                    << "        const real_t KP951056516 =\n"
                    << "            +0.951056516295153572116439333379382143405698634;\n"
                    << "        const real_t KP559016994 =\n"
                    << "            +0.559016994374947424102293417182819058860154590;\n"
                    << "        const real_t KP250000000 =\n"
                    << "            +0.250000000000000000000000000000000000000000000;\n"
                    << "        const real_t KP618033988 =\n"
                    << "            +0.618033988749894848204586834365638117720309180;\n"
                    << "        {\n"
                    << "            real_t Tq, Ti, Tk, Tu, Tw, Tp, Tb, Tj, Tr, Tv;\n"
                    << "            {\n"
                    << "                real_t Tl, T1, Ts, Tt, T8, Ta, Te, Tm, Tn, Th, To, T9;\n"
                    << "                Tl = v0.y;\n"
                    << "                T1 = v0.x;\n"
                    << "                {\n"
                    << "                    real_t Tc, T2, T3, Td, Tf, T5, T6, Tg, T4, T7;\n"
                    << "                    Tc = v1.y;\n"
                    << "                    T2 = v1.x;\n"
                    << "                    T3 = v4.x;\n"
                    << "                    Td = v4.y;\n"
                    << "                    Tf = v2.y;\n"
                    << "                    T5 = v2.x;\n"
                    << "                    T6 = v3.x;\n"
                    << "                    Tg = v3.y;\n"
                    << "                    Ts = T2 - T3;\n"
                    << "                    T4 = T2 + T3;\n"
                    << "                    Tt = T5 - T6;\n"
                    << "                    T7 = T5 + T6;\n"
                    << "                    T8 = T4 + T7;\n"
                    << "                    Ta = T4 - T7;\n"
                    << "                    Te = Tc - Td;\n"
                    << "                    Tm = Tc + Td;\n"
                    << "                    Tn = Tf + Tg;\n"
                    << "                    Th = Tf - Tg;\n"
                    << "                }\n"
                    << "                To = Tm + Tn;\n"
                    << "                Tq = Tm - Tn;\n"
                    << "                Ti = fma (KP618033988, Th, Te);\n"
                    << "                Tk = fma (-KP618033988, Te, Th);\n"
                    << "                v0.y = Tl + To;\n"
                    << "                v0.x = T1 + T8;\n"
                    << "                T9 = fma (-KP250000000, T8, T1);\n"
                    << "                Tu = fma (KP618033988, Tt, Ts);\n"
                    << "                Tw = fma (-KP618033988, Ts, Tt);\n"
                    << "                Tp = fma (-KP250000000, To, Tl);\n"
                    << "                Tb = fma (KP559016994, Ta, T9);\n"
                    << "                Tj = fma (-KP559016994, Ta, T9);\n"
                    << "            }\n"
                    << "            Tr = fma (KP559016994, Tq, Tp);\n"
                    << "            Tv = fma (-KP559016994, Tq, Tp);\n"
                    << "            v2.x = fma (KP951056516, Tk, Tj);\n"
                    << "            v2.y = fma (-KP951056516, Tw, Tv);\n"
                    << "            v3.y = fma (KP951056516, Tw, Tv);\n"
                    << "            v3.x = fma (-KP951056516, Tk, Tj);\n"
                    << "            v4.x = fma (KP951056516, Ti, Tb);\n"
                    << "            v4.y = fma (-KP951056516, Tu, Tr);\n"
                    << "            v1.y = fma (KP951056516, Tu, Tr);\n"
                    << "            v1.x = fma (-KP951056516, Ti, Tb);\n"
                    << "        }\n"
                    << "    }\n"
                    << "    *u0 = v0;\n"
                    << "    *u1 = v1;\n"
                    << "    *u2 = v2;\n"
                    << "    *u3 = v3;\n"
                    << "    *u4 = v4;\n"
                    << "}\n";
            } else {
                src
                    << "/* Generated by: ./cl_gen_notw.native -n 5 -name dft5 -sign -1 -compact -fma -reorder-insns -reorder-loads -reorder-stores -schedule-for-pipeline -pipeline-latency 4 -standalone */\n"
                    << "/*\n"
                    << " * This function contains 32 FP additions, 18 FP multiplications,\n"
                    << " * (or, 14 additions, 0 multiplications, 18 fused multiply/add),\n"
                    << " * 41 stack variables, 4 constants, and 20 memory accesses\n"
                    << " */\n"
                    << "DEVICE void\n"
                    << "dft5 (real2_t * u0, real2_t * u1, real2_t * u2, real2_t * u3, real2_t * u4)\n"
                    << "{\n"
                    << "    real2_t v0 = *u0;\n"
                    << "    real2_t v1 = *u1;\n"
                    << "    real2_t v2 = *u2;\n"
                    << "    real2_t v3 = *u3;\n"
                    << "    real2_t v4 = *u4;\n"
                    << "    {\n"
                    << "        const real_t KP951056516 =\n"
                    << "            +0.951056516295153572116439333379382143405698634;\n"
                    << "        const real_t KP559016994 =\n"
                    << "            +0.559016994374947424102293417182819058860154590;\n"
                    << "        const real_t KP250000000 =\n"
                    << "            +0.250000000000000000000000000000000000000000000;\n"
                    << "        const real_t KP618033988 =\n"
                    << "            +0.618033988749894848204586834365638117720309180;\n"
                    << "        {\n"
                    << "            real_t Tq, Ti, Tk, Tu, Tw, Tp, Tb, Tj, Tr, Tv;\n"
                    << "            {\n"
                    << "                real_t Tl, T1, Ts, Tt, T8, Ta, Te, Tm, Tn, Th, To, T9;\n"
                    << "                Tl = v0.y;\n"
                    << "                T1 = v0.x;\n"
                    << "                {\n"
                    << "                    real_t Tc, T2, T3, Td, Tf, T5, T6, Tg, T4, T7;\n"
                    << "                    Tc = v1.y;\n"
                    << "                    T2 = v1.x;\n"
                    << "                    T3 = v4.x;\n"
                    << "                    Td = v4.y;\n"
                    << "                    Tf = v2.y;\n"
                    << "                    T5 = v2.x;\n"
                    << "                    T6 = v3.x;\n"
                    << "                    Tg = v3.y;\n"
                    << "                    Ts = T2 - T3;\n"
                    << "                    T4 = T2 + T3;\n"
                    << "                    Tt = T5 - T6;\n"
                    << "                    T7 = T5 + T6;\n"
                    << "                    T8 = T4 + T7;\n"
                    << "                    Ta = T4 - T7;\n"
                    << "                    Te = Tc - Td;\n"
                    << "                    Tm = Tc + Td;\n"
                    << "                    Tn = Tf + Tg;\n"
                    << "                    Th = Tf - Tg;\n"
                    << "                }\n"
                    << "                To = Tm + Tn;\n"
                    << "                Tq = Tm - Tn;\n"
                    << "                Ti = fma (KP618033988, Th, Te);\n"
                    << "                Tk = fma (-KP618033988, Te, Th);\n"
                    << "                v0.y = Tl + To;\n"
                    << "                v0.x = T1 + T8;\n"
                    << "                T9 = fma (-KP250000000, T8, T1);\n"
                    << "                Tu = fma (KP618033988, Tt, Ts);\n"
                    << "                Tw = fma (-KP618033988, Ts, Tt);\n"
                    << "                Tp = fma (-KP250000000, To, Tl);\n"
                    << "                Tb = fma (KP559016994, Ta, T9);\n"
                    << "                Tj = fma (-KP559016994, Ta, T9);\n"
                    << "            }\n"
                    << "            Tr = fma (KP559016994, Tq, Tp);\n"
                    << "            Tv = fma (-KP559016994, Tq, Tp);\n"
                    << "            v2.x = fma (-KP951056516, Tk, Tj);\n"
                    << "            v2.y = fma (KP951056516, Tw, Tv);\n"
                    << "            v3.y = fma (-KP951056516, Tw, Tv);\n"
                    << "            v3.x = fma (KP951056516, Tk, Tj);\n"
                    << "            v4.x = fma (-KP951056516, Ti, Tb);\n"
                    << "            v4.y = fma (KP951056516, Tu, Tr);\n"
                    << "            v1.y = fma (-KP951056516, Tu, Tr);\n"
                    << "            v1.x = fma (KP951056516, Ti, Tb);\n"
                    << "        }\n"
                    << "    }\n"
                    << "    *u0 = v0;\n"
                    << "    *u1 = v1;\n"
                    << "    *u2 = v2;\n"
                    << "    *u3 = v3;\n"
                    << "    *u4 = v4;\n"
                    << "}\n";
            }
            break;
        case 7:
            if (invert) {
                src
                    << "/* Generated by: ./cl_gen_notw.native -n 7 -name dft7 -sign 1 -compact -fma -reorder-insns -reorder-loads -reorder-stores -schedule-for-pipeline -pipeline-latency 4 -standalone */\n"
                    << "/*\n"
                    << " * This function contains 60 FP additions, 42 FP multiplications,\n"
                    << " * (or, 18 additions, 0 multiplications, 42 fused multiply/add),\n"
                    << " * 61 stack variables, 6 constants, and 28 memory accesses\n"
                    << " */\n"
                    << "DEVICE void\n"
                    << "dft7 (real2_t * u0, real2_t * u1, real2_t * u2, real2_t * u3, real2_t * u4,\n"
                    << "      real2_t * u5, real2_t * u6)\n"
                    << "{\n"
                    << "    real2_t v0 = *u0;\n"
                    << "    real2_t v1 = *u1;\n"
                    << "    real2_t v2 = *u2;\n"
                    << "    real2_t v3 = *u3;\n"
                    << "    real2_t v4 = *u4;\n"
                    << "    real2_t v5 = *u5;\n"
                    << "    real2_t v6 = *u6;\n"
                    << "    {\n"
                    << "        const real_t KP974927912 =\n"
                    << "            +0.974927912181823607018131682993931217232785801;\n"
                    << "        const real_t KP900968867 =\n"
                    << "            +0.900968867902419126236102319507445051165919162;\n"
                    << "        const real_t KP692021471 =\n"
                    << "            +0.692021471630095869627814897002069140197260599;\n"
                    << "        const real_t KP801937735 =\n"
                    << "            +0.801937735804838252472204639014890102331838324;\n"
                    << "        const real_t KP356895867 =\n"
                    << "            +0.356895867892209443894399510021300583399127187;\n"
                    << "        const real_t KP554958132 =\n"
                    << "            +0.554958132087371191422194871006410481067288862;\n"
                    << "        {\n"
                    << "            real_t T1, Tx, TP, Tv, TC, TK, TN, TE, TA, TF;\n"
                    << "            {\n"
                    << "                real_t Tb, Ti, Tj, Tf, Tq, T4, To, Ta, Tg, TB, TL, Tp, T7, Tw,\n"
                    << "                    Tr;\n"
                    << "                real_t TD, TQ, TH, Te;\n"
                    << "                Tb = v0.y;\n"
                    << "                T1 = v0.x;\n"
                    << "                {\n"
                    << "                    real_t Tc, Td, T5, T6;\n"
                    << "                    {\n"
                    << "                        real_t T2, T3, T8, T9;\n"
                    << "                        Tc = v1.y;\n"
                    << "                        T2 = v1.x;\n"
                    << "                        T3 = v6.x;\n"
                    << "                        Td = v6.y;\n"
                    << "                        Ti = v3.y;\n"
                    << "                        T8 = v3.x;\n"
                    << "                        T9 = v4.x;\n"
                    << "                        Tj = v4.y;\n"
                    << "                        Tf = v2.y;\n"
                    << "                        T5 = v2.x;\n"
                    << "                        Tq = T2 - T3;\n"
                    << "                        T4 = T2 + T3;\n"
                    << "                        To = T8 - T9;\n"
                    << "                        Ta = T8 + T9;\n"
                    << "                        T6 = v5.x;\n"
                    << "                        Tg = v5.y;\n"
                    << "                    }\n"
                    << "                    TB = fma (KP554958132, To, Tq);\n"
                    << "                    TL = fma (-KP356895867, T4, Ta);\n"
                    << "                    Tp = T5 - T6;\n"
                    << "                    T7 = T5 + T6;\n"
                    << "                    Tw = fma (KP554958132, Tp, To);\n"
                    << "                    Tr = fma (-KP554958132, Tq, Tp);\n"
                    << "                    TD = fma (-KP356895867, T7, T4);\n"
                    << "                    TQ = fma (-KP356895867, Ta, T7);\n"
                    << "                    TH = Td - Tc;\n"
                    << "                    Te = Tc + Td;\n"
                    << "                }\n"
                    << "                {\n"
                    << "                    real_t Tk, TG, Th, TJ, Tt, TO, Ty, Ts, TU, Tm, TR, TI, TT,\n"
                    << "                        Tl;\n"
                    << "                    TI = Tj - Ti;\n"
                    << "                    Tk = Ti + Tj;\n"
                    << "                    TG = Tg - Tf;\n"
                    << "                    Th = Tf + Tg;\n"
                    << "                    TJ = fma (KP554958132, TI, TH);\n"
                    << "                    Tt = fma (-KP356895867, Te, Tk);\n"
                    << "                    TO = fma (KP554958132, TG, TI);\n"
                    << "                    TT = fma (-KP554958132, TH, TG);\n"
                    << "                    Ty = fma (-KP356895867, Th, Te);\n"
                    << "                    Tl = fma (-KP356895867, Tk, Th);\n"
                    << "                    v0.y = Tb + Te + Th + Tk;\n"
                    << "                    v0.x = T1 + T4 + T7 + Ta;\n"
                    << "                    Ts = fma (-KP801937735, Tr, To);\n"
                    << "                    TU = fma (-KP801937735, TT, TI);\n"
                    << "                    Tm = fma (-KP692021471, Tl, Te);\n"
                    << "                    TR = fma (-KP692021471, TQ, T4);\n"
                    << "                    {\n"
                    << "                        real_t TM, Tu, Tn, TS, Tz;\n"
                    << "                        Tx = fma (-KP801937735, Tw, Tq);\n"
                    << "                        Tu = fma (-KP692021471, Tt, Th);\n"
                    << "                        Tn = fma (-KP900968867, Tm, Tb);\n"
                    << "                        TS = fma (-KP900968867, TR, T1);\n"
                    << "                        TP = fma (-KP801937735, TO, TH);\n"
                    << "                        Tv = fma (-KP900968867, Tu, Tb);\n"
                    << "                        v3.y = fma (KP974927912, Ts, Tn);\n"
                    << "                        v3.x = fma (KP974927912, TU, TS);\n"
                    << "                        v4.x = fma (-KP974927912, TU, TS);\n"
                    << "                        v4.y = fma (-KP974927912, Ts, Tn);\n"
                    << "                        TM = fma (-KP692021471, TL, T7);\n"
                    << "                        TC = fma (KP801937735, TB, Tp);\n"
                    << "                        Tz = fma (-KP692021471, Ty, Tk);\n"
                    << "                        TK = fma (KP801937735, TJ, TG);\n"
                    << "                        TN = fma (-KP900968867, TM, T1);\n"
                    << "                        TE = fma (-KP692021471, TD, Ta);\n"
                    << "                        TA = fma (-KP900968867, Tz, Tb);\n"
                    << "                    }\n"
                    << "                }\n"
                    << "            }\n"
                    << "            v2.x = fma (KP974927912, TP, TN);\n"
                    << "            v2.y = fma (KP974927912, Tx, Tv);\n"
                    << "            v5.y = fma (-KP974927912, Tx, Tv);\n"
                    << "            v5.x = fma (-KP974927912, TP, TN);\n"
                    << "            TF = fma (-KP900968867, TE, T1);\n"
                    << "            v1.y = fma (KP974927912, TC, TA);\n"
                    << "            v1.x = fma (KP974927912, TK, TF);\n"
                    << "            v6.x = fma (-KP974927912, TK, TF);\n"
                    << "            v6.y = fma (-KP974927912, TC, TA);\n"
                    << "        }\n"
                    << "    }\n"
                    << "    *u0 = v0;\n"
                    << "    *u1 = v1;\n"
                    << "    *u2 = v2;\n"
                    << "    *u3 = v3;\n"
                    << "    *u4 = v4;\n"
                    << "    *u5 = v5;\n"
                    << "    *u6 = v6;\n"
                    << "}\n";
            } else {
                src
                    << "/* Generated by: ./cl_gen_notw.native -n 7 -name dft7 -sign -1 -compact -fma -reorder-insns -reorder-loads -reorder-stores -schedule-for-pipeline -pipeline-latency 4 -standalone */\n"
                    << "/*\n"
                    << " * This function contains 60 FP additions, 42 FP multiplications,\n"
                    << " * (or, 18 additions, 0 multiplications, 42 fused multiply/add),\n"
                    << " * 57 stack variables, 6 constants, and 28 memory accesses\n"
                    << " */\n"
                    << "DEVICE void\n"
                    << "dft7 (real2_t * u0, real2_t * u1, real2_t * u2, real2_t * u3, real2_t * u4,\n"
                    << "      real2_t * u5, real2_t * u6)\n"
                    << "{\n"
                    << "    real2_t v0 = *u0;\n"
                    << "    real2_t v1 = *u1;\n"
                    << "    real2_t v2 = *u2;\n"
                    << "    real2_t v3 = *u3;\n"
                    << "    real2_t v4 = *u4;\n"
                    << "    real2_t v5 = *u5;\n"
                    << "    real2_t v6 = *u6;\n"
                    << "    {\n"
                    << "        const real_t KP974927912 =\n"
                    << "            +0.974927912181823607018131682993931217232785801;\n"
                    << "        const real_t KP900968867 =\n"
                    << "            +0.900968867902419126236102319507445051165919162;\n"
                    << "        const real_t KP801937735 =\n"
                    << "            +0.801937735804838252472204639014890102331838324;\n"
                    << "        const real_t KP692021471 =\n"
                    << "            +0.692021471630095869627814897002069140197260599;\n"
                    << "        const real_t KP356895867 =\n"
                    << "            +0.356895867892209443894399510021300583399127187;\n"
                    << "        const real_t KP554958132 =\n"
                    << "            +0.554958132087371191422194871006410481067288862;\n"
                    << "        {\n"
                    << "            real_t Tz, Tt, Tr, TP, Ty, TK, TN, TE, Tw, TF;\n"
                    << "            {\n"
                    << "                real_t T1, Th, Ti, Tk, Tl, TI, T4, TG, Ta, TT, Tp, TH, T7, TJ,\n"
                    << "                    TO;\n"
                    << "                real_t Tu, Tb, TB, Tg;\n"
                    << "                Tz = v0.y;\n"
                    << "                T1 = v0.x;\n"
                    << "                {\n"
                    << "                    real_t Te, T5, T6, Tf;\n"
                    << "                    {\n"
                    << "                        real_t T2, T3, T8, T9;\n"
                    << "                        Th = v1.y;\n"
                    << "                        T2 = v1.x;\n"
                    << "                        T3 = v6.x;\n"
                    << "                        Ti = v6.y;\n"
                    << "                        Tk = v3.y;\n"
                    << "                        T8 = v3.x;\n"
                    << "                        T9 = v4.x;\n"
                    << "                        Tl = v4.y;\n"
                    << "                        Te = v2.y;\n"
                    << "                        T5 = v2.x;\n"
                    << "                        TI = T3 - T2;\n"
                    << "                        T4 = T2 + T3;\n"
                    << "                        TG = T9 - T8;\n"
                    << "                        Ta = T8 + T9;\n"
                    << "                        T6 = v5.x;\n"
                    << "                        Tf = v5.y;\n"
                    << "                    }\n"
                    << "                    TT = fma (KP554958132, TG, TI);\n"
                    << "                    Tp = fma (-KP356895867, T4, Ta);\n"
                    << "                    TH = T6 - T5;\n"
                    << "                    T7 = T5 + T6;\n"
                    << "                    TJ = fma (-KP554958132, TI, TH);\n"
                    << "                    TO = fma (KP554958132, TH, TG);\n"
                    << "                    Tu = fma (-KP356895867, Ta, T7);\n"
                    << "                    Tb = fma (-KP356895867, T7, T4);\n"
                    << "                    TB = Te + Tf;\n"
                    << "                    Tg = Te - Tf;\n"
                    << "                }\n"
                    << "                {\n"
                    << "                    real_t Tm, TA, Tj, TD, Ts, TL, Tx, TU, To, TR, Td;\n"
                    << "                    {\n"
                    << "                        real_t TC, TQ, Tn, Tc;\n"
                    << "                        TC = Tk + Tl;\n"
                    << "                        Tm = Tk - Tl;\n"
                    << "                        TA = Th + Ti;\n"
                    << "                        Tj = Th - Ti;\n"
                    << "                        TD = fma (-KP356895867, TC, TB);\n"
                    << "                        Ts = fma (KP554958132, Tg, Tm);\n"
                    << "                        TL = fma (-KP356895867, TA, TC);\n"
                    << "                        TQ = fma (-KP356895867, TB, TA);\n"
                    << "                        Tx = fma (-KP554958132, Tj, Tg);\n"
                    << "                        Tn = fma (KP554958132, Tm, Tj);\n"
                    << "                        v0.y = Tz + TA + TB + TC;\n"
                    << "                        v0.x = T1 + T4 + T7 + Ta;\n"
                    << "                        Tc = fma (-KP692021471, Tb, Ta);\n"
                    << "                        TU = fma (KP801937735, TT, TH);\n"
                    << "                        To = fma (KP801937735, Tn, Tg);\n"
                    << "                        TR = fma (-KP692021471, TQ, TC);\n"
                    << "                        Td = fma (-KP900968867, Tc, T1);\n"
                    << "                    }\n"
                    << "                    {\n"
                    << "                        real_t TM, TS, Tq, Tv;\n"
                    << "                        Tt = fma (-KP801937735, Ts, Tj);\n"
                    << "                        Tq = fma (-KP692021471, Tp, T7);\n"
                    << "                        TS = fma (-KP900968867, TR, Tz);\n"
                    << "                        Tr = fma (-KP900968867, Tq, T1);\n"
                    << "                        v6.y = fma (-KP974927912, TU, TS);\n"
                    << "                        v6.x = fma (-KP974927912, To, Td);\n"
                    << "                        v1.x = fma (KP974927912, To, Td);\n"
                    << "                        v1.y = fma (KP974927912, TU, TS);\n"
                    << "                        TP = fma (-KP801937735, TO, TI);\n"
                    << "                        TM = fma (-KP692021471, TL, TB);\n"
                    << "                        Ty = fma (-KP801937735, Tx, Tm);\n"
                    << "                        Tv = fma (-KP692021471, Tu, T4);\n"
                    << "                        TK = fma (-KP801937735, TJ, TG);\n"
                    << "                        TN = fma (-KP900968867, TM, Tz);\n"
                    << "                        TE = fma (-KP692021471, TD, TA);\n"
                    << "                        Tw = fma (-KP900968867, Tv, T1);\n"
                    << "                    }\n"
                    << "                }\n"
                    << "            }\n"
                    << "            v5.y = fma (-KP974927912, TP, TN);\n"
                    << "            v5.x = fma (-KP974927912, Tt, Tr);\n"
                    << "            v2.x = fma (KP974927912, Tt, Tr);\n"
                    << "            v2.y = fma (KP974927912, TP, TN);\n"
                    << "            TF = fma (-KP900968867, TE, Tz);\n"
                    << "            v4.x = fma (-KP974927912, Ty, Tw);\n"
                    << "            v4.y = fma (-KP974927912, TK, TF);\n"
                    << "            v3.y = fma (KP974927912, TK, TF);\n"
                    << "            v3.x = fma (KP974927912, Ty, Tw);\n"
                    << "        }\n"
                    << "    }\n"
                    << "    *u0 = v0;\n"
                    << "    *u1 = v1;\n"
                    << "    *u2 = v2;\n"
                    << "    *u3 = v3;\n"
                    << "    *u4 = v4;\n"
                    << "    *u5 = v5;\n"
                    << "    *u6 = v6;\n"
                    << "}\n";
            }
            break;
        case 8:
            if (invert) {
                src
                    << "/* Generated by: ./cl_gen_notw.native -n 8 -name dft8 -sign 1 -compact -fma -reorder-insns -reorder-loads -reorder-stores -schedule-for-pipeline -pipeline-latency 4 -standalone */\n"
                    << "/*\n"
                    << " * This function contains 52 FP additions, 8 FP multiplications,\n"
                    << " * (or, 44 additions, 0 multiplications, 8 fused multiply/add),\n"
                    << " * 43 stack variables, 1 constants, and 32 memory accesses\n"
                    << " */\n"
                    << "DEVICE void\n"
                    << "dft8 (real2_t * u0, real2_t * u1, real2_t * u2, real2_t * u3, real2_t * u4,\n"
                    << "      real2_t * u5, real2_t * u6, real2_t * u7)\n"
                    << "{\n"
                    << "    real2_t v0 = *u0;\n"
                    << "    real2_t v1 = *u1;\n"
                    << "    real2_t v2 = *u2;\n"
                    << "    real2_t v3 = *u3;\n"
                    << "    real2_t v4 = *u4;\n"
                    << "    real2_t v5 = *u5;\n"
                    << "    real2_t v6 = *u6;\n"
                    << "    real2_t v7 = *u7;\n"
                    << "    {\n"
                    << "        const real_t KP707106781 =\n"
                    << "            +0.707106781186547524400844362104849039284835938;\n"
                    << "        {\n"
                    << "            real_t TF, TE, TD, TI;\n"
                    << "            {\n"
                    << "                real_t TB, T3, Tn, Ti, To, T6, TC, Tl, Td, TN, Tz, TH, Ta, Tq,\n"
                    << "                    Tt;\n"
                    << "                real_t TM;\n"
                    << "                {\n"
                    << "                    real_t Tj, T4, T5, Tk;\n"
                    << "                    {\n"
                    << "                        real_t Tg, T1, T2, Th;\n"
                    << "                        Tg = v0.y;\n"
                    << "                        T1 = v0.x;\n"
                    << "                        T2 = v4.x;\n"
                    << "                        Th = v4.y;\n"
                    << "                        Tj = v2.y;\n"
                    << "                        T4 = v2.x;\n"
                    << "                        TB = T1 - T2;\n"
                    << "                        T3 = T1 + T2;\n"
                    << "                        Tn = Tg - Th;\n"
                    << "                        Ti = Tg + Th;\n"
                    << "                        T5 = v6.x;\n"
                    << "                        Tk = v6.y;\n"
                    << "                    }\n"
                    << "                    {\n"
                    << "                        real_t Tw, Tb, Tc, Tx;\n"
                    << "                        Tw = v7.y;\n"
                    << "                        Tb = v7.x;\n"
                    << "                        To = T4 - T5;\n"
                    << "                        T6 = T4 + T5;\n"
                    << "                        TC = Tj - Tk;\n"
                    << "                        Tl = Tj + Tk;\n"
                    << "                        Tc = v3.x;\n"
                    << "                        Tx = v3.y;\n"
                    << "                        {\n"
                    << "                            real_t Tr, T8, Tv, Ty, T9, Ts;\n"
                    << "                            Tr = v1.y;\n"
                    << "                            T8 = v1.x;\n"
                    << "                            Td = Tb + Tc;\n"
                    << "                            Tv = Tb - Tc;\n"
                    << "                            TN = Tw + Tx;\n"
                    << "                            Ty = Tw - Tx;\n"
                    << "                            T9 = v5.x;\n"
                    << "                            Ts = v5.y;\n"
                    << "                            Tz = Tv + Ty;\n"
                    << "                            TH = Ty - Tv;\n"
                    << "                            Ta = T8 + T9;\n"
                    << "                            Tq = T8 - T9;\n"
                    << "                            Tt = Tr - Ts;\n"
                    << "                            TM = Tr + Ts;\n"
                    << "                        }\n"
                    << "                    }\n"
                    << "                }\n"
                    << "                {\n"
                    << "                    real_t TP, TG, Tu, Tf, Tm, TQ;\n"
                    << "                    {\n"
                    << "                        real_t T7, Te, TL, TO;\n"
                    << "                        TP = T3 - T6;\n"
                    << "                        T7 = T3 + T6;\n"
                    << "                        TG = Tq + Tt;\n"
                    << "                        Tu = Tq - Tt;\n"
                    << "                        Te = Ta + Td;\n"
                    << "                        Tf = Ta - Td;\n"
                    << "                        Tm = Ti - Tl;\n"
                    << "                        TL = Ti + Tl;\n"
                    << "                        TO = TM + TN;\n"
                    << "                        TQ = TN - TM;\n"
                    << "                        v0.x = T7 + Te;\n"
                    << "                        v0.y = TL + TO;\n"
                    << "                        v4.y = TL - TO;\n"
                    << "                        v4.x = T7 - Te;\n"
                    << "                    }\n"
                    << "                    {\n"
                    << "                        real_t Tp, TA, TJ, TK;\n"
                    << "                        TF = To + Tn;\n"
                    << "                        Tp = Tn - To;\n"
                    << "                        v2.y = Tf + Tm;\n"
                    << "                        v2.x = TP + TQ;\n"
                    << "                        v6.x = TP - TQ;\n"
                    << "                        v6.y = Tm - Tf;\n"
                    << "                        TA = Tu - Tz;\n"
                    << "                        TE = Tu + Tz;\n"
                    << "                        TD = TB - TC;\n"
                    << "                        TJ = TB + TC;\n"
                    << "                        TK = TH - TG;\n"
                    << "                        TI = TG + TH;\n"
                    << "                        v3.y = fma (KP707106781, TA, Tp);\n"
                    << "                        v3.x = fma (KP707106781, TK, TJ);\n"
                    << "                        v7.x = fma (-KP707106781, TK, TJ);\n"
                    << "                        v7.y = fma (-KP707106781, TA, Tp);\n"
                    << "                    }\n"
                    << "                }\n"
                    << "            }\n"
                    << "            v1.x = fma (KP707106781, TE, TD);\n"
                    << "            v1.y = fma (KP707106781, TI, TF);\n"
                    << "            v5.y = fma (-KP707106781, TI, TF);\n"
                    << "            v5.x = fma (-KP707106781, TE, TD);\n"
                    << "        }\n"
                    << "    }\n"
                    << "    *u0 = v0;\n"
                    << "    *u1 = v1;\n"
                    << "    *u2 = v2;\n"
                    << "    *u3 = v3;\n"
                    << "    *u4 = v4;\n"
                    << "    *u5 = v5;\n"
                    << "    *u6 = v6;\n"
                    << "    *u7 = v7;\n"
                    << "}\n";
            } else {
                src
                    << "/* Generated by: ./cl_gen_notw.native -n 8 -name dft8 -sign -1 -compact -fma -reorder-insns -reorder-loads -reorder-stores -schedule-for-pipeline -pipeline-latency 4 -standalone */\n"
                    << "/*\n"
                    << " * This function contains 52 FP additions, 8 FP multiplications,\n"
                    << " * (or, 44 additions, 0 multiplications, 8 fused multiply/add),\n"
                    << " * 43 stack variables, 1 constants, and 32 memory accesses\n"
                    << " */\n"
                    << "DEVICE void\n"
                    << "dft8 (real2_t * u0, real2_t * u1, real2_t * u2, real2_t * u3, real2_t * u4,\n"
                    << "      real2_t * u5, real2_t * u6, real2_t * u7)\n"
                    << "{\n"
                    << "    real2_t v0 = *u0;\n"
                    << "    real2_t v1 = *u1;\n"
                    << "    real2_t v2 = *u2;\n"
                    << "    real2_t v3 = *u3;\n"
                    << "    real2_t v4 = *u4;\n"
                    << "    real2_t v5 = *u5;\n"
                    << "    real2_t v6 = *u6;\n"
                    << "    real2_t v7 = *u7;\n"
                    << "    {\n"
                    << "        const real_t KP707106781 =\n"
                    << "            +0.707106781186547524400844362104849039284835938;\n"
                    << "        {\n"
                    << "            real_t TF, TE, TD, TI;\n"
                    << "            {\n"
                    << "                real_t Tn, T3, TC, Ti, TB, T6, To, Tl, Td, TN, Tz, TH, Ta, Tq,\n"
                    << "                    Tt;\n"
                    << "                real_t TM;\n"
                    << "                {\n"
                    << "                    real_t Tj, T4, T5, Tk;\n"
                    << "                    {\n"
                    << "                        real_t Tg, T1, T2, Th;\n"
                    << "                        Tg = v0.y;\n"
                    << "                        T1 = v0.x;\n"
                    << "                        T2 = v4.x;\n"
                    << "                        Th = v4.y;\n"
                    << "                        Tj = v2.y;\n"
                    << "                        T4 = v2.x;\n"
                    << "                        Tn = T1 - T2;\n"
                    << "                        T3 = T1 + T2;\n"
                    << "                        TC = Tg - Th;\n"
                    << "                        Ti = Tg + Th;\n"
                    << "                        T5 = v6.x;\n"
                    << "                        Tk = v6.y;\n"
                    << "                    }\n"
                    << "                    {\n"
                    << "                        real_t Tw, Tb, Tc, Tx;\n"
                    << "                        Tw = v7.y;\n"
                    << "                        Tb = v7.x;\n"
                    << "                        TB = T4 - T5;\n"
                    << "                        T6 = T4 + T5;\n"
                    << "                        To = Tj - Tk;\n"
                    << "                        Tl = Tj + Tk;\n"
                    << "                        Tc = v3.x;\n"
                    << "                        Tx = v3.y;\n"
                    << "                        {\n"
                    << "                            real_t Tr, T8, Tv, Ty, T9, Ts;\n"
                    << "                            Tr = v1.y;\n"
                    << "                            T8 = v1.x;\n"
                    << "                            Td = Tb + Tc;\n"
                    << "                            Tv = Tb - Tc;\n"
                    << "                            TN = Tw + Tx;\n"
                    << "                            Ty = Tw - Tx;\n"
                    << "                            T9 = v5.x;\n"
                    << "                            Ts = v5.y;\n"
                    << "                            Tz = Tv - Ty;\n"
                    << "                            TH = Tv + Ty;\n"
                    << "                            Ta = T8 + T9;\n"
                    << "                            Tq = T8 - T9;\n"
                    << "                            Tt = Tr - Ts;\n"
                    << "                            TM = Tr + Ts;\n"
                    << "                        }\n"
                    << "                    }\n"
                    << "                }\n"
                    << "                {\n"
                    << "                    real_t TL, TG, Tu, Tf, Tm, TO;\n"
                    << "                    {\n"
                    << "                        real_t T7, Te, TP, TQ;\n"
                    << "                        TL = T3 - T6;\n"
                    << "                        T7 = T3 + T6;\n"
                    << "                        TG = Tt - Tq;\n"
                    << "                        Tu = Tq + Tt;\n"
                    << "                        Te = Ta + Td;\n"
                    << "                        Tf = Td - Ta;\n"
                    << "                        Tm = Ti - Tl;\n"
                    << "                        TP = Ti + Tl;\n"
                    << "                        TQ = TM + TN;\n"
                    << "                        TO = TM - TN;\n"
                    << "                        v0.x = T7 + Te;\n"
                    << "                        v0.y = TP + TQ;\n"
                    << "                        v4.y = TP - TQ;\n"
                    << "                        v4.x = T7 - Te;\n"
                    << "                    }\n"
                    << "                    {\n"
                    << "                        real_t Tp, TA, TJ, TK;\n"
                    << "                        TF = Tn - To;\n"
                    << "                        Tp = Tn + To;\n"
                    << "                        v2.y = Tf + Tm;\n"
                    << "                        v2.x = TL + TO;\n"
                    << "                        v6.x = TL - TO;\n"
                    << "                        v6.y = Tm - Tf;\n"
                    << "                        TA = Tu + Tz;\n"
                    << "                        TE = Tz - Tu;\n"
                    << "                        TD = TB + TC;\n"
                    << "                        TJ = TC - TB;\n"
                    << "                        TK = TG + TH;\n"
                    << "                        TI = TG - TH;\n"
                    << "                        v1.x = fma (KP707106781, TA, Tp);\n"
                    << "                        v1.y = fma (KP707106781, TK, TJ);\n"
                    << "                        v5.y = fma (-KP707106781, TK, TJ);\n"
                    << "                        v5.x = fma (-KP707106781, TA, Tp);\n"
                    << "                    }\n"
                    << "                }\n"
                    << "            }\n"
                    << "            v3.y = fma (KP707106781, TE, TD);\n"
                    << "            v3.x = fma (KP707106781, TI, TF);\n"
                    << "            v7.x = fma (-KP707106781, TI, TF);\n"
                    << "            v7.y = fma (-KP707106781, TE, TD);\n"
                    << "        }\n"
                    << "    }\n"
                    << "    *u0 = v0;\n"
                    << "    *u1 = v1;\n"
                    << "    *u2 = v2;\n"
                    << "    *u3 = v3;\n"
                    << "    *u4 = v4;\n"
                    << "    *u5 = v5;\n"
                    << "    *u6 = v6;\n"
                    << "    *u7 = v7;\n"
                    << "}\n";
            }
            break;
        case 9:
            if (invert) {
                src
                    << "/* Generated by: ./cl_gen_notw.native -n 9 -name dft9 -sign 1 -compact -fma -reorder-insns -reorder-loads -reorder-stores -schedule-for-pipeline -pipeline-latency 4 -standalone */\n"
                    << "/*\n"
                    << " * This function contains 80 FP additions, 56 FP multiplications,\n"
                    << " * (or, 24 additions, 0 multiplications, 56 fused multiply/add),\n"
                    << " * 67 stack variables, 10 constants, and 36 memory accesses\n"
                    << " */\n"
                    << "DEVICE void\n"
                    << "dft9 (real2_t * u0, real2_t * u1, real2_t * u2, real2_t * u3, real2_t * u4,\n"
                    << "      real2_t * u5, real2_t * u6, real2_t * u7, real2_t * u8)\n"
                    << "{\n"
                    << "    real2_t v0 = *u0;\n"
                    << "    real2_t v1 = *u1;\n"
                    << "    real2_t v2 = *u2;\n"
                    << "    real2_t v3 = *u3;\n"
                    << "    real2_t v4 = *u4;\n"
                    << "    real2_t v5 = *u5;\n"
                    << "    real2_t v6 = *u6;\n"
                    << "    real2_t v7 = *u7;\n"
                    << "    real2_t v8 = *u8;\n"
                    << "    {\n"
                    << "        const real_t KP777861913 =\n"
                    << "            +0.777861913430206160028177977318626690410586096;\n"
                    << "        const real_t KP839099631 =\n"
                    << "            +0.839099631177280011763127298123181364687434283;\n"
                    << "        const real_t KP852868531 =\n"
                    << "            +0.852868531952443209628250963940074071936020296;\n"
                    << "        const real_t KP984807753 =\n"
                    << "            +0.984807753012208059366743024589523013670643252;\n"
                    << "        const real_t KP492403876 =\n"
                    << "            +0.492403876506104029683371512294761506835321626;\n"
                    << "        const real_t KP954188894 =\n"
                    << "            +0.954188894138671133499268364187245676532219158;\n"
                    << "        const real_t KP363970234 =\n"
                    << "            +0.363970234266202361351047882776834043890471784;\n"
                    << "        const real_t KP176326980 =\n"
                    << "            +0.176326980708464973471090386868618986121633062;\n"
                    << "        const real_t KP866025403 =\n"
                    << "            +0.866025403784438646763723170752936183471402627;\n"
                    << "        const real_t KP500000000 =\n"
                    << "            +0.500000000000000000000000000000000000000000000;\n"
                    << "        {\n"
                    << "            real_t T13, T1b, T1c, T16, T19, T1d;\n"
                    << "            {\n"
                    << "                real_t TY, TC, TB, T5, Tl, TX, Tr, Tb, Ta, Tq, TJ, T17, TG,\n"
                    << "                    T18, Ts;\n"
                    << "                real_t Tc, Td, Tt;\n"
                    << "                {\n"
                    << "                    real_t Th, T1, Ti, Tj, T4, T2, T3;\n"
                    << "                    Th = v0.y;\n"
                    << "                    T1 = v0.x;\n"
                    << "                    T2 = v3.x;\n"
                    << "                    Ti = v3.y;\n"
                    << "                    Tj = v6.y;\n"
                    << "                    T3 = v6.x;\n"
                    << "                    T4 = T2 + T3;\n"
                    << "                    TY = T2 - T3;\n"
                    << "                    {\n"
                    << "                        real_t Tm, T6, Tn, T7, T8, To, Tk;\n"
                    << "                        Tm = v1.y;\n"
                    << "                        T6 = v1.x;\n"
                    << "                        TC = Tj - Ti;\n"
                    << "                        Tk = Ti + Tj;\n"
                    << "                        TB = fma (-KP500000000, T4, T1);\n"
                    << "                        T5 = T1 + T4;\n"
                    << "                        Tl = Th + Tk;\n"
                    << "                        TX = fma (-KP500000000, Tk, Th);\n"
                    << "                        Tn = v4.y;\n"
                    << "                        T7 = v4.x;\n"
                    << "                        T8 = v7.x;\n"
                    << "                        To = v7.y;\n"
                    << "                        {\n"
                    << "                            real_t TF, T9, TI, Tp, TH, TE;\n"
                    << "                            Tr = v2.y;\n"
                    << "                            Tb = v2.x;\n"
                    << "                            TF = T8 - T7;\n"
                    << "                            T9 = T7 + T8;\n"
                    << "                            TI = Tn - To;\n"
                    << "                            Tp = Tn + To;\n"
                    << "                            Ta = T6 + T9;\n"
                    << "                            TH = fma (-KP500000000, T9, T6);\n"
                    << "                            Tq = Tm + Tp;\n"
                    << "                            TE = fma (-KP500000000, Tp, Tm);\n"
                    << "                            TJ = fma (KP866025403, TI, TH);\n"
                    << "                            T17 = fma (-KP866025403, TI, TH);\n"
                    << "                            TG = fma (KP866025403, TF, TE);\n"
                    << "                            T18 = fma (-KP866025403, TF, TE);\n"
                    << "                            Ts = v5.y;\n"
                    << "                            Tc = v5.x;\n"
                    << "                            Td = v8.x;\n"
                    << "                            Tt = v8.y;\n"
                    << "                        }\n"
                    << "                    }\n"
                    << "                }\n"
                    << "                {\n"
                    << "                    real_t TD, TZ, T15, T14, TU, TK, TR, TV;\n"
                    << "                    {\n"
                    << "                        real_t TP, Te, TM, Tu;\n"
                    << "                        T13 = fma (KP866025403, TC, TB);\n"
                    << "                        TD = fma (-KP866025403, TC, TB);\n"
                    << "                        TP = Tc - Td;\n"
                    << "                        Te = Tc + Td;\n"
                    << "                        TM = Tt - Ts;\n"
                    << "                        Tu = Ts + Tt;\n"
                    << "                        TZ = fma (-KP866025403, TY, TX);\n"
                    << "                        T1b = fma (KP866025403, TY, TX);\n"
                    << "                        {\n"
                    << "                            real_t Tf, TL, Tv, TO;\n"
                    << "                            Tf = Tb + Te;\n"
                    << "                            TL = fma (-KP500000000, Te, Tb);\n"
                    << "                            Tv = Tr + Tu;\n"
                    << "                            TO = fma (-KP500000000, Tu, Tr);\n"
                    << "                            {\n"
                    << "                                real_t TN, Tg, Ty, TQ;\n"
                    << "                                TN = fma (-KP866025403, TM, TL);\n"
                    << "                                T15 = fma (KP866025403, TM, TL);\n"
                    << "                                Tg = Ta + Tf;\n"
                    << "                                Ty = Ta - Tf;\n"
                    << "                                TQ = fma (-KP866025403, TP, TO);\n"
                    << "                                T14 = fma (KP866025403, TP, TO);\n"
                    << "                                {\n"
                    << "                                    real_t TA, Tw, Tz, Tx;\n"
                    << "                                    TA = Tv - Tq;\n"
                    << "                                    Tw = Tq + Tv;\n"
                    << "                                    Tz = fma (-KP500000000, Tg, T5);\n"
                    << "                                    v0.x = T5 + Tg;\n"
                    << "                                    v0.y = Tl + Tw;\n"
                    << "                                    Tx = fma (-KP500000000, Tw, Tl);\n"
                    << "                                    TU = fma (KP176326980, TG, TJ);\n"
                    << "                                    TK = fma (-KP176326980, TJ, TG);\n"
                    << "                                    v6.x = fma (-KP866025403, TA, Tz);\n"
                    << "                                    v6.y = fma (-KP866025403, Ty, Tx);\n"
                    << "                                    v3.y = fma (KP866025403, Ty, Tx);\n"
                    << "                                    v3.x = fma (KP866025403, TA, Tz);\n"
                    << "                                    TR = fma (KP363970234, TQ, TN);\n"
                    << "                                    TV = fma (-KP363970234, TN, TQ);\n"
                    << "                                }\n"
                    << "                            }\n"
                    << "                        }\n"
                    << "                    }\n"
                    << "                    {\n"
                    << "                        real_t T12, TS, T10, TW, TT, T11;\n"
                    << "                        T12 = fma (-KP954188894, TR, TK);\n"
                    << "                        TS = fma (KP954188894, TR, TK);\n"
                    << "                        T10 = fma (-KP954188894, TV, TU);\n"
                    << "                        TW = fma (KP954188894, TV, TU);\n"
                    << "                        TT = fma (KP492403876, TS, TD);\n"
                    << "                        T11 = fma (-KP492403876, T10, TZ);\n"
                    << "                        v2.y = fma (KP984807753, T10, TZ);\n"
                    << "                        v2.x = fma (-KP984807753, TS, TD);\n"
                    << "                        v8.x = fma (KP852868531, TW, TT);\n"
                    << "                        v8.y = fma (KP852868531, T12, T11);\n"
                    << "                        v5.y = fma (-KP852868531, T12, T11);\n"
                    << "                        v5.x = fma (-KP852868531, TW, TT);\n"
                    << "                        T1c = fma (KP176326980, T14, T15);\n"
                    << "                        T16 = fma (-KP176326980, T15, T14);\n"
                    << "                        T19 = fma (-KP839099631, T18, T17);\n"
                    << "                        T1d = fma (KP839099631, T17, T18);\n"
                    << "                    }\n"
                    << "                }\n"
                    << "            }\n"
                    << "            {\n"
                    << "                real_t T1a, T1g, T1e, T1i, T1h, T1f;\n"
                    << "                T1a = fma (-KP777861913, T19, T16);\n"
                    << "                T1g = fma (KP777861913, T19, T16);\n"
                    << "                T1e = fma (KP777861913, T1d, T1c);\n"
                    << "                T1i = fma (-KP777861913, T1d, T1c);\n"
                    << "                T1h = fma (KP492403876, T1a, T13);\n"
                    << "                T1f = fma (-KP492403876, T1e, T1b);\n"
                    << "                v1.y = fma (KP984807753, T1e, T1b);\n"
                    << "                v1.x = fma (-KP984807753, T1a, T13);\n"
                    << "                v7.x = fma (-KP852868531, T1i, T1h);\n"
                    << "                v7.y = fma (-KP852868531, T1g, T1f);\n"
                    << "                v4.y = fma (KP852868531, T1g, T1f);\n"
                    << "                v4.x = fma (KP852868531, T1i, T1h);\n"
                    << "            }\n"
                    << "        }\n"
                    << "    }\n"
                    << "    *u0 = v0;\n"
                    << "    *u1 = v1;\n"
                    << "    *u2 = v2;\n"
                    << "    *u3 = v3;\n"
                    << "    *u4 = v4;\n"
                    << "    *u5 = v5;\n"
                    << "    *u6 = v6;\n"
                    << "    *u7 = v7;\n"
                    << "    *u8 = v8;\n"
                    << "}\n";
            } else {
                src
                    << "/* Generated by: ./cl_gen_notw.native -n 9 -name dft9 -sign -1 -compact -fma -reorder-insns -reorder-loads -reorder-stores -schedule-for-pipeline -pipeline-latency 4 -standalone */\n"
                    << "/*\n"
                    << " * This function contains 80 FP additions, 56 FP multiplications,\n"
                    << " * (or, 24 additions, 0 multiplications, 56 fused multiply/add),\n"
                    << " * 67 stack variables, 10 constants, and 36 memory accesses\n"
                    << " */\n"
                    << "DEVICE void\n"
                    << "dft9 (real2_t * u0, real2_t * u1, real2_t * u2, real2_t * u3, real2_t * u4,\n"
                    << "      real2_t * u5, real2_t * u6, real2_t * u7, real2_t * u8)\n"
                    << "{\n"
                    << "    real2_t v0 = *u0;\n"
                    << "    real2_t v1 = *u1;\n"
                    << "    real2_t v2 = *u2;\n"
                    << "    real2_t v3 = *u3;\n"
                    << "    real2_t v4 = *u4;\n"
                    << "    real2_t v5 = *u5;\n"
                    << "    real2_t v6 = *u6;\n"
                    << "    real2_t v7 = *u7;\n"
                    << "    real2_t v8 = *u8;\n"
                    << "    {\n"
                    << "        const real_t KP954188894 =\n"
                    << "            +0.954188894138671133499268364187245676532219158;\n"
                    << "        const real_t KP363970234 =\n"
                    << "            +0.363970234266202361351047882776834043890471784;\n"
                    << "        const real_t KP852868531 =\n"
                    << "            +0.852868531952443209628250963940074071936020296;\n"
                    << "        const real_t KP984807753 =\n"
                    << "            +0.984807753012208059366743024589523013670643252;\n"
                    << "        const real_t KP492403876 =\n"
                    << "            +0.492403876506104029683371512294761506835321626;\n"
                    << "        const real_t KP777861913 =\n"
                    << "            +0.777861913430206160028177977318626690410586096;\n"
                    << "        const real_t KP839099631 =\n"
                    << "            +0.839099631177280011763127298123181364687434283;\n"
                    << "        const real_t KP176326980 =\n"
                    << "            +0.176326980708464973471090386868618986121633062;\n"
                    << "        const real_t KP866025403 =\n"
                    << "            +0.866025403784438646763723170752936183471402627;\n"
                    << "        const real_t KP500000000 =\n"
                    << "            +0.500000000000000000000000000000000000000000000;\n"
                    << "        {\n"
                    << "            real_t T17, TV, T14, TY, T11, T15;\n"
                    << "            {\n"
                    << "                real_t Tm, TM, TL, T5, Tl, T1f, Tt, Tb, Ta, T1c, TI, TX, TF,\n"
                    << "                    TW, Tp;\n"
                    << "                real_t Tc, Td, Tq;\n"
                    << "                {\n"
                    << "                    real_t Th, T1, Ti, Tj, T4, T2, T3;\n"
                    << "                    Th = v0.y;\n"
                    << "                    T1 = v0.x;\n"
                    << "                    T2 = v3.x;\n"
                    << "                    Ti = v3.y;\n"
                    << "                    Tj = v6.y;\n"
                    << "                    T3 = v6.x;\n"
                    << "                    T4 = T2 + T3;\n"
                    << "                    Tm = T3 - T2;\n"
                    << "                    {\n"
                    << "                        real_t Tz, T6, TA, T7, T8, TB, Tk;\n"
                    << "                        Tz = v1.y;\n"
                    << "                        T6 = v1.x;\n"
                    << "                        TM = Ti - Tj;\n"
                    << "                        Tk = Ti + Tj;\n"
                    << "                        TL = fma (-KP500000000, T4, T1);\n"
                    << "                        T5 = T1 + T4;\n"
                    << "                        Tl = fma (-KP500000000, Tk, Th);\n"
                    << "                        T1f = Th + Tk;\n"
                    << "                        TA = v4.y;\n"
                    << "                        T7 = v4.x;\n"
                    << "                        T8 = v7.x;\n"
                    << "                        TB = v7.y;\n"
                    << "                        {\n"
                    << "                            real_t TE, T9, TH, TC, TG, TD;\n"
                    << "                            Tt = v2.y;\n"
                    << "                            Tb = v2.x;\n"
                    << "                            TE = T7 - T8;\n"
                    << "                            T9 = T7 + T8;\n"
                    << "                            TH = TB - TA;\n"
                    << "                            TC = TA + TB;\n"
                    << "                            Ta = T6 + T9;\n"
                    << "                            TG = fma (-KP500000000, T9, T6);\n"
                    << "                            T1c = Tz + TC;\n"
                    << "                            TD = fma (-KP500000000, TC, Tz);\n"
                    << "                            TI = fma (-KP866025403, TH, TG);\n"
                    << "                            TX = fma (KP866025403, TH, TG);\n"
                    << "                            TF = fma (-KP866025403, TE, TD);\n"
                    << "                            TW = fma (KP866025403, TE, TD);\n"
                    << "                            Tp = v5.y;\n"
                    << "                            Tc = v5.x;\n"
                    << "                            Td = v8.x;\n"
                    << "                            Tq = v8.y;\n"
                    << "                        }\n"
                    << "                    }\n"
                    << "                }\n"
                    << "                {\n"
                    << "                    real_t Tn, TN, TZ, T10, TO, Ty, TJ, TP;\n"
                    << "                    {\n"
                    << "                        real_t Tw, Te, Tu, Tr;\n"
                    << "                        T17 = fma (-KP866025403, Tm, Tl);\n"
                    << "                        Tn = fma (KP866025403, Tm, Tl);\n"
                    << "                        Tw = Td - Tc;\n"
                    << "                        Te = Tc + Td;\n"
                    << "                        Tu = Tp + Tq;\n"
                    << "                        Tr = Tp - Tq;\n"
                    << "                        TN = fma (KP866025403, TM, TL);\n"
                    << "                        TV = fma (-KP866025403, TM, TL);\n"
                    << "                        {\n"
                    << "                            real_t Tf, To, T1d, Tv;\n"
                    << "                            Tf = Tb + Te;\n"
                    << "                            To = fma (-KP500000000, Te, Tb);\n"
                    << "                            T1d = Tt + Tu;\n"
                    << "                            Tv = fma (-KP500000000, Tu, Tt);\n"
                    << "                            {\n"
                    << "                                real_t Ts, Tg, T1i, Tx;\n"
                    << "                                Ts = fma (KP866025403, Tr, To);\n"
                    << "                                TZ = fma (-KP866025403, Tr, To);\n"
                    << "                                Tg = Ta + Tf;\n"
                    << "                                T1i = Tf - Ta;\n"
                    << "                                Tx = fma (KP866025403, Tw, Tv);\n"
                    << "                                T10 = fma (-KP866025403, Tw, Tv);\n"
                    << "                                {\n"
                    << "                                    real_t T1e, T1g, T1b, T1h;\n"
                    << "                                    T1e = T1c - T1d;\n"
                    << "                                    T1g = T1c + T1d;\n"
                    << "                                    T1b = fma (-KP500000000, Tg, T5);\n"
                    << "                                    v0.x = T5 + Tg;\n"
                    << "                                    v0.y = T1f + T1g;\n"
                    << "                                    T1h = fma (-KP500000000, T1g, T1f);\n"
                    << "                                    TO = fma (KP176326980, Ts, Tx);\n"
                    << "                                    Ty = fma (-KP176326980, Tx, Ts);\n"
                    << "                                    v6.x = fma (-KP866025403, T1e, T1b);\n"
                    << "                                    v6.y = fma (-KP866025403, T1i, T1h);\n"
                    << "                                    v3.y = fma (KP866025403, T1i, T1h);\n"
                    << "                                    v3.x = fma (KP866025403, T1e, T1b);\n"
                    << "                                    TJ = fma (-KP839099631, TI, TF);\n"
                    << "                                    TP = fma (KP839099631, TF, TI);\n"
                    << "                                }\n"
                    << "                            }\n"
                    << "                        }\n"
                    << "                    }\n"
                    << "                    {\n"
                    << "                        real_t TS, TK, TU, TQ, TT, TR;\n"
                    << "                        TS = fma (KP777861913, TJ, Ty);\n"
                    << "                        TK = fma (-KP777861913, TJ, Ty);\n"
                    << "                        TU = fma (-KP777861913, TP, TO);\n"
                    << "                        TQ = fma (KP777861913, TP, TO);\n"
                    << "                        TT = fma (KP492403876, TK, Tn);\n"
                    << "                        TR = fma (-KP492403876, TQ, TN);\n"
                    << "                        v1.x = fma (KP984807753, TQ, TN);\n"
                    << "                        v1.y = fma (-KP984807753, TK, Tn);\n"
                    << "                        v7.y = fma (-KP852868531, TU, TT);\n"
                    << "                        v7.x = fma (-KP852868531, TS, TR);\n"
                    << "                        v4.x = fma (KP852868531, TS, TR);\n"
                    << "                        v4.y = fma (KP852868531, TU, TT);\n"
                    << "                        T14 = fma (-KP176326980, TW, TX);\n"
                    << "                        TY = fma (KP176326980, TX, TW);\n"
                    << "                        T11 = fma (-KP363970234, T10, TZ);\n"
                    << "                        T15 = fma (KP363970234, TZ, T10);\n"
                    << "                    }\n"
                    << "                }\n"
                    << "            }\n"
                    << "            {\n"
                    << "                real_t T12, T1a, T16, T18, T13, T19;\n"
                    << "                T12 = fma (-KP954188894, T11, TY);\n"
                    << "                T1a = fma (KP954188894, T11, TY);\n"
                    << "                T16 = fma (-KP954188894, T15, T14);\n"
                    << "                T18 = fma (KP954188894, T15, T14);\n"
                    << "                T13 = fma (-KP492403876, T12, TV);\n"
                    << "                T19 = fma (KP492403876, T18, T17);\n"
                    << "                v2.y = fma (-KP984807753, T18, T17);\n"
                    << "                v2.x = fma (KP984807753, T12, TV);\n"
                    << "                v8.x = fma (KP852868531, T16, T13);\n"
                    << "                v8.y = fma (KP852868531, T1a, T19);\n"
                    << "                v5.y = fma (-KP852868531, T1a, T19);\n"
                    << "                v5.x = fma (-KP852868531, T16, T13);\n"
                    << "            }\n"
                    << "        }\n"
                    << "    }\n"
                    << "    *u0 = v0;\n"
                    << "    *u1 = v1;\n"
                    << "    *u2 = v2;\n"
                    << "    *u3 = v3;\n"
                    << "    *u4 = v4;\n"
                    << "    *u5 = v5;\n"
                    << "    *u6 = v6;\n"
                    << "    *u7 = v7;\n"
                    << "    *u8 = v8;\n"
                    << "}\n";
            }
            break;
        case 11:
            if (invert) {
                src
                    << "/* Generated by: ./cl_gen_notw.native -n 11 -name dft11 -sign 1 -compact -fma -reorder-insns -reorder-loads -reorder-stores -schedule-for-pipeline -pipeline-latency 4 -standalone */\n"
                    << "/*\n"
                    << " * This function contains 140 FP additions, 110 FP multiplications,\n"
                    << " * (or, 30 additions, 0 multiplications, 110 fused multiply/add),\n"
                    << " * 96 stack variables, 10 constants, and 44 memory accesses\n"
                    << " */\n"
                    << "DEVICE void\n"
                    << "dft11 (real2_t * u0, real2_t * u1, real2_t * u2, real2_t * u3, real2_t * u4,\n"
                    << "       real2_t * u5, real2_t * u6, real2_t * u7, real2_t * u8, real2_t * u9,\n"
                    << "       real2_t * u10)\n"
                    << "{\n"
                    << "    real2_t v0 = *u0;\n"
                    << "    real2_t v1 = *u1;\n"
                    << "    real2_t v2 = *u2;\n"
                    << "    real2_t v3 = *u3;\n"
                    << "    real2_t v4 = *u4;\n"
                    << "    real2_t v5 = *u5;\n"
                    << "    real2_t v6 = *u6;\n"
                    << "    real2_t v7 = *u7;\n"
                    << "    real2_t v8 = *u8;\n"
                    << "    real2_t v9 = *u9;\n"
                    << "    real2_t v10 = *u10;\n"
                    << "    {\n"
                    << "        const real_t KP989821441 =\n"
                    << "            +0.989821441880932732376092037776718787376519372;\n"
                    << "        const real_t KP959492973 =\n"
                    << "            +0.959492973614497389890368057066327699062454848;\n"
                    << "        const real_t KP918985947 =\n"
                    << "            +0.918985947228994779780736114132655398124909697;\n"
                    << "        const real_t KP876768831 =\n"
                    << "            +0.876768831002589333891339807079336796764054852;\n"
                    << "        const real_t KP830830026 =\n"
                    << "            +0.830830026003772851058548298459246407048009821;\n"
                    << "        const real_t KP778434453 =\n"
                    << "            +0.778434453334651800608337670740821884709317477;\n"
                    << "        const real_t KP634356270 =\n"
                    << "            +0.634356270682424498893150776899916060542806975;\n"
                    << "        const real_t KP715370323 =\n"
                    << "            +0.715370323453429719112414662767260662417897278;\n"
                    << "        const real_t KP342584725 =\n"
                    << "            +0.342584725681637509502641509861112333758894680;\n"
                    << "        const real_t KP521108558 =\n"
                    << "            +0.521108558113202722944698153526659300680427422;\n"
                    << "        {\n"
                    << "            real_t Th, TE, T1p, T1y, T1f, T1j, T1g, T1k;\n"
                    << "            {\n"
                    << "                real_t T1, TG, T4, TC, Tg, TF, T7, Ta, TD, Td, TI, T1S, T1J,\n"
                    << "                    TR, T10;\n"
                    << "                real_t T21, T1m, T19, T1A, T1i, T1t, Tk, T1u, Tw, T1r, Tn,\n"
                    << "                    T1q, Tq, T1s, Tt;\n"
                    << "                real_t T26, TV, TM, Ty, T1X, T1O, T1w, T13, T1E, T1c;\n"
                    << "                Th = v0.y;\n"
                    << "                T1 = v0.x;\n"
                    << "                {\n"
                    << "                    real_t Ti, Tj, Tu, Tv, Tl, Tm, To, Tp, Tr, Ts;\n"
                    << "                    {\n"
                    << "                        real_t Tb, Tc, TH, T1R;\n"
                    << "                        {\n"
                    << "                            real_t T2, T3, Te, Tf;\n"
                    << "                            Ti = v1.y;\n"
                    << "                            T2 = v1.x;\n"
                    << "                            T3 = v10.x;\n"
                    << "                            Tj = v10.y;\n"
                    << "                            Tu = v5.y;\n"
                    << "                            Te = v5.x;\n"
                    << "                            Tf = v6.x;\n"
                    << "                            Tv = v6.y;\n"
                    << "                            {\n"
                    << "                                real_t T5, T6, T8, T9;\n"
                    << "                                Tl = v2.y;\n"
                    << "                                T5 = v2.x;\n"
                    << "                                TG = T2 - T3;\n"
                    << "                                T4 = T2 + T3;\n"
                    << "                                TC = Te - Tf;\n"
                    << "                                Tg = Te + Tf;\n"
                    << "                                T6 = v9.x;\n"
                    << "                                Tm = v9.y;\n"
                    << "                                To = v3.y;\n"
                    << "                                T8 = v3.x;\n"
                    << "                                T9 = v8.x;\n"
                    << "                                Tp = v8.y;\n"
                    << "                                Tr = v4.y;\n"
                    << "                                Tb = v4.x;\n"
                    << "                                TF = T5 - T6;\n"
                    << "                                T7 = T5 + T6;\n"
                    << "                                TE = T8 - T9;\n"
                    << "                                Ta = T8 + T9;\n"
                    << "                                Tc = v7.x;\n"
                    << "                                Ts = v7.y;\n"
                    << "                            }\n"
                    << "                        }\n"
                    << "                        TH = fma (-KP521108558, TG, TF);\n"
                    << "                        T1R = fma (-KP342584725, T7, Tg);\n"
                    << "                        {\n"
                    << "                            real_t T1l, T18, T1z, T1h;\n"
                    << "                            {\n"
                    << "                                real_t TQ, TZ, T20, T1I;\n"
                    << "                                T1I = fma (-KP342584725, T4, Ta);\n"
                    << "                                TD = Tb - Tc;\n"
                    << "                                Td = Tb + Tc;\n"
                    << "                                TI = fma (-KP715370323, TH, TE);\n"
                    << "                                T1S = fma (-KP634356270, T1R, T4);\n"
                    << "                                TQ = fma (KP521108558, TD, TE);\n"
                    << "                                TZ = fma (-KP521108558, TF, TD);\n"
                    << "                                T20 = fma (-KP342584725, Tg, Td);\n"
                    << "                                T1J = fma (-KP634356270, T1I, Tg);\n"
                    << "                                TR = fma (KP715370323, TQ, TG);\n"
                    << "                                T10 = fma (KP715370323, TZ, TC);\n"
                    << "                                T21 = fma (-KP634356270, T20, Ta);\n"
                    << "                                T1l = fma (-KP342584725, Ta, T7);\n"
                    << "                            }\n"
                    << "                            T18 = fma (KP521108558, TE, TC);\n"
                    << "                            T1z = fma (-KP342584725, Td, T4);\n"
                    << "                            T1h = fma (KP521108558, TC, TG);\n"
                    << "                            T1m = fma (-KP634356270, T1l, Td);\n"
                    << "                            T19 = fma (-KP715370323, T18, TF);\n"
                    << "                            T1A = fma (-KP634356270, T1z, T7);\n"
                    << "                            T1i = fma (KP715370323, T1h, TD);\n"
                    << "                        }\n"
                    << "                    }\n"
                    << "                    T1t = Tj - Ti;\n"
                    << "                    Tk = Ti + Tj;\n"
                    << "                    T1u = Tv - Tu;\n"
                    << "                    Tw = Tu + Tv;\n"
                    << "                    T1r = Tm - Tl;\n"
                    << "                    Tn = Tl + Tm;\n"
                    << "                    T1q = Tp - To;\n"
                    << "                    Tq = To + Tp;\n"
                    << "                    {\n"
                    << "                        real_t Tx, T1W, T25, TL, TU, T1N, T1v;\n"
                    << "                        T25 = fma (-KP521108558, T1t, T1r);\n"
                    << "                        TL = fma (-KP342584725, Tn, Tw);\n"
                    << "                        TU = fma (-KP342584725, Tk, Tq);\n"
                    << "                        T1s = Ts - Tr;\n"
                    << "                        Tt = Tr + Ts;\n"
                    << "                        T26 = fma (-KP715370323, T25, T1q);\n"
                    << "                        TV = fma (-KP634356270, TU, Tw);\n"
                    << "                        TM = fma (-KP634356270, TL, Tk);\n"
                    << "                        Tx = fma (-KP342584725, Tw, Tt);\n"
                    << "                        T1W = fma (KP521108558, T1s, T1q);\n"
                    << "                        T1N = fma (-KP521108558, T1r, T1s);\n"
                    << "                        T1v = fma (KP521108558, T1u, T1t);\n"
                    << "                        Ty = fma (-KP634356270, Tx, Tq);\n"
                    << "                        T1X = fma (KP715370323, T1W, T1t);\n"
                    << "                        T1O = fma (KP715370323, T1N, T1u);\n"
                    << "                        T1w = fma (KP715370323, T1v, T1s);\n"
                    << "                        T13 = fma (-KP342584725, Tt, Tk);\n"
                    << "                        T1E = fma (KP521108558, T1q, T1u);\n"
                    << "                        T1c = fma (-KP342584725, Tq, Tn);\n"
                    << "                    }\n"
                    << "                }\n"
                    << "                {\n"
                    << "                    real_t T14, T1F, T1d, T1Z, T1V, TN, TS, Tz, TJ;\n"
                    << "                    T14 = fma (-KP634356270, T13, Tn);\n"
                    << "                    T1F = fma (-KP715370323, T1E, T1r);\n"
                    << "                    T1d = fma (-KP634356270, T1c, Tt);\n"
                    << "                    v0.y = Th + Tk + Tn + Tq + Tt + Tw;\n"
                    << "                    v0.x = T1 + T4 + T7 + Ta + Td + Tg;\n"
                    << "                    Tz = fma (-KP778434453, Ty, Tn);\n"
                    << "                    TJ = fma (-KP830830026, TI, TD);\n"
                    << "                    {\n"
                    << "                        real_t TK, T23, T28, TB, TA, T22, T27;\n"
                    << "                        T22 = fma (-KP778434453, T21, T7);\n"
                    << "                        T27 = fma (-KP830830026, T26, T1s);\n"
                    << "                        TA = fma (-KP876768831, Tz, Tk);\n"
                    << "                        TK = fma (-KP918985947, TJ, TC);\n"
                    << "                        T23 = fma (-KP876768831, T22, T4);\n"
                    << "                        T28 = fma (-KP918985947, T27, T1u);\n"
                    << "                        TB = fma (-KP959492973, TA, Th);\n"
                    << "                        {\n"
                    << "                            real_t T1U, T1T, T24, T1Y;\n"
                    << "                            T1T = fma (-KP778434453, T1S, Ta);\n"
                    << "                            T24 = fma (-KP959492973, T23, T1);\n"
                    << "                            T1Y = fma (-KP830830026, T1X, T1u);\n"
                    << "                            T1U = fma (-KP876768831, T1T, Td);\n"
                    << "                            v5.x = fma (KP989821441, T28, T24);\n"
                    << "                            v5.y = fma (KP989821441, TK, TB);\n"
                    << "                            v6.y = fma (-KP989821441, TK, TB);\n"
                    << "                            v6.x = fma (-KP989821441, T28, T24);\n"
                    << "                            T1Z = fma (KP918985947, T1Y, T1r);\n"
                    << "                            T1V = fma (-KP959492973, T1U, T1);\n"
                    << "                        }\n"
                    << "                        TN = fma (-KP778434453, TM, Tq);\n"
                    << "                        TS = fma (-KP830830026, TR, TC);\n"
                    << "                    }\n"
                    << "                    {\n"
                    << "                        real_t TY, T12, T1M, T15, T1a, T1Q;\n"
                    << "                        {\n"
                    << "                            real_t TT, TX, T11, TP, TO, TW, T1P, T1L, T1K;\n"
                    << "                            TW = fma (-KP778434453, TV, Tt);\n"
                    << "                            TO = fma (-KP876768831, TN, Tt);\n"
                    << "                            TT = fma (KP918985947, TS, TF);\n"
                    << "                            TX = fma (-KP876768831, TW, Tn);\n"
                    << "                            T11 = fma (-KP830830026, T10, TE);\n"
                    << "                            TP = fma (-KP959492973, TO, Th);\n"
                    << "                            T1K = fma (-KP778434453, T1J, Td);\n"
                    << "                            TY = fma (-KP959492973, TX, Th);\n"
                    << "                            T12 = fma (-KP918985947, T11, TG);\n"
                    << "                            v7.x = fma (KP989821441, T1Z, T1V);\n"
                    << "                            v7.y = fma (KP989821441, TT, TP);\n"
                    << "                            v4.y = fma (-KP989821441, TT, TP);\n"
                    << "                            v4.x = fma (-KP989821441, T1Z, T1V);\n"
                    << "                            T1L = fma (-KP876768831, T1K, T7);\n"
                    << "                            T1P = fma (-KP830830026, T1O, T1q);\n"
                    << "                            T1M = fma (-KP959492973, T1L, T1);\n"
                    << "                            T15 = fma (-KP778434453, T14, Tw);\n"
                    << "                            T1a = fma (KP830830026, T19, TG);\n"
                    << "                            T1Q = fma (-KP918985947, T1P, T1t);\n"
                    << "                        }\n"
                    << "                        {\n"
                    << "                            real_t T1b, T17, T1C, T1G, T1B, T16;\n"
                    << "                            T1B = fma (-KP778434453, T1A, Tg);\n"
                    << "                            T16 = fma (-KP876768831, T15, Tq);\n"
                    << "                            T1b = fma (-KP918985947, T1a, TD);\n"
                    << "                            v3.x = fma (KP989821441, T1Q, T1M);\n"
                    << "                            v3.y = fma (KP989821441, T12, TY);\n"
                    << "                            v8.y = fma (-KP989821441, T12, TY);\n"
                    << "                            v8.x = fma (-KP989821441, T1Q, T1M);\n"
                    << "                            T17 = fma (-KP959492973, T16, Th);\n"
                    << "                            T1C = fma (-KP876768831, T1B, Ta);\n"
                    << "                            T1G = fma (KP830830026, T1F, T1t);\n"
                    << "                            {\n"
                    << "                                real_t T1D, T1H, T1o, T1x, T1n, T1e;\n"
                    << "                                T1n = fma (-KP778434453, T1m, T4);\n"
                    << "                                T1D = fma (-KP959492973, T1C, T1);\n"
                    << "                                T1H = fma (-KP918985947, T1G, T1s);\n"
                    << "                                T1o = fma (-KP876768831, T1n, Tg);\n"
                    << "                                T1x = fma (KP830830026, T1w, T1r);\n"
                    << "                                T1e = fma (-KP778434453, T1d, Tk);\n"
                    << "                                v9.y = fma (KP989821441, T1b, T17);\n"
                    << "                                v9.x = fma (KP989821441, T1H, T1D);\n"
                    << "                                v2.x = fma (-KP989821441, T1H, T1D);\n"
                    << "                                v2.y = fma (-KP989821441, T1b, T17);\n"
                    << "                                T1p = fma (-KP959492973, T1o, T1);\n"
                    << "                                T1y = fma (KP918985947, T1x, T1q);\n"
                    << "                                T1f = fma (-KP876768831, T1e, Tw);\n"
                    << "                                T1j = fma (KP830830026, T1i, TF);\n"
                    << "                            }\n"
                    << "                        }\n"
                    << "                    }\n"
                    << "                }\n"
                    << "            }\n"
                    << "            T1g = fma (-KP959492973, T1f, Th);\n"
                    << "            T1k = fma (KP918985947, T1j, TE);\n"
                    << "            v10.x = fma (-KP989821441, T1y, T1p);\n"
                    << "            v10.y = fma (-KP989821441, T1k, T1g);\n"
                    << "            v1.y = fma (KP989821441, T1k, T1g);\n"
                    << "            v1.x = fma (KP989821441, T1y, T1p);\n"
                    << "        }\n"
                    << "    }\n"
                    << "    *u0 = v0;\n"
                    << "    *u1 = v1;\n"
                    << "    *u2 = v2;\n"
                    << "    *u3 = v3;\n"
                    << "    *u4 = v4;\n"
                    << "    *u5 = v5;\n"
                    << "    *u6 = v6;\n"
                    << "    *u7 = v7;\n"
                    << "    *u8 = v8;\n"
                    << "    *u9 = v9;\n"
                    << "    *u10 = v10;\n"
                    << "}\n";
            } else {
                src
                    << "/* Generated by: ./cl_gen_notw.native -n 11 -name dft11 -sign -1 -compact -fma -reorder-insns -reorder-loads -reorder-stores -schedule-for-pipeline -pipeline-latency 4 -standalone */\n"
                    << "/*\n"
                    << " * This function contains 140 FP additions, 110 FP multiplications,\n"
                    << " * (or, 30 additions, 0 multiplications, 110 fused multiply/add),\n"
                    << " * 96 stack variables, 10 constants, and 44 memory accesses\n"
                    << " */\n"
                    << "DEVICE void\n"
                    << "dft11 (real2_t * u0, real2_t * u1, real2_t * u2, real2_t * u3, real2_t * u4,\n"
                    << "       real2_t * u5, real2_t * u6, real2_t * u7, real2_t * u8, real2_t * u9,\n"
                    << "       real2_t * u10)\n"
                    << "{\n"
                    << "    real2_t v0 = *u0;\n"
                    << "    real2_t v1 = *u1;\n"
                    << "    real2_t v2 = *u2;\n"
                    << "    real2_t v3 = *u3;\n"
                    << "    real2_t v4 = *u4;\n"
                    << "    real2_t v5 = *u5;\n"
                    << "    real2_t v6 = *u6;\n"
                    << "    real2_t v7 = *u7;\n"
                    << "    real2_t v8 = *u8;\n"
                    << "    real2_t v9 = *u9;\n"
                    << "    real2_t v10 = *u10;\n"
                    << "    {\n"
                    << "        const real_t KP989821441 =\n"
                    << "            +0.989821441880932732376092037776718787376519372;\n"
                    << "        const real_t KP959492973 =\n"
                    << "            +0.959492973614497389890368057066327699062454848;\n"
                    << "        const real_t KP918985947 =\n"
                    << "            +0.918985947228994779780736114132655398124909697;\n"
                    << "        const real_t KP876768831 =\n"
                    << "            +0.876768831002589333891339807079336796764054852;\n"
                    << "        const real_t KP830830026 =\n"
                    << "            +0.830830026003772851058548298459246407048009821;\n"
                    << "        const real_t KP778434453 =\n"
                    << "            +0.778434453334651800608337670740821884709317477;\n"
                    << "        const real_t KP715370323 =\n"
                    << "            +0.715370323453429719112414662767260662417897278;\n"
                    << "        const real_t KP634356270 =\n"
                    << "            +0.634356270682424498893150776899916060542806975;\n"
                    << "        const real_t KP342584725 =\n"
                    << "            +0.342584725681637509502641509861112333758894680;\n"
                    << "        const real_t KP521108558 =\n"
                    << "            +0.521108558113202722944698153526659300680427422;\n"
                    << "        {\n"
                    << "            real_t T1, TA, T1p, T1y, T19, T1d, T1a, T1e;\n"
                    << "            {\n"
                    << "                real_t T1f, T1u, T4, T1q, Tg, T1t, T7, T1s, Ta, Td, T1r, TP,\n"
                    << "                    T1X, T26, Ti;\n"
                    << "                real_t TG, T1O, T1w, TY, T1F, T17, To, T1i, T1k, T1h, Tr, T1j,\n"
                    << "                    Tu, T1g, Tx;\n"
                    << "                real_t T21, TU, TL, TC, T1S, T1J, T1m, T12, T1z, T1b;\n"
                    << "                T1f = v0.y;\n"
                    << "                T1 = v0.x;\n"
                    << "                {\n"
                    << "                    real_t Tv, Tw, Ty, Tz, Tp, Tq, Tm, Tn, Ts, Tt, T1E, T16,\n"
                    << "                        Tb, Tc;\n"
                    << "                    {\n"
                    << "                        real_t T2, T3, Te, Tf;\n"
                    << "                        Tv = v1.y;\n"
                    << "                        T2 = v1.x;\n"
                    << "                        T3 = v10.x;\n"
                    << "                        Tw = v10.y;\n"
                    << "                        Ty = v5.y;\n"
                    << "                        Te = v5.x;\n"
                    << "                        Tf = v6.x;\n"
                    << "                        Tz = v6.y;\n"
                    << "                        {\n"
                    << "                            real_t T5, T6, T8, T9;\n"
                    << "                            Tp = v2.y;\n"
                    << "                            T5 = v2.x;\n"
                    << "                            T1u = T3 - T2;\n"
                    << "                            T4 = T2 + T3;\n"
                    << "                            T1q = Tf - Te;\n"
                    << "                            Tg = Te + Tf;\n"
                    << "                            T6 = v9.x;\n"
                    << "                            Tq = v9.y;\n"
                    << "                            Tm = v3.y;\n"
                    << "                            T8 = v3.x;\n"
                    << "                            T9 = v8.x;\n"
                    << "                            Tn = v8.y;\n"
                    << "                            Ts = v4.y;\n"
                    << "                            Tb = v4.x;\n"
                    << "                            T1t = T6 - T5;\n"
                    << "                            T7 = T5 + T6;\n"
                    << "                            T1s = T9 - T8;\n"
                    << "                            Ta = T8 + T9;\n"
                    << "                            Tc = v7.x;\n"
                    << "                            Tt = v7.y;\n"
                    << "                        }\n"
                    << "                    }\n"
                    << "                    {\n"
                    << "                        real_t T25, Th, T1W, TO;\n"
                    << "                        T25 = fma (KP521108558, T1q, T1u);\n"
                    << "                        T1W = fma (KP521108558, T1s, T1q);\n"
                    << "                        TO = fma (-KP342584725, T4, Ta);\n"
                    << "                        Th = fma (-KP342584725, Ta, T7);\n"
                    << "                        Td = Tb + Tc;\n"
                    << "                        T1r = Tc - Tb;\n"
                    << "                        TP = fma (-KP634356270, TO, Tg);\n"
                    << "                        T1X = fma (-KP715370323, T1W, T1t);\n"
                    << "                        T26 = fma (KP715370323, T25, T1r);\n"
                    << "                        {\n"
                    << "                            real_t TF, T1N, T1v, TX;\n"
                    << "                            TF = fma (-KP342584725, Td, T4);\n"
                    << "                            Ti = fma (-KP634356270, Th, Td);\n"
                    << "                            T1N = fma (-KP521108558, T1t, T1r);\n"
                    << "                            T1v = fma (-KP521108558, T1u, T1t);\n"
                    << "                            TG = fma (-KP634356270, TF, T7);\n"
                    << "                            TX = fma (-KP342584725, T7, Tg);\n"
                    << "                            T1O = fma (KP715370323, T1N, T1q);\n"
                    << "                            T1w = fma (-KP715370323, T1v, T1s);\n"
                    << "                            T1E = fma (KP521108558, T1r, T1s);\n"
                    << "                            TY = fma (-KP634356270, TX, T4);\n"
                    << "                            T16 = fma (-KP342584725, Tg, Td);\n"
                    << "                        }\n"
                    << "                    }\n"
                    << "                    T1F = fma (KP715370323, T1E, T1u);\n"
                    << "                    T17 = fma (-KP634356270, T16, Ta);\n"
                    << "                    To = Tm - Tn;\n"
                    << "                    T1i = Tm + Tn;\n"
                    << "                    T1k = Ty + Tz;\n"
                    << "                    TA = Ty - Tz;\n"
                    << "                    T1h = Tp + Tq;\n"
                    << "                    Tr = Tp - Tq;\n"
                    << "                    T1j = Ts + Tt;\n"
                    << "                    Tu = Ts - Tt;\n"
                    << "                    {\n"
                    << "                        real_t TB, T1R, T20, TK, TT, T1I, T1l;\n"
                    << "                        T20 = fma (-KP342584725, T1i, T1h);\n"
                    << "                        TK = fma (KP521108558, To, TA);\n"
                    << "                        TT = fma (-KP521108558, Tr, Tu);\n"
                    << "                        T1g = Tv + Tw;\n"
                    << "                        Tx = Tv - Tw;\n"
                    << "                        T21 = fma (-KP634356270, T20, T1j);\n"
                    << "                        TU = fma (KP715370323, TT, TA);\n"
                    << "                        TL = fma (-KP715370323, TK, Tr);\n"
                    << "                        TB = fma (KP521108558, TA, Tx);\n"
                    << "                        T1R = fma (-KP342584725, T1j, T1g);\n"
                    << "                        T1I = fma (-KP342584725, T1g, T1i);\n"
                    << "                        T1l = fma (-KP342584725, T1k, T1j);\n"
                    << "                        TC = fma (KP715370323, TB, Tu);\n"
                    << "                        T1S = fma (-KP634356270, T1R, T1h);\n"
                    << "                        T1J = fma (-KP634356270, T1I, T1k);\n"
                    << "                        T1m = fma (-KP634356270, T1l, T1i);\n"
                    << "                        T12 = fma (KP521108558, Tu, To);\n"
                    << "                        T1z = fma (-KP342584725, T1h, T1k);\n"
                    << "                        T1b = fma (-KP521108558, Tx, Tr);\n"
                    << "                    }\n"
                    << "                }\n"
                    << "                {\n"
                    << "                    real_t T13, T1A, T1c, T1Z, T1V, TH, TM, Tj, TD;\n"
                    << "                    T13 = fma (KP715370323, T12, Tx);\n"
                    << "                    T1A = fma (-KP634356270, T1z, T1g);\n"
                    << "                    T1c = fma (-KP715370323, T1b, To);\n"
                    << "                    v0.y = T1f + T1g + T1h + T1i + T1j + T1k;\n"
                    << "                    v0.x = T1 + T4 + T7 + Ta + Td + Tg;\n"
                    << "                    Tj = fma (-KP778434453, Ti, T4);\n"
                    << "                    TD = fma (KP830830026, TC, Tr);\n"
                    << "                    {\n"
                    << "                        real_t TE, T23, T28, Tl, Tk, T22, T27;\n"
                    << "                        T22 = fma (-KP778434453, T21, T1g);\n"
                    << "                        T27 = fma (KP830830026, T26, T1t);\n"
                    << "                        Tk = fma (-KP876768831, Tj, Tg);\n"
                    << "                        TE = fma (KP918985947, TD, To);\n"
                    << "                        T23 = fma (-KP876768831, T22, T1k);\n"
                    << "                        T28 = fma (KP918985947, T27, T1s);\n"
                    << "                        Tl = fma (-KP959492973, Tk, T1);\n"
                    << "                        {\n"
                    << "                            real_t T1U, T1T, T24, T1Y;\n"
                    << "                            T1T = fma (-KP778434453, T1S, T1k);\n"
                    << "                            T24 = fma (-KP959492973, T23, T1f);\n"
                    << "                            T1Y = fma (KP830830026, T1X, T1u);\n"
                    << "                            T1U = fma (-KP876768831, T1T, T1i);\n"
                    << "                            v10.y = fma (-KP989821441, T28, T24);\n"
                    << "                            v10.x = fma (-KP989821441, TE, Tl);\n"
                    << "                            v1.x = fma (KP989821441, TE, Tl);\n"
                    << "                            v1.y = fma (KP989821441, T28, T24);\n"
                    << "                            T1Z = fma (-KP918985947, T1Y, T1r);\n"
                    << "                            T1V = fma (-KP959492973, T1U, T1f);\n"
                    << "                        }\n"
                    << "                        TH = fma (-KP778434453, TG, Tg);\n"
                    << "                        TM = fma (KP830830026, TL, Tx);\n"
                    << "                    }\n"
                    << "                    {\n"
                    << "                        real_t TS, TW, T1M, TZ, T14, T1Q;\n"
                    << "                        {\n"
                    << "                            real_t TN, TR, TV, TJ, TI, TQ, T1P, T1L, T1K;\n"
                    << "                            TQ = fma (-KP778434453, TP, Td);\n"
                    << "                            TI = fma (-KP876768831, TH, Ta);\n"
                    << "                            TN = fma (-KP918985947, TM, Tu);\n"
                    << "                            TR = fma (-KP876768831, TQ, T7);\n"
                    << "                            TV = fma (-KP830830026, TU, To);\n"
                    << "                            TJ = fma (-KP959492973, TI, T1);\n"
                    << "                            T1K = fma (-KP778434453, T1J, T1j);\n"
                    << "                            TS = fma (-KP959492973, TR, T1);\n"
                    << "                            TW = fma (-KP918985947, TV, Tx);\n"
                    << "                            v9.y = fma (KP989821441, T1Z, T1V);\n"
                    << "                            v9.x = fma (KP989821441, TN, TJ);\n"
                    << "                            v2.x = fma (-KP989821441, TN, TJ);\n"
                    << "                            v2.y = fma (-KP989821441, T1Z, T1V);\n"
                    << "                            T1L = fma (-KP876768831, T1K, T1h);\n"
                    << "                            T1P = fma (-KP830830026, T1O, T1s);\n"
                    << "                            T1M = fma (-KP959492973, T1L, T1f);\n"
                    << "                            TZ = fma (-KP778434453, TY, Ta);\n"
                    << "                            T14 = fma (-KP830830026, T13, TA);\n"
                    << "                            T1Q = fma (-KP918985947, T1P, T1u);\n"
                    << "                        }\n"
                    << "                        {\n"
                    << "                            real_t T15, T11, T1C, T1G, T1B, T10;\n"
                    << "                            T1B = fma (-KP778434453, T1A, T1i);\n"
                    << "                            T10 = fma (-KP876768831, TZ, Td);\n"
                    << "                            T15 = fma (KP918985947, T14, Tr);\n"
                    << "                            v8.y = fma (-KP989821441, T1Q, T1M);\n"
                    << "                            v8.x = fma (-KP989821441, TW, TS);\n"
                    << "                            v3.x = fma (KP989821441, TW, TS);\n"
                    << "                            v3.y = fma (KP989821441, T1Q, T1M);\n"
                    << "                            T11 = fma (-KP959492973, T10, T1);\n"
                    << "                            T1C = fma (-KP876768831, T1B, T1j);\n"
                    << "                            T1G = fma (-KP830830026, T1F, T1q);\n"
                    << "                            {\n"
                    << "                                real_t T1D, T1H, T1o, T1x, T1n, T18;\n"
                    << "                                T1n = fma (-KP778434453, T1m, T1h);\n"
                    << "                                T1D = fma (-KP959492973, T1C, T1f);\n"
                    << "                                T1H = fma (KP918985947, T1G, T1t);\n"
                    << "                                T1o = fma (-KP876768831, T1n, T1g);\n"
                    << "                                T1x = fma (-KP830830026, T1w, T1r);\n"
                    << "                                T18 = fma (-KP778434453, T17, T7);\n"
                    << "                                v7.x = fma (KP989821441, T15, T11);\n"
                    << "                                v7.y = fma (KP989821441, T1H, T1D);\n"
                    << "                                v4.y = fma (-KP989821441, T1H, T1D);\n"
                    << "                                v4.x = fma (-KP989821441, T15, T11);\n"
                    << "                                T1p = fma (-KP959492973, T1o, T1f);\n"
                    << "                                T1y = fma (-KP918985947, T1x, T1q);\n"
                    << "                                T19 = fma (-KP876768831, T18, T4);\n"
                    << "                                T1d = fma (-KP830830026, T1c, Tu);\n"
                    << "                            }\n"
                    << "                        }\n"
                    << "                    }\n"
                    << "                }\n"
                    << "            }\n"
                    << "            T1a = fma (-KP959492973, T19, T1);\n"
                    << "            T1e = fma (-KP918985947, T1d, TA);\n"
                    << "            v5.y = fma (KP989821441, T1y, T1p);\n"
                    << "            v5.x = fma (KP989821441, T1e, T1a);\n"
                    << "            v6.x = fma (-KP989821441, T1e, T1a);\n"
                    << "            v6.y = fma (-KP989821441, T1y, T1p);\n"
                    << "        }\n"
                    << "    }\n"
                    << "    *u0 = v0;\n"
                    << "    *u1 = v1;\n"
                    << "    *u2 = v2;\n"
                    << "    *u3 = v3;\n"
                    << "    *u4 = v4;\n"
                    << "    *u5 = v5;\n"
                    << "    *u6 = v6;\n"
                    << "    *u7 = v7;\n"
                    << "    *u8 = v8;\n"
                    << "    *u9 = v9;\n"
                    << "    *u10 = v10;\n"
                    << "}\n";
            }
            break;
        case 13:
            if (invert) {
                src
                    << "/* Generated by: ./cl_gen_notw.native -n 13 -name dft13 -sign 1 -compact -fma -reorder-insns -reorder-loads -reorder-stores -schedule-for-pipeline -pipeline-latency 4 -standalone */\n"
                    << "/*\n"
                    << " * This function contains 176 FP additions, 114 FP multiplications,\n"
                    << " * (or, 62 additions, 0 multiplications, 114 fused multiply/add),\n"
                    << " * 114 stack variables, 25 constants, and 52 memory accesses\n"
                    << " */\n"
                    << "DEVICE void\n"
                    << "dft13 (real2_t * u0, real2_t * u1, real2_t * u2, real2_t * u3, real2_t * u4,\n"
                    << "       real2_t * u5, real2_t * u6, real2_t * u7, real2_t * u8, real2_t * u9,\n"
                    << "       real2_t * u10, real2_t * u11, real2_t * u12)\n"
                    << "{\n"
                    << "    real2_t v0 = *u0;\n"
                    << "    real2_t v1 = *u1;\n"
                    << "    real2_t v2 = *u2;\n"
                    << "    real2_t v3 = *u3;\n"
                    << "    real2_t v4 = *u4;\n"
                    << "    real2_t v5 = *u5;\n"
                    << "    real2_t v6 = *u6;\n"
                    << "    real2_t v7 = *u7;\n"
                    << "    real2_t v8 = *u8;\n"
                    << "    real2_t v9 = *u9;\n"
                    << "    real2_t v10 = *u10;\n"
                    << "    real2_t v11 = *u11;\n"
                    << "    real2_t v12 = *u12;\n"
                    << "    {\n"
                    << "        const real_t KP600477271 =\n"
                    << "            +0.600477271932665282925769253334763009352012849;\n"
                    << "        const real_t KP875502302 =\n"
                    << "            +0.875502302409147941146295545768755143177842006;\n"
                    << "        const real_t KP520028571 =\n"
                    << "            +0.520028571888864619117130500499232802493238139;\n"
                    << "        const real_t KP575140729 =\n"
                    << "            +0.575140729474003121368385547455453388461001608;\n"
                    << "        const real_t KP300462606 =\n"
                    << "            +0.300462606288665774426601772289207995520941381;\n"
                    << "        const real_t KP516520780 =\n"
                    << "            +0.516520780623489722840901288569017135705033622;\n"
                    << "        const real_t KP968287244 =\n"
                    << "            +0.968287244361984016049539446938120421179794516;\n"
                    << "        const real_t KP503537032 =\n"
                    << "            +0.503537032863766627246873853868466977093348562;\n"
                    << "        const real_t KP251768516 =\n"
                    << "            +0.251768516431883313623436926934233488546674281;\n"
                    << "        const real_t KP581704778 =\n"
                    << "            +0.581704778510515730456870384989698884939833902;\n"
                    << "        const real_t KP859542535 =\n"
                    << "            +0.859542535098774820163672132761689612766401925;\n"
                    << "        const real_t KP083333333 =\n"
                    << "            +0.083333333333333333333333333333333333333333333;\n"
                    << "        const real_t KP957805992 =\n"
                    << "            +0.957805992594665126462521754605754580515587217;\n"
                    << "        const real_t KP522026385 =\n"
                    << "            +0.522026385161275033714027226654165028300441940;\n"
                    << "        const real_t KP853480001 =\n"
                    << "            +0.853480001859823990758994934970528322872359049;\n"
                    << "        const real_t KP769338817 =\n"
                    << "            +0.769338817572980603471413688209101117038278899;\n"
                    << "        const real_t KP612264650 =\n"
                    << "            +0.612264650376756543746494474777125408779395514;\n"
                    << "        const real_t KP038632954 =\n"
                    << "            +0.038632954644348171955506895830342264440241080;\n"
                    << "        const real_t KP302775637 =\n"
                    << "            +0.302775637731994646559610633735247973125648287;\n"
                    << "        const real_t KP514918778 =\n"
                    << "            +0.514918778086315755491789696138117261566051239;\n"
                    << "        const real_t KP686558370 =\n"
                    << "            +0.686558370781754340655719594850823015421401653;\n"
                    << "        const real_t KP226109445 =\n"
                    << "            +0.226109445035782405468510155372505010481906348;\n"
                    << "        const real_t KP301479260 =\n"
                    << "            +0.301479260047709873958013540496673347309208464;\n"
                    << "        const real_t KP866025403 =\n"
                    << "            +0.866025403784438646763723170752936183471402627;\n"
                    << "        const real_t KP500000000 =\n"
                    << "            +0.500000000000000000000000000000000000000000000;\n"
                    << "        {\n"
                    << "            real_t T1C, T1A, T1t, T1B, T2B, T2H, T2I, T2G;\n"
                    << "            {\n"
                    << "                real_t T1P, T1, T2n, T2o, To, TH, T2h, T2k, TE, TB, TF, Tw,\n"
                    << "                    T2j, T2c, T1m;\n"
                    << "                real_t T1W, T1X, T1c, T19, T1j, T12, T1f, T21, T24, T27, T1U;\n"
                    << "                T1P = v0.y;\n"
                    << "                T1 = v0.x;\n"
                    << "                {\n"
                    << "                    real_t TK, TL, T16, TY, TZ, T13, TW, TV, TN, TO, TQ, TR,\n"
                    << "                        T2b, Tv, Ts;\n"
                    << "                    real_t T2a;\n"
                    << "                    {\n"
                    << "                        real_t T2d, Tf, Tq, Ty, Tb, Tr, T6, Tx, Ti, Tt, Tu,\n"
                    << "                            Tl;\n"
                    << "                        {\n"
                    << "                            real_t T7, T8, T9, Td, Te;\n"
                    << "                            TK = v8.y;\n"
                    << "                            Td = v8.x;\n"
                    << "                            Te = v5.x;\n"
                    << "                            TL = v5.y;\n"
                    << "                            T16 = v12.y;\n"
                    << "                            T7 = v12.x;\n"
                    << "                            T8 = v10.x;\n"
                    << "                            TY = v10.y;\n"
                    << "                            TZ = v4.y;\n"
                    << "                            T9 = v4.x;\n"
                    << "                            T2d = Td - Te;\n"
                    << "                            Tf = Td + Te;\n"
                    << "                            {\n"
                    << "                                real_t T2, Ta, T3, T4;\n"
                    << "                                T2 = v1.x;\n"
                    << "                                T13 = v1.y;\n"
                    << "                                Ta = T8 + T9;\n"
                    << "                                Tq = T8 - T9;\n"
                    << "                                TW = v3.y;\n"
                    << "                                T3 = v3.x;\n"
                    << "                                T4 = v9.x;\n"
                    << "                                TV = v9.y;\n"
                    << "                                {\n"
                    << "                                    real_t Tg, T5, Th, Tj, Tk;\n"
                    << "                                    TN = v11.y;\n"
                    << "                                    Tg = v11.x;\n"
                    << "                                    Ty = fma (KP500000000, Ta, -(T7));\n"
                    << "                                    Tb = T7 + Ta;\n"
                    << "                                    Tr = T4 - T3;\n"
                    << "                                    T5 = T3 + T4;\n"
                    << "                                    Th = v6.x;\n"
                    << "                                    TO = v6.y;\n"
                    << "                                    TQ = v7.y;\n"
                    << "                                    Tj = v7.x;\n"
                    << "                                    Tk = v2.x;\n"
                    << "                                    TR = v2.y;\n"
                    << "                                    T6 = T2 + T5;\n"
                    << "                                    Tx = fma (-KP500000000, T5, T2);\n"
                    << "                                    Ti = Tg + Th;\n"
                    << "                                    Tt = Tg - Th;\n"
                    << "                                    Tu = Tj - Tk;\n"
                    << "                                    Tl = Tj + Tk;\n"
                    << "                                }\n"
                    << "                            }\n"
                    << "                        }\n"
                    << "                        {\n"
                    << "                            real_t Tc, Tm, T2e, T2g;\n"
                    << "                            Tc = T6 + Tb;\n"
                    << "                            T2n = T6 - Tb;\n"
                    << "                            T2b = Ti - Tl;\n"
                    << "                            Tm = Ti + Tl;\n"
                    << "                            T2e = Tt + Tu;\n"
                    << "                            Tv = Tt - Tu;\n"
                    << "                            Ts = Tq - Tr;\n"
                    << "                            T2g = Tr + Tq;\n"
                    << "                            {\n"
                    << "                                real_t Tz, TA, Tn, T2f;\n"
                    << "                                Tz = Tx - Ty;\n"
                    << "                                T2a = Tx + Ty;\n"
                    << "                                TA = fma (-KP500000000, Tm, Tf);\n"
                    << "                                Tn = Tf + Tm;\n"
                    << "                                T2f = fma (-KP500000000, T2e, T2d);\n"
                    << "                                T2o = T2d + T2e;\n"
                    << "                                To = Tc + Tn;\n"
                    << "                                TH = Tc - Tn;\n"
                    << "                                T2h = fma (KP866025403, T2g, T2f);\n"
                    << "                                T2k = fma (-KP866025403, T2g, T2f);\n"
                    << "                                TE = Tz - TA;\n"
                    << "                                TB = Tz + TA;\n"
                    << "                            }\n"
                    << "                        }\n"
                    << "                    }\n"
                    << "                    {\n"
                    << "                        real_t T1R, TM, T10, T18, T1l, TX, T1k, T15, TP, T1a,\n"
                    << "                            T1b, TS, T17, T14;\n"
                    << "                        TF = Ts - Tv;\n"
                    << "                        Tw = Ts + Tv;\n"
                    << "                        T2j = fma (-KP866025403, T2b, T2a);\n"
                    << "                        T2c = fma (KP866025403, T2b, T2a);\n"
                    << "                        T1R = TK + TL;\n"
                    << "                        TM = TK - TL;\n"
                    << "                        T17 = TY + TZ;\n"
                    << "                        T10 = TY - TZ;\n"
                    << "                        T18 = fma (KP500000000, T17, -(T16));\n"
                    << "                        T1l = T16 + T17;\n"
                    << "                        TX = TV - TW;\n"
                    << "                        T14 = TW + TV;\n"
                    << "                        T1k = T13 + T14;\n"
                    << "                        T15 = fma (-KP500000000, T14, T13);\n"
                    << "                        TP = TN - TO;\n"
                    << "                        T1a = TN + TO;\n"
                    << "                        T1b = TQ + TR;\n"
                    << "                        TS = TQ - TR;\n"
                    << "                        {\n"
                    << "                            real_t T1Q, T11, TT, T1S;\n"
                    << "                            T1Q = T1k + T1l;\n"
                    << "                            T1m = T1k - T1l;\n"
                    << "                            T11 = TX + T10;\n"
                    << "                            T1W = T10 - TX;\n"
                    << "                            T1X = TP - TS;\n"
                    << "                            TT = TP + TS;\n"
                    << "                            T1S = T1a + T1b;\n"
                    << "                            T1c = T1a - T1b;\n"
                    << "                            {\n"
                    << "                                real_t T1Z, TU, T1T, T20;\n"
                    << "                                T19 = T15 + T18;\n"
                    << "                                T1Z = T15 - T18;\n"
                    << "                                T1j = TM + TT;\n"
                    << "                                TU = fma (-KP500000000, TT, TM);\n"
                    << "                                T1T = T1R + T1S;\n"
                    << "                                T20 = fma (-KP500000000, T1S, T1R);\n"
                    << "                                T12 = fma (KP866025403, T11, TU);\n"
                    << "                                T1f = fma (-KP866025403, T11, TU);\n"
                    << "                                T21 = T1Z + T20;\n"
                    << "                                T24 = T1Z - T20;\n"
                    << "                                T27 = T1Q - T1T;\n"
                    << "                                T1U = T1Q + T1T;\n"
                    << "                            }\n"
                    << "                        }\n"
                    << "                    }\n"
                    << "                }\n"
                    << "                {\n"
                    << "                    real_t T1g, T1d, T25, T1Y;\n"
                    << "                    T1g = fma (-KP866025403, T1c, T19);\n"
                    << "                    T1d = fma (KP866025403, T1c, T19);\n"
                    << "                    T25 = T1W - T1X;\n"
                    << "                    T1Y = T1W + T1X;\n"
                    << "                    v0.y = T1P + T1U;\n"
                    << "                    v0.x = T1 + To;\n"
                    << "                    {\n"
                    << "                        real_t T1O, T1o, TJ, T1N, T1L, T1F, T1K, T1M;\n"
                    << "                        {\n"
                    << "                            real_t TC, T1J, T1z, T1w, T1I, Tp, T1E, T1q, TI,\n"
                    << "                                T1s;\n"
                    << "                            {\n"
                    << "                                real_t TG, T1n, T1G, T1u, T1e, T1h, T1v, T1x,\n"
                    << "                                    T1y, T1H, T1i;\n"
                    << "                                TC = fma (KP301479260, TB, Tw);\n"
                    << "                                T1x = fma (-KP226109445, Tw, TB);\n"
                    << "                                T1y = fma (KP686558370, TE, TF);\n"
                    << "                                TG = fma (-KP514918778, TF, TE);\n"
                    << "                                T1n = fma (-KP302775637, T1m, T1j);\n"
                    << "                                T1G = fma (KP302775637, T1j, T1m);\n"
                    << "                                T1u = fma (-KP038632954, T12, T1d);\n"
                    << "                                T1e = fma (KP038632954, T1d, T12);\n"
                    << "                                T1h = fma (KP612264650, T1g, T1f);\n"
                    << "                                T1v = fma (-KP612264650, T1f, T1g);\n"
                    << "                                T1J = fma (KP769338817, T1y, T1x);\n"
                    << "                                T1z = fma (-KP769338817, T1y, T1x);\n"
                    << "                                T1H = fma (-KP853480001, T1v, T1u);\n"
                    << "                                T1w = fma (KP853480001, T1v, T1u);\n"
                    << "                                T1I = fma (-KP522026385, T1H, T1G);\n"
                    << "                                T1O = fma (KP957805992, T1G, T1H);\n"
                    << "                                Tp = fma (-KP083333333, To, T1);\n"
                    << "                                T1E = fma (KP853480001, T1h, T1e);\n"
                    << "                                T1i = fma (-KP853480001, T1h, T1e);\n"
                    << "                                T1q = fma (-KP859542535, TG, TH);\n"
                    << "                                TI = fma (KP581704778, TH, TG);\n"
                    << "                                T1o = fma (KP957805992, T1n, T1i);\n"
                    << "                                T1s = fma (-KP522026385, T1i, T1n);\n"
                    << "                            }\n"
                    << "                            {\n"
                    << "                                real_t T1D, T1p, TD, T1r;\n"
                    << "                                T1p = fma (-KP251768516, TC, Tp);\n"
                    << "                                TD = fma (KP503537032, TC, Tp);\n"
                    << "                                T1C = fma (KP968287244, T1z, T1w);\n"
                    << "                                T1A = fma (-KP968287244, T1z, T1w);\n"
                    << "                                TJ = fma (KP516520780, TI, TD);\n"
                    << "                                T1N = fma (-KP516520780, TI, TD);\n"
                    << "                                T1D = fma (-KP300462606, T1q, T1p);\n"
                    << "                                T1r = fma (KP300462606, T1q, T1p);\n"
                    << "                                T1t = fma (KP575140729, T1s, T1r);\n"
                    << "                                T1B = fma (-KP575140729, T1s, T1r);\n"
                    << "                                T1L = fma (KP520028571, T1E, T1D);\n"
                    << "                                T1F = fma (-KP520028571, T1E, T1D);\n"
                    << "                                T1K = fma (-KP875502302, T1J, T1I);\n"
                    << "                                T1M = fma (KP875502302, T1J, T1I);\n"
                    << "                            }\n"
                    << "                        }\n"
                    << "                        {\n"
                    << "                            real_t T22, T2F, T2N, T2K, T2w, T2A, T1V, T2C,\n"
                    << "                                T28, T2y, T2M, T2q;\n"
                    << "                            {\n"
                    << "                                real_t T26, T2v, T2p, T2i, T2s, T2t, T2l, T2D,\n"
                    << "                                    T2E, T2u, T2m;\n"
                    << "                                T2D = fma (-KP226109445, T1Y, T21);\n"
                    << "                                T22 = fma (KP301479260, T21, T1Y);\n"
                    << "                                T26 = fma (-KP514918778, T25, T24);\n"
                    << "                                T2E = fma (KP686558370, T24, T25);\n"
                    << "                                T2v = fma (-KP302775637, T2n, T2o);\n"
                    << "                                T2p = fma (KP302775637, T2o, T2n);\n"
                    << "                                T2i = fma (-KP038632954, T2h, T2c);\n"
                    << "                                T2s = fma (KP038632954, T2c, T2h);\n"
                    << "                                T2t = fma (KP612264650, T2j, T2k);\n"
                    << "                                T2l = fma (-KP612264650, T2k, T2j);\n"
                    << "                                T2F = fma (-KP769338817, T2E, T2D);\n"
                    << "                                T2N = fma (KP769338817, T2E, T2D);\n"
                    << "                                T2K = fma (KP853480001, T2t, T2s);\n"
                    << "                                T2u = fma (-KP853480001, T2t, T2s);\n"
                    << "                                T2w = fma (KP957805992, T2v, T2u);\n"
                    << "                                T2A = fma (-KP522026385, T2u, T2v);\n"
                    << "                                T1V = fma (-KP083333333, T1U, T1P);\n"
                    << "                                T2m = fma (-KP853480001, T2l, T2i);\n"
                    << "                                T2C = fma (KP853480001, T2l, T2i);\n"
                    << "                                T28 = fma (KP581704778, T27, T26);\n"
                    << "                                T2y = fma (-KP859542535, T26, T27);\n"
                    << "                                T2M = fma (-KP522026385, T2m, T2p);\n"
                    << "                                T2q = fma (KP957805992, T2p, T2m);\n"
                    << "                            }\n"
                    << "                            {\n"
                    << "                                real_t T2O, T2Q, T2z, T2P, T2L;\n"
                    << "                                {\n"
                    << "                                    real_t T23, T2x, T2r, T29, T2J;\n"
                    << "                                    T23 = fma (KP503537032, T22, T1V);\n"
                    << "                                    T2x = fma (-KP251768516, T22, T1V);\n"
                    << "                                    T2O = fma (-KP875502302, T2N, T2M);\n"
                    << "                                    T2Q = fma (KP875502302, T2N, T2M);\n"
                    << "                                    T2r = fma (KP516520780, T28, T23);\n"
                    << "                                    T29 = fma (-KP516520780, T28, T23);\n"
                    << "                                    T2z = fma (KP300462606, T2y, T2x);\n"
                    << "                                    T2J = fma (-KP300462606, T2y, T2x);\n"
                    << "                                    v12.x = fma (-KP600477271, T1o, TJ);\n"
                    << "                                    v12.y = fma (KP600477271, T2w, T2r);\n"
                    << "                                    v1.y = fma (-KP600477271, T2w, T2r);\n"
                    << "                                    v1.x = fma (KP600477271, T1o, TJ);\n"
                    << "                                    v8.x = fma (KP600477271, T1O, T1N);\n"
                    << "                                    v8.y = fma (-KP600477271, T2q, T29);\n"
                    << "                                    v5.y = fma (KP600477271, T2q, T29);\n"
                    << "                                    v5.x = fma (-KP600477271, T1O, T1N);\n"
                    << "                                    T2P = fma (KP520028571, T2K, T2J);\n"
                    << "                                    T2L = fma (-KP520028571, T2K, T2J);\n"
                    << "                                }\n"
                    << "                                T2B = fma (KP575140729, T2A, T2z);\n"
                    << "                                T2H = fma (-KP575140729, T2A, T2z);\n"
                    << "                                v2.x = fma (-KP575140729, T1K, T1F);\n"
                    << "                                v2.y = fma (KP575140729, T2Q, T2P);\n"
                    << "                                v7.y = fma (-KP575140729, T2Q, T2P);\n"
                    << "                                v7.x = fma (KP575140729, T1K, T1F);\n"
                    << "                                v6.x = fma (-KP575140729, T1M, T1L);\n"
                    << "                                v6.y = fma (KP575140729, T2O, T2L);\n"
                    << "                                v11.y = fma (-KP575140729, T2O, T2L);\n"
                    << "                                v11.x = fma (KP575140729, T1M, T1L);\n"
                    << "                                T2I = fma (KP968287244, T2F, T2C);\n"
                    << "                                T2G = fma (-KP968287244, T2F, T2C);\n"
                    << "                            }\n"
                    << "                        }\n"
                    << "                    }\n"
                    << "                }\n"
                    << "            }\n"
                    << "            v3.x = fma (-KP520028571, T1A, T1t);\n"
                    << "            v3.y = fma (KP520028571, T2I, T2H);\n"
                    << "            v9.y = fma (-KP520028571, T2I, T2H);\n"
                    << "            v9.x = fma (KP520028571, T1A, T1t);\n"
                    << "            v4.x = fma (-KP520028571, T1C, T1B);\n"
                    << "            v4.y = fma (KP520028571, T2G, T2B);\n"
                    << "            v10.y = fma (-KP520028571, T2G, T2B);\n"
                    << "            v10.x = fma (KP520028571, T1C, T1B);\n"
                    << "        }\n"
                    << "    }\n"
                    << "    *u0 = v0;\n"
                    << "    *u1 = v1;\n"
                    << "    *u2 = v2;\n"
                    << "    *u3 = v3;\n"
                    << "    *u4 = v4;\n"
                    << "    *u5 = v5;\n"
                    << "    *u6 = v6;\n"
                    << "    *u7 = v7;\n"
                    << "    *u8 = v8;\n"
                    << "    *u9 = v9;\n"
                    << "    *u10 = v10;\n"
                    << "    *u11 = v11;\n"
                    << "    *u12 = v12;\n"
                    << "}\n";
            } else {
                src
                    << "/* Generated by: ./cl_gen_notw.native -n 13 -name dft13 -sign -1 -compact -fma -reorder-insns -reorder-loads -reorder-stores -schedule-for-pipeline -pipeline-latency 4 -standalone */\n"
                    << "/*\n"
                    << " * This function contains 176 FP additions, 114 FP multiplications,\n"
                    << " * (or, 62 additions, 0 multiplications, 114 fused multiply/add),\n"
                    << " * 114 stack variables, 25 constants, and 52 memory accesses\n"
                    << " */\n"
                    << "DEVICE void\n"
                    << "dft13 (real2_t * u0, real2_t * u1, real2_t * u2, real2_t * u3, real2_t * u4,\n"
                    << "       real2_t * u5, real2_t * u6, real2_t * u7, real2_t * u8, real2_t * u9,\n"
                    << "       real2_t * u10, real2_t * u11, real2_t * u12)\n"
                    << "{\n"
                    << "    real2_t v0 = *u0;\n"
                    << "    real2_t v1 = *u1;\n"
                    << "    real2_t v2 = *u2;\n"
                    << "    real2_t v3 = *u3;\n"
                    << "    real2_t v4 = *u4;\n"
                    << "    real2_t v5 = *u5;\n"
                    << "    real2_t v6 = *u6;\n"
                    << "    real2_t v7 = *u7;\n"
                    << "    real2_t v8 = *u8;\n"
                    << "    real2_t v9 = *u9;\n"
                    << "    real2_t v10 = *u10;\n"
                    << "    real2_t v11 = *u11;\n"
                    << "    real2_t v12 = *u12;\n"
                    << "    {\n"
                    << "        const real_t KP600477271 =\n"
                    << "            +0.600477271932665282925769253334763009352012849;\n"
                    << "        const real_t KP875502302 =\n"
                    << "            +0.875502302409147941146295545768755143177842006;\n"
                    << "        const real_t KP520028571 =\n"
                    << "            +0.520028571888864619117130500499232802493238139;\n"
                    << "        const real_t KP575140729 =\n"
                    << "            +0.575140729474003121368385547455453388461001608;\n"
                    << "        const real_t KP300462606 =\n"
                    << "            +0.300462606288665774426601772289207995520941381;\n"
                    << "        const real_t KP516520780 =\n"
                    << "            +0.516520780623489722840901288569017135705033622;\n"
                    << "        const real_t KP968287244 =\n"
                    << "            +0.968287244361984016049539446938120421179794516;\n"
                    << "        const real_t KP503537032 =\n"
                    << "            +0.503537032863766627246873853868466977093348562;\n"
                    << "        const real_t KP251768516 =\n"
                    << "            +0.251768516431883313623436926934233488546674281;\n"
                    << "        const real_t KP581704778 =\n"
                    << "            +0.581704778510515730456870384989698884939833902;\n"
                    << "        const real_t KP859542535 =\n"
                    << "            +0.859542535098774820163672132761689612766401925;\n"
                    << "        const real_t KP083333333 =\n"
                    << "            +0.083333333333333333333333333333333333333333333;\n"
                    << "        const real_t KP957805992 =\n"
                    << "            +0.957805992594665126462521754605754580515587217;\n"
                    << "        const real_t KP522026385 =\n"
                    << "            +0.522026385161275033714027226654165028300441940;\n"
                    << "        const real_t KP853480001 =\n"
                    << "            +0.853480001859823990758994934970528322872359049;\n"
                    << "        const real_t KP769338817 =\n"
                    << "            +0.769338817572980603471413688209101117038278899;\n"
                    << "        const real_t KP612264650 =\n"
                    << "            +0.612264650376756543746494474777125408779395514;\n"
                    << "        const real_t KP038632954 =\n"
                    << "            +0.038632954644348171955506895830342264440241080;\n"
                    << "        const real_t KP302775637 =\n"
                    << "            +0.302775637731994646559610633735247973125648287;\n"
                    << "        const real_t KP514918778 =\n"
                    << "            +0.514918778086315755491789696138117261566051239;\n"
                    << "        const real_t KP686558370 =\n"
                    << "            +0.686558370781754340655719594850823015421401653;\n"
                    << "        const real_t KP226109445 =\n"
                    << "            +0.226109445035782405468510155372505010481906348;\n"
                    << "        const real_t KP301479260 =\n"
                    << "            +0.301479260047709873958013540496673347309208464;\n"
                    << "        const real_t KP866025403 =\n"
                    << "            +0.866025403784438646763723170752936183471402627;\n"
                    << "        const real_t KP500000000 =\n"
                    << "            +0.500000000000000000000000000000000000000000000;\n"
                    << "        {\n"
                    << "            real_t T1C, T1A, T1t, T1B, T2B, T2H, T2I, T2G;\n"
                    << "            {\n"
                    << "                real_t T1P, T1, T2n, T2o, To, TH, T2h, T2k, TE, TB, TF, Tw,\n"
                    << "                    T2j, T2c, T1m;\n"
                    << "                real_t T1W, T1X, T1c, T19, T1j, T12, T1f, T21, T24, T27, T1U;\n"
                    << "                T1P = v0.y;\n"
                    << "                T1 = v0.x;\n"
                    << "                {\n"
                    << "                    real_t TK, TL, T16, TY, TZ, T13, TW, TV, TN, TO, TQ, TR,\n"
                    << "                        T2b, Tv, Ts;\n"
                    << "                    real_t T2a;\n"
                    << "                    {\n"
                    << "                        real_t T2d, Tf, Tq, Ty, Tb, Tr, T6, Tx, Ti, Tt, Tu,\n"
                    << "                            Tl;\n"
                    << "                        {\n"
                    << "                            real_t T7, T8, T9, Td, Te;\n"
                    << "                            TK = v8.y;\n"
                    << "                            Td = v8.x;\n"
                    << "                            Te = v5.x;\n"
                    << "                            TL = v5.y;\n"
                    << "                            T16 = v12.y;\n"
                    << "                            T7 = v12.x;\n"
                    << "                            T8 = v10.x;\n"
                    << "                            TY = v10.y;\n"
                    << "                            TZ = v4.y;\n"
                    << "                            T9 = v4.x;\n"
                    << "                            T2d = Td - Te;\n"
                    << "                            Tf = Td + Te;\n"
                    << "                            {\n"
                    << "                                real_t T2, Ta, T3, T4;\n"
                    << "                                T2 = v1.x;\n"
                    << "                                T13 = v1.y;\n"
                    << "                                Ta = T8 + T9;\n"
                    << "                                Tq = T8 - T9;\n"
                    << "                                TW = v3.y;\n"
                    << "                                T3 = v3.x;\n"
                    << "                                T4 = v9.x;\n"
                    << "                                TV = v9.y;\n"
                    << "                                {\n"
                    << "                                    real_t Tg, T5, Th, Tj, Tk;\n"
                    << "                                    TN = v11.y;\n"
                    << "                                    Tg = v11.x;\n"
                    << "                                    Ty = fma (KP500000000, Ta, -(T7));\n"
                    << "                                    Tb = T7 + Ta;\n"
                    << "                                    Tr = T4 - T3;\n"
                    << "                                    T5 = T3 + T4;\n"
                    << "                                    Th = v6.x;\n"
                    << "                                    TO = v6.y;\n"
                    << "                                    TQ = v7.y;\n"
                    << "                                    Tj = v7.x;\n"
                    << "                                    Tk = v2.x;\n"
                    << "                                    TR = v2.y;\n"
                    << "                                    T6 = T2 + T5;\n"
                    << "                                    Tx = fma (-KP500000000, T5, T2);\n"
                    << "                                    Ti = Tg + Th;\n"
                    << "                                    Tt = Tg - Th;\n"
                    << "                                    Tu = Tj - Tk;\n"
                    << "                                    Tl = Tj + Tk;\n"
                    << "                                }\n"
                    << "                            }\n"
                    << "                        }\n"
                    << "                        {\n"
                    << "                            real_t Tc, Tm, T2e, T2g;\n"
                    << "                            Tc = T6 + Tb;\n"
                    << "                            T2n = T6 - Tb;\n"
                    << "                            T2b = Ti - Tl;\n"
                    << "                            Tm = Ti + Tl;\n"
                    << "                            T2e = Tt + Tu;\n"
                    << "                            Tv = Tt - Tu;\n"
                    << "                            Ts = Tq - Tr;\n"
                    << "                            T2g = Tr + Tq;\n"
                    << "                            {\n"
                    << "                                real_t Tz, TA, Tn, T2f;\n"
                    << "                                Tz = Tx - Ty;\n"
                    << "                                T2a = Tx + Ty;\n"
                    << "                                TA = fma (-KP500000000, Tm, Tf);\n"
                    << "                                Tn = Tf + Tm;\n"
                    << "                                T2f = fma (-KP500000000, T2e, T2d);\n"
                    << "                                T2o = T2d + T2e;\n"
                    << "                                To = Tc + Tn;\n"
                    << "                                TH = Tc - Tn;\n"
                    << "                                T2h = fma (KP866025403, T2g, T2f);\n"
                    << "                                T2k = fma (-KP866025403, T2g, T2f);\n"
                    << "                                TE = Tz - TA;\n"
                    << "                                TB = Tz + TA;\n"
                    << "                            }\n"
                    << "                        }\n"
                    << "                    }\n"
                    << "                    {\n"
                    << "                        real_t T1R, TM, T10, T18, T1l, TX, T1k, T15, TP, T1a,\n"
                    << "                            T1b, TS, T17, T14;\n"
                    << "                        TF = Ts - Tv;\n"
                    << "                        Tw = Ts + Tv;\n"
                    << "                        T2j = fma (-KP866025403, T2b, T2a);\n"
                    << "                        T2c = fma (KP866025403, T2b, T2a);\n"
                    << "                        T1R = TK + TL;\n"
                    << "                        TM = TK - TL;\n"
                    << "                        T17 = TY + TZ;\n"
                    << "                        T10 = TY - TZ;\n"
                    << "                        T18 = fma (KP500000000, T17, -(T16));\n"
                    << "                        T1l = T16 + T17;\n"
                    << "                        TX = TV - TW;\n"
                    << "                        T14 = TW + TV;\n"
                    << "                        T1k = T13 + T14;\n"
                    << "                        T15 = fma (-KP500000000, T14, T13);\n"
                    << "                        TP = TN - TO;\n"
                    << "                        T1a = TN + TO;\n"
                    << "                        T1b = TQ + TR;\n"
                    << "                        TS = TQ - TR;\n"
                    << "                        {\n"
                    << "                            real_t T1Q, T11, TT, T1S;\n"
                    << "                            T1Q = T1k + T1l;\n"
                    << "                            T1m = T1k - T1l;\n"
                    << "                            T11 = TX + T10;\n"
                    << "                            T1W = T10 - TX;\n"
                    << "                            T1X = TP - TS;\n"
                    << "                            TT = TP + TS;\n"
                    << "                            T1S = T1a + T1b;\n"
                    << "                            T1c = T1a - T1b;\n"
                    << "                            {\n"
                    << "                                real_t T1Z, TU, T1T, T20;\n"
                    << "                                T19 = T15 + T18;\n"
                    << "                                T1Z = T15 - T18;\n"
                    << "                                T1j = TM + TT;\n"
                    << "                                TU = fma (-KP500000000, TT, TM);\n"
                    << "                                T1T = T1R + T1S;\n"
                    << "                                T20 = fma (-KP500000000, T1S, T1R);\n"
                    << "                                T12 = fma (KP866025403, T11, TU);\n"
                    << "                                T1f = fma (-KP866025403, T11, TU);\n"
                    << "                                T21 = T1Z + T20;\n"
                    << "                                T24 = T1Z - T20;\n"
                    << "                                T27 = T1Q - T1T;\n"
                    << "                                T1U = T1Q + T1T;\n"
                    << "                            }\n"
                    << "                        }\n"
                    << "                    }\n"
                    << "                }\n"
                    << "                {\n"
                    << "                    real_t T1g, T1d, T25, T1Y;\n"
                    << "                    T1g = fma (-KP866025403, T1c, T19);\n"
                    << "                    T1d = fma (KP866025403, T1c, T19);\n"
                    << "                    T25 = T1W - T1X;\n"
                    << "                    T1Y = T1W + T1X;\n"
                    << "                    v0.y = T1P + T1U;\n"
                    << "                    v0.x = T1 + To;\n"
                    << "                    {\n"
                    << "                        real_t T1O, T1o, TJ, T1N, T1L, T1F, T1K, T1M;\n"
                    << "                        {\n"
                    << "                            real_t TC, T1J, T1z, T1w, T1I, Tp, T1E, T1q, TI,\n"
                    << "                                T1s;\n"
                    << "                            {\n"
                    << "                                real_t TG, T1n, T1G, T1u, T1e, T1h, T1v, T1x,\n"
                    << "                                    T1y, T1H, T1i;\n"
                    << "                                TC = fma (KP301479260, TB, Tw);\n"
                    << "                                T1x = fma (-KP226109445, Tw, TB);\n"
                    << "                                T1y = fma (KP686558370, TE, TF);\n"
                    << "                                TG = fma (-KP514918778, TF, TE);\n"
                    << "                                T1n = fma (-KP302775637, T1m, T1j);\n"
                    << "                                T1G = fma (KP302775637, T1j, T1m);\n"
                    << "                                T1u = fma (-KP038632954, T12, T1d);\n"
                    << "                                T1e = fma (KP038632954, T1d, T12);\n"
                    << "                                T1h = fma (KP612264650, T1g, T1f);\n"
                    << "                                T1v = fma (-KP612264650, T1f, T1g);\n"
                    << "                                T1J = fma (KP769338817, T1y, T1x);\n"
                    << "                                T1z = fma (-KP769338817, T1y, T1x);\n"
                    << "                                T1H = fma (-KP853480001, T1v, T1u);\n"
                    << "                                T1w = fma (KP853480001, T1v, T1u);\n"
                    << "                                T1I = fma (-KP522026385, T1H, T1G);\n"
                    << "                                T1O = fma (KP957805992, T1G, T1H);\n"
                    << "                                Tp = fma (-KP083333333, To, T1);\n"
                    << "                                T1E = fma (KP853480001, T1h, T1e);\n"
                    << "                                T1i = fma (-KP853480001, T1h, T1e);\n"
                    << "                                T1q = fma (-KP859542535, TG, TH);\n"
                    << "                                TI = fma (KP581704778, TH, TG);\n"
                    << "                                T1o = fma (KP957805992, T1n, T1i);\n"
                    << "                                T1s = fma (-KP522026385, T1i, T1n);\n"
                    << "                            }\n"
                    << "                            {\n"
                    << "                                real_t T1D, T1p, TD, T1r;\n"
                    << "                                T1p = fma (-KP251768516, TC, Tp);\n"
                    << "                                TD = fma (KP503537032, TC, Tp);\n"
                    << "                                T1C = fma (-KP968287244, T1z, T1w);\n"
                    << "                                T1A = fma (KP968287244, T1z, T1w);\n"
                    << "                                TJ = fma (KP516520780, TI, TD);\n"
                    << "                                T1N = fma (-KP516520780, TI, TD);\n"
                    << "                                T1D = fma (-KP300462606, T1q, T1p);\n"
                    << "                                T1r = fma (KP300462606, T1q, T1p);\n"
                    << "                                T1t = fma (-KP575140729, T1s, T1r);\n"
                    << "                                T1B = fma (KP575140729, T1s, T1r);\n"
                    << "                                T1L = fma (-KP520028571, T1E, T1D);\n"
                    << "                                T1F = fma (KP520028571, T1E, T1D);\n"
                    << "                                T1K = fma (KP875502302, T1J, T1I);\n"
                    << "                                T1M = fma (-KP875502302, T1J, T1I);\n"
                    << "                            }\n"
                    << "                        }\n"
                    << "                        {\n"
                    << "                            real_t T22, T2F, T2N, T2K, T2w, T2A, T1V, T2C,\n"
                    << "                                T28, T2y, T2M, T2q;\n"
                    << "                            {\n"
                    << "                                real_t T26, T2v, T2p, T2i, T2s, T2t, T2l, T2D,\n"
                    << "                                    T2E, T2u, T2m;\n"
                    << "                                T2D = fma (-KP226109445, T1Y, T21);\n"
                    << "                                T22 = fma (KP301479260, T21, T1Y);\n"
                    << "                                T26 = fma (-KP514918778, T25, T24);\n"
                    << "                                T2E = fma (KP686558370, T24, T25);\n"
                    << "                                T2v = fma (-KP302775637, T2n, T2o);\n"
                    << "                                T2p = fma (KP302775637, T2o, T2n);\n"
                    << "                                T2i = fma (-KP038632954, T2h, T2c);\n"
                    << "                                T2s = fma (KP038632954, T2c, T2h);\n"
                    << "                                T2t = fma (KP612264650, T2j, T2k);\n"
                    << "                                T2l = fma (-KP612264650, T2k, T2j);\n"
                    << "                                T2F = fma (-KP769338817, T2E, T2D);\n"
                    << "                                T2N = fma (KP769338817, T2E, T2D);\n"
                    << "                                T2K = fma (KP853480001, T2t, T2s);\n"
                    << "                                T2u = fma (-KP853480001, T2t, T2s);\n"
                    << "                                T2w = fma (KP957805992, T2v, T2u);\n"
                    << "                                T2A = fma (-KP522026385, T2u, T2v);\n"
                    << "                                T1V = fma (-KP083333333, T1U, T1P);\n"
                    << "                                T2m = fma (-KP853480001, T2l, T2i);\n"
                    << "                                T2C = fma (KP853480001, T2l, T2i);\n"
                    << "                                T28 = fma (KP581704778, T27, T26);\n"
                    << "                                T2y = fma (-KP859542535, T26, T27);\n"
                    << "                                T2M = fma (-KP522026385, T2m, T2p);\n"
                    << "                                T2q = fma (KP957805992, T2p, T2m);\n"
                    << "                            }\n"
                    << "                            {\n"
                    << "                                real_t T2O, T2Q, T2z, T2P, T2L;\n"
                    << "                                {\n"
                    << "                                    real_t T23, T2x, T2r, T29, T2J;\n"
                    << "                                    T23 = fma (KP503537032, T22, T1V);\n"
                    << "                                    T2x = fma (-KP251768516, T22, T1V);\n"
                    << "                                    T2O = fma (-KP875502302, T2N, T2M);\n"
                    << "                                    T2Q = fma (KP875502302, T2N, T2M);\n"
                    << "                                    T2r = fma (KP516520780, T28, T23);\n"
                    << "                                    T29 = fma (-KP516520780, T28, T23);\n"
                    << "                                    T2z = fma (KP300462606, T2y, T2x);\n"
                    << "                                    T2J = fma (-KP300462606, T2y, T2x);\n"
                    << "                                    v12.x = fma (KP600477271, T1o, TJ);\n"
                    << "                                    v12.y = fma (-KP600477271, T2w, T2r);\n"
                    << "                                    v1.y = fma (KP600477271, T2w, T2r);\n"
                    << "                                    v1.x = fma (-KP600477271, T1o, TJ);\n"
                    << "                                    v8.x = fma (-KP600477271, T1O, T1N);\n"
                    << "                                    v8.y = fma (KP600477271, T2q, T29);\n"
                    << "                                    v5.y = fma (-KP600477271, T2q, T29);\n"
                    << "                                    v5.x = fma (KP600477271, T1O, T1N);\n"
                    << "                                    T2P = fma (KP520028571, T2K, T2J);\n"
                    << "                                    T2L = fma (-KP520028571, T2K, T2J);\n"
                    << "                                }\n"
                    << "                                T2B = fma (KP575140729, T2A, T2z);\n"
                    << "                                T2H = fma (-KP575140729, T2A, T2z);\n"
                    << "                                v11.x = fma (-KP575140729, T1M, T1L);\n"
                    << "                                v11.y = fma (KP575140729, T2Q, T2P);\n"
                    << "                                v6.y = fma (-KP575140729, T2Q, T2P);\n"
                    << "                                v6.x = fma (KP575140729, T1M, T1L);\n"
                    << "                                v7.x = fma (-KP575140729, T1K, T1F);\n"
                    << "                                v7.y = fma (KP575140729, T2O, T2L);\n"
                    << "                                v2.y = fma (-KP575140729, T2O, T2L);\n"
                    << "                                v2.x = fma (KP575140729, T1K, T1F);\n"
                    << "                                T2I = fma (KP968287244, T2F, T2C);\n"
                    << "                                T2G = fma (-KP968287244, T2F, T2C);\n"
                    << "                            }\n"
                    << "                        }\n"
                    << "                    }\n"
                    << "                }\n"
                    << "            }\n"
                    << "            v10.x = fma (-KP520028571, T1C, T1B);\n"
                    << "            v10.y = fma (KP520028571, T2I, T2H);\n"
                    << "            v4.y = fma (-KP520028571, T2I, T2H);\n"
                    << "            v4.x = fma (KP520028571, T1C, T1B);\n"
                    << "            v9.x = fma (-KP520028571, T1A, T1t);\n"
                    << "            v9.y = fma (KP520028571, T2G, T2B);\n"
                    << "            v3.y = fma (-KP520028571, T2G, T2B);\n"
                    << "            v3.x = fma (KP520028571, T1A, T1t);\n"
                    << "        }\n"
                    << "    }\n"
                    << "    *u0 = v0;\n"
                    << "    *u1 = v1;\n"
                    << "    *u2 = v2;\n"
                    << "    *u3 = v3;\n"
                    << "    *u4 = v4;\n"
                    << "    *u5 = v5;\n"
                    << "    *u6 = v6;\n"
                    << "    *u7 = v7;\n"
                    << "    *u8 = v8;\n"
                    << "    *u9 = v9;\n"
                    << "    *u10 = v10;\n"
                    << "    *u11 = v11;\n"
                    << "    *u12 = v12;\n"
                    << "}\n";
            }
            break;
        case 16:
            if (invert) {
                src
                    << "/* Generated by: ./cl_gen_notw.native -n 16 -name dft16 -sign 1 -compact -fma -reorder-insns -reorder-loads -reorder-stores -schedule-for-pipeline -pipeline-latency 4 -standalone */\n"
                    << "/*\n"
                    << " * This function contains 144 FP additions, 40 FP multiplications,\n"
                    << " * (or, 104 additions, 0 multiplications, 40 fused multiply/add),\n"
                    << " * 97 stack variables, 3 constants, and 64 memory accesses\n"
                    << " */\n"
                    << "DEVICE void\n"
                    << "dft16 (real2_t * u0, real2_t * u1, real2_t * u2, real2_t * u3, real2_t * u4,\n"
                    << "       real2_t * u5, real2_t * u6, real2_t * u7, real2_t * u8, real2_t * u9,\n"
                    << "       real2_t * u10, real2_t * u11, real2_t * u12, real2_t * u13,\n"
                    << "       real2_t * u14, real2_t * u15)\n"
                    << "{\n"
                    << "    real2_t v0 = *u0;\n"
                    << "    real2_t v1 = *u1;\n"
                    << "    real2_t v2 = *u2;\n"
                    << "    real2_t v3 = *u3;\n"
                    << "    real2_t v4 = *u4;\n"
                    << "    real2_t v5 = *u5;\n"
                    << "    real2_t v6 = *u6;\n"
                    << "    real2_t v7 = *u7;\n"
                    << "    real2_t v8 = *u8;\n"
                    << "    real2_t v9 = *u9;\n"
                    << "    real2_t v10 = *u10;\n"
                    << "    real2_t v11 = *u11;\n"
                    << "    real2_t v12 = *u12;\n"
                    << "    real2_t v13 = *u13;\n"
                    << "    real2_t v14 = *u14;\n"
                    << "    real2_t v15 = *u15;\n"
                    << "    {\n"
                    << "        const real_t KP923879532 =\n"
                    << "            +0.923879532511286756128183189396788286822416626;\n"
                    << "        const real_t KP414213562 =\n"
                    << "            +0.414213562373095048801688724209698078569671875;\n"
                    << "        const real_t KP707106781 =\n"
                    << "            +0.707106781186547524400844362104849039284835938;\n"
                    << "        {\n"
                    << "            real_t T1z, T1P, T1N, T1M, T1L, T1J, T1K, T1G, T1O, T1Q;\n"
                    << "            {\n"
                    << "                real_t T1H, TN, T25, T7, T1l, T1x, TC, T1R, T1A, T1b, T1Z, Tt,\n"
                    << "                    T2h, T22, T1B;\n"
                    << "                real_t T1g, T1m, TQ, Te, T1S, T26, TJ, TT, T1n, T12, Tj, T11,\n"
                    << "                    Ti, T1V, TZ;\n"
                    << "                real_t Tk, T13;\n"
                    << "                {\n"
                    << "                    real_t T1d, Tq, T1c, Tp, T20, T1a, Tr, T1e;\n"
                    << "                    {\n"
                    << "                        real_t Tz, T4, T1j, T3, TM, Ty, T5, TA;\n"
                    << "                        {\n"
                    << "                            real_t Tw, T1, T2, Tx;\n"
                    << "                            Tw = v0.y;\n"
                    << "                            T1 = v0.x;\n"
                    << "                            T2 = v8.x;\n"
                    << "                            Tx = v8.y;\n"
                    << "                            Tz = v4.y;\n"
                    << "                            T4 = v4.x;\n"
                    << "                            T1j = T1 - T2;\n"
                    << "                            T3 = T1 + T2;\n"
                    << "                            TM = Tw - Tx;\n"
                    << "                            Ty = Tw + Tx;\n"
                    << "                            T5 = v12.x;\n"
                    << "                            TA = v12.y;\n"
                    << "                        }\n"
                    << "                        {\n"
                    << "                            real_t T18, Tn, To, T19;\n"
                    << "                            T18 = v15.y;\n"
                    << "                            Tn = v15.x;\n"
                    << "                            {\n"
                    << "                                real_t TL, T6, T1k, TB;\n"
                    << "                                TL = T4 - T5;\n"
                    << "                                T6 = T4 + T5;\n"
                    << "                                T1k = Tz - TA;\n"
                    << "                                TB = Tz + TA;\n"
                    << "                                T1H = TM - TL;\n"
                    << "                                TN = TL + TM;\n"
                    << "                                T25 = T3 - T6;\n"
                    << "                                T7 = T3 + T6;\n"
                    << "                                T1l = T1j - T1k;\n"
                    << "                                T1x = T1j + T1k;\n"
                    << "                                TC = Ty + TB;\n"
                    << "                                T1R = Ty - TB;\n"
                    << "                                To = v7.x;\n"
                    << "                                T19 = v7.y;\n"
                    << "                            }\n"
                    << "                            T1d = v3.y;\n"
                    << "                            Tq = v3.x;\n"
                    << "                            T1c = Tn - To;\n"
                    << "                            Tp = Tn + To;\n"
                    << "                            T20 = T18 + T19;\n"
                    << "                            T1a = T18 - T19;\n"
                    << "                            Tr = v11.x;\n"
                    << "                            T1e = v11.y;\n"
                    << "                        }\n"
                    << "                    }\n"
                    << "                    {\n"
                    << "                        real_t TG, Tb, TO, Ta, TP, TF, Tc, TH;\n"
                    << "                        {\n"
                    << "                            real_t TD, T8, T9, TE;\n"
                    << "                            TD = v2.y;\n"
                    << "                            T8 = v2.x;\n"
                    << "                            {\n"
                    << "                                real_t T17, Ts, T21, T1f;\n"
                    << "                                T17 = Tq - Tr;\n"
                    << "                                Ts = Tq + Tr;\n"
                    << "                                T21 = T1d + T1e;\n"
                    << "                                T1f = T1d - T1e;\n"
                    << "                                T1A = T1a - T17;\n"
                    << "                                T1b = T17 + T1a;\n"
                    << "                                T1Z = Tp - Ts;\n"
                    << "                                Tt = Tp + Ts;\n"
                    << "                                T2h = T20 + T21;\n"
                    << "                                T22 = T20 - T21;\n"
                    << "                                T1B = T1c + T1f;\n"
                    << "                                T1g = T1c - T1f;\n"
                    << "                                T9 = v10.x;\n"
                    << "                                TE = v10.y;\n"
                    << "                            }\n"
                    << "                            TG = v14.y;\n"
                    << "                            Tb = v14.x;\n"
                    << "                            TO = T8 - T9;\n"
                    << "                            Ta = T8 + T9;\n"
                    << "                            TP = TD - TE;\n"
                    << "                            TF = TD + TE;\n"
                    << "                            Tc = v6.x;\n"
                    << "                            TH = v6.y;\n"
                    << "                        }\n"
                    << "                        {\n"
                    << "                            real_t TS, Td, TR, TI;\n"
                    << "                            T1m = TO - TP;\n"
                    << "                            TQ = TO + TP;\n"
                    << "                            TS = Tb - Tc;\n"
                    << "                            Td = Tb + Tc;\n"
                    << "                            TR = TG - TH;\n"
                    << "                            TI = TG + TH;\n"
                    << "                            Te = Ta + Td;\n"
                    << "                            T1S = Ta - Td;\n"
                    << "                            T26 = TI - TF;\n"
                    << "                            TJ = TF + TI;\n"
                    << "                            TT = TR - TS;\n"
                    << "                            T1n = TS + TR;\n"
                    << "                        }\n"
                    << "                    }\n"
                    << "                    {\n"
                    << "                        real_t TX, Tg, Th, TY;\n"
                    << "                        TX = v1.y;\n"
                    << "                        Tg = v1.x;\n"
                    << "                        Th = v9.x;\n"
                    << "                        TY = v9.y;\n"
                    << "                        T12 = v5.y;\n"
                    << "                        Tj = v5.x;\n"
                    << "                        T11 = Tg - Th;\n"
                    << "                        Ti = Tg + Th;\n"
                    << "                        T1V = TX + TY;\n"
                    << "                        TZ = TX - TY;\n"
                    << "                        Tk = v13.x;\n"
                    << "                        T13 = v13.y;\n"
                    << "                    }\n"
                    << "                }\n"
                    << "                {\n"
                    << "                    real_t T2j, T1D, T10, T1U, T1X, T1E, T15, Tv, TK, T2k;\n"
                    << "                    {\n"
                    << "                        real_t Tf, Tu, T2f, T2i, T2g;\n"
                    << "                        T2j = T7 - Te;\n"
                    << "                        Tf = T7 + Te;\n"
                    << "                        {\n"
                    << "                            real_t TW, Tl, T1W, T14, Tm;\n"
                    << "                            TW = Tj - Tk;\n"
                    << "                            Tl = Tj + Tk;\n"
                    << "                            T1W = T12 + T13;\n"
                    << "                            T14 = T12 - T13;\n"
                    << "                            T1D = TZ - TW;\n"
                    << "                            T10 = TW + TZ;\n"
                    << "                            T1U = Ti - Tl;\n"
                    << "                            Tm = Ti + Tl;\n"
                    << "                            T2g = T1V + T1W;\n"
                    << "                            T1X = T1V - T1W;\n"
                    << "                            T1E = T11 + T14;\n"
                    << "                            T15 = T11 - T14;\n"
                    << "                            Tu = Tm + Tt;\n"
                    << "                            Tv = Tm - Tt;\n"
                    << "                        }\n"
                    << "                        TK = TC - TJ;\n"
                    << "                        T2f = TC + TJ;\n"
                    << "                        T2i = T2g + T2h;\n"
                    << "                        T2k = T2h - T2g;\n"
                    << "                        v0.x = Tf + Tu;\n"
                    << "                        v0.y = T2f + T2i;\n"
                    << "                        v8.y = T2f - T2i;\n"
                    << "                        v8.x = Tf - Tu;\n"
                    << "                    }\n"
                    << "                    {\n"
                    << "                        real_t T29, T1T, T27, T2d, T2a, T2b, T28, T24, T1Y,\n"
                    << "                            T23;\n"
                    << "                        T29 = T1S + T1R;\n"
                    << "                        T1T = T1R - T1S;\n"
                    << "                        v4.y = Tv + TK;\n"
                    << "                        v4.x = T2j + T2k;\n"
                    << "                        v12.x = T2j - T2k;\n"
                    << "                        v12.y = TK - Tv;\n"
                    << "                        T27 = T25 + T26;\n"
                    << "                        T2d = T25 - T26;\n"
                    << "                        T2a = T1U + T1X;\n"
                    << "                        T1Y = T1U - T1X;\n"
                    << "                        T23 = T1Z + T22;\n"
                    << "                        T2b = T22 - T1Z;\n"
                    << "                        T28 = T1Y + T23;\n"
                    << "                        T24 = T1Y - T23;\n"
                    << "                        {\n"
                    << "                            real_t T1y, TV, T1r, T1I, T1s, T1t, T1v, T1p, T1q,\n"
                    << "                                T1i;\n"
                    << "                            {\n"
                    << "                                real_t T1o, T2e, T2c, TU, T16, T1h;\n"
                    << "                                T1y = TT - TQ;\n"
                    << "                                TU = TQ + TT;\n"
                    << "                                T2e = T2b - T2a;\n"
                    << "                                T2c = T2a + T2b;\n"
                    << "                                TV = fma (KP707106781, TU, TN);\n"
                    << "                                T1r = fma (-KP707106781, TU, TN);\n"
                    << "                                v14.y = fma (-KP707106781, T24, T1T);\n"
                    << "                                v14.x = fma (-KP707106781, T2e, T2d);\n"
                    << "                                v6.x = fma (KP707106781, T2e, T2d);\n"
                    << "                                v6.y = fma (KP707106781, T24, T1T);\n"
                    << "                                v2.x = fma (KP707106781, T28, T27);\n"
                    << "                                v2.y = fma (KP707106781, T2c, T29);\n"
                    << "                                v10.y = fma (-KP707106781, T2c, T29);\n"
                    << "                                v10.x = fma (-KP707106781, T28, T27);\n"
                    << "                                T1o = T1m + T1n;\n"
                    << "                                T1I = T1m - T1n;\n"
                    << "                                T1s = fma (-KP414213562, T10, T15);\n"
                    << "                                T16 = fma (KP414213562, T15, T10);\n"
                    << "                                T1h = fma (-KP414213562, T1g, T1b);\n"
                    << "                                T1t = fma (KP414213562, T1b, T1g);\n"
                    << "                                T1v = fma (KP707106781, T1o, T1l);\n"
                    << "                                T1p = fma (-KP707106781, T1o, T1l);\n"
                    << "                                T1q = T1h - T16;\n"
                    << "                                T1i = T16 + T1h;\n"
                    << "                            }\n"
                    << "                            {\n"
                    << "                                real_t T1w, T1u, T1C, T1F;\n"
                    << "                                T1w = T1s + T1t;\n"
                    << "                                T1u = T1s - T1t;\n"
                    << "                                T1z = fma (KP707106781, T1y, T1x);\n"
                    << "                                T1P = fma (-KP707106781, T1y, T1x);\n"
                    << "                                v1.y = fma (KP923879532, T1i, TV);\n"
                    << "                                v1.x = fma (KP923879532, T1w, T1v);\n"
                    << "                                v9.x = fma (-KP923879532, T1w, T1v);\n"
                    << "                                v9.y = fma (-KP923879532, T1i, TV);\n"
                    << "                                v5.x = fma (KP923879532, T1q, T1p);\n"
                    << "                                v5.y = fma (KP923879532, T1u, T1r);\n"
                    << "                                v13.y = fma (-KP923879532, T1u, T1r);\n"
                    << "                                v13.x = fma (-KP923879532, T1q, T1p);\n"
                    << "                                T1N = fma (-KP414213562, T1A, T1B);\n"
                    << "                                T1C = fma (KP414213562, T1B, T1A);\n"
                    << "                                T1F = fma (-KP414213562, T1E, T1D);\n"
                    << "                                T1M = fma (KP414213562, T1D, T1E);\n"
                    << "                                T1L = fma (KP707106781, T1I, T1H);\n"
                    << "                                T1J = fma (-KP707106781, T1I, T1H);\n"
                    << "                                T1K = T1F + T1C;\n"
                    << "                                T1G = T1C - T1F;\n"
                    << "                            }\n"
                    << "                        }\n"
                    << "                    }\n"
                    << "                }\n"
                    << "            }\n"
                    << "            T1O = T1M - T1N;\n"
                    << "            T1Q = T1M + T1N;\n"
                    << "            v15.y = fma (KP923879532, T1K, T1J);\n"
                    << "            v15.x = fma (KP923879532, T1Q, T1P);\n"
                    << "            v7.x = fma (-KP923879532, T1Q, T1P);\n"
                    << "            v7.y = fma (-KP923879532, T1K, T1J);\n"
                    << "            v3.x = fma (KP923879532, T1G, T1z);\n"
                    << "            v3.y = fma (KP923879532, T1O, T1L);\n"
                    << "            v11.y = fma (-KP923879532, T1O, T1L);\n"
                    << "            v11.x = fma (-KP923879532, T1G, T1z);\n"
                    << "        }\n"
                    << "    }\n"
                    << "    *u0 = v0;\n"
                    << "    *u1 = v1;\n"
                    << "    *u2 = v2;\n"
                    << "    *u3 = v3;\n"
                    << "    *u4 = v4;\n"
                    << "    *u5 = v5;\n"
                    << "    *u6 = v6;\n"
                    << "    *u7 = v7;\n"
                    << "    *u8 = v8;\n"
                    << "    *u9 = v9;\n"
                    << "    *u10 = v10;\n"
                    << "    *u11 = v11;\n"
                    << "    *u12 = v12;\n"
                    << "    *u13 = v13;\n"
                    << "    *u14 = v14;\n"
                    << "    *u15 = v15;\n"
                    << "}\n";
            } else {
                src
                    << "/* Generated by: ./cl_gen_notw.native -n 16 -name dft16 -sign -1 -compact -fma -reorder-insns -reorder-loads -reorder-stores -schedule-for-pipeline -pipeline-latency 4 -standalone */\n"
                    << "/*\n"
                    << " * This function contains 144 FP additions, 40 FP multiplications,\n"
                    << " * (or, 104 additions, 0 multiplications, 40 fused multiply/add),\n"
                    << " * 97 stack variables, 3 constants, and 64 memory accesses\n"
                    << " */\n"
                    << "DEVICE void\n"
                    << "dft16 (real2_t * u0, real2_t * u1, real2_t * u2, real2_t * u3, real2_t * u4,\n"
                    << "       real2_t * u5, real2_t * u6, real2_t * u7, real2_t * u8, real2_t * u9,\n"
                    << "       real2_t * u10, real2_t * u11, real2_t * u12, real2_t * u13,\n"
                    << "       real2_t * u14, real2_t * u15)\n"
                    << "{\n"
                    << "    real2_t v0 = *u0;\n"
                    << "    real2_t v1 = *u1;\n"
                    << "    real2_t v2 = *u2;\n"
                    << "    real2_t v3 = *u3;\n"
                    << "    real2_t v4 = *u4;\n"
                    << "    real2_t v5 = *u5;\n"
                    << "    real2_t v6 = *u6;\n"
                    << "    real2_t v7 = *u7;\n"
                    << "    real2_t v8 = *u8;\n"
                    << "    real2_t v9 = *u9;\n"
                    << "    real2_t v10 = *u10;\n"
                    << "    real2_t v11 = *u11;\n"
                    << "    real2_t v12 = *u12;\n"
                    << "    real2_t v13 = *u13;\n"
                    << "    real2_t v14 = *u14;\n"
                    << "    real2_t v15 = *u15;\n"
                    << "    {\n"
                    << "        const real_t KP923879532 =\n"
                    << "            +0.923879532511286756128183189396788286822416626;\n"
                    << "        const real_t KP414213562 =\n"
                    << "            +0.414213562373095048801688724209698078569671875;\n"
                    << "        const real_t KP707106781 =\n"
                    << "            +0.707106781186547524400844362104849039284835938;\n"
                    << "        {\n"
                    << "            real_t T1z, T1L, T1M, T1N, T1P, T1J, T1K, T1G, T1O, T1Q;\n"
                    << "            {\n"
                    << "                real_t T1l, T1H, T1R, T7, T1x, TN, TC, T25, T1E, T1b, T1Z, Tt,\n"
                    << "                    T2h, T22, T1D;\n"
                    << "                real_t T1g, T1n, TQ, Te, T26, TT, T1m, TJ, T1S, T12, Tj, T11,\n"
                    << "                    Ti, T1V, TZ;\n"
                    << "                real_t Tk, T13;\n"
                    << "                {\n"
                    << "                    real_t T1d, Tq, T1c, Tp, T20, T1a, Tr, T1e;\n"
                    << "                    {\n"
                    << "                        real_t Tz, T4, TL, T3, T1k, Ty, T5, TA;\n"
                    << "                        {\n"
                    << "                            real_t Tw, T1, T2, Tx;\n"
                    << "                            Tw = v0.y;\n"
                    << "                            T1 = v0.x;\n"
                    << "                            T2 = v8.x;\n"
                    << "                            Tx = v8.y;\n"
                    << "                            Tz = v4.y;\n"
                    << "                            T4 = v4.x;\n"
                    << "                            TL = T1 - T2;\n"
                    << "                            T3 = T1 + T2;\n"
                    << "                            T1k = Tw - Tx;\n"
                    << "                            Ty = Tw + Tx;\n"
                    << "                            T5 = v12.x;\n"
                    << "                            TA = v12.y;\n"
                    << "                        }\n"
                    << "                        {\n"
                    << "                            real_t T18, Tn, To, T19;\n"
                    << "                            T18 = v15.y;\n"
                    << "                            Tn = v15.x;\n"
                    << "                            {\n"
                    << "                                real_t T1j, T6, TM, TB;\n"
                    << "                                T1j = T4 - T5;\n"
                    << "                                T6 = T4 + T5;\n"
                    << "                                TM = Tz - TA;\n"
                    << "                                TB = Tz + TA;\n"
                    << "                                T1l = T1j + T1k;\n"
                    << "                                T1H = T1k - T1j;\n"
                    << "                                T1R = T3 - T6;\n"
                    << "                                T7 = T3 + T6;\n"
                    << "                                T1x = TL + TM;\n"
                    << "                                TN = TL - TM;\n"
                    << "                                TC = Ty + TB;\n"
                    << "                                T25 = Ty - TB;\n"
                    << "                                To = v7.x;\n"
                    << "                                T19 = v7.y;\n"
                    << "                            }\n"
                    << "                            T1d = v3.y;\n"
                    << "                            Tq = v3.x;\n"
                    << "                            T1c = Tn - To;\n"
                    << "                            Tp = Tn + To;\n"
                    << "                            T20 = T18 + T19;\n"
                    << "                            T1a = T18 - T19;\n"
                    << "                            Tr = v11.x;\n"
                    << "                            T1e = v11.y;\n"
                    << "                        }\n"
                    << "                    }\n"
                    << "                    {\n"
                    << "                        real_t TG, Tb, TP, Ta, TO, TF, Tc, TH;\n"
                    << "                        {\n"
                    << "                            real_t TD, T8, T9, TE;\n"
                    << "                            TD = v2.y;\n"
                    << "                            T8 = v2.x;\n"
                    << "                            {\n"
                    << "                                real_t T17, Ts, T21, T1f;\n"
                    << "                                T17 = Tq - Tr;\n"
                    << "                                Ts = Tq + Tr;\n"
                    << "                                T21 = T1d + T1e;\n"
                    << "                                T1f = T1d - T1e;\n"
                    << "                                T1E = T1a - T17;\n"
                    << "                                T1b = T17 + T1a;\n"
                    << "                                T1Z = Tp - Ts;\n"
                    << "                                Tt = Tp + Ts;\n"
                    << "                                T2h = T20 + T21;\n"
                    << "                                T22 = T20 - T21;\n"
                    << "                                T1D = T1c + T1f;\n"
                    << "                                T1g = T1c - T1f;\n"
                    << "                                T9 = v10.x;\n"
                    << "                                TE = v10.y;\n"
                    << "                            }\n"
                    << "                            TG = v14.y;\n"
                    << "                            Tb = v14.x;\n"
                    << "                            TP = T8 - T9;\n"
                    << "                            Ta = T8 + T9;\n"
                    << "                            TO = TD - TE;\n"
                    << "                            TF = TD + TE;\n"
                    << "                            Tc = v6.x;\n"
                    << "                            TH = v6.y;\n"
                    << "                        }\n"
                    << "                        {\n"
                    << "                            real_t TR, Td, TS, TI;\n"
                    << "                            T1n = TP + TO;\n"
                    << "                            TQ = TO - TP;\n"
                    << "                            TR = Tb - Tc;\n"
                    << "                            Td = Tb + Tc;\n"
                    << "                            TS = TG - TH;\n"
                    << "                            TI = TG + TH;\n"
                    << "                            Te = Ta + Td;\n"
                    << "                            T26 = Td - Ta;\n"
                    << "                            TT = TR + TS;\n"
                    << "                            T1m = TR - TS;\n"
                    << "                            TJ = TF + TI;\n"
                    << "                            T1S = TF - TI;\n"
                    << "                        }\n"
                    << "                    }\n"
                    << "                    {\n"
                    << "                        real_t TX, Tg, Th, TY;\n"
                    << "                        TX = v1.y;\n"
                    << "                        Tg = v1.x;\n"
                    << "                        Th = v9.x;\n"
                    << "                        TY = v9.y;\n"
                    << "                        T12 = v5.y;\n"
                    << "                        Tj = v5.x;\n"
                    << "                        T11 = Tg - Th;\n"
                    << "                        Ti = Tg + Th;\n"
                    << "                        T1V = TX + TY;\n"
                    << "                        TZ = TX - TY;\n"
                    << "                        Tk = v13.x;\n"
                    << "                        T13 = v13.y;\n"
                    << "                    }\n"
                    << "                }\n"
                    << "                {\n"
                    << "                    real_t T2f, T1B, T10, T1U, T1X, T1A, T15, Tv, TK, T2i;\n"
                    << "                    {\n"
                    << "                        real_t Tf, Tu, T2j, T2k, T2g;\n"
                    << "                        T2f = T7 - Te;\n"
                    << "                        Tf = T7 + Te;\n"
                    << "                        {\n"
                    << "                            real_t TW, Tl, T1W, T14, Tm;\n"
                    << "                            TW = Tj - Tk;\n"
                    << "                            Tl = Tj + Tk;\n"
                    << "                            T1W = T12 + T13;\n"
                    << "                            T14 = T12 - T13;\n"
                    << "                            T1B = TZ - TW;\n"
                    << "                            T10 = TW + TZ;\n"
                    << "                            T1U = Ti - Tl;\n"
                    << "                            Tm = Ti + Tl;\n"
                    << "                            T2g = T1V + T1W;\n"
                    << "                            T1X = T1V - T1W;\n"
                    << "                            T1A = T11 + T14;\n"
                    << "                            T15 = T11 - T14;\n"
                    << "                            Tu = Tm + Tt;\n"
                    << "                            Tv = Tt - Tm;\n"
                    << "                        }\n"
                    << "                        TK = TC - TJ;\n"
                    << "                        T2j = TC + TJ;\n"
                    << "                        T2k = T2g + T2h;\n"
                    << "                        T2i = T2g - T2h;\n"
                    << "                        v0.x = Tf + Tu;\n"
                    << "                        v0.y = T2j + T2k;\n"
                    << "                        v8.y = T2j - T2k;\n"
                    << "                        v8.x = Tf - Tu;\n"
                    << "                    }\n"
                    << "                    {\n"
                    << "                        real_t T29, T1T, T27, T2d, T2a, T2b, T28, T24, T1Y,\n"
                    << "                            T23;\n"
                    << "                        T29 = T1R - T1S;\n"
                    << "                        T1T = T1R + T1S;\n"
                    << "                        v4.y = Tv + TK;\n"
                    << "                        v4.x = T2f + T2i;\n"
                    << "                        v12.x = T2f - T2i;\n"
                    << "                        v12.y = TK - Tv;\n"
                    << "                        T27 = T25 - T26;\n"
                    << "                        T2d = T26 + T25;\n"
                    << "                        T2a = T1X - T1U;\n"
                    << "                        T1Y = T1U + T1X;\n"
                    << "                        T23 = T1Z - T22;\n"
                    << "                        T2b = T1Z + T22;\n"
                    << "                        T28 = T23 - T1Y;\n"
                    << "                        T24 = T1Y + T23;\n"
                    << "                        {\n"
                    << "                            real_t T1I, TV, T1v, T1y, T1t, T1s, T1r, T1p, T1q,\n"
                    << "                                T1i;\n"
                    << "                            {\n"
                    << "                                real_t T1o, T2e, T2c, TU, T16, T1h;\n"
                    << "                                T1I = TQ + TT;\n"
                    << "                                TU = TQ - TT;\n"
                    << "                                T2e = T2a + T2b;\n"
                    << "                                T2c = T2a - T2b;\n"
                    << "                                TV = fma (KP707106781, TU, TN);\n"
                    << "                                T1v = fma (-KP707106781, TU, TN);\n"
                    << "                                v10.x = fma (-KP707106781, T24, T1T);\n"
                    << "                                v10.y = fma (-KP707106781, T2e, T2d);\n"
                    << "                                v2.y = fma (KP707106781, T2e, T2d);\n"
                    << "                                v2.x = fma (KP707106781, T24, T1T);\n"
                    << "                                v6.y = fma (KP707106781, T28, T27);\n"
                    << "                                v6.x = fma (KP707106781, T2c, T29);\n"
                    << "                                v14.x = fma (-KP707106781, T2c, T29);\n"
                    << "                                v14.y = fma (-KP707106781, T28, T27);\n"
                    << "                                T1o = T1m - T1n;\n"
                    << "                                T1y = T1n + T1m;\n"
                    << "                                T1t = fma (-KP414213562, T10, T15);\n"
                    << "                                T16 = fma (KP414213562, T15, T10);\n"
                    << "                                T1h = fma (-KP414213562, T1g, T1b);\n"
                    << "                                T1s = fma (KP414213562, T1b, T1g);\n"
                    << "                                T1r = fma (KP707106781, T1o, T1l);\n"
                    << "                                T1p = fma (-KP707106781, T1o, T1l);\n"
                    << "                                T1q = T16 + T1h;\n"
                    << "                                T1i = T16 - T1h;\n"
                    << "                            }\n"
                    << "                            {\n"
                    << "                                real_t T1w, T1u, T1C, T1F;\n"
                    << "                                T1w = T1t + T1s;\n"
                    << "                                T1u = T1s - T1t;\n"
                    << "                                T1z = fma (KP707106781, T1y, T1x);\n"
                    << "                                T1L = fma (-KP707106781, T1y, T1x);\n"
                    << "                                v15.y = fma (KP923879532, T1q, T1p);\n"
                    << "                                v15.x = fma (KP923879532, T1w, T1v);\n"
                    << "                                v7.x = fma (-KP923879532, T1w, T1v);\n"
                    << "                                v7.y = fma (-KP923879532, T1q, T1p);\n"
                    << "                                v3.x = fma (KP923879532, T1i, TV);\n"
                    << "                                v3.y = fma (KP923879532, T1u, T1r);\n"
                    << "                                v11.y = fma (-KP923879532, T1u, T1r);\n"
                    << "                                v11.x = fma (-KP923879532, T1i, TV);\n"
                    << "                                T1M = fma (-KP414213562, T1A, T1B);\n"
                    << "                                T1C = fma (KP414213562, T1B, T1A);\n"
                    << "                                T1F = fma (-KP414213562, T1E, T1D);\n"
                    << "                                T1N = fma (KP414213562, T1D, T1E);\n"
                    << "                                T1P = fma (KP707106781, T1I, T1H);\n"
                    << "                                T1J = fma (-KP707106781, T1I, T1H);\n"
                    << "                                T1K = T1F - T1C;\n"
                    << "                                T1G = T1C + T1F;\n"
                    << "                            }\n"
                    << "                        }\n"
                    << "                    }\n"
                    << "                }\n"
                    << "            }\n"
                    << "            T1O = T1M - T1N;\n"
                    << "            T1Q = T1M + T1N;\n"
                    << "            v1.x = fma (KP923879532, T1G, T1z);\n"
                    << "            v1.y = fma (KP923879532, T1Q, T1P);\n"
                    << "            v9.y = fma (-KP923879532, T1Q, T1P);\n"
                    << "            v9.x = fma (-KP923879532, T1G, T1z);\n"
                    << "            v5.y = fma (KP923879532, T1K, T1J);\n"
                    << "            v5.x = fma (KP923879532, T1O, T1L);\n"
                    << "            v13.x = fma (-KP923879532, T1O, T1L);\n"
                    << "            v13.y = fma (-KP923879532, T1K, T1J);\n"
                    << "        }\n"
                    << "    }\n"
                    << "    *u0 = v0;\n"
                    << "    *u1 = v1;\n"
                    << "    *u2 = v2;\n"
                    << "    *u3 = v3;\n"
                    << "    *u4 = v4;\n"
                    << "    *u5 = v5;\n"
                    << "    *u6 = v6;\n"
                    << "    *u7 = v7;\n"
                    << "    *u8 = v8;\n"
                    << "    *u9 = v9;\n"
                    << "    *u10 = v10;\n"
                    << "    *u11 = v11;\n"
                    << "    *u12 = v12;\n"
                    << "    *u13 = v13;\n"
                    << "    *u14 = v14;\n"
                    << "    *u15 = v15;\n"
                    << "}\n";
            }
            break;
        case 25:
            if (invert) {
                src
                    << "/* Generated by: ./cl_gen_notw.native -n 25 -name dft25 -sign 1 -compact -fma -reorder-insns -reorder-loads -reorder-stores -schedule-for-pipeline -pipeline-latency 4 -standalone */\n"
                    << "/*\n"
                    << " * This function contains 352 FP additions, 268 FP multiplications,\n"
                    << " * (or, 84 additions, 0 multiplications, 268 fused multiply/add),\n"
                    << " * 188 stack variables, 47 constants, and 100 memory accesses\n"
                    << " */\n"
                    << "DEVICE void\n"
                    << "dft25 (real2_t * u0, real2_t * u1, real2_t * u2, real2_t * u3, real2_t * u4,\n"
                    << "       real2_t * u5, real2_t * u6, real2_t * u7, real2_t * u8, real2_t * u9,\n"
                    << "       real2_t * u10, real2_t * u11, real2_t * u12, real2_t * u13,\n"
                    << "       real2_t * u14, real2_t * u15, real2_t * u16, real2_t * u17,\n"
                    << "       real2_t * u18, real2_t * u19, real2_t * u20, real2_t * u21,\n"
                    << "       real2_t * u22, real2_t * u23, real2_t * u24)\n"
                    << "{\n"
                    << "    real2_t v0 = *u0;\n"
                    << "    real2_t v1 = *u1;\n"
                    << "    real2_t v2 = *u2;\n"
                    << "    real2_t v3 = *u3;\n"
                    << "    real2_t v4 = *u4;\n"
                    << "    real2_t v5 = *u5;\n"
                    << "    real2_t v6 = *u6;\n"
                    << "    real2_t v7 = *u7;\n"
                    << "    real2_t v8 = *u8;\n"
                    << "    real2_t v9 = *u9;\n"
                    << "    real2_t v10 = *u10;\n"
                    << "    real2_t v11 = *u11;\n"
                    << "    real2_t v12 = *u12;\n"
                    << "    real2_t v13 = *u13;\n"
                    << "    real2_t v14 = *u14;\n"
                    << "    real2_t v15 = *u15;\n"
                    << "    real2_t v16 = *u16;\n"
                    << "    real2_t v17 = *u17;\n"
                    << "    real2_t v18 = *u18;\n"
                    << "    real2_t v19 = *u19;\n"
                    << "    real2_t v20 = *u20;\n"
                    << "    real2_t v21 = *u21;\n"
                    << "    real2_t v22 = *u22;\n"
                    << "    real2_t v23 = *u23;\n"
                    << "    real2_t v24 = *u24;\n"
                    << "    {\n"
                    << "        const real_t KP803003575 =\n"
                    << "            +0.803003575438660414833440593570376004635464850;\n"
                    << "        const real_t KP554608978 =\n"
                    << "            +0.554608978404018097464974850792216217022558774;\n"
                    << "        const real_t KP992114701 =\n"
                    << "            +0.992114701314477831049793042785778521453036709;\n"
                    << "        const real_t KP248028675 =\n"
                    << "            +0.248028675328619457762448260696444630363259177;\n"
                    << "        const real_t KP726211448 =\n"
                    << "            +0.726211448929902658173535992263577167607493062;\n"
                    << "        const real_t KP525970792 =\n"
                    << "            +0.525970792408939708442463226536226366643874659;\n"
                    << "        const real_t KP851038619 =\n"
                    << "            +0.851038619207379630836264138867114231259902550;\n"
                    << "        const real_t KP912575812 =\n"
                    << "            +0.912575812670962425556968549836277086778922727;\n"
                    << "        const real_t KP912018591 =\n"
                    << "            +0.912018591466481957908415381764119056233607330;\n"
                    << "        const real_t KP860541664 =\n"
                    << "            +0.860541664367944677098261680920518816412804187;\n"
                    << "        const real_t KP560319534 =\n"
                    << "            +0.560319534973832390111614715371676131169633784;\n"
                    << "        const real_t KP681693190 =\n"
                    << "            +0.681693190061530575150324149145440022633095390;\n"
                    << "        const real_t KP906616052 =\n"
                    << "            +0.906616052148196230441134447086066874408359177;\n"
                    << "        const real_t KP968479752 =\n"
                    << "            +0.968479752739016373193524836781420152702090879;\n"
                    << "        const real_t KP845997307 =\n"
                    << "            +0.845997307939530944175097360758058292389769300;\n"
                    << "        const real_t KP470564281 =\n"
                    << "            +0.470564281212251493087595091036643380879947982;\n"
                    << "        const real_t KP949179823 =\n"
                    << "            +0.949179823508441261575555465843363271711583843;\n"
                    << "        const real_t KP943557151 =\n"
                    << "            +0.943557151597354104399655195398983005179443399;\n"
                    << "        const real_t KP557913902 =\n"
                    << "            +0.557913902031834264187699648465567037992437152;\n"
                    << "        const real_t KP249506682 =\n"
                    << "            +0.249506682107067890488084201715862638334226305;\n"
                    << "        const real_t KP998026728 =\n"
                    << "            +0.998026728428271561952336806863450553336905220;\n"
                    << "        const real_t KP614372930 =\n"
                    << "            +0.614372930789563808870829930444362096004872855;\n"
                    << "        const real_t KP621716863 =\n"
                    << "            +0.621716863012209892444754556304102309693593202;\n"
                    << "        const real_t KP994076283 =\n"
                    << "            +0.994076283785401014123185814696322018529298887;\n"
                    << "        const real_t KP734762448 =\n"
                    << "            +0.734762448793050413546343770063151342619912334;\n"
                    << "        const real_t KP772036680 =\n"
                    << "            +0.772036680810363904029489473607579825330539880;\n"
                    << "        const real_t KP126329378 =\n"
                    << "            +0.126329378446108174786050455341811215027378105;\n"
                    << "        const real_t KP827271945 =\n"
                    << "            +0.827271945972475634034355757144307982555673741;\n"
                    << "        const real_t KP062914667 =\n"
                    << "            +0.062914667253649757225485955897349402364686947;\n"
                    << "        const real_t KP921177326 =\n"
                    << "            +0.921177326965143320250447435415066029359282231;\n"
                    << "        const real_t KP833417178 =\n"
                    << "            +0.833417178328688677408962550243238843138996060;\n"
                    << "        const real_t KP541454447 =\n"
                    << "            +0.541454447536312777046285590082819509052033189;\n"
                    << "        const real_t KP242145790 =\n"
                    << "            +0.242145790282157779872542093866183953459003101;\n"
                    << "        const real_t KP968583161 =\n"
                    << "            +0.968583161128631119490168375464735813836012403;\n"
                    << "        const real_t KP683113946 =\n"
                    << "            +0.683113946453479238701949862233725244439656928;\n"
                    << "        const real_t KP559154169 =\n"
                    << "            +0.559154169276087864842202529084232643714075927;\n"
                    << "        const real_t KP904730450 =\n"
                    << "            +0.904730450839922351881287709692877908104763647;\n"
                    << "        const real_t KP831864738 =\n"
                    << "            +0.831864738706457140726048799369896829771167132;\n"
                    << "        const real_t KP871714437 =\n"
                    << "            +0.871714437527667770979999223229522602943903653;\n"
                    << "        const real_t KP939062505 =\n"
                    << "            +0.939062505817492352556001843133229685779824606;\n"
                    << "        const real_t KP549754652 =\n"
                    << "            +0.549754652192770074288023275540779861653779767;\n"
                    << "        const real_t KP634619297 =\n"
                    << "            +0.634619297544148100711287640319130485732531031;\n"
                    << "        const real_t KP256756360 =\n"
                    << "            +0.256756360367726783319498520922669048172391148;\n"
                    << "        const real_t KP951056516 =\n"
                    << "            +0.951056516295153572116439333379382143405698634;\n"
                    << "        const real_t KP559016994 =\n"
                    << "            +0.559016994374947424102293417182819058860154590;\n"
                    << "        const real_t KP250000000 =\n"
                    << "            +0.250000000000000000000000000000000000000000000;\n"
                    << "        const real_t KP618033988 =\n"
                    << "            +0.618033988749894848204586834365638117720309180;\n"
                    << "        {\n"
                    << "            real_t T3Y, T3U, T3W, T42, T44, T3X, T3R, T3V, T3Z, T43;\n"
                    << "            {\n"
                    << "                real_t T4E, T3e, T9, T1R, T45, T1U, T46, T1D, T4D, T3b, Ts,\n"
                    << "                    T1K, T18, T1E, T4w;\n"
                    << "                real_t T5f, T3A, T22, T4s, T5c, T3D, T2o, T3C, T2h, T4p, T5b,\n"
                    << "                    T4z, T5e, T3z, T29;\n"
                    << "                real_t T2z, T2y, TL, T1L, T1r, T1F, T4k, T54, T3w, T2x, T4a,\n"
                    << "                    T58, T3t, T2T, T2D;\n"
                    << "                real_t T4g, T3s, T2M, T4d, T57, T1v, T1C, T3a;\n"
                    << "                {\n"
                    << "                    real_t T1, T2, T1w, T1x, T3, T5, T1z, T1A, T6;\n"
                    << "                    T1v = v0.y;\n"
                    << "                    T1 = v0.x;\n"
                    << "                    T2 = v5.x;\n"
                    << "                    T1w = v5.y;\n"
                    << "                    T1x = v20.y;\n"
                    << "                    T3 = v20.x;\n"
                    << "                    T5 = v10.x;\n"
                    << "                    T1z = v10.y;\n"
                    << "                    T1A = v15.y;\n"
                    << "                    T6 = v15.x;\n"
                    << "                    {\n"
                    << "                        real_t T1Q, T1S, T1y, T1P, T1B, T1T;\n"
                    << "                        {\n"
                    << "                            real_t T4, T3c, T7, T3d, T8;\n"
                    << "                            T4 = T2 + T3;\n"
                    << "                            T3c = T2 - T3;\n"
                    << "                            T7 = T5 + T6;\n"
                    << "                            T3d = T5 - T6;\n"
                    << "                            T4E = fma (-KP618033988, T3c, T3d);\n"
                    << "                            T3e = fma (KP618033988, T3d, T3c);\n"
                    << "                            T8 = T4 + T7;\n"
                    << "                            T1Q = T4 - T7;\n"
                    << "                            T1S = T1w - T1x;\n"
                    << "                            T1y = T1w + T1x;\n"
                    << "                            T1P = fma (-KP250000000, T8, T1);\n"
                    << "                            T9 = T1 + T8;\n"
                    << "                        }\n"
                    << "                        T1B = T1z + T1A;\n"
                    << "                        T1T = T1z - T1A;\n"
                    << "                        T1R = fma (KP559016994, T1Q, T1P);\n"
                    << "                        T45 = fma (-KP559016994, T1Q, T1P);\n"
                    << "                        T1U = fma (KP618033988, T1T, T1S);\n"
                    << "                        T46 = fma (-KP618033988, T1S, T1T);\n"
                    << "                        T1C = T1y + T1B;\n"
                    << "                        T3a = T1y - T1B;\n"
                    << "                    }\n"
                    << "                }\n"
                    << "                {\n"
                    << "                    real_t T24, T23, T28, T4y;\n"
                    << "                    {\n"
                    << "                        real_t TQ, Ta, TZ, Tj, T26, T27, Th, T1X, T1Z, T20,\n"
                    << "                            TX, T2e, T2f, Tq, T2j;\n"
                    << "                        real_t T2l, T12, T15, T2m, T39, TT, TW;\n"
                    << "                        TQ = v1.y;\n"
                    << "                        Ta = v1.x;\n"
                    << "                        T39 = fma (-KP250000000, T1C, T1v);\n"
                    << "                        T1D = T1v + T1C;\n"
                    << "                        TZ = v4.y;\n"
                    << "                        Tj = v4.x;\n"
                    << "                        T4D = fma (-KP559016994, T3a, T39);\n"
                    << "                        T3b = fma (KP559016994, T3a, T39);\n"
                    << "                        {\n"
                    << "                            real_t TR, Tb, Tc, TS, TU, Te, Tf, TV, Td, Tg;\n"
                    << "                            TR = v6.y;\n"
                    << "                            Tb = v6.x;\n"
                    << "                            Tc = v21.x;\n"
                    << "                            TS = v21.y;\n"
                    << "                            TU = v11.y;\n"
                    << "                            Te = v11.x;\n"
                    << "                            Tf = v16.x;\n"
                    << "                            TV = v16.y;\n"
                    << "                            T26 = Tb - Tc;\n"
                    << "                            Td = Tb + Tc;\n"
                    << "                            T27 = Tf - Te;\n"
                    << "                            Tg = Te + Tf;\n"
                    << "                            Th = Td + Tg;\n"
                    << "                            T1X = Td - Tg;\n"
                    << "                            T1Z = TS - TR;\n"
                    << "                            TT = TR + TS;\n"
                    << "                            TW = TU + TV;\n"
                    << "                            T20 = TV - TU;\n"
                    << "                        }\n"
                    << "                        {\n"
                    << "                            real_t T10, Tk, Tl, T11, T13, Tn, To, T14, Tm, Tp;\n"
                    << "                            T10 = v9.y;\n"
                    << "                            Tk = v9.x;\n"
                    << "                            T24 = TT - TW;\n"
                    << "                            TX = TT + TW;\n"
                    << "                            Tl = v24.x;\n"
                    << "                            T11 = v24.y;\n"
                    << "                            T13 = v14.y;\n"
                    << "                            Tn = v14.x;\n"
                    << "                            To = v19.x;\n"
                    << "                            T14 = v19.y;\n"
                    << "                            T2e = Tl - Tk;\n"
                    << "                            Tm = Tk + Tl;\n"
                    << "                            T2f = To - Tn;\n"
                    << "                            Tp = Tn + To;\n"
                    << "                            Tq = Tm + Tp;\n"
                    << "                            T2j = Tp - Tm;\n"
                    << "                            T2l = T11 - T10;\n"
                    << "                            T12 = T10 + T11;\n"
                    << "                            T15 = T13 + T14;\n"
                    << "                            T2m = T14 - T13;\n"
                    << "                        }\n"
                    << "                        {\n"
                    << "                            real_t T1W, T2c, T2i, T21, T4v, T2b;\n"
                    << "                            {\n"
                    << "                                real_t Ti, T16, Tr, TY, T17;\n"
                    << "                                T1W = fma (-KP250000000, Th, Ta);\n"
                    << "                                Ti = Ta + Th;\n"
                    << "                                T2c = T12 - T15;\n"
                    << "                                T16 = T12 + T15;\n"
                    << "                                Tr = Tj + Tq;\n"
                    << "                                T2i = fma (-KP250000000, Tq, Tj);\n"
                    << "                                T23 = fma (-KP250000000, TX, TQ);\n"
                    << "                                TY = TQ + TX;\n"
                    << "                                T21 = fma (KP618033988, T20, T1Z);\n"
                    << "                                T4v = fma (-KP618033988, T1Z, T20);\n"
                    << "                                T2b = fma (KP250000000, T16, -(TZ));\n"
                    << "                                T17 = TZ + T16;\n"
                    << "                                Ts = Ti + Tr;\n"
                    << "                                T1K = Ti - Tr;\n"
                    << "                                T18 = TY - T17;\n"
                    << "                                T1E = TY + T17;\n"
                    << "                            }\n"
                    << "                            {\n"
                    << "                                real_t T2n, T4r, T4u, T1Y;\n"
                    << "                                T2n = fma (KP618033988, T2m, T2l);\n"
                    << "                                T4r = fma (-KP618033988, T2l, T2m);\n"
                    << "                                T4u = fma (-KP559016994, T1X, T1W);\n"
                    << "                                T1Y = fma (KP559016994, T1X, T1W);\n"
                    << "                                {\n"
                    << "                                    real_t T4o, T2g, T2d, T4n, T4q, T2k;\n"
                    << "                                    T4o = fma (-KP618033988, T2e, T2f);\n"
                    << "                                    T2g = fma (KP618033988, T2f, T2e);\n"
                    << "                                    T4w = fma (-KP951056516, T4v, T4u);\n"
                    << "                                    T5f = fma (KP951056516, T4v, T4u);\n"
                    << "                                    T3A = fma (-KP951056516, T21, T1Y);\n"
                    << "                                    T22 = fma (KP951056516, T21, T1Y);\n"
                    << "                                    T4q = fma (KP559016994, T2j, T2i);\n"
                    << "                                    T2k = fma (-KP559016994, T2j, T2i);\n"
                    << "                                    T4s = fma (-KP951056516, T4r, T4q);\n"
                    << "                                    T5c = fma (KP951056516, T4r, T4q);\n"
                    << "                                    T3D = fma (-KP951056516, T2n, T2k);\n"
                    << "                                    T2o = fma (KP951056516, T2n, T2k);\n"
                    << "                                    T2d = fma (-KP559016994, T2c, T2b);\n"
                    << "                                    T4n = fma (KP559016994, T2c, T2b);\n"
                    << "                                    T28 = fma (-KP618033988, T27, T26);\n"
                    << "                                    T4y = fma (KP618033988, T26, T27);\n"
                    << "                                    T3C = fma (-KP951056516, T2g, T2d);\n"
                    << "                                    T2h = fma (KP951056516, T2g, T2d);\n"
                    << "                                    T4p = fma (-KP951056516, T4o, T4n);\n"
                    << "                                    T5b = fma (KP951056516, T4o, T4n);\n"
                    << "                                }\n"
                    << "                            }\n"
                    << "                        }\n"
                    << "                    }\n"
                    << "                    {\n"
                    << "                        real_t T19, Tt, T1i, TC, T2B, T2C, TA, T2s, T2u, T2v,\n"
                    << "                            T1g, T2Q, T2R, TJ, T2H;\n"
                    << "                        real_t T2J, T1l, T1o, T2K;\n"
                    << "                        {\n"
                    << "                            real_t T4x, T25, T1c, T1f;\n"
                    << "                            T19 = v2.y;\n"
                    << "                            Tt = v2.x;\n"
                    << "                            T1i = v3.y;\n"
                    << "                            TC = v3.x;\n"
                    << "                            T4x = fma (-KP559016994, T24, T23);\n"
                    << "                            T25 = fma (KP559016994, T24, T23);\n"
                    << "                            {\n"
                    << "                                real_t T1a, Tu, Tv, T1b, T1d, Tx, Ty, T1e, Tw,\n"
                    << "                                    Tz;\n"
                    << "                                T1a = v7.y;\n"
                    << "                                Tu = v7.x;\n"
                    << "                                T4z = fma (KP951056516, T4y, T4x);\n"
                    << "                                T5e = fma (-KP951056516, T4y, T4x);\n"
                    << "                                T3z = fma (-KP951056516, T28, T25);\n"
                    << "                                T29 = fma (KP951056516, T28, T25);\n"
                    << "                                Tv = v22.x;\n"
                    << "                                T1b = v22.y;\n"
                    << "                                T1d = v12.y;\n"
                    << "                                Tx = v12.x;\n"
                    << "                                Ty = v17.x;\n"
                    << "                                T1e = v17.y;\n"
                    << "                                T2B = Tv - Tu;\n"
                    << "                                Tw = Tu + Tv;\n"
                    << "                                T2C = Tx - Ty;\n"
                    << "                                Tz = Tx + Ty;\n"
                    << "                                TA = Tw + Tz;\n"
                    << "                                T2s = Tz - Tw;\n"
                    << "                                T2u = T1b - T1a;\n"
                    << "                                T1c = T1a + T1b;\n"
                    << "                                T1f = T1d + T1e;\n"
                    << "                                T2v = T1e - T1d;\n"
                    << "                            }\n"
                    << "                            {\n"
                    << "                                real_t T1j, TD, TE, T1k, T1m, TG, TH, T1n, TF,\n"
                    << "                                    TI;\n"
                    << "                                T1j = v8.y;\n"
                    << "                                TD = v8.x;\n"
                    << "                                T2z = T1f - T1c;\n"
                    << "                                T1g = T1c + T1f;\n"
                    << "                                TE = v23.x;\n"
                    << "                                T1k = v23.y;\n"
                    << "                                T1m = v13.y;\n"
                    << "                                TG = v13.x;\n"
                    << "                                TH = v18.x;\n"
                    << "                                T1n = v18.y;\n"
                    << "                                T2Q = TE - TD;\n"
                    << "                                TF = TD + TE;\n"
                    << "                                T2R = TH - TG;\n"
                    << "                                TI = TG + TH;\n"
                    << "                                TJ = TF + TI;\n"
                    << "                                T2H = TI - TF;\n"
                    << "                                T2J = T1j - T1k;\n"
                    << "                                T1l = T1j + T1k;\n"
                    << "                                T1o = T1m + T1n;\n"
                    << "                                T2K = T1m - T1n;\n"
                    << "                            }\n"
                    << "                        }\n"
                    << "                        {\n"
                    << "                            real_t T2r, T2O, T2G, T2w, T4j, T2N;\n"
                    << "                            {\n"
                    << "                                real_t TB, T1p, TK, T1h, T1q;\n"
                    << "                                T2r = fma (-KP250000000, TA, Tt);\n"
                    << "                                TB = Tt + TA;\n"
                    << "                                T2O = T1o - T1l;\n"
                    << "                                T1p = T1l + T1o;\n"
                    << "                                TK = TC + TJ;\n"
                    << "                                T2G = fma (-KP250000000, TJ, TC);\n"
                    << "                                T2y = fma (-KP250000000, T1g, T19);\n"
                    << "                                T1h = T19 + T1g;\n"
                    << "                                T2w = fma (KP618033988, T2v, T2u);\n"
                    << "                                T4j = fma (-KP618033988, T2u, T2v);\n"
                    << "                                T2N = fma (-KP250000000, T1p, T1i);\n"
                    << "                                T1q = T1i + T1p;\n"
                    << "                                TL = TB + TK;\n"
                    << "                                T1L = TB - TK;\n"
                    << "                                T1r = T1h - T1q;\n"
                    << "                                T1F = T1h + T1q;\n"
                    << "                            }\n"
                    << "                            {\n"
                    << "                                real_t T2S, T49, T4i, T2t;\n"
                    << "                                T2S = fma (KP618033988, T2R, T2Q);\n"
                    << "                                T49 = fma (-KP618033988, T2Q, T2R);\n"
                    << "                                T4i = fma (KP559016994, T2s, T2r);\n"
                    << "                                T2t = fma (-KP559016994, T2s, T2r);\n"
                    << "                                {\n"
                    << "                                    real_t T4c, T2L, T2I, T4b, T48, T2P;\n"
                    << "                                    T4c = fma (-KP618033988, T2J, T2K);\n"
                    << "                                    T2L = fma (KP618033988, T2K, T2J);\n"
                    << "                                    T4k = fma (-KP951056516, T4j, T4i);\n"
                    << "                                    T54 = fma (KP951056516, T4j, T4i);\n"
                    << "                                    T3w = fma (-KP951056516, T2w, T2t);\n"
                    << "                                    T2x = fma (KP951056516, T2w, T2t);\n"
                    << "                                    T48 = fma (KP559016994, T2O, T2N);\n"
                    << "                                    T2P = fma (-KP559016994, T2O, T2N);\n"
                    << "                                    T4a = fma (KP951056516, T49, T48);\n"
                    << "                                    T58 = fma (-KP951056516, T49, T48);\n"
                    << "                                    T3t = fma (KP951056516, T2S, T2P);\n"
                    << "                                    T2T = fma (-KP951056516, T2S, T2P);\n"
                    << "                                    T2I = fma (-KP559016994, T2H, T2G);\n"
                    << "                                    T4b = fma (KP559016994, T2H, T2G);\n"
                    << "                                    T2D = fma (-KP618033988, T2C, T2B);\n"
                    << "                                    T4g = fma (KP618033988, T2B, T2C);\n"
                    << "                                    T3s = fma (KP951056516, T2L, T2I);\n"
                    << "                                    T2M = fma (-KP951056516, T2L, T2I);\n"
                    << "                                    T4d = fma (KP951056516, T4c, T4b);\n"
                    << "                                    T57 = fma (-KP951056516, T4c, T4b);\n"
                    << "                                }\n"
                    << "                            }\n"
                    << "                        }\n"
                    << "                    }\n"
                    << "                }\n"
                    << "                {\n"
                    << "                    real_t T4h, T55, T3v, T3r, T3H, T3k, T36, T38, T3o, T3q,\n"
                    << "                        T3j, T2Z, T37;\n"
                    << "                    {\n"
                    << "                        real_t TM, T2E, T1s, T1u, TP, T1t;\n"
                    << "                        {\n"
                    << "                            real_t TO, TN, T4f, T2A;\n"
                    << "                            TM = Ts + TL;\n"
                    << "                            TO = Ts - TL;\n"
                    << "                            T4f = fma (KP559016994, T2z, T2y);\n"
                    << "                            T2A = fma (-KP559016994, T2z, T2y);\n"
                    << "                            TN = fma (-KP250000000, TM, T9);\n"
                    << "                            T4h = fma (-KP951056516, T4g, T4f);\n"
                    << "                            T55 = fma (KP951056516, T4g, T4f);\n"
                    << "                            T3v = fma (KP951056516, T2D, T2A);\n"
                    << "                            T2E = fma (-KP951056516, T2D, T2A);\n"
                    << "                            T1s = fma (KP618033988, T1r, T18);\n"
                    << "                            T1u = fma (-KP618033988, T18, T1r);\n"
                    << "                            TP = fma (KP559016994, TO, TN);\n"
                    << "                            T1t = fma (-KP559016994, TO, TN);\n"
                    << "                        }\n"
                    << "                        {\n"
                    << "                            real_t T1J, T1N, T1M, T1O, T1G, T1I, T1H;\n"
                    << "                            T1G = T1E + T1F;\n"
                    << "                            T1I = T1E - T1F;\n"
                    << "                            T1H = fma (-KP250000000, T1G, T1D);\n"
                    << "                            v0.y = T1D + T1G;\n"
                    << "                            v0.x = T9 + TM;\n"
                    << "                            T1J = fma (KP559016994, T1I, T1H);\n"
                    << "                            T1N = fma (-KP559016994, T1I, T1H);\n"
                    << "                            T1M = fma (KP618033988, T1L, T1K);\n"
                    << "                            T1O = fma (-KP618033988, T1K, T1L);\n"
                    << "                            {\n"
                    << "                                real_t T1V, T3f, T3m, T3n, T2W, T2Y, T32, T3g,\n"
                    << "                                    T3h, T35, T3i, T2X;\n"
                    << "                                T3r = fma (KP951056516, T1U, T1R);\n"
                    << "                                T1V = fma (-KP951056516, T1U, T1R);\n"
                    << "                                T3f = fma (KP951056516, T3e, T3b);\n"
                    << "                                T3H = fma (-KP951056516, T3e, T3b);\n"
                    << "                                v15.x = fma (-KP951056516, T1u, T1t);\n"
                    << "                                v15.y = fma (KP951056516, T1O, T1N);\n"
                    << "                                v10.y = fma (-KP951056516, T1O, T1N);\n"
                    << "                                v10.x = fma (KP951056516, T1u, T1t);\n"
                    << "                                v20.x = fma (KP951056516, T1s, TP);\n"
                    << "                                v20.y = fma (-KP951056516, T1M, T1J);\n"
                    << "                                v5.y = fma (KP951056516, T1M, T1J);\n"
                    << "                                v5.x = fma (-KP951056516, T1s, TP);\n"
                    << "                                {\n"
                    << "                                    real_t T30, T2a, T2p, T31, T33, T2F, T2U,\n"
                    << "                                        T34, T2q, T2V;\n"
                    << "                                    T30 = fma (KP256756360, T22, T29);\n"
                    << "                                    T2a = fma (-KP256756360, T29, T22);\n"
                    << "                                    T2p = fma (KP634619297, T2o, T2h);\n"
                    << "                                    T31 = fma (-KP634619297, T2h, T2o);\n"
                    << "                                    T33 = fma (KP549754652, T2x, T2E);\n"
                    << "                                    T2F = fma (-KP549754652, T2E, T2x);\n"
                    << "                                    T2U = fma (-KP939062505, T2T, T2M);\n"
                    << "                                    T34 = fma (KP939062505, T2M, T2T);\n"
                    << "                                    T3m = fma (-KP871714437, T2p, T2a);\n"
                    << "                                    T2q = fma (KP871714437, T2p, T2a);\n"
                    << "                                    T3n = fma (-KP831864738, T2U, T2F);\n"
                    << "                                    T2V = fma (KP831864738, T2U, T2F);\n"
                    << "                                    T2W = fma (KP904730450, T2V, T2q);\n"
                    << "                                    T2Y = fma (-KP904730450, T2V, T2q);\n"
                    << "                                    T32 = fma (-KP871714437, T31, T30);\n"
                    << "                                    T3g = fma (KP871714437, T31, T30);\n"
                    << "                                    T3h = fma (KP831864738, T34, T33);\n"
                    << "                                    T35 = fma (-KP831864738, T34, T33);\n"
                    << "                                }\n"
                    << "                                T3i = fma (KP904730450, T3h, T3g);\n"
                    << "                                T3k = fma (-KP904730450, T3h, T3g);\n"
                    << "                                T36 = fma (KP559154169, T35, T32);\n"
                    << "                                T38 = fma (-KP683113946, T32, T35);\n"
                    << "                                v1.y = fma (KP968583161, T3i, T3f);\n"
                    << "                                v1.x = fma (KP968583161, T2W, T1V);\n"
                    << "                                T2X = fma (-KP242145790, T2W, T1V);\n"
                    << "                                T3o = fma (KP559154169, T3n, T3m);\n"
                    << "                                T3q = fma (-KP683113946, T3m, T3n);\n"
                    << "                                T3j = fma (-KP242145790, T3i, T3f);\n"
                    << "                                T2Z = fma (KP541454447, T2Y, T2X);\n"
                    << "                                T37 = fma (-KP541454447, T2Y, T2X);\n"
                    << "                            }\n"
                    << "                        }\n"
                    << "                    }\n"
                    << "                    {\n"
                    << "                        real_t T4F, T47, T5A, T5s, T5u, T5E, T5G, T5z, T5l,\n"
                    << "                            T5t;\n"
                    << "                        {\n"
                    << "                            real_t T53, T5v, T5C, T5D, T5i, T5k, T5o, T5x,\n"
                    << "                                T5w, T5r, T3p, T3l, T5y, T5j;\n"
                    << "                            T4F = fma (-KP951056516, T4E, T4D);\n"
                    << "                            T53 = fma (KP951056516, T4E, T4D);\n"
                    << "                            T3p = fma (-KP541454447, T3k, T3j);\n"
                    << "                            T3l = fma (KP541454447, T3k, T3j);\n"
                    << "                            v11.x = fma (KP833417178, T38, T37);\n"
                    << "                            v11.y = fma (-KP833417178, T3q, T3p);\n"
                    << "                            v16.y = fma (KP833417178, T3q, T3p);\n"
                    << "                            v16.x = fma (-KP833417178, T38, T37);\n"
                    << "                            v21.x = fma (KP921177326, T36, T2Z);\n"
                    << "                            v21.y = fma (-KP921177326, T3o, T3l);\n"
                    << "                            v6.y = fma (KP921177326, T3o, T3l);\n"
                    << "                            v6.x = fma (-KP921177326, T36, T2Z);\n"
                    << "                            T5v = fma (-KP951056516, T46, T45);\n"
                    << "                            T47 = fma (KP951056516, T46, T45);\n"
                    << "                            {\n"
                    << "                                real_t T5p, T56, T59, T5q, T5m, T5d, T5g, T5n,\n"
                    << "                                    T5a, T5h;\n"
                    << "                                T5p = fma (-KP062914667, T54, T55);\n"
                    << "                                T56 = fma (KP062914667, T55, T54);\n"
                    << "                                T59 = fma (-KP827271945, T58, T57);\n"
                    << "                                T5q = fma (KP827271945, T57, T58);\n"
                    << "                                T5m = fma (-KP126329378, T5b, T5c);\n"
                    << "                                T5d = fma (KP126329378, T5c, T5b);\n"
                    << "                                T5g = fma (KP939062505, T5f, T5e);\n"
                    << "                                T5n = fma (-KP939062505, T5e, T5f);\n"
                    << "                                T5C = fma (-KP772036680, T59, T56);\n"
                    << "                                T5a = fma (KP772036680, T59, T56);\n"
                    << "                                T5D = fma (-KP734762448, T5g, T5d);\n"
                    << "                                T5h = fma (KP734762448, T5g, T5d);\n"
                    << "                                T5i = fma (KP994076283, T5h, T5a);\n"
                    << "                                T5k = fma (-KP994076283, T5h, T5a);\n"
                    << "                                T5o = fma (KP734762448, T5n, T5m);\n"
                    << "                                T5x = fma (-KP734762448, T5n, T5m);\n"
                    << "                                T5w = fma (KP772036680, T5q, T5p);\n"
                    << "                                T5r = fma (-KP772036680, T5q, T5p);\n"
                    << "                            }\n"
                    << "                            T5y = fma (KP994076283, T5x, T5w);\n"
                    << "                            T5A = fma (-KP994076283, T5x, T5w);\n"
                    << "                            T5s = fma (-KP621716863, T5r, T5o);\n"
                    << "                            T5u = fma (KP614372930, T5o, T5r);\n"
                    << "                            v3.x = fma (-KP998026728, T5y, T5v);\n"
                    << "                            v3.y = fma (KP998026728, T5i, T53);\n"
                    << "                            T5j = fma (-KP249506682, T5i, T53);\n"
                    << "                            T5E = fma (KP614372930, T5D, T5C);\n"
                    << "                            T5G = fma (-KP621716863, T5C, T5D);\n"
                    << "                            T5z = fma (KP249506682, T5y, T5v);\n"
                    << "                            T5l = fma (-KP557913902, T5k, T5j);\n"
                    << "                            T5t = fma (KP557913902, T5k, T5j);\n"
                    << "                        }\n"
                    << "                        {\n"
                    << "                            real_t T4W, T4S, T4U, T50, T52, T4V, T4P, T4T;\n"
                    << "                            {\n"
                    << "                                real_t T4R, T4Q, T4C, T4Z, T4I, T4L, T4Y, T5F,\n"
                    << "                                    T5B, T4O, T4M, T4N;\n"
                    << "                                T5F = fma (KP557913902, T5A, T5z);\n"
                    << "                                T5B = fma (-KP557913902, T5A, T5z);\n"
                    << "                                v8.y = fma (KP943557151, T5s, T5l);\n"
                    << "                                v8.x = fma (KP943557151, T5G, T5F);\n"
                    << "                                v23.x = fma (-KP943557151, T5G, T5F);\n"
                    << "                                v23.y = fma (-KP943557151, T5s, T5l);\n"
                    << "                                v18.y = fma (-KP949179823, T5u, T5t);\n"
                    << "                                v18.x = fma (-KP949179823, T5E, T5B);\n"
                    << "                                v13.x = fma (KP949179823, T5E, T5B);\n"
                    << "                                v13.y = fma (KP949179823, T5u, T5t);\n"
                    << "                                {\n"
                    << "                                    real_t T4G, T4e, T4l, T4H, T4J, T4t, T4A,\n"
                    << "                                        T4K, T4m, T4B;\n"
                    << "                                    T4G = fma (KP062914667, T4a, T4d);\n"
                    << "                                    T4e = fma (-KP062914667, T4d, T4a);\n"
                    << "                                    T4l = fma (-KP634619297, T4k, T4h);\n"
                    << "                                    T4H = fma (KP634619297, T4h, T4k);\n"
                    << "                                    T4J = fma (KP470564281, T4p, T4s);\n"
                    << "                                    T4t = fma (-KP470564281, T4s, T4p);\n"
                    << "                                    T4A = fma (-KP549754652, T4z, T4w);\n"
                    << "                                    T4K = fma (KP549754652, T4w, T4z);\n"
                    << "                                    T4R = fma (-KP845997307, T4l, T4e);\n"
                    << "                                    T4m = fma (KP845997307, T4l, T4e);\n"
                    << "                                    T4Q = fma (-KP968479752, T4A, T4t);\n"
                    << "                                    T4B = fma (KP968479752, T4A, T4t);\n"
                    << "                                    T4C = fma (-KP906616052, T4B, T4m);\n"
                    << "                                    T4W = fma (KP906616052, T4B, T4m);\n"
                    << "                                    T4Z = fma (-KP845997307, T4H, T4G);\n"
                    << "                                    T4I = fma (KP845997307, T4H, T4G);\n"
                    << "                                    T4L = fma (KP968479752, T4K, T4J);\n"
                    << "                                    T4Y = fma (-KP968479752, T4K, T4J);\n"
                    << "                                }\n"
                    << "                                T4O = fma (-KP906616052, T4L, T4I);\n"
                    << "                                T4M = fma (KP906616052, T4L, T4I);\n"
                    << "                                T4S = fma (-KP681693190, T4R, T4Q);\n"
                    << "                                T4U = fma (KP560319534, T4Q, T4R);\n"
                    << "                                T50 = fma (KP681693190, T4Z, T4Y);\n"
                    << "                                T52 = fma (-KP560319534, T4Y, T4Z);\n"
                    << "                                T4N = fma (-KP249506682, T4M, T4F);\n"
                    << "                                v2.x = fma (-KP998026728, T4C, T47);\n"
                    << "                                v2.y = fma (KP998026728, T4M, T4F);\n"
                    << "                                T4V = fma (KP249506682, T4C, T47);\n"
                    << "                                T4P = fma (-KP557913902, T4O, T4N);\n"
                    << "                                T4T = fma (KP557913902, T4O, T4N);\n"
                    << "                            }\n"
                    << "                            {\n"
                    << "                                real_t T3S, T3T, T3G, T41, T3K, T3N, T40, T51,\n"
                    << "                                    T4X, T3Q, T3O, T3P;\n"
                    << "                                T51 = fma (-KP557913902, T4W, T4V);\n"
                    << "                                T4X = fma (KP557913902, T4W, T4V);\n"
                    << "                                v12.y = fma (-KP949179823, T4U, T4T);\n"
                    << "                                v12.x = fma (-KP949179823, T52, T51);\n"
                    << "                                v17.x = fma (KP949179823, T52, T51);\n"
                    << "                                v17.y = fma (KP949179823, T4U, T4T);\n"
                    << "                                v7.y = fma (-KP860541664, T4S, T4P);\n"
                    << "                                v7.x = fma (KP860541664, T50, T4X);\n"
                    << "                                v22.x = fma (-KP860541664, T50, T4X);\n"
                    << "                                v22.y = fma (KP860541664, T4S, T4P);\n"
                    << "                                {\n"
                    << "                                    real_t T3I, T3u, T3x, T3J, T3L, T3B, T3E,\n"
                    << "                                        T3M, T3y, T3F;\n"
                    << "                                    T3I = fma (-KP126329378, T3s, T3t);\n"
                    << "                                    T3u = fma (KP126329378, T3t, T3s);\n"
                    << "                                    T3x = fma (KP470564281, T3w, T3v);\n"
                    << "                                    T3J = fma (-KP470564281, T3v, T3w);\n"
                    << "                                    T3L = fma (KP634619297, T3z, T3A);\n"
                    << "                                    T3B = fma (-KP634619297, T3A, T3z);\n"
                    << "                                    T3E = fma (KP827271945, T3D, T3C);\n"
                    << "                                    T3M = fma (-KP827271945, T3C, T3D);\n"
                    << "                                    T3S = fma (-KP912018591, T3x, T3u);\n"
                    << "                                    T3y = fma (KP912018591, T3x, T3u);\n"
                    << "                                    T3T = fma (-KP912575812, T3E, T3B);\n"
                    << "                                    T3F = fma (KP912575812, T3E, T3B);\n"
                    << "                                    T3G = fma (KP851038619, T3F, T3y);\n"
                    << "                                    T3Y = fma (-KP851038619, T3F, T3y);\n"
                    << "                                    T41 = fma (KP912018591, T3J, T3I);\n"
                    << "                                    T3K = fma (-KP912018591, T3J, T3I);\n"
                    << "                                    T3N = fma (-KP912575812, T3M, T3L);\n"
                    << "                                    T40 = fma (KP912575812, T3M, T3L);\n"
                    << "                                }\n"
                    << "                                T3Q = fma (KP851038619, T3N, T3K);\n"
                    << "                                T3O = fma (-KP851038619, T3N, T3K);\n"
                    << "                                T3U = fma (KP525970792, T3T, T3S);\n"
                    << "                                T3W = fma (-KP726211448, T3S, T3T);\n"
                    << "                                T42 = fma (KP726211448, T41, T40);\n"
                    << "                                T44 = fma (-KP525970792, T40, T41);\n"
                    << "                                T3P = fma (KP248028675, T3O, T3H);\n"
                    << "                                v4.x = fma (-KP992114701, T3G, T3r);\n"
                    << "                                v4.y = fma (-KP992114701, T3O, T3H);\n"
                    << "                                T3X = fma (KP248028675, T3G, T3r);\n"
                    << "                                T3R = fma (-KP554608978, T3Q, T3P);\n"
                    << "                                T3V = fma (KP554608978, T3Q, T3P);\n"
                    << "                            }\n"
                    << "                        }\n"
                    << "                    }\n"
                    << "                }\n"
                    << "            }\n"
                    << "            T3Z = fma (KP554608978, T3Y, T3X);\n"
                    << "            T43 = fma (-KP554608978, T3Y, T3X);\n"
                    << "            v19.y = fma (KP943557151, T3U, T3R);\n"
                    << "            v19.x = fma (-KP943557151, T44, T43);\n"
                    << "            v14.x = fma (KP943557151, T44, T43);\n"
                    << "            v14.y = fma (-KP943557151, T3U, T3R);\n"
                    << "            v24.y = fma (KP803003575, T3W, T3V);\n"
                    << "            v24.x = fma (KP803003575, T42, T3Z);\n"
                    << "            v9.x = fma (-KP803003575, T42, T3Z);\n"
                    << "            v9.y = fma (-KP803003575, T3W, T3V);\n"
                    << "        }\n"
                    << "    }\n"
                    << "    *u0 = v0;\n"
                    << "    *u1 = v1;\n"
                    << "    *u2 = v2;\n"
                    << "    *u3 = v3;\n"
                    << "    *u4 = v4;\n"
                    << "    *u5 = v5;\n"
                    << "    *u6 = v6;\n"
                    << "    *u7 = v7;\n"
                    << "    *u8 = v8;\n"
                    << "    *u9 = v9;\n"
                    << "    *u10 = v10;\n"
                    << "    *u11 = v11;\n"
                    << "    *u12 = v12;\n"
                    << "    *u13 = v13;\n"
                    << "    *u14 = v14;\n"
                    << "    *u15 = v15;\n"
                    << "    *u16 = v16;\n"
                    << "    *u17 = v17;\n"
                    << "    *u18 = v18;\n"
                    << "    *u19 = v19;\n"
                    << "    *u20 = v20;\n"
                    << "    *u21 = v21;\n"
                    << "    *u22 = v22;\n"
                    << "    *u23 = v23;\n"
                    << "    *u24 = v24;\n"
                    << "}\n";
            } else {
                src
                    << "/* Generated by: ./cl_gen_notw.native -n 25 -name dft25 -sign -1 -compact -fma -reorder-insns -reorder-loads -reorder-stores -schedule-for-pipeline -pipeline-latency 4 -standalone */\n"
                    << "/*\n"
                    << " * This function contains 352 FP additions, 268 FP multiplications,\n"
                    << " * (or, 84 additions, 0 multiplications, 268 fused multiply/add),\n"
                    << " * 188 stack variables, 47 constants, and 100 memory accesses\n"
                    << " */\n"
                    << "DEVICE void\n"
                    << "dft25 (real2_t * u0, real2_t * u1, real2_t * u2, real2_t * u3, real2_t * u4,\n"
                    << "       real2_t * u5, real2_t * u6, real2_t * u7, real2_t * u8, real2_t * u9,\n"
                    << "       real2_t * u10, real2_t * u11, real2_t * u12, real2_t * u13,\n"
                    << "       real2_t * u14, real2_t * u15, real2_t * u16, real2_t * u17,\n"
                    << "       real2_t * u18, real2_t * u19, real2_t * u20, real2_t * u21,\n"
                    << "       real2_t * u22, real2_t * u23, real2_t * u24)\n"
                    << "{\n"
                    << "    real2_t v0 = *u0;\n"
                    << "    real2_t v1 = *u1;\n"
                    << "    real2_t v2 = *u2;\n"
                    << "    real2_t v3 = *u3;\n"
                    << "    real2_t v4 = *u4;\n"
                    << "    real2_t v5 = *u5;\n"
                    << "    real2_t v6 = *u6;\n"
                    << "    real2_t v7 = *u7;\n"
                    << "    real2_t v8 = *u8;\n"
                    << "    real2_t v9 = *u9;\n"
                    << "    real2_t v10 = *u10;\n"
                    << "    real2_t v11 = *u11;\n"
                    << "    real2_t v12 = *u12;\n"
                    << "    real2_t v13 = *u13;\n"
                    << "    real2_t v14 = *u14;\n"
                    << "    real2_t v15 = *u15;\n"
                    << "    real2_t v16 = *u16;\n"
                    << "    real2_t v17 = *u17;\n"
                    << "    real2_t v18 = *u18;\n"
                    << "    real2_t v19 = *u19;\n"
                    << "    real2_t v20 = *u20;\n"
                    << "    real2_t v21 = *u21;\n"
                    << "    real2_t v22 = *u22;\n"
                    << "    real2_t v23 = *u23;\n"
                    << "    real2_t v24 = *u24;\n"
                    << "    {\n"
                    << "        const real_t KP803003575 =\n"
                    << "            +0.803003575438660414833440593570376004635464850;\n"
                    << "        const real_t KP554608978 =\n"
                    << "            +0.554608978404018097464974850792216217022558774;\n"
                    << "        const real_t KP992114701 =\n"
                    << "            +0.992114701314477831049793042785778521453036709;\n"
                    << "        const real_t KP248028675 =\n"
                    << "            +0.248028675328619457762448260696444630363259177;\n"
                    << "        const real_t KP726211448 =\n"
                    << "            +0.726211448929902658173535992263577167607493062;\n"
                    << "        const real_t KP525970792 =\n"
                    << "            +0.525970792408939708442463226536226366643874659;\n"
                    << "        const real_t KP851038619 =\n"
                    << "            +0.851038619207379630836264138867114231259902550;\n"
                    << "        const real_t KP912575812 =\n"
                    << "            +0.912575812670962425556968549836277086778922727;\n"
                    << "        const real_t KP912018591 =\n"
                    << "            +0.912018591466481957908415381764119056233607330;\n"
                    << "        const real_t KP943557151 =\n"
                    << "            +0.943557151597354104399655195398983005179443399;\n"
                    << "        const real_t KP614372930 =\n"
                    << "            +0.614372930789563808870829930444362096004872855;\n"
                    << "        const real_t KP621716863 =\n"
                    << "            +0.621716863012209892444754556304102309693593202;\n"
                    << "        const real_t KP994076283 =\n"
                    << "            +0.994076283785401014123185814696322018529298887;\n"
                    << "        const real_t KP734762448 =\n"
                    << "            +0.734762448793050413546343770063151342619912334;\n"
                    << "        const real_t KP772036680 =\n"
                    << "            +0.772036680810363904029489473607579825330539880;\n"
                    << "        const real_t KP126329378 =\n"
                    << "            +0.126329378446108174786050455341811215027378105;\n"
                    << "        const real_t KP827271945 =\n"
                    << "            +0.827271945972475634034355757144307982555673741;\n"
                    << "        const real_t KP860541664 =\n"
                    << "            +0.860541664367944677098261680920518816412804187;\n"
                    << "        const real_t KP949179823 =\n"
                    << "            +0.949179823508441261575555465843363271711583843;\n"
                    << "        const real_t KP557913902 =\n"
                    << "            +0.557913902031834264187699648465567037992437152;\n"
                    << "        const real_t KP998026728 =\n"
                    << "            +0.998026728428271561952336806863450553336905220;\n"
                    << "        const real_t KP249506682 =\n"
                    << "            +0.249506682107067890488084201715862638334226305;\n"
                    << "        const real_t KP681693190 =\n"
                    << "            +0.681693190061530575150324149145440022633095390;\n"
                    << "        const real_t KP560319534 =\n"
                    << "            +0.560319534973832390111614715371676131169633784;\n"
                    << "        const real_t KP906616052 =\n"
                    << "            +0.906616052148196230441134447086066874408359177;\n"
                    << "        const real_t KP968479752 =\n"
                    << "            +0.968479752739016373193524836781420152702090879;\n"
                    << "        const real_t KP845997307 =\n"
                    << "            +0.845997307939530944175097360758058292389769300;\n"
                    << "        const real_t KP470564281 =\n"
                    << "            +0.470564281212251493087595091036643380879947982;\n"
                    << "        const real_t KP062914667 =\n"
                    << "            +0.062914667253649757225485955897349402364686947;\n"
                    << "        const real_t KP921177326 =\n"
                    << "            +0.921177326965143320250447435415066029359282231;\n"
                    << "        const real_t KP833417178 =\n"
                    << "            +0.833417178328688677408962550243238843138996060;\n"
                    << "        const real_t KP541454447 =\n"
                    << "            +0.541454447536312777046285590082819509052033189;\n"
                    << "        const real_t KP242145790 =\n"
                    << "            +0.242145790282157779872542093866183953459003101;\n"
                    << "        const real_t KP968583161 =\n"
                    << "            +0.968583161128631119490168375464735813836012403;\n"
                    << "        const real_t KP683113946 =\n"
                    << "            +0.683113946453479238701949862233725244439656928;\n"
                    << "        const real_t KP559154169 =\n"
                    << "            +0.559154169276087864842202529084232643714075927;\n"
                    << "        const real_t KP904730450 =\n"
                    << "            +0.904730450839922351881287709692877908104763647;\n"
                    << "        const real_t KP831864738 =\n"
                    << "            +0.831864738706457140726048799369896829771167132;\n"
                    << "        const real_t KP871714437 =\n"
                    << "            +0.871714437527667770979999223229522602943903653;\n"
                    << "        const real_t KP939062505 =\n"
                    << "            +0.939062505817492352556001843133229685779824606;\n"
                    << "        const real_t KP549754652 =\n"
                    << "            +0.549754652192770074288023275540779861653779767;\n"
                    << "        const real_t KP634619297 =\n"
                    << "            +0.634619297544148100711287640319130485732531031;\n"
                    << "        const real_t KP256756360 =\n"
                    << "            +0.256756360367726783319498520922669048172391148;\n"
                    << "        const real_t KP951056516 =\n"
                    << "            +0.951056516295153572116439333379382143405698634;\n"
                    << "        const real_t KP559016994 =\n"
                    << "            +0.559016994374947424102293417182819058860154590;\n"
                    << "        const real_t KP250000000 =\n"
                    << "            +0.250000000000000000000000000000000000000000000;\n"
                    << "        const real_t KP618033988 =\n"
                    << "            +0.618033988749894848204586834365638117720309180;\n"
                    << "        {\n"
                    << "            real_t T3Y, T3U, T3W, T42, T44, T3X, T3R, T3V, T3Z, T43;\n"
                    << "            {\n"
                    << "                real_t T4Q, T1U, T9, T3b, T45, T3e, T46, T1D, T4P, T1R, Ts,\n"
                    << "                    T1K, T18, T1E, T4z;\n"
                    << "                real_t T5f, T3z, T22, T4s, T5b, T3C, T2o, T3D, T2h, T4p, T5c,\n"
                    << "                    T4w, T5e, T3A, T29;\n"
                    << "                real_t T2z, T2y, TL, T1L, T1r, T1F, T4a, T57, T3v, T2x, T4k,\n"
                    << "                    T55, T3s, T2T, T2D;\n"
                    << "                real_t T4c, T3t, T2M, T4h, T54, T1v, T1C, T1Q;\n"
                    << "                {\n"
                    << "                    real_t T1, T2, T1w, T1x, T3, T5, T1z, T1A, T6;\n"
                    << "                    T1v = v0.y;\n"
                    << "                    T1 = v0.x;\n"
                    << "                    T2 = v5.x;\n"
                    << "                    T1w = v5.y;\n"
                    << "                    T1x = v20.y;\n"
                    << "                    T3 = v20.x;\n"
                    << "                    T5 = v10.x;\n"
                    << "                    T1z = v10.y;\n"
                    << "                    T1A = v15.y;\n"
                    << "                    T6 = v15.x;\n"
                    << "                    {\n"
                    << "                        real_t T3a, T3c, T1y, T39, T1B, T3d;\n"
                    << "                        {\n"
                    << "                            real_t T4, T1S, T7, T1T, T8;\n"
                    << "                            T4 = T2 + T3;\n"
                    << "                            T1S = T2 - T3;\n"
                    << "                            T7 = T5 + T6;\n"
                    << "                            T1T = T5 - T6;\n"
                    << "                            T4Q = fma (-KP618033988, T1S, T1T);\n"
                    << "                            T1U = fma (KP618033988, T1T, T1S);\n"
                    << "                            T8 = T4 + T7;\n"
                    << "                            T3a = T4 - T7;\n"
                    << "                            T3c = T1w - T1x;\n"
                    << "                            T1y = T1w + T1x;\n"
                    << "                            T39 = fma (-KP250000000, T8, T1);\n"
                    << "                            T9 = T1 + T8;\n"
                    << "                        }\n"
                    << "                        T1B = T1z + T1A;\n"
                    << "                        T3d = T1z - T1A;\n"
                    << "                        T3b = fma (KP559016994, T3a, T39);\n"
                    << "                        T45 = fma (-KP559016994, T3a, T39);\n"
                    << "                        T3e = fma (KP618033988, T3d, T3c);\n"
                    << "                        T46 = fma (-KP618033988, T3c, T3d);\n"
                    << "                        T1C = T1y + T1B;\n"
                    << "                        T1Q = T1y - T1B;\n"
                    << "                    }\n"
                    << "                }\n"
                    << "                {\n"
                    << "                    real_t T24, T23, T28, T4v;\n"
                    << "                    {\n"
                    << "                        real_t TQ, Ta, TZ, Tj, T1Z, T20, Th, T26, T27, T1X,\n"
                    << "                            TX, T2l, T2m, Tq, T2c;\n"
                    << "                        real_t T2e, T12, T15, T2f, T1P, TT, TW;\n"
                    << "                        TQ = v1.y;\n"
                    << "                        Ta = v1.x;\n"
                    << "                        T1P = fma (-KP250000000, T1C, T1v);\n"
                    << "                        T1D = T1v + T1C;\n"
                    << "                        TZ = v4.y;\n"
                    << "                        Tj = v4.x;\n"
                    << "                        T4P = fma (-KP559016994, T1Q, T1P);\n"
                    << "                        T1R = fma (KP559016994, T1Q, T1P);\n"
                    << "                        {\n"
                    << "                            real_t TR, Tb, Tc, TS, TU, Te, Tf, TV, Td, Tg;\n"
                    << "                            TR = v6.y;\n"
                    << "                            Tb = v6.x;\n"
                    << "                            Tc = v21.x;\n"
                    << "                            TS = v21.y;\n"
                    << "                            TU = v11.y;\n"
                    << "                            Te = v11.x;\n"
                    << "                            Tf = v16.x;\n"
                    << "                            TV = v16.y;\n"
                    << "                            T1Z = Tc - Tb;\n"
                    << "                            Td = Tb + Tc;\n"
                    << "                            T20 = Tf - Te;\n"
                    << "                            Tg = Te + Tf;\n"
                    << "                            Th = Td + Tg;\n"
                    << "                            T24 = Td - Tg;\n"
                    << "                            T26 = TR - TS;\n"
                    << "                            TT = TR + TS;\n"
                    << "                            TW = TU + TV;\n"
                    << "                            T27 = TV - TU;\n"
                    << "                        }\n"
                    << "                        {\n"
                    << "                            real_t T10, Tk, Tl, T11, T13, Tn, To, T14, Tm, Tp;\n"
                    << "                            T10 = v9.y;\n"
                    << "                            Tk = v9.x;\n"
                    << "                            T1X = TT - TW;\n"
                    << "                            TX = TT + TW;\n"
                    << "                            Tl = v24.x;\n"
                    << "                            T11 = v24.y;\n"
                    << "                            T13 = v14.y;\n"
                    << "                            Tn = v14.x;\n"
                    << "                            To = v19.x;\n"
                    << "                            T14 = v19.y;\n"
                    << "                            T2l = Tl - Tk;\n"
                    << "                            Tm = Tk + Tl;\n"
                    << "                            T2m = To - Tn;\n"
                    << "                            Tp = Tn + To;\n"
                    << "                            Tq = Tm + Tp;\n"
                    << "                            T2c = Tm - Tp;\n"
                    << "                            T2e = T11 - T10;\n"
                    << "                            T12 = T10 + T11;\n"
                    << "                            T15 = T13 + T14;\n"
                    << "                            T2f = T14 - T13;\n"
                    << "                        }\n"
                    << "                        {\n"
                    << "                            real_t T2j, T2b, T1W, T21, T4y, T2i;\n"
                    << "                            {\n"
                    << "                                real_t Ti, T16, Tr, TY, T17;\n"
                    << "                                T23 = fma (-KP250000000, Th, Ta);\n"
                    << "                                Ti = Ta + Th;\n"
                    << "                                T2j = T15 - T12;\n"
                    << "                                T16 = T12 + T15;\n"
                    << "                                Tr = Tj + Tq;\n"
                    << "                                T2b = fma (KP250000000, Tq, -(Tj));\n"
                    << "                                T1W = fma (-KP250000000, TX, TQ);\n"
                    << "                                TY = TQ + TX;\n"
                    << "                                T21 = fma (KP618033988, T20, T1Z);\n"
                    << "                                T4y = fma (-KP618033988, T1Z, T20);\n"
                    << "                                T2i = fma (-KP250000000, T16, TZ);\n"
                    << "                                T17 = TZ + T16;\n"
                    << "                                Ts = Ti + Tr;\n"
                    << "                                T1K = Ti - Tr;\n"
                    << "                                T18 = TY - T17;\n"
                    << "                                T1E = TY + T17;\n"
                    << "                            }\n"
                    << "                            {\n"
                    << "                                real_t T2n, T4r, T4x, T1Y;\n"
                    << "                                T2n = fma (KP618033988, T2m, T2l);\n"
                    << "                                T4r = fma (-KP618033988, T2l, T2m);\n"
                    << "                                T4x = fma (-KP559016994, T1X, T1W);\n"
                    << "                                T1Y = fma (KP559016994, T1X, T1W);\n"
                    << "                                {\n"
                    << "                                    real_t T4o, T2g, T2d, T4n, T4q, T2k;\n"
                    << "                                    T4o = fma (-KP618033988, T2e, T2f);\n"
                    << "                                    T2g = fma (KP618033988, T2f, T2e);\n"
                    << "                                    T4z = fma (KP951056516, T4y, T4x);\n"
                    << "                                    T5f = fma (-KP951056516, T4y, T4x);\n"
                    << "                                    T3z = fma (-KP951056516, T21, T1Y);\n"
                    << "                                    T22 = fma (KP951056516, T21, T1Y);\n"
                    << "                                    T4q = fma (KP559016994, T2j, T2i);\n"
                    << "                                    T2k = fma (-KP559016994, T2j, T2i);\n"
                    << "                                    T4s = fma (KP951056516, T4r, T4q);\n"
                    << "                                    T5b = fma (-KP951056516, T4r, T4q);\n"
                    << "                                    T3C = fma (-KP951056516, T2n, T2k);\n"
                    << "                                    T2o = fma (KP951056516, T2n, T2k);\n"
                    << "                                    T2d = fma (-KP559016994, T2c, T2b);\n"
                    << "                                    T4n = fma (KP559016994, T2c, T2b);\n"
                    << "                                    T28 = fma (-KP618033988, T27, T26);\n"
                    << "                                    T4v = fma (KP618033988, T26, T27);\n"
                    << "                                    T3D = fma (-KP951056516, T2g, T2d);\n"
                    << "                                    T2h = fma (KP951056516, T2g, T2d);\n"
                    << "                                    T4p = fma (KP951056516, T4o, T4n);\n"
                    << "                                    T5c = fma (-KP951056516, T4o, T4n);\n"
                    << "                                }\n"
                    << "                            }\n"
                    << "                        }\n"
                    << "                    }\n"
                    << "                    {\n"
                    << "                        real_t T19, Tt, T1i, TC, T2u, T2v, TA, T2B, T2C, T2s,\n"
                    << "                            T1g, T2J, T2K, TJ, T2O;\n"
                    << "                        real_t T2Q, T1l, T1o, T2R;\n"
                    << "                        {\n"
                    << "                            real_t T4u, T25, T1c, T1f;\n"
                    << "                            T19 = v2.y;\n"
                    << "                            Tt = v2.x;\n"
                    << "                            T1i = v3.y;\n"
                    << "                            TC = v3.x;\n"
                    << "                            T4u = fma (-KP559016994, T24, T23);\n"
                    << "                            T25 = fma (KP559016994, T24, T23);\n"
                    << "                            {\n"
                    << "                                real_t T1a, Tu, Tv, T1b, T1d, Tx, Ty, T1e, Tw,\n"
                    << "                                    Tz;\n"
                    << "                                T1a = v7.y;\n"
                    << "                                Tu = v7.x;\n"
                    << "                                T4w = fma (-KP951056516, T4v, T4u);\n"
                    << "                                T5e = fma (KP951056516, T4v, T4u);\n"
                    << "                                T3A = fma (-KP951056516, T28, T25);\n"
                    << "                                T29 = fma (KP951056516, T28, T25);\n"
                    << "                                Tv = v22.x;\n"
                    << "                                T1b = v22.y;\n"
                    << "                                T1d = v12.y;\n"
                    << "                                Tx = v12.x;\n"
                    << "                                Ty = v17.x;\n"
                    << "                                T1e = v17.y;\n"
                    << "                                T2u = Tv - Tu;\n"
                    << "                                Tw = Tu + Tv;\n"
                    << "                                T2v = Ty - Tx;\n"
                    << "                                Tz = Tx + Ty;\n"
                    << "                                TA = Tw + Tz;\n"
                    << "                                T2z = Tz - Tw;\n"
                    << "                                T2B = T1b - T1a;\n"
                    << "                                T1c = T1a + T1b;\n"
                    << "                                T1f = T1d + T1e;\n"
                    << "                                T2C = T1d - T1e;\n"
                    << "                            }\n"
                    << "                            {\n"
                    << "                                real_t T1j, TD, TE, T1k, T1m, TG, TH, T1n, TF,\n"
                    << "                                    TI;\n"
                    << "                                T1j = v8.y;\n"
                    << "                                TD = v8.x;\n"
                    << "                                T2s = T1f - T1c;\n"
                    << "                                T1g = T1c + T1f;\n"
                    << "                                TE = v23.x;\n"
                    << "                                T1k = v23.y;\n"
                    << "                                T1m = v13.y;\n"
                    << "                                TG = v13.x;\n"
                    << "                                TH = v18.x;\n"
                    << "                                T1n = v18.y;\n"
                    << "                                T2J = TD - TE;\n"
                    << "                                TF = TD + TE;\n"
                    << "                                T2K = TG - TH;\n"
                    << "                                TI = TG + TH;\n"
                    << "                                TJ = TF + TI;\n"
                    << "                                T2O = TI - TF;\n"
                    << "                                T2Q = T1k - T1j;\n"
                    << "                                T1l = T1j + T1k;\n"
                    << "                                T1o = T1m + T1n;\n"
                    << "                                T2R = T1n - T1m;\n"
                    << "                            }\n"
                    << "                        }\n"
                    << "                        {\n"
                    << "                            real_t T2H, T2N, T2r, T2w, T49, T2G;\n"
                    << "                            {\n"
                    << "                                real_t TB, T1p, TK, T1h, T1q;\n"
                    << "                                T2y = fma (-KP250000000, TA, Tt);\n"
                    << "                                TB = Tt + TA;\n"
                    << "                                T2H = T1o - T1l;\n"
                    << "                                T1p = T1l + T1o;\n"
                    << "                                TK = TC + TJ;\n"
                    << "                                T2N = fma (-KP250000000, TJ, TC);\n"
                    << "                                T2r = fma (-KP250000000, T1g, T19);\n"
                    << "                                T1h = T19 + T1g;\n"
                    << "                                T2w = fma (KP618033988, T2v, T2u);\n"
                    << "                                T49 = fma (-KP618033988, T2u, T2v);\n"
                    << "                                T2G = fma (-KP250000000, T1p, T1i);\n"
                    << "                                T1q = T1i + T1p;\n"
                    << "                                TL = TB + TK;\n"
                    << "                                T1L = TB - TK;\n"
                    << "                                T1r = T1h - T1q;\n"
                    << "                                T1F = T1h + T1q;\n"
                    << "                            }\n"
                    << "                            {\n"
                    << "                                real_t T2S, T4j, T48, T2t;\n"
                    << "                                T2S = fma (KP618033988, T2R, T2Q);\n"
                    << "                                T4j = fma (-KP618033988, T2Q, T2R);\n"
                    << "                                T48 = fma (KP559016994, T2s, T2r);\n"
                    << "                                T2t = fma (-KP559016994, T2s, T2r);\n"
                    << "                                {\n"
                    << "                                    real_t T4g, T2L, T2I, T4f, T4i, T2P;\n"
                    << "                                    T4g = fma (-KP618033988, T2J, T2K);\n"
                    << "                                    T2L = fma (KP618033988, T2K, T2J);\n"
                    << "                                    T4a = fma (KP951056516, T49, T48);\n"
                    << "                                    T57 = fma (-KP951056516, T49, T48);\n"
                    << "                                    T3v = fma (-KP951056516, T2w, T2t);\n"
                    << "                                    T2x = fma (KP951056516, T2w, T2t);\n"
                    << "                                    T4i = fma (KP559016994, T2O, T2N);\n"
                    << "                                    T2P = fma (-KP559016994, T2O, T2N);\n"
                    << "                                    T4k = fma (-KP951056516, T4j, T4i);\n"
                    << "                                    T55 = fma (KP951056516, T4j, T4i);\n"
                    << "                                    T3s = fma (KP951056516, T2S, T2P);\n"
                    << "                                    T2T = fma (-KP951056516, T2S, T2P);\n"
                    << "                                    T2I = fma (-KP559016994, T2H, T2G);\n"
                    << "                                    T4f = fma (KP559016994, T2H, T2G);\n"
                    << "                                    T2D = fma (-KP618033988, T2C, T2B);\n"
                    << "                                    T4c = fma (KP618033988, T2B, T2C);\n"
                    << "                                    T3t = fma (KP951056516, T2L, T2I);\n"
                    << "                                    T2M = fma (-KP951056516, T2L, T2I);\n"
                    << "                                    T4h = fma (-KP951056516, T4g, T4f);\n"
                    << "                                    T54 = fma (KP951056516, T4g, T4f);\n"
                    << "                                }\n"
                    << "                            }\n"
                    << "                        }\n"
                    << "                    }\n"
                    << "                }\n"
                    << "                {\n"
                    << "                    real_t T4d, T58, T3w, T3H, T3r, T3k, T36, T38, T3o, T3q,\n"
                    << "                        T3j, T2Z, T37;\n"
                    << "                    {\n"
                    << "                        real_t TM, T2E, T1s, T1u, TP, T1t;\n"
                    << "                        {\n"
                    << "                            real_t TO, TN, T4b, T2A;\n"
                    << "                            TM = Ts + TL;\n"
                    << "                            TO = Ts - TL;\n"
                    << "                            T4b = fma (KP559016994, T2z, T2y);\n"
                    << "                            T2A = fma (-KP559016994, T2z, T2y);\n"
                    << "                            TN = fma (-KP250000000, TM, T9);\n"
                    << "                            T4d = fma (KP951056516, T4c, T4b);\n"
                    << "                            T58 = fma (-KP951056516, T4c, T4b);\n"
                    << "                            T3w = fma (KP951056516, T2D, T2A);\n"
                    << "                            T2E = fma (-KP951056516, T2D, T2A);\n"
                    << "                            T1s = fma (KP618033988, T1r, T18);\n"
                    << "                            T1u = fma (-KP618033988, T18, T1r);\n"
                    << "                            TP = fma (KP559016994, TO, TN);\n"
                    << "                            T1t = fma (-KP559016994, TO, TN);\n"
                    << "                        }\n"
                    << "                        {\n"
                    << "                            real_t T1J, T1N, T1M, T1O, T1G, T1I, T1H;\n"
                    << "                            T1G = T1E + T1F;\n"
                    << "                            T1I = T1E - T1F;\n"
                    << "                            T1H = fma (-KP250000000, T1G, T1D);\n"
                    << "                            v0.y = T1D + T1G;\n"
                    << "                            v0.x = T9 + TM;\n"
                    << "                            T1J = fma (KP559016994, T1I, T1H);\n"
                    << "                            T1N = fma (-KP559016994, T1I, T1H);\n"
                    << "                            T1M = fma (KP618033988, T1L, T1K);\n"
                    << "                            T1O = fma (-KP618033988, T1K, T1L);\n"
                    << "                            {\n"
                    << "                                real_t T1V, T3f, T3m, T3n, T2W, T2Y, T32, T3g,\n"
                    << "                                    T3h, T35, T3i, T2X;\n"
                    << "                                T3H = fma (KP951056516, T1U, T1R);\n"
                    << "                                T1V = fma (-KP951056516, T1U, T1R);\n"
                    << "                                T3f = fma (KP951056516, T3e, T3b);\n"
                    << "                                T3r = fma (-KP951056516, T3e, T3b);\n"
                    << "                                v15.x = fma (KP951056516, T1u, T1t);\n"
                    << "                                v15.y = fma (-KP951056516, T1O, T1N);\n"
                    << "                                v10.y = fma (KP951056516, T1O, T1N);\n"
                    << "                                v10.x = fma (-KP951056516, T1u, T1t);\n"
                    << "                                v20.x = fma (-KP951056516, T1s, TP);\n"
                    << "                                v20.y = fma (KP951056516, T1M, T1J);\n"
                    << "                                v5.y = fma (-KP951056516, T1M, T1J);\n"
                    << "                                v5.x = fma (KP951056516, T1s, TP);\n"
                    << "                                {\n"
                    << "                                    real_t T30, T2a, T2p, T31, T33, T2F, T2U,\n"
                    << "                                        T34, T2q, T2V;\n"
                    << "                                    T30 = fma (KP256756360, T22, T29);\n"
                    << "                                    T2a = fma (-KP256756360, T29, T22);\n"
                    << "                                    T2p = fma (KP634619297, T2o, T2h);\n"
                    << "                                    T31 = fma (-KP634619297, T2h, T2o);\n"
                    << "                                    T33 = fma (KP549754652, T2x, T2E);\n"
                    << "                                    T2F = fma (-KP549754652, T2E, T2x);\n"
                    << "                                    T2U = fma (-KP939062505, T2T, T2M);\n"
                    << "                                    T34 = fma (KP939062505, T2M, T2T);\n"
                    << "                                    T3m = fma (-KP871714437, T2p, T2a);\n"
                    << "                                    T2q = fma (KP871714437, T2p, T2a);\n"
                    << "                                    T3n = fma (-KP831864738, T2U, T2F);\n"
                    << "                                    T2V = fma (KP831864738, T2U, T2F);\n"
                    << "                                    T2W = fma (KP904730450, T2V, T2q);\n"
                    << "                                    T2Y = fma (-KP904730450, T2V, T2q);\n"
                    << "                                    T32 = fma (-KP871714437, T31, T30);\n"
                    << "                                    T3g = fma (KP871714437, T31, T30);\n"
                    << "                                    T3h = fma (KP831864738, T34, T33);\n"
                    << "                                    T35 = fma (-KP831864738, T34, T33);\n"
                    << "                                }\n"
                    << "                                T3i = fma (KP904730450, T3h, T3g);\n"
                    << "                                T3k = fma (-KP904730450, T3h, T3g);\n"
                    << "                                T36 = fma (KP559154169, T35, T32);\n"
                    << "                                T38 = fma (-KP683113946, T32, T35);\n"
                    << "                                v1.x = fma (KP968583161, T3i, T3f);\n"
                    << "                                v1.y = fma (KP968583161, T2W, T1V);\n"
                    << "                                T2X = fma (-KP242145790, T2W, T1V);\n"
                    << "                                T3o = fma (KP559154169, T3n, T3m);\n"
                    << "                                T3q = fma (-KP683113946, T3m, T3n);\n"
                    << "                                T3j = fma (-KP242145790, T3i, T3f);\n"
                    << "                                T2Z = fma (KP541454447, T2Y, T2X);\n"
                    << "                                T37 = fma (-KP541454447, T2Y, T2X);\n"
                    << "                            }\n"
                    << "                        }\n"
                    << "                    }\n"
                    << "                    {\n"
                    << "                        real_t T47, T4R, T5A, T5w, T5y, T5E, T5G, T5z, T5t,\n"
                    << "                            T5x;\n"
                    << "                        {\n"
                    << "                            real_t T53, T5j, T5u, T5v, T5i, T5D, T5m, T5p,\n"
                    << "                                T5C, T3p, T3l, T5s, T5q, T5r;\n"
                    << "                            T47 = fma (KP951056516, T46, T45);\n"
                    << "                            T53 = fma (-KP951056516, T46, T45);\n"
                    << "                            T3p = fma (-KP541454447, T3k, T3j);\n"
                    << "                            T3l = fma (KP541454447, T3k, T3j);\n"
                    << "                            v11.y = fma (KP833417178, T38, T37);\n"
                    << "                            v11.x = fma (-KP833417178, T3q, T3p);\n"
                    << "                            v16.x = fma (KP833417178, T3q, T3p);\n"
                    << "                            v16.y = fma (-KP833417178, T38, T37);\n"
                    << "                            v21.y = fma (KP921177326, T36, T2Z);\n"
                    << "                            v21.x = fma (-KP921177326, T3o, T3l);\n"
                    << "                            v6.x = fma (KP921177326, T3o, T3l);\n"
                    << "                            v6.y = fma (-KP921177326, T36, T2Z);\n"
                    << "                            T5j = fma (KP951056516, T4Q, T4P);\n"
                    << "                            T4R = fma (-KP951056516, T4Q, T4P);\n"
                    << "                            {\n"
                    << "                                real_t T5k, T56, T59, T5l, T5n, T5d, T5g, T5o,\n"
                    << "                                    T5a, T5h;\n"
                    << "                                T5k = fma (-KP062914667, T54, T55);\n"
                    << "                                T56 = fma (KP062914667, T55, T54);\n"
                    << "                                T59 = fma (KP634619297, T58, T57);\n"
                    << "                                T5l = fma (-KP634619297, T57, T58);\n"
                    << "                                T5n = fma (-KP470564281, T5b, T5c);\n"
                    << "                                T5d = fma (KP470564281, T5c, T5b);\n"
                    << "                                T5g = fma (KP549754652, T5f, T5e);\n"
                    << "                                T5o = fma (-KP549754652, T5e, T5f);\n"
                    << "                                T5u = fma (-KP845997307, T59, T56);\n"
                    << "                                T5a = fma (KP845997307, T59, T56);\n"
                    << "                                T5v = fma (-KP968479752, T5g, T5d);\n"
                    << "                                T5h = fma (KP968479752, T5g, T5d);\n"
                    << "                                T5i = fma (KP906616052, T5h, T5a);\n"
                    << "                                T5A = fma (-KP906616052, T5h, T5a);\n"
                    << "                                T5D = fma (-KP845997307, T5l, T5k);\n"
                    << "                                T5m = fma (KP845997307, T5l, T5k);\n"
                    << "                                T5p = fma (KP968479752, T5o, T5n);\n"
                    << "                                T5C = fma (-KP968479752, T5o, T5n);\n"
                    << "                            }\n"
                    << "                            T5s = fma (KP906616052, T5p, T5m);\n"
                    << "                            T5q = fma (-KP906616052, T5p, T5m);\n"
                    << "                            T5w = fma (-KP560319534, T5v, T5u);\n"
                    << "                            T5y = fma (KP681693190, T5u, T5v);\n"
                    << "                            T5E = fma (-KP681693190, T5D, T5C);\n"
                    << "                            T5G = fma (KP560319534, T5C, T5D);\n"
                    << "                            T5r = fma (KP249506682, T5q, T5j);\n"
                    << "                            v2.x = fma (KP998026728, T5i, T53);\n"
                    << "                            v2.y = fma (-KP998026728, T5q, T5j);\n"
                    << "                            T5z = fma (-KP249506682, T5i, T53);\n"
                    << "                            T5t = fma (-KP557913902, T5s, T5r);\n"
                    << "                            T5x = fma (KP557913902, T5s, T5r);\n"
                    << "                        }\n"
                    << "                        {\n"
                    << "                            real_t T4W, T4M, T4O, T50, T52, T4V, T4F, T4N;\n"
                    << "                            {\n"
                    << "                                real_t T4Y, T4Z, T4C, T4E, T4I, T4T, T4S, T4L,\n"
                    << "                                    T5F, T5B, T4U, T4D;\n"
                    << "                                T5F = fma (KP557913902, T5A, T5z);\n"
                    << "                                T5B = fma (-KP557913902, T5A, T5z);\n"
                    << "                                v12.y = fma (-KP949179823, T5w, T5t);\n"
                    << "                                v12.x = fma (-KP949179823, T5G, T5F);\n"
                    << "                                v17.x = fma (KP949179823, T5G, T5F);\n"
                    << "                                v17.y = fma (KP949179823, T5w, T5t);\n"
                    << "                                v7.y = fma (KP860541664, T5y, T5x);\n"
                    << "                                v7.x = fma (-KP860541664, T5E, T5B);\n"
                    << "                                v22.x = fma (KP860541664, T5E, T5B);\n"
                    << "                                v22.y = fma (-KP860541664, T5y, T5x);\n"
                    << "                                {\n"
                    << "                                    real_t T4J, T4e, T4l, T4K, T4G, T4t, T4A,\n"
                    << "                                        T4H, T4m, T4B;\n"
                    << "                                    T4J = fma (-KP062914667, T4a, T4d);\n"
                    << "                                    T4e = fma (KP062914667, T4d, T4a);\n"
                    << "                                    T4l = fma (-KP827271945, T4k, T4h);\n"
                    << "                                    T4K = fma (KP827271945, T4h, T4k);\n"
                    << "                                    T4G = fma (-KP126329378, T4p, T4s);\n"
                    << "                                    T4t = fma (KP126329378, T4s, T4p);\n"
                    << "                                    T4A = fma (KP939062505, T4z, T4w);\n"
                    << "                                    T4H = fma (-KP939062505, T4w, T4z);\n"
                    << "                                    T4Y = fma (-KP772036680, T4l, T4e);\n"
                    << "                                    T4m = fma (KP772036680, T4l, T4e);\n"
                    << "                                    T4Z = fma (-KP734762448, T4A, T4t);\n"
                    << "                                    T4B = fma (KP734762448, T4A, T4t);\n"
                    << "                                    T4C = fma (KP994076283, T4B, T4m);\n"
                    << "                                    T4E = fma (-KP994076283, T4B, T4m);\n"
                    << "                                    T4I = fma (KP734762448, T4H, T4G);\n"
                    << "                                    T4T = fma (-KP734762448, T4H, T4G);\n"
                    << "                                    T4S = fma (KP772036680, T4K, T4J);\n"
                    << "                                    T4L = fma (-KP772036680, T4K, T4J);\n"
                    << "                                }\n"
                    << "                                T4U = fma (KP994076283, T4T, T4S);\n"
                    << "                                T4W = fma (-KP994076283, T4T, T4S);\n"
                    << "                                T4M = fma (-KP621716863, T4L, T4I);\n"
                    << "                                T4O = fma (KP614372930, T4I, T4L);\n"
                    << "                                v3.y = fma (-KP998026728, T4U, T4R);\n"
                    << "                                v3.x = fma (KP998026728, T4C, T47);\n"
                    << "                                T4D = fma (-KP249506682, T4C, T47);\n"
                    << "                                T50 = fma (KP614372930, T4Z, T4Y);\n"
                    << "                                T52 = fma (-KP621716863, T4Y, T4Z);\n"
                    << "                                T4V = fma (KP249506682, T4U, T4R);\n"
                    << "                                T4F = fma (-KP557913902, T4E, T4D);\n"
                    << "                                T4N = fma (KP557913902, T4E, T4D);\n"
                    << "                            }\n"
                    << "                            {\n"
                    << "                                real_t T3S, T3T, T3G, T41, T3K, T3N, T40, T51,\n"
                    << "                                    T4X, T3Q, T3O, T3P;\n"
                    << "                                T51 = fma (KP557913902, T4W, T4V);\n"
                    << "                                T4X = fma (-KP557913902, T4W, T4V);\n"
                    << "                                v8.x = fma (KP943557151, T4M, T4F);\n"
                    << "                                v8.y = fma (KP943557151, T52, T51);\n"
                    << "                                v23.y = fma (-KP943557151, T52, T51);\n"
                    << "                                v23.x = fma (-KP943557151, T4M, T4F);\n"
                    << "                                v18.x = fma (-KP949179823, T4O, T4N);\n"
                    << "                                v18.y = fma (-KP949179823, T50, T4X);\n"
                    << "                                v13.y = fma (KP949179823, T50, T4X);\n"
                    << "                                v13.x = fma (KP949179823, T4O, T4N);\n"
                    << "                                {\n"
                    << "                                    real_t T3I, T3u, T3x, T3J, T3L, T3B, T3E,\n"
                    << "                                        T3M, T3y, T3F;\n"
                    << "                                    T3I = fma (KP126329378, T3s, T3t);\n"
                    << "                                    T3u = fma (-KP126329378, T3t, T3s);\n"
                    << "                                    T3x = fma (-KP470564281, T3w, T3v);\n"
                    << "                                    T3J = fma (KP470564281, T3v, T3w);\n"
                    << "                                    T3L = fma (-KP634619297, T3z, T3A);\n"
                    << "                                    T3B = fma (KP634619297, T3A, T3z);\n"
                    << "                                    T3E = fma (-KP827271945, T3D, T3C);\n"
                    << "                                    T3M = fma (KP827271945, T3C, T3D);\n"
                    << "                                    T3S = fma (KP912018591, T3x, T3u);\n"
                    << "                                    T3y = fma (-KP912018591, T3x, T3u);\n"
                    << "                                    T3T = fma (KP912575812, T3E, T3B);\n"
                    << "                                    T3F = fma (-KP912575812, T3E, T3B);\n"
                    << "                                    T3G = fma (-KP851038619, T3F, T3y);\n"
                    << "                                    T3Y = fma (KP851038619, T3F, T3y);\n"
                    << "                                    T41 = fma (-KP912018591, T3J, T3I);\n"
                    << "                                    T3K = fma (KP912018591, T3J, T3I);\n"
                    << "                                    T3N = fma (KP912575812, T3M, T3L);\n"
                    << "                                    T40 = fma (-KP912575812, T3M, T3L);\n"
                    << "                                }\n"
                    << "                                T3Q = fma (-KP851038619, T3N, T3K);\n"
                    << "                                T3O = fma (KP851038619, T3N, T3K);\n"
                    << "                                T3U = fma (-KP525970792, T3T, T3S);\n"
                    << "                                T3W = fma (KP726211448, T3S, T3T);\n"
                    << "                                T42 = fma (-KP726211448, T41, T40);\n"
                    << "                                T44 = fma (KP525970792, T40, T41);\n"
                    << "                                T3P = fma (KP248028675, T3O, T3H);\n"
                    << "                                v4.x = fma (-KP992114701, T3G, T3r);\n"
                    << "                                v4.y = fma (-KP992114701, T3O, T3H);\n"
                    << "                                T3X = fma (KP248028675, T3G, T3r);\n"
                    << "                                T3R = fma (-KP554608978, T3Q, T3P);\n"
                    << "                                T3V = fma (KP554608978, T3Q, T3P);\n"
                    << "                            }\n"
                    << "                        }\n"
                    << "                    }\n"
                    << "                }\n"
                    << "            }\n"
                    << "            T3Z = fma (KP554608978, T3Y, T3X);\n"
                    << "            T43 = fma (-KP554608978, T3Y, T3X);\n"
                    << "            v14.y = fma (KP943557151, T3U, T3R);\n"
                    << "            v14.x = fma (-KP943557151, T44, T43);\n"
                    << "            v19.x = fma (KP943557151, T44, T43);\n"
                    << "            v19.y = fma (-KP943557151, T3U, T3R);\n"
                    << "            v24.y = fma (KP803003575, T3W, T3V);\n"
                    << "            v24.x = fma (KP803003575, T42, T3Z);\n"
                    << "            v9.x = fma (-KP803003575, T42, T3Z);\n"
                    << "            v9.y = fma (-KP803003575, T3W, T3V);\n"
                    << "        }\n"
                    << "    }\n"
                    << "    *u0 = v0;\n"
                    << "    *u1 = v1;\n"
                    << "    *u2 = v2;\n"
                    << "    *u3 = v3;\n"
                    << "    *u4 = v4;\n"
                    << "    *u5 = v5;\n"
                    << "    *u6 = v6;\n"
                    << "    *u7 = v7;\n"
                    << "    *u8 = v8;\n"
                    << "    *u9 = v9;\n"
                    << "    *u10 = v10;\n"
                    << "    *u11 = v11;\n"
                    << "    *u12 = v12;\n"
                    << "    *u13 = v13;\n"
                    << "    *u14 = v14;\n"
                    << "    *u15 = v15;\n"
                    << "    *u16 = v16;\n"
                    << "    *u17 = v17;\n"
                    << "    *u18 = v18;\n"
                    << "    *u19 = v19;\n"
                    << "    *u20 = v20;\n"
                    << "    *u21 = v21;\n"
                    << "    *u22 = v22;\n"
                    << "    *u23 = v23;\n"
                    << "    *u24 = v24;\n"
                    << "}\n";
            }
            break;
        default: throw std::logic_error("Unsupported kernel size.");
    }
    return src.str();
}


} // namespace fft
} // namespace vex

#endif
